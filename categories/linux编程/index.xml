<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux编程  on Forz Blog</title>
    <link>/categories/linux%E7%BC%96%E7%A8%8B/</link>
    <description>Recent content in Linux编程  on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 25 Jun 2017 16:50:09 +0000</lastBuildDate><atom:link href="/categories/linux%E7%BC%96%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SQL 和 NoSQL 的区别</title>
      <link>/post/sql-%E5%92%8C-nosql-%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Sun, 25 Jun 2017 16:50:09 +0000</pubDate>
      
      <guid>/post/sql-%E5%92%8C-nosql-%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>转载：http://www.cnblogs.com/jeakeven/p/5402095.html 一、概念 SQL (Structured Query Language) 数据库，指关系型数据库。主</description>
    </item>
    
    <item>
      <title>大端模式和小端模式转化及网络字节序</title>
      <link>/post/%E5%A4%A7%E7%AB%AF%E6%A8%A1%E5%BC%8F%E5%92%8C%E5%B0%8F%E7%AB%AF%E6%A8%A1%E5%BC%8F%E8%BD%AC%E5%8C%96%E5%8F%8A%E7%BD%91%E7%BB%9C%E5%AD%97%E8%8A%82%E5%BA%8F/</link>
      <pubDate>Sun, 25 Jun 2017 16:49:07 +0000</pubDate>
      
      <guid>/post/%E5%A4%A7%E7%AB%AF%E6%A8%A1%E5%BC%8F%E5%92%8C%E5%B0%8F%E7%AB%AF%E6%A8%A1%E5%BC%8F%E8%BD%AC%E5%8C%96%E5%8F%8A%E7%BD%91%E7%BB%9C%E5%AD%97%E8%8A%82%E5%BA%8F/</guid>
      <description>转载：http://blog.csdn.net/szchtx/article/details/42834391 一、定义 大端模式（Big End</description>
    </item>
    
    <item>
      <title>可重入函数与不可重入函数的区别</title>
      <link>/post/%E5%8F%AF%E9%87%8D%E5%85%A5%E5%87%BD%E6%95%B0%E4%B8%8E%E4%B8%8D%E5%8F%AF%E9%87%8D%E5%85%A5%E5%87%BD%E6%95%B0%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Sun, 25 Jun 2017 16:48:59 +0000</pubDate>
      
      <guid>/post/%E5%8F%AF%E9%87%8D%E5%85%A5%E5%87%BD%E6%95%B0%E4%B8%8E%E4%B8%8D%E5%8F%AF%E9%87%8D%E5%85%A5%E5%87%BD%E6%95%B0%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>基本定义 可重入函数可以做这样的基本定义：重入意味着这个函数可以重复进入，可以被并行调用，可以被中断，它只使用自身栈上的数据变量，它不依赖于任</description>
    </item>
    
  </channel>
</rss>
