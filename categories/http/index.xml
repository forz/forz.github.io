<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HTTP on Forz Blog</title>
    <link>/categories/http/</link>
    <description>Recent content in HTTP on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 28 Apr 2021 19:41:10 +0000</lastBuildDate><atom:link href="/categories/http/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HTTP协议中的Content-Encoding</title>
      <link>/post/http%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84content-encoding/</link>
      <pubDate>Wed, 28 Apr 2021 19:41:10 +0000</pubDate>
      
      <guid>/post/http%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84content-encoding/</guid>
      <description>Content-Encoding &amp;amp; Accept-Encoding Accept-Encoding 和 Content-Encoding 是 HTTP 中用来对「采用何种编码格式传输正文」进行协定的一对头部字段。它的工作原理是这样：浏览器发送请求时，通过 Accept-Encoding 带上自己支持的内容编</description>
    </item>
    
    <item>
      <title>Http2与h2c</title>
      <link>/post/http2%E4%B8%8Eh2c/</link>
      <pubDate>Tue, 15 Sep 2020 13:03:24 +0000</pubDate>
      
      <guid>/post/http2%E4%B8%8Eh2c/</guid>
      <description>了解一下http2和h2c (HTTP/2 over TCP,HTTP/2 without TLS)。 http/1.1 的服务器 我们经常会在代码中启动一个http服务器，最简单的http/1.1服务器如下所示： 1 2</description>
    </item>
    
    <item>
      <title>Header:Content-Disposition</title>
      <link>/post/headercontent-disposition/</link>
      <pubDate>Wed, 11 Dec 2019 20:47:09 +0000</pubDate>
      
      <guid>/post/headercontent-disposition/</guid>
      <description>Content-Disposition Content-Disposition 有两种应用场景。 用在HTTP响应头中 场景一是用在HTTP的响应头中，指示响应的内容该以何种形式展示。是以内联的形式（即网页或者页面的一部</description>
    </item>
    
    <item>
      <title>HTTP中的长连接与短连接</title>
      <link>/post/http%E4%B8%AD%E7%9A%84%E9%95%BF%E8%BF%9E%E6%8E%A5%E4%B8%8E%E7%9F%AD%E8%BF%9E%E6%8E%A5/</link>
      <pubDate>Thu, 13 Dec 2018 13:43:21 +0000</pubDate>
      
      <guid>/post/http%E4%B8%AD%E7%9A%84%E9%95%BF%E8%BF%9E%E6%8E%A5%E4%B8%8E%E7%9F%AD%E8%BF%9E%E6%8E%A5/</guid>
      <description>HTTP协议与TCP/IP协议的关系 HTTP属于应用层协议，在传输层使用TCP协议，在网络层使用IP协议。IP协议主要解决网络路由和寻址问题</description>
    </item>
    
    <item>
      <title>四种常见的POST提交数据方式</title>
      <link>/post/%E5%9B%9B%E7%A7%8D%E5%B8%B8%E8%A7%81%E7%9A%84post%E6%8F%90%E4%BA%A4%E6%95%B0%E6%8D%AE%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Fri, 16 Nov 2018 11:14:41 +0000</pubDate>
      
      <guid>/post/%E5%9B%9B%E7%A7%8D%E5%B8%B8%E8%A7%81%E7%9A%84post%E6%8F%90%E4%BA%A4%E6%95%B0%E6%8D%AE%E6%96%B9%E5%BC%8F/</guid>
      <description>我们知道，HTTP 协议是以 ASCII 码传输，建立在 TCP/IP 协议之上的应用层规范。规范把 HTTP 请求分为三个部分：状态行、请求头、消息主体。类似于下面这样： 1 2 3</description>
    </item>
    
  </channel>
</rss>
