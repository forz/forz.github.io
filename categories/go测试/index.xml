<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go测试 on Forz Blog</title>
    <link>/categories/go%E6%B5%8B%E8%AF%95/</link>
    <description>Recent content in Go测试 on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 22 May 2021 22:55:01 +0000</lastBuildDate><atom:link href="/categories/go%E6%B5%8B%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用Delve工具调试Go程序</title>
      <link>/post/%E4%BD%BF%E7%94%A8delve%E5%B7%A5%E5%85%B7%E8%B0%83%E8%AF%95go%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Sat, 22 May 2021 22:55:01 +0000</pubDate>
      
      <guid>/post/%E4%BD%BF%E7%94%A8delve%E5%B7%A5%E5%85%B7%E8%B0%83%E8%AF%95go%E7%A8%8B%E5%BA%8F/</guid>
      <description>前言 Delve 是一个 go 语言的第三方调试器，github 地址是： https://github.com/go-delve/delve 。 Delve 是 GDB 调试器的有效替代品。与 GDB 相比，它能更高的理解 Go 的运行时，数据结构以及表达式。</description>
    </item>
    
    <item>
      <title>RESTAPI测试框架:httpexpect</title>
      <link>/post/restapi%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6httpexpect/</link>
      <pubDate>Tue, 28 Jan 2020 18:03:14 +0000</pubDate>
      
      <guid>/post/restapi%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6httpexpect/</guid>
      <description>简介 httpexpect基本上，是一组基于HTTP请求和基于HTTP的断言( 例如HTTP响应和负载)，位于net/HTTP和几个实用程序包之</description>
    </item>
    
    <item>
      <title>Sql模拟库:go-sqlmock</title>
      <link>/post/sql%E6%A8%A1%E6%8B%9F%E5%BA%93go-sqlmock/</link>
      <pubDate>Mon, 27 Jan 2020 16:26:17 +0000</pubDate>
      
      <guid>/post/sql%E6%A8%A1%E6%8B%9F%E5%BA%93go-sqlmock/</guid>
      <description>简介 sqlmock是一个实现sql/driver的模拟库。它有一个唯一的目的:在测试中模拟任何sql驱动程序行为，而无需真正的数据库连接。它</description>
    </item>
    
    <item>
      <title>打桩框架:gomonkey</title>
      <link>/post/%E6%89%93%E6%A1%A9%E6%A1%86%E6%9E%B6gomonkey/</link>
      <pubDate>Mon, 27 Jan 2020 15:30:34 +0000</pubDate>
      
      <guid>/post/%E6%89%93%E6%A1%A9%E6%A1%86%E6%9E%B6gomonkey/</guid>
      <description>介绍 gomonkey 是 golang 的一款打桩框架，目标是让用户在单元测试中低成本的完成打桩，从而将精力聚焦于业务功能的开发。gomonkey 接口友好，功能强大，目前</description>
    </item>
    
    <item>
      <title>猴子补丁:monkey</title>
      <link>/post/%E7%8C%B4%E5%AD%90%E8%A1%A5%E4%B8%81monkey/</link>
      <pubDate>Sat, 25 Jan 2020 23:36:00 +0000</pubDate>
      
      <guid>/post/%E7%8C%B4%E5%AD%90%E8%A1%A5%E4%B8%81monkey/</guid>
      <description>前言 我们已经知道： 全局变量可通过GoStub框架打桩 过程可通过GoStub框架打桩 函数可通过GoStub框架打桩 interface可通过Go</description>
    </item>
    
    <item>
      <title>interface的mock:gomock</title>
      <link>/post/interface%E7%9A%84mockgomock/</link>
      <pubDate>Tue, 07 Jan 2020 15:59:29 +0000</pubDate>
      
      <guid>/post/interface%E7%9A%84mockgomock/</guid>
      <description>序言 GoMock是由Golang官方开发维护的测试框架，实现了较为完整的基于interface的Mock功能，能够与Golang内置的tes</description>
    </item>
    
    <item>
      <title>变量与函数打桩:gostub</title>
      <link>/post/%E5%8F%98%E9%87%8F%E4%B8%8E%E5%87%BD%E6%95%B0%E6%89%93%E6%A1%A9gostub/</link>
      <pubDate>Tue, 07 Jan 2020 14:50:32 +0000</pubDate>
      
      <guid>/post/%E5%8F%98%E9%87%8F%E4%B8%8E%E5%87%BD%E6%95%B0%E6%89%93%E6%A1%A9gostub/</guid>
      <description>简介 gostub用于在测试中添加变量，并在测试运行后重置原始值。 这可以用于对静态变量和静态函数进行打桩。要打桩静态变量，请使用stub函数：</description>
    </item>
    
    <item>
      <title>使用goconvey简化BDD单元测试</title>
      <link>/post/%E4%BD%BF%E7%94%A8goconvey%E7%AE%80%E5%8C%96bdd%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Sun, 05 Jan 2020 22:11:30 +0000</pubDate>
      
      <guid>/post/%E4%BD%BF%E7%94%A8goconvey%E7%AE%80%E5%8C%96bdd%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</guid>
      <description>GoConvey简介 GoConvey是一款针对Golang的测试框架，可以管理和运行测试用例，同时提供了丰富的断言函数，并支持很多 Web 界面特性</description>
    </item>
    
    <item>
      <title>使用testify简化TDD测试</title>
      <link>/post/%E4%BD%BF%E7%94%A8testify%E7%AE%80%E5%8C%96tdd%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Sun, 05 Jan 2020 16:43:26 +0000</pubDate>
      
      <guid>/post/%E4%BD%BF%E7%94%A8testify%E7%AE%80%E5%8C%96tdd%E6%B5%8B%E8%AF%95/</guid>
      <description>简介 testify的功能包括： Easy assertions Mocking Testing suite interfaces and functions assert 该assert软件包提供了一些有用的方法，使您可以在Go中编写更好的测试代码。 打印友好，易于</description>
    </item>
    
  </channel>
</rss>
