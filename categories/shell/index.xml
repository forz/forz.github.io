<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shell on Forz Blog</title>
    <link>/categories/shell/</link>
    <description>Recent content in Shell on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 22 Nov 2018 11:19:29 +0000</lastBuildDate><atom:link href="/categories/shell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>umask命令解析</title>
      <link>/post/umask%E5%91%BD%E4%BB%A4%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Thu, 22 Nov 2018 11:19:29 +0000</pubDate>
      
      <guid>/post/umask%E5%91%BD%E4%BB%A4%E8%A7%A3%E6%9E%90/</guid>
      <description>umask命令用来设置限制新建文件权限的掩码。当新文件被创建时，其最初的权限由文件创建掩码决定。用户每次注册进入系统时，umask命令都被执</description>
    </item>
    
    <item>
      <title>linux端口连通性测试</title>
      <link>/post/linux%E7%AB%AF%E5%8F%A3%E8%BF%9E%E9%80%9A%E6%80%A7%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Wed, 21 Nov 2018 16:01:15 +0000</pubDate>
      
      <guid>/post/linux%E7%AB%AF%E5%8F%A3%E8%BF%9E%E9%80%9A%E6%80%A7%E6%B5%8B%E8%AF%95/</guid>
      <description>telnet telnet是windows标准服务，可以直接用；如果是linux机器，需要安装telnet. 用法: telnet ip port 1）先用telnet连接不存在的</description>
    </item>
    
    <item>
      <title>tar命令详解</title>
      <link>/post/tar%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 15 Nov 2018 18:44:27 +0000</pubDate>
      
      <guid>/post/tar%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid>
      <description>Linux包含了多种文件压缩工具。虽然听上去不错，但这实际上经常会在用户下载文件时造成混淆。表4-7列出了Linux上的文件压缩工具。 gzi</description>
    </item>
    
    <item>
      <title>后台模式详解</title>
      <link>/post/%E5%90%8E%E5%8F%B0%E6%A8%A1%E5%BC%8F%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 15 Nov 2018 18:43:54 +0000</pubDate>
      
      <guid>/post/%E5%90%8E%E5%8F%B0%E6%A8%A1%E5%BC%8F%E8%AF%A6%E8%A7%A3/</guid>
      <description>jobs jos 命令用于显示 Linux 中的任务列表及任务状态，包括后台运行的任务。该命令可以显示任务号及其对应的进程号。其中，任务号是以普通用户的角度进行的，而</description>
    </item>
    
    <item>
      <title>SSH原理与运用</title>
      <link>/post/ssh%E5%8E%9F%E7%90%86%E4%B8%8E%E8%BF%90%E7%94%A8/</link>
      <pubDate>Thu, 15 Nov 2018 18:43:05 +0000</pubDate>
      
      <guid>/post/ssh%E5%8E%9F%E7%90%86%E4%B8%8E%E8%BF%90%E7%94%A8/</guid>
      <description>一、什么是SSH？ Secure Shell（缩写为SSH），由IETF的网络工作小组（Network Working Group）所制定；SSH为一项创建在应用层和传输</description>
    </item>
    
    <item>
      <title>scp命令详解</title>
      <link>/post/scp%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 15 Nov 2018 18:42:36 +0000</pubDate>
      
      <guid>/post/scp%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid>
      <description>Linux scp命令 Linux scp命令用于Linux之间复制文件和目录。 scp是 secure copy的缩写, scp是linux系统下基于ssh登陆进行安全的远程文件</description>
    </item>
    
    <item>
      <title>lsof命令详解</title>
      <link>/post/lsof%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 15 Nov 2018 18:36:39 +0000</pubDate>
      
      <guid>/post/lsof%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid>
      <description>概论 lsof命令用于查看你进程打开的文件，打开文件的进程，进程打开的端口(TCP、UDP)。找回/恢复删除的文件。是十分方便的系统监视工具，</description>
    </item>
    
    <item>
      <title>kill命令详解</title>
      <link>/post/kill%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 15 Nov 2018 18:33:14 +0000</pubDate>
      
      <guid>/post/kill%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid>
      <description>kill命令 kill命令用来删除执行中的程序或工作。kill可将指定的信息送至程序。预设的信息为SIGTERM(15),可将指定程序终止。若</description>
    </item>
    
    <item>
      <title>ifconfig和route和nslookup和host命令详解</title>
      <link>/post/ifconfig%E5%92%8Croute%E5%92%8Cnslookup%E5%92%8Chost%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Sat, 09 Sep 2017 21:29:11 +0000</pubDate>
      
      <guid>/post/ifconfig%E5%92%8Croute%E5%92%8Cnslookup%E5%92%8Chost%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid>
      <description>ifconfig host和nslookup route</description>
    </item>
    
    <item>
      <title>top和ps和pgrep命令详解</title>
      <link>/post/top%E5%92%8Cps%E5%92%8Cpgrep%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Sat, 09 Sep 2017 20:50:48 +0000</pubDate>
      
      <guid>/post/top%E5%92%8Cps%E5%92%8Cpgrep%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid>
      <description>ps 当程序运行在系统上时，我们称之为进程(process)。想监测这些进程，需要熟悉ps命令的用法。 默认情况下，ps命令并不会提供那么多的信息</description>
    </item>
    
    <item>
      <title>列出1小时内占用CPU最多的10个进程</title>
      <link>/post/%E5%88%97%E5%87%BA1%E5%B0%8F%E6%97%B6%E5%86%85%E5%8D%A0%E7%94%A8cpu%E6%9C%80%E5%A4%9A%E7%9A%8410%E4%B8%AA%E8%BF%9B%E7%A8%8B/</link>
      <pubDate>Sat, 09 Sep 2017 20:40:33 +0000</pubDate>
      
      <guid>/post/%E5%88%97%E5%87%BA1%E5%B0%8F%E6%97%B6%E5%86%85%E5%8D%A0%E7%94%A8cpu%E6%9C%80%E5%A4%9A%E7%9A%8410%E4%B8%AA%E8%BF%9B%E7%A8%8B/</guid>
      <description></description>
    </item>
    
    <item>
      <title>找出指定目录中最大的10个文件</title>
      <link>/post/%E6%89%BE%E5%87%BA%E6%8C%87%E5%AE%9A%E7%9B%AE%E5%BD%95%E4%B8%AD%E6%9C%80%E5%A4%A7%E7%9A%8410%E4%B8%AA%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sat, 09 Sep 2017 20:17:25 +0000</pubDate>
      
      <guid>/post/%E6%89%BE%E5%87%BA%E6%8C%87%E5%AE%9A%E7%9B%AE%E5%BD%95%E4%B8%AD%E6%9C%80%E5%A4%A7%E7%9A%8410%E4%B8%AA%E6%96%87%E4%BB%B6/</guid>
      <description></description>
    </item>
    
    <item>
      <title>grep命令详解</title>
      <link>/post/grep%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Sat, 09 Sep 2017 19:14:34 +0000</pubDate>
      
      <guid>/post/grep%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid>
      <description>基本内容 你会经常需要在大文件中找一行数据，而这行数据又埋藏在文件的中间。这时并不需要手动 翻看整个文件，用grep命令来帮助查找就行了。gre</description>
    </item>
    
    <item>
      <title>wc命令详解</title>
      <link>/post/wc%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Sat, 09 Sep 2017 18:52:15 +0000</pubDate>
      
      <guid>/post/wc%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid>
      <description>wc命令可以对对数据中的文本进行计数。默认情况下，它会输出3个值: 文本的行数 文本的词数 文本的字节数 通过将文本文件重定向到wc命令，你立刻就可</description>
    </item>
    
    <item>
      <title>head与tail命令详解</title>
      <link>/post/head%E4%B8%8Etail%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Sat, 09 Sep 2017 18:30:19 +0000</pubDate>
      
      <guid>/post/head%E4%B8%8Etail%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid>
      <description>简介 当査看上千行的大文件时，我们可不会用cat命令把整个文件内容给打印出来。相反，我们 只会査看文件的一小部分内容（例如文件的前10行或后10</description>
    </item>
    
    <item>
      <title>sort和uniq命令详解</title>
      <link>/post/sort%E5%92%8Cuniq%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Sat, 09 Sep 2017 09:17:18 +0000</pubDate>
      
      <guid>/post/sort%E5%92%8Cuniq%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid>
      <description>简介 同文本文件打交道时，总避不开排序，那是因为对于文本处理任务而言，排序（sort)可以起到不小的作用。sort命令能够帮助我们对文本文件和</description>
    </item>
    
    <item>
      <title>find命令详解</title>
      <link>/post/find%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 08 Sep 2017 21:32:58 +0000</pubDate>
      
      <guid>/post/find%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid>
      <description>简介 find是UNIX/Linux命令行工具箱中最棒的工具之一。这个命令对编写shell脚本很有帮助，但是多数人由于对它缺乏认识，并不能有效</description>
    </item>
    
    <item>
      <title>history命令详解</title>
      <link>/post/history%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 08 Sep 2017 12:55:02 +0000</pubDate>
      
      <guid>/post/history%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid>
      <description>bash shell会跟踪你用过的命令。你可以唤回这些命令 并重新使用。 要查看最近用过的命令列表，可以输入不带选项的history命令。 你可以设置保存</description>
    </item>
    
    <item>
      <title>alias命令详解</title>
      <link>/post/alias%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 08 Sep 2017 12:34:30 +0000</pubDate>
      
      <guid>/post/alias%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid>
      <description>alias命令别名允许你为常用的命令(及其参数)创建另一 个名称，从而将输入量减少到最低。 要查看当前可用的别名，使用alias命令以及选项-p</description>
    </item>
    
    <item>
      <title>数组和关联数组</title>
      <link>/post/%E6%95%B0%E7%BB%84%E5%92%8C%E5%85%B3%E8%81%94%E6%95%B0%E7%BB%84/</link>
      <pubDate>Fri, 08 Sep 2017 12:14:36 +0000</pubDate>
      
      <guid>/post/%E6%95%B0%E7%BB%84%E5%92%8C%E5%85%B3%E8%81%94%E6%95%B0%E7%BB%84/</guid>
      <description>数组变量 环境变量有一个很酷的特性就是，它们可作为数组使用。数组是能够存储多个值的变量。这 些值可以单独引用，也可以作为整个数组来引用。 要给某个</description>
    </item>
    
    <item>
      <title>df和du命令详解</title>
      <link>/post/df%E5%92%8Cdu%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 07 Sep 2017 17:13:30 +0000</pubDate>
      
      <guid>/post/df%E5%92%8Cdu%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid>
      <description>df(Disk Free) df命令直接读取分区的超级块信息获取分区使用情况。它的数据是基于分区元数据的，所以只能针对整个分区。由于df直接读取超级块，所以运行速度</description>
    </item>
    
    <item>
      <title>echo命令与printf命令详解</title>
      <link>/post/echo%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 07 Sep 2017 11:31:30 +0000</pubDate>
      
      <guid>/post/echo%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid>
      <description>echo echo是用于终端打印的基本命令。 在默认情况下，echo会将一个换行符追加到输出文本的尾部。可以使用标志-n来忽略结尾的换行符。 $ echo &amp;quot;Welcome to Bash&amp;quot;</description>
    </item>
    
    <item>
      <title>正则表达式详解</title>
      <link>/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Sat, 12 Aug 2017 22:39:08 +0000</pubDate>
      
      <guid>/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AF%A6%E8%A7%A3/</guid>
      <description>定义 正则表达式是你所定义的模式模板(pattern template)，Linux工具可以用它来过滤文本。Linux 工具(比如sed编辑器或g</description>
    </item>
    
    <item>
      <title>一行sed实现文本翻转</title>
      <link>/post/%E4%B8%80%E8%A1%8Csed%E5%AE%9E%E7%8E%B0%E6%96%87%E6%9C%AC%E7%BF%BB%E8%BD%AC/</link>
      <pubDate>Sat, 12 Aug 2017 15:19:46 +0000</pubDate>
      
      <guid>/post/%E4%B8%80%E8%A1%8Csed%E5%AE%9E%E7%8E%B0%E6%96%87%E6%9C%AC%E7%BF%BB%E8%BD%AC/</guid>
      <description>要实现这个效果(先显示最后一行，最 后显示第一行)，你得利用保持空间做一些特别的铺垫工作。 你得像这样使用模式空间: (1) 在模式空间中放置一行; (2) 将</description>
    </item>
    
    <item>
      <title>gawk编辑器详解</title>
      <link>/post/gawk%E7%BC%96%E8%BE%91%E5%99%A8%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 11 Aug 2017 20:45:01 +0000</pubDate>
      
      <guid>/post/gawk%E7%BC%96%E8%BE%91%E5%99%A8%E8%AF%A6%E8%A7%A3/</guid>
      <description>介绍 虽然sed编辑器是非常方便自动修改文本文件的工具，但其也有自身的限制。通常你需要一 个用来处理文件中的数据的更高级工具，它能提供一个类编程</description>
    </item>
    
    <item>
      <title>sed编辑器进阶</title>
      <link>/post/sed%E7%BC%96%E8%BE%91%E5%99%A8%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Fri, 11 Aug 2017 20:44:40 +0000</pubDate>
      
      <guid>/post/sed%E7%BC%96%E8%BE%91%E5%99%A8%E8%BF%9B%E9%98%B6/</guid>
      <description>多行命令 sed编辑器包含了三个可用来处理多行文本的特殊命令。 N:将数据流中的下一行加进来创建一个多行组(multiline group)来处理</description>
    </item>
    
    <item>
      <title>sed编辑器入门</title>
      <link>/post/sed%E7%BC%96%E8%BE%91%E5%99%A8%E5%85%A5%E9%97%A8/</link>
      <pubDate>Fri, 11 Aug 2017 20:44:36 +0000</pubDate>
      
      <guid>/post/sed%E7%BC%96%E8%BE%91%E5%99%A8%E5%85%A5%E9%97%A8/</guid>
      <description>介绍 sed编辑器被称作流编辑器(stream editor)，和普通的交互式文本编辑器恰好相反。在交互式 文本编辑器中(比如vim)，你可以用键</description>
    </item>
    
    <item>
      <title>shell脚本中的函数使用</title>
      <link>/post/shell%E8%84%9A%E6%9C%AC%E4%B8%AD%E7%9A%84%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 11 Aug 2017 10:26:30 +0000</pubDate>
      
      <guid>/post/shell%E8%84%9A%E6%9C%AC%E4%B8%AD%E7%9A%84%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8/</guid>
      <description>基本的脚本函数 函数是一个脚本代码块，你可以为其命名并在代码中任何位置重 用。要在脚本中使用该代码块时，只要使用所起的函数名就行了(这个过程称为</description>
    </item>
    
    <item>
      <title>定时运行作业</title>
      <link>/post/%E5%AE%9A%E6%97%B6%E8%BF%90%E8%A1%8C%E4%BD%9C%E4%B8%9A/</link>
      <pubDate>Fri, 11 Aug 2017 09:47:13 +0000</pubDate>
      
      <guid>/post/%E5%AE%9A%E6%97%B6%E8%BF%90%E8%A1%8C%E4%BD%9C%E4%B8%9A/</guid>
      <description>Linux系统提供了多个在预选时间运行脚本的方法:at命令和cron表。每个方法都使用不同的技 术来安排脚本的运行时间和频率。 at命令来计划执</description>
    </item>
    
    <item>
      <title>date命令详解</title>
      <link>/post/date%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 10 Aug 2017 22:08:24 +0000</pubDate>
      
      <guid>/post/date%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid>
      <description>定义 date命令是显示或设置系统时间与日期。 很多shell脚本里面需要打印不同格式的时间或日期，以及要根据时间和日期执行操作。延时通常用于脚</description>
    </item>
    
    <item>
      <title>作业控制、调整nice值</title>
      <link>/post/%E4%BD%9C%E4%B8%9A%E6%8E%A7%E5%88%B6%E8%B0%83%E6%95%B4nice%E5%80%BC/</link>
      <pubDate>Thu, 10 Aug 2017 21:08:16 +0000</pubDate>
      
      <guid>/post/%E4%BD%9C%E4%B8%9A%E6%8E%A7%E5%88%B6%E8%B0%83%E6%95%B4nice%E5%80%BC/</guid>
      <description>作业控制 在作业停止后， Linux系统会让你选择是终止还是重启。你可以用kill命令终止该进程。要重启停止的进程需要 向其发送一个SIGCONT</description>
    </item>
    
    <item>
      <title>shell对信号的处理</title>
      <link>/post/shell%E5%AF%B9%E4%BF%A1%E5%8F%B7%E7%9A%84%E5%A4%84%E7%90%86/</link>
      <pubDate>Thu, 10 Aug 2017 19:58:23 +0000</pubDate>
      
      <guid>/post/shell%E5%AF%B9%E4%BF%A1%E5%8F%B7%E7%9A%84%E5%A4%84%E7%90%86/</guid>
      <description>处理信号 Linux系统和应用程序可以生成超过30个信号。下表列出了在Linux编程时会遇到的最常见的Linux系统信号。 默认情况下，bash</description>
    </item>
    
    <item>
      <title>创建临时文件和目录</title>
      <link>/post/%E5%88%9B%E5%BB%BA%E4%B8%B4%E6%97%B6%E6%96%87%E4%BB%B6%E5%92%8C%E7%9B%AE%E5%BD%95/</link>
      <pubDate>Thu, 10 Aug 2017 17:12:14 +0000</pubDate>
      
      <guid>/post/%E5%88%9B%E5%BB%BA%E4%B8%B4%E6%97%B6%E6%96%87%E4%BB%B6%E5%92%8C%E7%9B%AE%E5%BD%95/</guid>
      <description>创建临时文件 Linux系统有特殊的目录，专供临时文件使用。Linux使用/tmp目录来存放不需要永久保留的 文件。大多数Linux发行版配置了</description>
    </item>
    
    <item>
      <title>输入输出重定向</title>
      <link>/post/%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91/</link>
      <pubDate>Thu, 10 Aug 2017 14:08:15 +0000</pubDate>
      
      <guid>/post/%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91/</guid>
      <description>标准文件描述符 Linux系统将每个对象当作文件处理。这包括输入和输出进程。Linux用文件描述符(file descriptor)来标识每个文</description>
    </item>
    
    <item>
      <title>利用read获取用户输入</title>
      <link>/post/%E5%88%A9%E7%94%A8read%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5/</link>
      <pubDate>Thu, 10 Aug 2017 10:53:44 +0000</pubDate>
      
      <guid>/post/%E5%88%A9%E7%94%A8read%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5/</guid>
      <description>尽管命令行选项和参数是从脚本用户处获得输入的一种重要方式，但有时脚本的交互性还需 要更强一些。比如你想要在脚本运行时问个问题，并等待运行脚本的</description>
    </item>
    
    <item>
      <title>脚本对命令行选项的处理方法</title>
      <link>/post/%E8%84%9A%E6%9C%AC%E5%AF%B9%E5%91%BD%E4%BB%A4%E8%A1%8C%E9%80%89%E9%A1%B9%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 10 Aug 2017 10:42:41 +0000</pubDate>
      
      <guid>/post/%E8%84%9A%E6%9C%AC%E5%AF%B9%E5%91%BD%E4%BB%A4%E8%A1%8C%E9%80%89%E9%A1%B9%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</guid>
      <description>基本方法 表面上看，命令行选项也没什么特殊的。在命令行上，它们紧跟在脚本名之后，就跟命令行 参数一样。实际上，如果愿意，你可以像处理命令行参数一</description>
    </item>
    
    <item>
      <title>命令行参数和特殊参数</title>
      <link>/post/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E5%92%8C%E7%89%B9%E6%AE%8A%E5%8F%82%E6%95%B0/</link>
      <pubDate>Wed, 09 Aug 2017 22:23:24 +0000</pubDate>
      
      <guid>/post/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E5%92%8C%E7%89%B9%E6%AE%8A%E5%8F%82%E6%95%B0/</guid>
      <description>命令行参数 向shell脚本传递数据的最基本方法是使用命令行参数。命令行参数允许在运行脚本时向命令行添加数据。 $ ./addem 10 30 读取参数 bash shell会将</description>
    </item>
    
    <item>
      <title>循环命令while、until、break、continue详解</title>
      <link>/post/%E5%BE%AA%E7%8E%AF%E5%91%BD%E4%BB%A4whileuntil%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Wed, 09 Aug 2017 20:48:16 +0000</pubDate>
      
      <guid>/post/%E5%BE%AA%E7%8E%AF%E5%91%BD%E4%BB%A4whileuntil%E8%AF%A6%E8%A7%A3/</guid>
      <description>while命令 while命令允许定义一个要测试 的命令，然后循环执行一组命令，只要定义的测试命令返回的是退出状态码0。它会在每次迭代的 一开始测</description>
    </item>
    
    <item>
      <title>循环命令for详解</title>
      <link>/post/%E5%BE%AA%E7%8E%AF%E5%91%BD%E4%BB%A4for%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Wed, 09 Aug 2017 18:46:05 +0000</pubDate>
      
      <guid>/post/%E5%BE%AA%E7%8E%AF%E5%91%BD%E4%BB%A4for%E8%AF%A6%E8%A7%A3/</guid>
      <description>for命令 bash shell提供了for命令，允许你创建一个遍历一系列值的循环。每次迭代都使用其中一个值来执行已定义好的一组命令。下面是bash s</description>
    </item>
    
    <item>
      <title>if-then的测试功能</title>
      <link>/post/if-then%E7%9A%84%E6%B5%8B%E8%AF%95%E5%8A%9F%E8%83%BD/</link>
      <pubDate>Wed, 09 Aug 2017 16:17:02 +0000</pubDate>
      
      <guid>/post/if-then%E7%9A%84%E6%B5%8B%E8%AF%95%E5%8A%9F%E8%83%BD/</guid>
      <description>退出状态码 定义 shell中运行的每个命令都使用退出状态码(exit status)告诉shell它已经运行完毕。退出状态 码是一个0~255的整</description>
    </item>
    
    <item>
      <title>通过shell进行数学运算</title>
      <link>/post/%E9%80%9A%E8%BF%87shell%E8%BF%9B%E8%A1%8C%E6%95%B0%E5%AD%A6%E8%BF%90%E7%AE%97/</link>
      <pubDate>Wed, 09 Aug 2017 16:16:09 +0000</pubDate>
      
      <guid>/post/%E9%80%9A%E8%BF%87shell%E8%BF%9B%E8%A1%8C%E6%95%B0%E5%AD%A6%E8%BF%90%E7%AE%97/</guid>
      <description>expr命令 expr命令允许在命令行上处理数学表达式，但是特别笨拙。 许多expr命令操作符在shell中另有含义(比如星号)。当它们出现在在</description>
    </item>
    
    <item>
      <title>文件权限解析</title>
      <link>/post/%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Wed, 09 Aug 2017 09:54:34 +0000</pubDate>
      
      <guid>/post/%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E8%A7%A3%E6%9E%90/</guid>
      <description>文件权限 ls命令可以用来查看Linux系统上的文件、目录和设备的权限。 输出结果的第一个字段就是描述文件和目录权限的编码。这个字段的第一个字符</description>
    </item>
    
    <item>
      <title>用户账户和组管理</title>
      <link>/post/%E7%94%A8%E6%88%B7%E8%B4%A6%E6%88%B7%E5%92%8C%E7%BB%84%E7%AE%A1%E7%90%86/</link>
      <pubDate>Mon, 07 Aug 2017 23:05:37 +0000</pubDate>
      
      <guid>/post/%E7%94%A8%E6%88%B7%E8%B4%A6%E6%88%B7%E5%92%8C%E7%BB%84%E7%AE%A1%E7%90%86/</guid>
      <description>Linux 的安全性 Linux安全系统的核心是用户账户。每个能进入Linux系统的用户都会被分配唯一的用户账 户。用户对系统中各种对象的访问权限取决于他</description>
    </item>
    
    <item>
      <title>定位系统环境变量</title>
      <link>/post/%E5%AE%9A%E4%BD%8D%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</link>
      <pubDate>Mon, 07 Aug 2017 22:09:00 +0000</pubDate>
      
      <guid>/post/%E5%AE%9A%E4%BD%8D%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</guid>
      <description>启动shell 在你登入Linux系统启动一个bash shell时，默认情况下bash会在几个文件中查找命令。这些 文件叫作启动文件或环境文件。</description>
    </item>
    
    <item>
      <title>环境变量的使用</title>
      <link>/post/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 07 Aug 2017 18:27:36 +0000</pubDate>
      
      <guid>/post/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>什么是环境变量 bash shell用一个叫作环境变量(environment variable)的特性来存储有关shell会话和工作环境的信息(这也是</description>
    </item>
    
    <item>
      <title>Shell的內建命令</title>
      <link>/post/shell%E7%9A%84%E5%85%A7%E5%BB%BA%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Mon, 07 Aug 2017 17:23:40 +0000</pubDate>
      
      <guid>/post/shell%E7%9A%84%E5%85%A7%E5%BB%BA%E5%91%BD%E4%BB%A4/</guid>
      <description>外部命令 外部命令，有时候也被称为文件系统命令，是存在于bash shell之外的程序。它们并不是shell 程序的一部分。外部命令程序通常位于/</description>
    </item>
    
    <item>
      <title>Shell的父子关系</title>
      <link>/post/shell%E7%9A%84%E7%88%B6%E5%AD%90%E5%85%B3%E7%B3%BB/</link>
      <pubDate>Mon, 07 Aug 2017 17:23:08 +0000</pubDate>
      
      <guid>/post/shell%E7%9A%84%E7%88%B6%E5%AD%90%E5%85%B3%E7%B3%BB/</guid>
      <description>创建子shell 在CLI提示符后输入/bin/bash命令或其他等效的bash命令时，会创建一个新的shell程序。 这个shell程序被称为</description>
    </item>
    
    <item>
      <title>磁盘空间命令</title>
      <link>/post/%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Mon, 07 Aug 2017 11:49:47 +0000</pubDate>
      
      <guid>/post/%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4%E5%91%BD%E4%BB%A4/</guid>
      <description>挂载存储媒体 mount命令 Linux上用来挂载媒体的命令叫作mount。默认情况下，mount命令会输出当前系统上挂载的设备列表. mount</description>
    </item>
    
    <item>
      <title>基本的Shell命令(一)</title>
      <link>/post/%E5%9F%BA%E6%9C%AC%E7%9A%84shell%E5%91%BD%E4%BB%A4%E4%B8%80/</link>
      <pubDate>Sun, 06 Aug 2017 22:25:51 +0000</pubDate>
      
      <guid>/post/%E5%9F%BA%E6%9C%AC%E7%9A%84shell%E5%91%BD%E4%BB%A4%E4%B8%80/</guid>
      <description>遍历目录 在Linux文件系统上，可以使用切换目录命令cd将shell会话切换到另一个目录。cd命令的格 式非常简单: cd destination cd命令可接受单个参数</description>
    </item>
    
    <item>
      <title>设置用户ID位，保存设置用户ID，有效用户ID，实际用户ID</title>
      <link>/post/%E8%AE%BE%E7%BD%AE%E7%94%A8%E6%88%B7id%E4%BD%8D%E4%BF%9D%E5%AD%98%E8%AE%BE%E7%BD%AE%E7%94%A8%E6%88%B7id%E6%9C%89%E6%95%88%E7%94%A8%E6%88%B7id%E5%AE%9E%E9%99%85%E7%94%A8%E6%88%B7id/</link>
      <pubDate>Sun, 25 Jun 2017 14:23:56 +0000</pubDate>
      
      <guid>/post/%E8%AE%BE%E7%BD%AE%E7%94%A8%E6%88%B7id%E4%BD%8D%E4%BF%9D%E5%AD%98%E8%AE%BE%E7%BD%AE%E7%94%A8%E6%88%B7id%E6%9C%89%E6%95%88%E7%94%A8%E6%88%B7id%E5%AE%9E%E9%99%85%E7%94%A8%E6%88%B7id/</guid>
      <description>基本概念 实际用户ID（RUID） 用于标识一个系统中用户是谁，一般是在登录之后，就被唯一确定的，就是登陆的用户的uid 有效用户ID（EUID）</description>
    </item>
    
    <item>
      <title>netstat命令详解</title>
      <link>/post/netstat%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Sun, 25 Jun 2017 14:23:11 +0000</pubDate>
      
      <guid>/post/netstat%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid>
      <description>简介 Netstat 命令用于显示各种网络相关信息，如网络连接，路由表，接口状态 (Interface Statistics)，masquerade 连接，多播成员 (Multicast Memberships) 等等。 输出信</description>
    </item>
    
    <item>
      <title>ping命令和traceroute命令详解</title>
      <link>/post/ping%E5%91%BD%E4%BB%A4%E5%92%8Ctraceroute%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Sun, 25 Jun 2017 05:43:53 +0000</pubDate>
      
      <guid>/post/ping%E5%91%BD%E4%BB%A4%E5%92%8Ctraceroute%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid>
      <description>ping命令 基本原理 Ping命令利用ICMP协议进行工作，ICMP是Internet控制消息协议，用于在主机和路由器之间传递控制消息。Pin</description>
    </item>
    
  </channel>
</rss>
