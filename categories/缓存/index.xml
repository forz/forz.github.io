<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>缓存 on Forz Blog</title>
    <link>/categories/%E7%BC%93%E5%AD%98/</link>
    <description>Recent content in 缓存 on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 28 Nov 2021 22:31:47 +0000</lastBuildDate><atom:link href="/categories/%E7%BC%93%E5%AD%98/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何保证缓存一致性</title>
      <link>/post/%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E7%BC%93%E5%AD%98%E4%B8%80%E8%87%B4%E6%80%A7/</link>
      <pubDate>Sun, 28 Nov 2021 22:31:47 +0000</pubDate>
      
      <guid>/post/%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E7%BC%93%E5%AD%98%E4%B8%80%E8%87%B4%E6%80%A7/</guid>
      <description>缓存模式 - 数据一致性 Storage 和 Cache 同步更新容易出现数据不一致。 模拟 MySQL Slave 做数据复制，再把消息投递到 Kafka，保证至少一次消费： 同步操作DB； 同步操作</description>
    </item>
    
    <item>
      <title>Memchache和redis的选型对比</title>
      <link>/post/memchache%E5%92%8Credis%E7%9A%84%E9%80%89%E5%9E%8B%E5%AF%B9%E6%AF%94/</link>
      <pubDate>Sun, 28 Nov 2021 22:02:53 +0000</pubDate>
      
      <guid>/post/memchache%E5%92%8Credis%E7%9A%84%E9%80%89%E5%9E%8B%E5%AF%B9%E6%AF%94/</guid>
      <description>memcache memcache 提供简单的 kv cache 存储，value 大小不超过1mb。 我使用 memcache 作为大文本或者简单的 kv结构使用。 memcache 使用了slab 方式做内存管理，存在一定的浪费</description>
    </item>
    
  </channel>
</rss>
