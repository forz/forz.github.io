<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MySQL on Forz Blog</title>
    <link>/categories/mysql/</link>
    <description>Recent content in MySQL on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 09 Jan 2022 16:20:23 +0000</lastBuildDate><atom:link href="/categories/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL为什么选择B&#43;树</title>
      <link>/post/mysql%E4%B8%BA%E4%BB%80%E4%B9%88%E9%80%89%E6%8B%A9b&#43;%E6%A0%91/</link>
      <pubDate>Sun, 09 Jan 2022 16:20:23 +0000</pubDate>
      
      <guid>/post/mysql%E4%B8%BA%E4%BB%80%E4%B9%88%E9%80%89%E6%8B%A9b&#43;%E6%A0%91/</guid>
      <description>介绍 B+树只有叶节点存放数据，其余节点用来索引，而B树是每个索引节点都会有Data域。所以从Mysql（Inoodb）的角度来看，B+树是用</description>
    </item>
    
    <item>
      <title>MySQL如何实现ACID</title>
      <link>/post/mysql%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0acid/</link>
      <pubDate>Wed, 24 Nov 2021 16:57:16 +0000</pubDate>
      
      <guid>/post/mysql%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0acid/</guid>
      <description>基础概念 事务（Transaction）是访问和更新数据库的程序执行单元；事务中可能包含一个或多个sql语句，这些语句要么都执行，要么都不执行</description>
    </item>
    
    <item>
      <title>MySQL的索引合并</title>
      <link>/post/mysql%E7%9A%84%E7%B4%A2%E5%BC%95%E5%90%88%E5%B9%B6/</link>
      <pubDate>Wed, 10 Jun 2020 16:06:11 +0000</pubDate>
      
      <guid>/post/mysql%E7%9A%84%E7%B4%A2%E5%BC%95%E5%90%88%E5%B9%B6/</guid>
      <description>索引合并 索引合并访问方法可以在查询中对一个表使用多个索引,对它们同时扫描，并且合并结果(intersect/union)。 此访问方法合并来自</description>
    </item>
    
    <item>
      <title>MySQL批量SQL插入性能优化</title>
      <link>/post/mysql%E6%89%B9%E9%87%8Fsql%E6%8F%92%E5%85%A5%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</link>
      <pubDate>Thu, 29 Aug 2019 14:13:48 +0000</pubDate>
      
      <guid>/post/mysql%E6%89%B9%E9%87%8Fsql%E6%8F%92%E5%85%A5%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</guid>
      <description>对于一些数据量较大的系统，数据库面临的问题除了查询效率低下，还有就是数据入库时间长。特别像报表系统，每天花费在数据导入上的时间可能会长达几个</description>
    </item>
    
    <item>
      <title>MySQL各种超时参数的含义</title>
      <link>/post/mysql%E5%90%84%E7%A7%8D%E8%B6%85%E6%97%B6%E5%8F%82%E6%95%B0%E7%9A%84%E5%90%AB%E4%B9%89/</link>
      <pubDate>Wed, 03 Jul 2019 19:05:49 +0000</pubDate>
      
      <guid>/post/mysql%E5%90%84%E7%A7%8D%E8%B6%85%E6%97%B6%E5%8F%82%E6%95%B0%E7%9A%84%E5%90%AB%E4%B9%89/</guid>
      <description>简介 今日在查看锁超时的设置时，看到show variables like &amp;lsquo;%timeout%&#39;;语句输出结果中的十几种超时参数时突然想整理一下，不知道大家</description>
    </item>
    
    <item>
      <title>Mysql主键设计</title>
      <link>/post/mysql%E4%B8%BB%E9%94%AE%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Sun, 30 Jun 2019 16:36:54 +0000</pubDate>
      
      <guid>/post/mysql%E4%B8%BB%E9%94%AE%E8%AE%BE%E8%AE%A1/</guid>
      <description>MySQL主键设计原则 MySQL主键应当是对用户没有意义的 所有涉及到业务的字段，无论它看上去是否唯一，都决不能用作主键。例如，用户表的Ema</description>
    </item>
    
    <item>
      <title>嵌入式SQL入门</title>
      <link>/post/%E5%B5%8C%E5%85%A5%E5%BC%8Fsql%E5%85%A5%E9%97%A8/</link>
      <pubDate>Wed, 16 Aug 2017 10:48:58 +0000</pubDate>
      
      <guid>/post/%E5%B5%8C%E5%85%A5%E5%BC%8Fsql%E5%85%A5%E9%97%A8/</guid>
      <description>嵌入式SQL的处理过程 嵌入式SQL是将SQL语句嵌入程序设计语言中，被嵌入的程序设计语言，如C、C++、 Java等称为宿主语言，简称主语言。</description>
    </item>
    
    <item>
      <title>索引和聚簇浅析</title>
      <link>/post/%E7%B4%A2%E5%BC%95%E5%92%8C%E8%81%9A%E7%B0%87%E6%B5%85%E6%9E%90/</link>
      <pubDate>Tue, 15 Aug 2017 16:03:34 +0000</pubDate>
      
      <guid>/post/%E7%B4%A2%E5%BC%95%E5%92%8C%E8%81%9A%E7%B0%87%E6%B5%85%E6%9E%90/</guid>
      <description>存取方法 存取方法是快速存取数据库中数据的技术。数据库管理系统一般提供多种存取方法。常用的存取方法为索引方法和聚簇（clustering)方法</description>
    </item>
    
    <item>
      <title>数据库的规范化</title>
      <link>/post/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E8%A7%84%E8%8C%83%E5%8C%96/</link>
      <pubDate>Tue, 15 Aug 2017 15:59:45 +0000</pubDate>
      
      <guid>/post/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E8%A7%84%E8%8C%83%E5%8C%96/</guid>
      <description>函数依赖 函数依赖和别的数据依赖一样是语义范畴的概念，只能根据语义来确定一个函数依赖。例如，姓名一年龄这个函数依赖只有在该部门没有同名人的条件</description>
    </item>
    
    <item>
      <title>数据库完整性浅析</title>
      <link>/post/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%8C%E6%95%B4%E6%80%A7%E6%B5%85%E6%9E%90/</link>
      <pubDate>Tue, 15 Aug 2017 15:55:24 +0000</pubDate>
      
      <guid>/post/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%8C%E6%95%B4%E6%80%A7%E6%B5%85%E6%9E%90/</guid>
      <description>介绍 数据库的完整性（integrity )是指数据的正确性（correctness)和相容性（compat- ability )。数据的正确性是指数据是符合现</description>
    </item>
    
    <item>
      <title>视图详解</title>
      <link>/post/%E8%A7%86%E5%9B%BE%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Tue, 15 Aug 2017 13:44:26 +0000</pubDate>
      
      <guid>/post/%E8%A7%86%E5%9B%BE%E8%AF%A6%E8%A7%A3/</guid>
      <description>简介 视图是从一个或几个基本表（或视图）导出的表。它与基本表不同，是一个虚表。数据库中只存放视图的定义，而不存放视图对应的数据，这些数据仍存放</description>
    </item>
    
    <item>
      <title>SQL语句:DML语句-数据查询</title>
      <link>/post/sql%E8%AF%AD%E5%8F%A5-dml%E8%AF%AD%E5%8F%A5-%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Sun, 13 Aug 2017 23:42:36 +0000</pubDate>
      
      <guid>/post/sql%E8%AF%AD%E5%8F%A5-dml%E8%AF%AD%E5%8F%A5-%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2/</guid>
      <description>介绍 数据查询是数据库的核心操作。SQL提供了 SELECT语句进行数据查询，该语句具有 灵活的使用方式和丰富的功能。其一般格式为 SELECT [ALL丨DI</description>
    </item>
    
    <item>
      <title>SQL语句:DML语句-数据更新</title>
      <link>/post/sql%E8%AF%AD%E5%8F%A5-dml%E8%AF%AD%E5%8F%A5-%E6%95%B0%E6%8D%AE%E6%9B%B4%E6%96%B0/</link>
      <pubDate>Sun, 13 Aug 2017 20:09:33 +0000</pubDate>
      
      <guid>/post/sql%E8%AF%AD%E5%8F%A5-dml%E8%AF%AD%E5%8F%A5-%E6%95%B0%E6%8D%AE%E6%9B%B4%E6%96%B0/</guid>
      <description>1.插入记录 插入元组 表创建好后，就可以往里插入记录了，插入记录的基本语法如下: INSERT INTO tablename (field1,field2,......fieldn) VALUES(value1,value2,......valuesn); 例如，向表 emp 中插入以下记录:ename 为 zzx1，h</description>
    </item>
    
    <item>
      <title>SQL语句:DDL语句</title>
      <link>/post/sql%E8%AF%AD%E5%8F%A5-ddl%E8%AF%AD%E5%8F%A5/</link>
      <pubDate>Sun, 13 Aug 2017 20:09:20 +0000</pubDate>
      
      <guid>/post/sql%E8%AF%AD%E5%8F%A5-ddl%E8%AF%AD%E5%8F%A5/</guid>
      <description>DDL 是数据定义语言的缩写，简单来说，就是对数据库内部的对象进行创建、删除、修改的 操作语言。它和 DML 语言的最大区别是 DML 只是对表内部数据的操作，而不</description>
    </item>
    
  </channel>
</rss>
