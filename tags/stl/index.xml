<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>STL on Forz Blog</title>
    <link>/tags/stl/</link>
    <description>Recent content in STL on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 25 Jun 2017 02:23:16 +0000</lastBuildDate><atom:link href="/tags/stl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>合并有序链表/数组</title>
      <link>/post/%E5%90%88%E5%B9%B6%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8%E6%95%B0%E7%BB%84/</link>
      <pubDate>Sun, 25 Jun 2017 02:23:16 +0000</pubDate>
      
      <guid>/post/%E5%90%88%E5%B9%B6%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8%E6%95%B0%E7%BB%84/</guid>
      <description>LeetCode 88. Merge Sorted Array Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array. Note: You may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2. The number of elements initialized in nums1 and nums2 are m and n respectively. 解析： 合并两个数组（</description>
    </item>
    
    <item>
      <title>排列</title>
      <link>/post/%E6%8E%92%E5%88%97/</link>
      <pubDate>Sat, 24 Jun 2017 23:59:06 +0000</pubDate>
      
      <guid>/post/%E6%8E%92%E5%88%97/</guid>
      <description>LeetCode 46. Permutations Given a collection of distinct numbers, return all possible permutations. For example, [1,2,3] have the following permutations: [ [1,2,3], [1,3,2], [2,1,3], [2,3,1], [3,1,2], [3,2,1] ] 解析： 此题可以直接用STL中的next_permutation()实现。利用回溯法暴</description>
    </item>
    
    <item>
      <title>数组中的位置查找</title>
      <link>/post/%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E4%BD%8D%E7%BD%AE%E6%9F%A5%E6%89%BE/</link>
      <pubDate>Sat, 24 Jun 2017 22:11:50 +0000</pubDate>
      
      <guid>/post/%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E4%BD%8D%E7%BD%AE%E6%9F%A5%E6%89%BE/</guid>
      <description>LeetCode 35. Search Insert Position Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order. You may assume no duplicates in the array. Here are few examples. [1,3,5,6], 5 → 2 [1,3,5,6], 2 → 1 [1,3,5,6], 7 → 4 [1,3,5,6], 0 → 0 解析：在有序</description>
    </item>
    
    <item>
      <title>判断变形字符串</title>
      <link>/post/%E5%88%A4%E6%96%AD%E5%8F%98%E5%BD%A2%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Sat, 24 Jun 2017 22:08:38 +0000</pubDate>
      
      <guid>/post/%E5%88%A4%E6%96%AD%E5%8F%98%E5%BD%A2%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>LeetCode 383. Ransom Note Given an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom note can be constructed from the magazines ; otherwise, it will return false. Each letter in the magazine string can only be used once in your ransom note. Note: You may assume that both strings contain only lowercase letters. canConstruct(&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;)</description>
    </item>
    
    <item>
      <title>区间问题</title>
      <link>/post/%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 24 Jun 2017 22:07:55 +0000</pubDate>
      
      <guid>/post/%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/</guid>
      <description>LeetCode 228. Summary Ranges Given a sorted integer array without duplicates, return the summary of its ranges. For example, given [0,1,2,4,5,7], return [“0-&amp;gt;2”,”4-&amp;gt;5”,”7”]. 解析： 将一组数划分成若干的区间，用双指针分别</description>
    </item>
    
    <item>
      <title>查找区间最大值</title>
      <link>/post/%E6%9F%A5%E6%89%BE%E5%8C%BA%E9%97%B4%E6%9C%80%E5%A4%A7%E5%80%BC/</link>
      <pubDate>Sat, 24 Jun 2017 19:49:49 +0000</pubDate>
      
      <guid>/post/%E6%9F%A5%E6%89%BE%E5%8C%BA%E9%97%B4%E6%9C%80%E5%A4%A7%E5%80%BC/</guid>
      <description>LeetCode 162. Find Peak Element A peak element is an element that is greater than its neighbors. Given an input array where num[i] ≠ num[i+1], find a peak element and return its index. The array may contain multiple peaks, in that case return the index to any one of the peaks is fine. You may imagine that num[-1] = num[n] = -∞. For example, in array [1, 2,</description>
    </item>
    
  </channel>
</rss>
