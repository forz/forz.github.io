<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rocketmq on Forz Blog</title>
    <link>/tags/rocketmq/</link>
    <description>Recent content in rocketmq on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 21 Apr 2020 00:25:16 +0000</lastBuildDate>
    
	<atom:link href="/tags/rocketmq/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>生产者的发送模式</title>
      <link>/post/%E7%94%9F%E4%BA%A7%E8%80%85%E7%9A%84%E5%8F%91%E9%80%81%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Tue, 21 Apr 2020 00:25:16 +0000</pubDate>
      
      <guid>/post/%E7%94%9F%E4%BA%A7%E8%80%85%E7%9A%84%E5%8F%91%E9%80%81%E6%A8%A1%E5%BC%8F/</guid>
      <description></description>
    </item>
    
    <item>
      <title>消费者的推拉模式</title>
      <link>/post/%E6%B6%88%E8%B4%B9%E8%80%85%E7%9A%84%E6%8E%A8%E6%8B%89%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 20 Apr 2020 15:51:58 +0000</pubDate>
      
      <guid>/post/%E6%B6%88%E8%B4%B9%E8%80%85%E7%9A%84%E6%8E%A8%E6%8B%89%E6%A8%A1%E5%BC%8F/</guid>
      <description>前言 根据使用者对读取操作的控制情况，消费者可分为两种类型。一个是DefaultMQPushConsumer，由系统控制读取操作，收到消息后自</description>
    </item>
    
    <item>
      <title>基于docker搭建rocketmq环境</title>
      <link>/post/%E5%9F%BA%E4%BA%8Edocker%E6%90%AD%E5%BB%BArocketmq%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Sun, 19 Apr 2020 23:52:04 +0000</pubDate>
      
      <guid>/post/%E5%9F%BA%E4%BA%8Edocker%E6%90%AD%E5%BB%BArocketmq%E7%8E%AF%E5%A2%83/</guid>
      <description>准备工作 在搭建之前，我们需要做一些准备工作，这里我们需要使用 docker 搭建服务，所以需要提前安装 docker。此外，由于 rocketmq 需要部署 broker 与 nameserver ，考虑到分开</description>
    </item>
    
  </channel>
</rss>