<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>String on Forz</title>
    <link>http://localhost:1313/tags/string/</link>
    <description>Recent content in String on Forz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 26 Aug 2017 14:12:18 +0000</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/string/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>数组中两个字符串的最小距离</title>
      <link>http://localhost:1313/post/%E6%95%B0%E7%BB%84%E4%B8%AD%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%8F%E8%B7%9D%E7%A6%BB/</link>
      <pubDate>Sat, 26 Aug 2017 14:12:18 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E6%95%B0%E7%BB%84%E4%B8%AD%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%8F%E8%B7%9D%E7%A6%BB/</guid>
      <description>题目: 给定一个字符串数组strs，再给定两个字符串str1和str2,返回在strs中str1与str2的 最小距离，如果str1或str2为</description>
    </item>
    
    <item>
      <title>字符串的调整与替换</title>
      <link>http://localhost:1313/post/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E8%B0%83%E6%95%B4%E4%B8%8E%E6%9B%BF%E6%8D%A2/</link>
      <pubDate>Fri, 25 Aug 2017 14:18:57 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E8%B0%83%E6%95%B4%E4%B8%8E%E6%9B%BF%E6%8D%A2/</guid>
      <description>字符串的替换 题目: 给定一个字符类型的数组chas[], chas右半区全是空字符，左半区不含有空字符。现 在想将左半区中所有的空格字符替换成&amp;r</description>
    </item>
    
    <item>
      <title>在有序但含有空的数组中查找字符串</title>
      <link>http://localhost:1313/post/%E5%9C%A8%E6%9C%89%E5%BA%8F%E4%BD%86%E5%90%AB%E6%9C%89%E7%A9%BA%E7%9A%84%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Thu, 24 Aug 2017 23:09:25 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E5%9C%A8%E6%9C%89%E5%BA%8F%E4%BD%86%E5%90%AB%E6%9C%89%E7%A9%BA%E7%9A%84%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>题目: 给定一个字符串数组strs[],在sirs中有些位置为null,但在不为null的位置上，其字符串是按照字典顺序由小到大依次出现的。再</description>
    </item>
    
    <item>
      <title>替换字符串中连续出现的指定字符串</title>
      <link>http://localhost:1313/post/%E6%9B%BF%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E8%BF%9E%E7%BB%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E6%8C%87%E5%AE%9A%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Thu, 24 Aug 2017 17:24:37 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E6%9B%BF%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E8%BF%9E%E7%BB%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E6%8C%87%E5%AE%9A%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>题目: 给定三个字符串str、from和to,把str中所有from的子串全部替换成to字符串，对 连续出现from的部分要求只替换成一个to字</description>
    </item>
    
    <item>
      <title>去掉字符串中连续出现k个0的子串</title>
      <link>http://localhost:1313/post/%E5%8E%BB%E6%8E%89%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E8%BF%9E%E7%BB%AD%E5%87%BA%E7%8E%B0k%E4%B8%AA0%E7%9A%84%E5%AD%90%E4%B8%B2/</link>
      <pubDate>Thu, 24 Aug 2017 15:36:11 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E5%8E%BB%E6%8E%89%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E8%BF%9E%E7%BB%AD%E5%87%BA%E7%8E%B0k%E4%B8%AA0%E7%9A%84%E5%AD%90%E4%B8%B2/</guid>
      <description>题目: 给定一个字符串str和一个整数如果str中正好有连续的yt个•0&amp;rsquo;字符出现时，把k个 连续的&amp;rsquo;0’字符去除，返回</description>
    </item>
    
    <item>
      <title>字符串中数字子串的求和</title>
      <link>http://localhost:1313/post/%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E6%95%B0%E5%AD%97%E5%AD%90%E4%B8%B2%E7%9A%84%E6%B1%82%E5%92%8C/</link>
      <pubDate>Thu, 24 Aug 2017 14:00:27 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E6%95%B0%E5%AD%97%E5%AD%90%E4%B8%B2%E7%9A%84%E6%B1%82%E5%92%8C/</guid>
      <description>题目: 给定一个字符串stn求其中全部数字串所代表的数字之和。 忽略小数点字符，例如&amp;rdquo;A1.3&amp;rdquo;,其中包含两个数字1和3</description>
    </item>
    
    <item>
      <title>公式字符串求值</title>
      <link>http://localhost:1313/post/%E5%85%AC%E5%BC%8F%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%B1%82%E5%80%BC/</link>
      <pubDate>Wed, 23 Aug 2017 17:30:52 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E5%85%AC%E5%BC%8F%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%B1%82%E5%80%BC/</guid>
      <description>LeetCode 150. Evaluate Reverse Polish Notation Evaluate the value of an arithmetic expression in Reverse Polish Notation. Valid operators are +, -, *, /. Each operand may be an integer or another expression. Some examples: 1 2 [&amp;#34;2&amp;#34;, &amp;#34;1&amp;#34;, &amp;#34;+&amp;#34;, &amp;#34;3&amp;#34;, &amp;#34;*&amp;#34;] -&amp;gt; ((2 + 1) * 3) -&amp;gt; 9 [&amp;#34;4&amp;#34;, &amp;#34;13&amp;#34;, &amp;#34;5&amp;#34;, &amp;#34;/&amp;#34;, &amp;#34;+&amp;#34;] -&amp;gt; (4 + (13 / 5)) -&amp;gt; 6 解析：用栈来模</description>
    </item>
    
    <item>
      <title>模拟数组/字符串/链表的相加与相乘</title>
      <link>http://localhost:1313/post/%E6%A8%A1%E6%8B%9F%E6%95%B0%E7%BB%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%93%BE%E8%A1%A8%E7%9A%84%E7%9B%B8%E5%8A%A0%E4%B8%8E%E7%9B%B8%E4%B9%98/</link>
      <pubDate>Sun, 25 Jun 2017 02:28:43 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E6%A8%A1%E6%8B%9F%E6%95%B0%E7%BB%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%93%BE%E8%A1%A8%E7%9A%84%E7%9B%B8%E5%8A%A0%E4%B8%8E%E7%9B%B8%E4%B9%98/</guid>
      <description>LeetCode 2. Add Two Numbers You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list. You may assume the two numbers do not contain any leading zero, except the number 0 itself. Input: (2 -&amp;gt; 4 -&amp;gt; 3) + (5 -&amp;gt; 6</description>
    </item>
    
    <item>
      <title>“之”字形翻译字符串</title>
      <link>http://localhost:1313/post/%E4%B9%8B%E5%AD%97%E5%BD%A2%E7%BF%BB%E8%AF%91%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Sun, 25 Jun 2017 02:27:57 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E4%B9%8B%E5%AD%97%E5%BD%A2%E7%BF%BB%E8%AF%91%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>LeetCode 6. ZigZag Conversion 字符串“PAYPALISHIRING”以给定数目的行以之字形模式写入，如下所示：（您可能希望以固定字体显示此模式以更好的易读性） 1 2</description>
    </item>
    
    <item>
      <title>数字字符串转成数字</title>
      <link>http://localhost:1313/post/%E6%95%B0%E5%AD%97%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%88%90%E6%95%B0%E5%AD%97/</link>
      <pubDate>Sun, 25 Jun 2017 02:27:46 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E6%95%B0%E5%AD%97%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%88%90%E6%95%B0%E5%AD%97/</guid>
      <description>LeetCode 7. Reverse Integer Reverse digits of an integer. Example1: x = 123, return 321 Example2: x = -123, return -321 click to show spoilers. Note: The input is assumed to be a 32-bit signed integer. Your function should return 0 when the reversed integer overflows. 解析：需要注意溢出的问题。一个int可以表示数字</description>
    </item>
    
    <item>
      <title>数组、字符串、链表的旋转判定</title>
      <link>http://localhost:1313/post/%E7%BB%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%93%BE%E8%A1%A8%E7%9A%84%E6%97%8B%E8%BD%AC%E5%88%A4%E5%AE%9A/</link>
      <pubDate>Sun, 25 Jun 2017 02:24:25 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E7%BB%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%93%BE%E8%A1%A8%E7%9A%84%E6%97%8B%E8%BD%AC%E5%88%A4%E5%AE%9A/</guid>
      <description>LeetCode 189. Rotate Array Rotate an array of n elements to the right by k steps. For example, with n = 7 and k = 3, the array [1,2,3,4,5,6,7] is rotated to [5,6,7,1,2,3,4]. Note: Try to come up as many solutions as you can, there are at least 3 different ways to solve this problem. 解析： 循环移动数组k位：123</description>
    </item>
    
    <item>
      <title>数字翻译</title>
      <link>http://localhost:1313/post/%E6%95%B0%E5%AD%97%E7%BF%BB%E8%AF%91/</link>
      <pubDate>Sat, 24 Jun 2017 22:12:10 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E6%95%B0%E5%AD%97%E7%BF%BB%E8%AF%91/</guid>
      <description>LeetCode 12. Integer to Roman Given an integer, convert it to a roman numeral. Input is guaranteed to be within the range from 1 to 3999. 解析：先是做了一个表，根据各个位的数字查表，然后组合罗马数字成字符串 1 2 3 4 5 6 7 8 9 10</description>
    </item>
    
    <item>
      <title>判断变形字符串</title>
      <link>http://localhost:1313/post/%E5%88%A4%E6%96%AD%E5%8F%98%E5%BD%A2%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Sat, 24 Jun 2017 22:08:38 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E5%88%A4%E6%96%AD%E5%8F%98%E5%BD%A2%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>LeetCode 383. Ransom Note Given an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom note can be constructed from the magazines ; otherwise, it will return false. Each letter in the magazine string can only be used once in your ransom note. Note: You may assume that both strings contain only lowercase letters. 1 2</description>
    </item>
    
    <item>
      <title>最后一个单词的长度</title>
      <link>http://localhost:1313/post/%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%8D%95%E8%AF%8D%E7%9A%84%E9%95%BF%E5%BA%A6/</link>
      <pubDate>Sat, 24 Jun 2017 22:08:22 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%8D%95%E8%AF%8D%E7%9A%84%E9%95%BF%E5%BA%A6/</guid>
      <description>LeetCode 58. Length of Last Word Given a string s consists of upper/lower-case alphabets and empty space characters ‘ ‘, return the length of last word in the string. If the last word does not exist, return 0. Note: A word is defined as a character sequence consists of non-space characters only. For example, Given s = “Hello World”</description>
    </item>
    
    <item>
      <title>文本排版</title>
      <link>http://localhost:1313/post/%E6%96%87%E6%9C%AC%E6%8E%92%E7%89%88/</link>
      <pubDate>Sat, 24 Jun 2017 22:08:13 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E6%96%87%E6%9C%AC%E6%8E%92%E7%89%88/</guid>
      <description>LeetCode 68. Text Justification Given an array of words and a length L, format the text such that each line has exactly L characters and is fully (left and right) justified. You should pack your words in a greedy approach; that is, pack as many words as you can in each line. Pad extra spaces ‘ ‘ when necessary so that each line has exactly L characters. Extra spaces between</description>
    </item>
    
    <item>
      <title>文件路径</title>
      <link>http://localhost:1313/post/%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84/</link>
      <pubDate>Sat, 24 Jun 2017 22:07:44 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84/</guid>
      <description>LeetCode 71. Simplify Path Given an absolute path for a file (Unix-style), simplify it. For example, path = “/home/“, =&amp;gt; “/home” path = “/a/./b/../../c/“, =&amp;gt; “/c” 解析： 字符串处理，而</description>
    </item>
    
    <item>
      <title>字符串A编辑成字符串B</title>
      <link>http://localhost:1313/post/%E7%AC%A6%E4%B8%B2a%E7%BC%96%E8%BE%91%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2b/</link>
      <pubDate>Sat, 24 Jun 2017 20:32:14 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E7%AC%A6%E4%B8%B2a%E7%BC%96%E8%BE%91%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2b/</guid>
      <description>LeetCode 115. Distinct Subsequences Given a string S and a string T, count the number of distinct subsequences of T in S. A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, “ACE” is a subsequence of “ABC</description>
    </item>
    
    <item>
      <title>IP Address</title>
      <link>http://localhost:1313/post/ip-address/</link>
      <pubDate>Sat, 24 Jun 2017 20:28:40 +0000</pubDate>
      
      <guid>http://localhost:1313/post/ip-address/</guid>
      <description>LeetCode 93. Restore IP Addresses Given a string containing only digits, restore it by returning all possible valid IP address combinations. For example: Given “25525511135”, return [“255.255.11.135”, “255.255.111.</description>
    </item>
    
    <item>
      <title>Word Ladder</title>
      <link>http://localhost:1313/post/word-ladder/</link>
      <pubDate>Sat, 24 Jun 2017 20:26:35 +0000</pubDate>
      
      <guid>http://localhost:1313/post/word-ladder/</guid>
      <description>LeetCode 127. Word Ladder Given two words (beginWord and endWord), and a dictionary’s word list, find the length of shortest transformation sequence from beginWord to endWord, such that: Only one letter can be changed at a time. Each transformed word must exist in the word list. Note that beginWord is not a transformed word. For example, Given: beginWord =</description>
    </item>
    
    <item>
      <title>同构字符串</title>
      <link>http://localhost:1313/post/%E5%90%8C%E6%9E%84%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Sat, 24 Jun 2017 19:51:07 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E5%90%8C%E6%9E%84%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>LeetCode 205. Isomorphic Strings Given two strings s and t, determine if they are isomorphic. Two strings are isomorphic if the characters in s can be replaced to get t. All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself. For example, Given “egg</description>
    </item>
    
    <item>
      <title>密码检查器</title>
      <link>http://localhost:1313/post/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/</link>
      <pubDate>Sat, 24 Jun 2017 15:32:59 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/</guid>
      <description>LeetCode 420. Strong Password Checker A password is considered strong if below conditions are all met: It has at least 6 characters and at most 20 characters. It must contain at least one lowercase letter, at least one uppercase letter, and at least one digit. It must NOT contain three repeating characters in a row (“…aaa…” is weak, but “…aa</description>
    </item>
    
  </channel>
</rss>