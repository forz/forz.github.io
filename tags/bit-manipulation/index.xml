<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bit Manipulation on Forz Blog</title>
    <link>/tags/bit-manipulation/</link>
    <description>Recent content in Bit Manipulation on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 05 Sep 2017 14:21:05 +0000</lastBuildDate>
    
	<atom:link href="/tags/bit-manipulation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>不用sizeof(),如何判断操作系统是16位还是32位</title>
      <link>/post/%E4%B8%8D%E7%94%A8sizeof-%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%98%AF16%E4%BD%8D%E8%BF%98%E6%98%AF32%E4%BD%8D/</link>
      <pubDate>Tue, 05 Sep 2017 14:21:05 +0000</pubDate>
      
      <guid>/post/%E4%B8%8D%E7%94%A8sizeof-%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%98%AF16%E4%BD%8D%E8%BF%98%E6%98%AF32%E4%BD%8D/</guid>
      <description>对0值取反，不同位数下的0值取反，其结果不一样。例如，在32位机器下，按位取反运算，结果为1111111111111111111111111</description>
    </item>
    
    <item>
      <title>利用位运算计算数的绝对值</title>
      <link>/post/%E5%88%A9%E7%94%A8%E4%BD%8D%E8%BF%90%E7%AE%97%E8%AE%A1%E7%AE%97%E6%95%B0%E7%9A%84%E7%BB%9D%E5%AF%B9%E5%80%BC/</link>
      <pubDate>Tue, 05 Sep 2017 12:53:07 +0000</pubDate>
      
      <guid>/post/%E5%88%A9%E7%94%A8%E4%BD%8D%E8%BF%90%E7%AE%97%E8%AE%A1%E7%AE%97%E6%95%B0%E7%9A%84%E7%BB%9D%E5%AF%B9%E5%80%BC/</guid>
      <description></description>
    </item>
    
    <item>
      <title>实现位运算求两个数的平均值</title>
      <link>/post/%E5%AE%9E%E7%8E%B0%E4%BD%8D%E8%BF%90%E7%AE%97%E6%B1%82%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%9A%84%E5%B9%B3%E5%9D%87%E5%80%BC/</link>
      <pubDate>Tue, 05 Sep 2017 12:46:38 +0000</pubDate>
      
      <guid>/post/%E5%AE%9E%E7%8E%B0%E4%BD%8D%E8%BF%90%E7%AE%97%E6%B1%82%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%9A%84%E5%B9%B3%E5%9D%87%E5%80%BC/</guid>
      <description></description>
    </item>
    
    <item>
      <title>汉明距离</title>
      <link>/post/%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB/</link>
      <pubDate>Sun, 27 Aug 2017 19:49:03 +0000</pubDate>
      
      <guid>/post/%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB/</guid>
      <description>LeetCode 461. Hamming Distance The Hamming distance between two integers is the number of positions at which the corresponding bits are different. Given two integers x and y, calculate the Hamming distance. 解析：利用异或来求出不同的位，然后取出每一个1. 1 2 3 4 5 6 7 8 9 10 11 class Solution {</description>
    </item>
    
    <item>
      <title>模拟数组/字符串/链表的相加与相乘</title>
      <link>/post/%E6%A8%A1%E6%8B%9F%E6%95%B0%E7%BB%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%93%BE%E8%A1%A8%E7%9A%84%E7%9B%B8%E5%8A%A0%E4%B8%8E%E7%9B%B8%E4%B9%98/</link>
      <pubDate>Sun, 25 Jun 2017 02:28:43 +0000</pubDate>
      
      <guid>/post/%E6%A8%A1%E6%8B%9F%E6%95%B0%E7%BB%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%93%BE%E8%A1%A8%E7%9A%84%E7%9B%B8%E5%8A%A0%E4%B8%8E%E7%9B%B8%E4%B9%98/</guid>
      <description>LeetCode 2. Add Two Numbers You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list. You may assume the two numbers do not contain any leading zero, except the number 0 itself. Input: (2 -&amp;gt; 4 -&amp;gt; 3) + (5 -&amp;gt; 6</description>
    </item>
    
    <item>
      <title>常见位运算问题</title>
      <link>/post/%E5%B8%B8%E8%A7%81%E4%BD%8D%E8%BF%90%E7%AE%97%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 25 Jun 2017 02:25:37 +0000</pubDate>
      
      <guid>/post/%E5%B8%B8%E8%A7%81%E4%BD%8D%E8%BF%90%E7%AE%97%E9%97%AE%E9%A2%98/</guid>
      <description>LeetCode 191. Number of 1 Bits Write a function that takes an unsigned integer and returns the number of ’1’ bits it has (also known as the Hamming weight). For example, the 32-bit integer ’11’ has binary representation 00000000000000000000000000001011, so the function should return 3. 解析：n=n&amp;amp;(n-1)可以取出</description>
    </item>
    
    <item>
      <title>求某个数是否为2/3/4的幂</title>
      <link>/post/%E6%B1%82%E6%9F%90%E4%B8%AA%E6%95%B0%E6%98%AF%E5%90%A6%E4%B8%BA234%E7%9A%84%E5%B9%82/</link>
      <pubDate>Sun, 25 Jun 2017 02:25:24 +0000</pubDate>
      
      <guid>/post/%E6%B1%82%E6%9F%90%E4%B8%AA%E6%95%B0%E6%98%AF%E5%90%A6%E4%B8%BA234%E7%9A%84%E5%B9%82/</guid>
      <description>LeetCode 231. Power of Two Given an integer, write a function to determine if it is a power of two. 解析：2的幂表示n的只有一个位是“1”，因此使用n&amp;amp;（n-1）== 0的技巧来判断是否是这种情</description>
    </item>
    
    <item>
      <title>查找单独/重复/丢失的元素</title>
      <link>/post/%E6%9F%A5%E6%89%BE%E5%8D%95%E7%8B%AC%E9%87%8D%E5%A4%8D%E4%B8%A2%E5%A4%B1%E7%9A%84%E5%85%83%E7%B4%A0/</link>
      <pubDate>Sat, 24 Jun 2017 23:58:53 +0000</pubDate>
      
      <guid>/post/%E6%9F%A5%E6%89%BE%E5%8D%95%E7%8B%AC%E9%87%8D%E5%A4%8D%E4%B8%A2%E5%A4%B1%E7%9A%84%E5%85%83%E7%B4%A0/</guid>
      <description>LeetCode 136. Single Number Given an array of integers, every element appears twice except for one. Find that single one. Note: Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory? 解析：利用异或运算规律，同一个数异或两次相当于没有异或。本题除了所</description>
    </item>
    
    <item>
      <title>子集</title>
      <link>/post/%E5%AD%90%E9%9B%86/</link>
      <pubDate>Sat, 24 Jun 2017 20:31:54 +0000</pubDate>
      
      <guid>/post/%E5%AD%90%E9%9B%86/</guid>
      <description>LeetCode 78. Subsets Given a set of distinct integers, nums, return all possible subsets. Note: The solution set must not contain duplicate subsets. For example, If nums = [1,2,3], a solution is: 1 2 3 4 5 6 7 8 9 10 [ [3], [1], [2], [1,2,3], [1,3], [2,3], [1,2], [] ] 解析：要求输出所有子集，且输出有序，</description>
    </item>
    
    <item>
      <title>重复的DNA子序列</title>
      <link>/post/%E9%87%8D%E5%A4%8D%E7%9A%84dna%E5%AD%90%E5%BA%8F%E5%88%97/</link>
      <pubDate>Sat, 24 Jun 2017 19:52:16 +0000</pubDate>
      
      <guid>/post/%E9%87%8D%E5%A4%8D%E7%9A%84dna%E5%AD%90%E5%BA%8F%E5%88%97/</guid>
      <description>LeetCode 187. Repeated DNA Sequences All DNA is composed of a series of nucleotides abbreviated as A, C, G, and T, for example: “ACGAATTCCG”. When studying DNA, it is sometimes useful to identify repeated sequences within the DNA. Write a function to find all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule. For</description>
    </item>
    
  </channel>
</rss>