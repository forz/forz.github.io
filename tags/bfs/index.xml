<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BFS on Forz</title>
    <link>http://localhost:1313/forz/tags/bfs/</link>
    <description>Recent content in BFS on Forz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 14 Sep 2017 21:04:37 +0000</lastBuildDate>
    
	<atom:link href="http://localhost:1313/forz/tags/bfs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>查找二叉树的中心节点</title>
      <link>http://localhost:1313/forz/post/%E6%9F%A5%E6%89%BE%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%AD%E5%BF%83%E8%8A%82%E7%82%B9/</link>
      <pubDate>Thu, 14 Sep 2017 21:04:37 +0000</pubDate>
      
      <guid>http://localhost:1313/forz/post/%E6%9F%A5%E6%89%BE%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%AD%E5%BF%83%E8%8A%82%E7%82%B9/</guid>
      <description>LeetCode 310. Minimum Height Trees For a undirected graph with tree characteristics, we can choose any node as the root. The result graph is then a rooted tree. Among all possible rooted trees, those with minimum height are called minimum height trees (MHTs). Given such a graph, write a function to find all the MHTs and return a list of their root labels. Format The graph contains n nodes which</description>
    </item>
    
    <item>
      <title>二叉树的按层打印与ZigZig打印</title>
      <link>http://localhost:1313/forz/post/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%8C%89%E5%B1%82%E6%89%93%E5%8D%B0%E4%B8%8Ezigzig%E6%89%93%E5%8D%B0/</link>
      <pubDate>Sun, 25 Jun 2017 02:21:28 +0000</pubDate>
      
      <guid>http://localhost:1313/forz/post/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%8C%89%E5%B1%82%E6%89%93%E5%8D%B0%E4%B8%8Ezigzig%E6%89%93%E5%8D%B0/</guid>
      <description>LeetCode102. Binary Tree Level Order Traversal Given a binary tree, return the level order traversal of its nodes’ values. (ie, from left to right, level by level). For example: Given binary tree [3,9,20,null,null,15,7], 1 2 3 4 5 3 / \ 9 20 / \ 15 7 return its level order traversal as: 1 2 3 4 5 [ [3], [9,20], [15,7] ] 解析</description>
    </item>
    
    <item>
      <title>容器的盛水量</title>
      <link>http://localhost:1313/forz/post/%E5%AE%B9%E5%99%A8%E7%9A%84%E7%9B%9B%E6%B0%B4%E9%87%8F/</link>
      <pubDate>Sat, 24 Jun 2017 23:57:56 +0000</pubDate>
      
      <guid>http://localhost:1313/forz/post/%E5%AE%B9%E5%99%A8%E7%9A%84%E7%9B%9B%E6%B0%B4%E9%87%8F/</guid>
      <description>LeetCode 11. Container With Most Water Given n non-negative integers a1, a2, …, an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water. Note: You may not slant the container and</description>
    </item>
    
    <item>
      <title>Word Ladder</title>
      <link>http://localhost:1313/forz/post/word-ladder/</link>
      <pubDate>Sat, 24 Jun 2017 20:26:35 +0000</pubDate>
      
      <guid>http://localhost:1313/forz/post/word-ladder/</guid>
      <description>LeetCode 127. Word Ladder Given two words (beginWord and endWord), and a dictionary’s word list, find the length of shortest transformation sequence from beginWord to endWord, such that: Only one letter can be changed at a time. Each transformed word must exist in the word list. Note that beginWord is not a transformed word. For example, Given: beginWord =</description>
    </item>
    
    <item>
      <title>课程安排</title>
      <link>http://localhost:1313/forz/post/%E8%AF%BE%E7%A8%8B%E5%AE%89%E6%8E%92/</link>
      <pubDate>Sat, 24 Jun 2017 19:51:39 +0000</pubDate>
      
      <guid>http://localhost:1313/forz/post/%E8%AF%BE%E7%A8%8B%E5%AE%89%E6%8E%92/</guid>
      <description>LeetCode 207. Course Schedule There are a total of n courses you have to take, labeled from 0 to n - 1. Some courses may have prerequisites, for example to take course 0 you have to first take course 1, which is expressed as a pair: [0,1] Given the total number of courses and a list of prerequisite pairs, is it possible for you to finish all courses? For example:</description>
    </item>
    
  </channel>
</rss>