<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cache on Forz Blog</title>
    <link>/tags/cache/</link>
    <description>Recent content in cache on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 24 Jul 2020 18:29:28 +0000</lastBuildDate>
    
	<atom:link href="/tags/cache/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go中的缓存现状</title>
      <link>/post/go%E4%B8%AD%E7%9A%84%E7%BC%93%E5%AD%98%E7%8E%B0%E7%8A%B6/</link>
      <pubDate>Fri, 24 Jul 2020 18:29:28 +0000</pubDate>
      
      <guid>/post/go%E4%B8%AD%E7%9A%84%E7%BC%93%E5%AD%98%E7%8E%B0%E7%8A%B6/</guid>
      <description>前言 每个数据库都需要一个智能的缓存系统。缓存需要保存最近最频繁访问的内容，并且支持配置一些限制上的配置。 作为一个图形数据库，Dgraph 可以</description>
    </item>
    
    <item>
      <title>设计实现高性能本地内存缓存</title>
      <link>/post/%E8%AE%BE%E8%AE%A1%E5%AE%9E%E7%8E%B0%E9%AB%98%E6%80%A7%E8%83%BD%E6%9C%AC%E5%9C%B0%E5%86%85%E5%AD%98%E7%BC%93%E5%AD%98/</link>
      <pubDate>Fri, 24 Jul 2020 15:57:15 +0000</pubDate>
      
      <guid>/post/%E8%AE%BE%E8%AE%A1%E5%AE%9E%E7%8E%B0%E9%AB%98%E6%80%A7%E8%83%BD%E6%9C%AC%E5%9C%B0%E5%86%85%E5%AD%98%E7%BC%93%E5%AD%98/</guid>
      <description>前言 本地内存缓存是一个在基础软件架构中非常常见的基础设施，也正因其过于常见，以至于平时很少去思考它是如何实现的。在尚未设计缓存系统前，完全没</description>
    </item>
    
  </channel>
</rss>