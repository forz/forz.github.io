<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Promethues on Forz Blog</title>
    <link>/tags/promethues/</link>
    <description>Recent content in Promethues on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 15 Jul 2020 10:11:30 +0000</lastBuildDate>
    
	<atom:link href="/tags/promethues/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>在HTTPAPI中使用PromQL</title>
      <link>/post/%E5%9C%A8httpapi%E4%B8%AD%E4%BD%BF%E7%94%A8promql/</link>
      <pubDate>Wed, 15 Jul 2020 10:11:30 +0000</pubDate>
      
      <guid>/post/%E5%9C%A8httpapi%E4%B8%AD%E4%BD%BF%E7%94%A8promql/</guid>
      <description>在 HTTP API 中使用 PromQL Prometheus 当前稳定的 HTTP API 可以通过 /api/v1 访问。 API 响应格式 Prometheus API 使用了 JSON 格式的响应内容。 当 API 调用成功后将会返回 2xx 的 HTTP 状态码。 反之，当 API 调用失败时</description>
    </item>
    
    <item>
      <title>Prometheus的内置函数</title>
      <link>/post/prometheus%E7%9A%84%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/</link>
      <pubDate>Wed, 15 Jul 2020 10:10:14 +0000</pubDate>
      
      <guid>/post/prometheus%E7%9A%84%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/</guid>
      <description>PromQL 内置函数 Prometheus 提供了其它大量的内置函数，可以对时序数据进行丰富的处理。某些函数有默认的参数，例如：year(v=vector(time()) i</description>
    </item>
    
    <item>
      <title>Prometheus的数据存储</title>
      <link>/post/prometheus%E7%9A%84%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/</link>
      <pubDate>Wed, 15 Jul 2020 10:09:36 +0000</pubDate>
      
      <guid>/post/prometheus%E7%9A%84%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/</guid>
      <description>存储 Prometheus 2.x 默认将时间序列数据库保存在本地磁盘中，同时也可以将数据保存到任意第三方的存储服务中。 本地存储 Prometheus 采用自定义的存储格式将样本数据保存在本</description>
    </item>
    
    <item>
      <title>Promethues的四种指标类型</title>
      <link>/post/promethues%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%8C%87%E6%A0%87%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Tue, 14 Jul 2020 18:28:18 +0000</pubDate>
      
      <guid>/post/promethues%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%8C%87%E6%A0%87%E7%B1%BB%E5%9E%8B/</guid>
      <description>Counter（计数器） Counter 类型代表一种样本数据单调递增的指标，即只增不减，除非监控系统发生了重置。例如，你可以使用 counter 类型的指标来表示服务的请</description>
    </item>
    
    <item>
      <title>Promethues的GoClient使用介绍</title>
      <link>/post/promethues%E7%9A%84goclient%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Tue, 14 Jul 2020 17:21:00 +0000</pubDate>
      
      <guid>/post/promethues%E7%9A%84goclient%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/</guid>
      <description>四种类型 counter 计数器，并且只能增长和重置。例如：一个网站的总访问量，机器的运行时长 gauge 测量值，或瞬时记录值，可以增加，也可以减少。例如：一个视频的</description>
    </item>
    
  </channel>
</rss>