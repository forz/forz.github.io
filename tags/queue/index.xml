<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Queue on Forz Blog</title>
    <link>/tags/queue/</link>
    <description>Recent content in Queue on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 16 Aug 2017 17:33:03 +0000</lastBuildDate><atom:link href="/tags/queue/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>猫狗队列</title>
      <link>/post/%E7%8C%AB%E7%8B%97%E9%98%9F%E5%88%97/</link>
      <pubDate>Wed, 16 Aug 2017 17:33:03 +0000</pubDate>
      
      <guid>/post/%E7%8C%AB%E7%8B%97%E9%98%9F%E5%88%97/</guid>
      <description>题目: 宠物、狗和猫的类如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 public class Pet { private String type ; public Pet(String type) { this.type = type ; } public String getPetType() { return this.type ; } } public class Dog extends Pet{ public</description>
    </item>
    
    <item>
      <title>栈与队列的互相实现</title>
      <link>/post/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97%E7%9A%84%E4%BA%92%E7%9B%B8%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Sun, 25 Jun 2017 02:26:20 +0000</pubDate>
      
      <guid>/post/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97%E7%9A%84%E4%BA%92%E7%9B%B8%E5%AE%9E%E7%8E%B0/</guid>
      <description>LeetCode 225. Implement Stack using Queues Implement the following operations of a stack using queues. push(x) – Push element x onto stack. pop() – Removes the element on top of the stack. top() – Get the top element. empty() – Return whether the stack is empty. Notes: You must use only standard operations of a queue – which means only push to back, peek/pop from front, size, and is empty</description>
    </item>
    
  </channel>
</rss>
