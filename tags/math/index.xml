<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Math on Forz</title>
    <link>http://localhost:1313/forz/tags/math/</link>
    <description>Recent content in Math on Forz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 02 Sep 2017 16:20:21 +0000</lastBuildDate>
    
	<atom:link href="http://localhost:1313/forz/tags/math/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>阶乘相关问题</title>
      <link>http://localhost:1313/forz/post/%E9%98%B6%E4%B9%98%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 02 Sep 2017 16:20:21 +0000</pubDate>
      
      <guid>http://localhost:1313/forz/post/%E9%98%B6%E4%B9%98%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</guid>
      <description>LeetCode 172. Factorial Trailing Zeroes Given an integer n, return the number of trailing zeroes in n!. Note: Your solution should be in logarithmic time complexity. 解析： 这个问题很简单。 因为所有的尾随0来自因子5 2。 计算包含的2和5组成的pair的个数</description>
    </item>
    
    <item>
      <title>从5随机到7随机及其扩展</title>
      <link>http://localhost:1313/forz/post/%E4%BB%8E5%E9%9A%8F%E6%9C%BA%E5%88%B07%E9%9A%8F%E6%9C%BA%E5%8F%8A%E5%85%B6%E6%89%A9%E5%B1%95/</link>
      <pubDate>Sat, 02 Sep 2017 12:31:15 +0000</pubDate>
      
      <guid>http://localhost:1313/forz/post/%E4%BB%8E5%E9%9A%8F%E6%9C%BA%E5%88%B07%E9%9A%8F%E6%9C%BA%E5%8F%8A%E5%85%B6%E6%89%A9%E5%B1%95/</guid>
      <description>题目一 给定一个等概率随机产生1〜5的随机函数rand1To5如下： 1 2 3 public int randlTo5() { return (int) (Math.random() * 5) + 1; } 除此之外，不能使用任何额外的随机机制，请用r</description>
    </item>
    
    <item>
      <title>排成一条线的博弈问题</title>
      <link>http://localhost:1313/forz/post/%E6%8E%92%E6%88%90%E4%B8%80%E6%9D%A1%E7%BA%BF%E7%9A%84%E5%8D%9A%E5%BC%88%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 23 Aug 2017 21:07:22 +0000</pubDate>
      
      <guid>http://localhost:1313/forz/post/%E6%8E%92%E6%88%90%E4%B8%80%E6%9D%A1%E7%BA%BF%E7%9A%84%E5%8D%9A%E5%BC%88%E9%97%AE%E9%A2%98/</guid>
      <description>LintCode Coins in a Line II 有 n 个不同价值的硬币排成一条线。两个参赛者轮流从左边依次拿走 1 或 2 个硬币，直到没有硬币为止。计算两个人分别拿到的硬币总价值，价值</description>
    </item>
    
    <item>
      <title>模拟除法</title>
      <link>http://localhost:1313/forz/post/%E6%A8%A1%E6%8B%9F%E9%99%A4%E6%B3%95/</link>
      <pubDate>Sun, 25 Jun 2017 02:27:26 +0000</pubDate>
      
      <guid>http://localhost:1313/forz/post/%E6%A8%A1%E6%8B%9F%E9%99%A4%E6%B3%95/</guid>
      <description>LeetCode 166. Fraction to Recurring Decimal Given two integers representing the numerator and denominator of a fraction, return the fraction in string format. If the fractional part is repeating, enclose the repeating part in parentheses. For example, Given numerator = 1, denominator = 2, return “0.5”. Given numerator = 2, denominator = 1, return “2”. Given numerator = 2, denominator = 3,</description>
    </item>
    
    <item>
      <title>求幂与开方</title>
      <link>http://localhost:1313/forz/post/%E6%B1%82%E5%B9%82%E4%B8%8E%E5%BC%80%E6%96%B9/</link>
      <pubDate>Sun, 25 Jun 2017 02:25:15 +0000</pubDate>
      
      <guid>http://localhost:1313/forz/post/%E6%B1%82%E5%B9%82%E4%B8%8E%E5%BC%80%E6%96%B9/</guid>
      <description>LeetCode 50. Pow(x, n) Implement pow(x, n). 解析：快速幂，此处需要判断边界值n，如果n为-2^31，那么需要另外设置一个long long变量存储其相反数。0x800000</description>
    </item>
    
    <item>
      <title>与数字的某位相关问题</title>
      <link>http://localhost:1313/forz/post/%E4%B8%8E%E6%95%B0%E5%AD%97%E7%9A%84%E6%9F%90%E4%BD%8D%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 24 Jun 2017 23:59:57 +0000</pubDate>
      
      <guid>http://localhost:1313/forz/post/%E4%B8%8E%E6%95%B0%E5%AD%97%E7%9A%84%E6%9F%90%E4%BD%8D%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</guid>
      <description>LeetCode 233. Number of Digit One Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n. For example: Given n = 13, Return 6, because digit 1 occurred in the following numbers: 1, 10, 11, 12, 13. 解析： 每10个数, 有一个个位是1, 每100</description>
    </item>
    
    <item>
      <title>丑数</title>
      <link>http://localhost:1313/forz/post/%E4%B8%91%E6%95%B0/</link>
      <pubDate>Sat, 24 Jun 2017 23:59:47 +0000</pubDate>
      
      <guid>http://localhost:1313/forz/post/%E4%B8%91%E6%95%B0/</guid>
      <description>LeetCode 263. Ugly Number Write a program to check whether a given number is an ugly number. Ugly numbers are positive numbers whose prime factors only include 2, 3, 5. For example, 6, 8 are ugly while 14 is not ugly since it includes another prime factor 7. Note that 1 is typically treated as an ugly number. 解析： 我们将给定数除以2</description>
    </item>
    
    <item>
      <title>格雷码</title>
      <link>http://localhost:1313/forz/post/%E6%A0%BC%E9%9B%B7%E7%A0%81/</link>
      <pubDate>Sat, 24 Jun 2017 23:58:27 +0000</pubDate>
      
      <guid>http://localhost:1313/forz/post/%E6%A0%BC%E9%9B%B7%E7%A0%81/</guid>
      <description>LeetCode 89. Gray Code The gray code is a binary numeral system where two successive values differ in only one bit. Given a non-negative integer n representing the total number of bits in the code, print the sequence of gray code. A gray code sequence must begin with 0. For example, given n = 2, return [0,1,3,2]. Its gray code sequence is: 1 2 3 4 00 - 0 01</description>
    </item>
    
    <item>
      <title>数字翻译</title>
      <link>http://localhost:1313/forz/post/%E6%95%B0%E5%AD%97%E7%BF%BB%E8%AF%91/</link>
      <pubDate>Sat, 24 Jun 2017 22:12:10 +0000</pubDate>
      
      <guid>http://localhost:1313/forz/post/%E6%95%B0%E5%AD%97%E7%BF%BB%E8%AF%91/</guid>
      <description>LeetCode 12. Integer to Roman Given an integer, convert it to a roman numeral. Input is guaranteed to be within the range from 1 to 3999. 解析：先是做了一个表，根据各个位的数字查表，然后组合罗马数字成字符串 1 2 3 4 5 6 7 8 9 10</description>
    </item>
    
    <item>
      <title>从石堆取石子的博弈问题</title>
      <link>http://localhost:1313/forz/post/%E4%BB%8E%E7%9F%B3%E5%A0%86%E5%8F%96%E7%9F%B3%E5%AD%90%E7%9A%84%E5%8D%9A%E5%BC%88%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 24 Jun 2017 22:11:34 +0000</pubDate>
      
      <guid>http://localhost:1313/forz/post/%E4%BB%8E%E7%9F%B3%E5%A0%86%E5%8F%96%E7%9F%B3%E5%AD%90%E7%9A%84%E5%8D%9A%E5%BC%88%E9%97%AE%E9%A2%98/</guid>
      <description>LeetCode 292. Nim Game You are playing the following Nim Game with your friend: There is a heap of stones on the table, each time one of you take turns to remove 1 to 3 stones. The one who removes the last stone will be the winner. You will take the first turn to remove the stones. Both of you are very clever and have optimal strategies for the game.</description>
    </item>
    
    <item>
      <title>筛选素数</title>
      <link>http://localhost:1313/forz/post/%E7%AD%9B%E9%80%89%E7%B4%A0%E6%95%B0/</link>
      <pubDate>Sat, 24 Jun 2017 19:52:07 +0000</pubDate>
      
      <guid>http://localhost:1313/forz/post/%E7%AD%9B%E9%80%89%E7%B4%A0%E6%95%B0/</guid>
      <description>LeetCode 204. Count Primes Description: Count the number of prime numbers less than a non-negative number, n. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class Solution {//埃拉托斯特尼尼素数筛法 public: int countPrimes(int n) { if (n&amp;lt;=2) return 0;//2以下没有</description>
    </item>
    
    <item>
      <title>特殊数</title>
      <link>http://localhost:1313/forz/post/%E7%89%B9%E6%AE%8A%E6%95%B0/</link>
      <pubDate>Sat, 24 Jun 2017 19:51:48 +0000</pubDate>
      
      <guid>http://localhost:1313/forz/post/%E7%89%B9%E6%AE%8A%E6%95%B0/</guid>
      <description>LeetCode 202. Happy Number Write an algorithm to determine if a number is “happy”. A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which</description>
    </item>
    
    <item>
      <title>求重叠矩形的面积</title>
      <link>http://localhost:1313/forz/post/%E6%B1%82%E9%87%8D%E5%8F%A0%E7%9F%A9%E5%BD%A2%E7%9A%84%E9%9D%A2%E7%A7%AF/</link>
      <pubDate>Sat, 24 Jun 2017 19:51:32 +0000</pubDate>
      
      <guid>http://localhost:1313/forz/post/%E6%B1%82%E9%87%8D%E5%8F%A0%E7%9F%A9%E5%BD%A2%E7%9A%84%E9%9D%A2%E7%A7%AF/</guid>
      <description>LeetCode 223. Rectangle Area Find the total area covered by two rectilinear rectangles in a 2D plane. Each rectangle is defined by its bottom left corner and top right corner as shown in the figure. 解析： 求出两个区域的面积, 然后减去overlapping的区域, 即为所</description>
    </item>
    
    <item>
      <title>开关灯</title>
      <link>http://localhost:1313/forz/post/%E5%BC%80%E5%85%B3%E7%81%AF/</link>
      <pubDate>Sat, 24 Jun 2017 16:11:28 +0000</pubDate>
      
      <guid>http://localhost:1313/forz/post/%E5%BC%80%E5%85%B3%E7%81%AF/</guid>
      <description>LeetCode 319. Bulb Switcher There are n bulbs that are initially off. You first turn on all the bulbs. Then, you turn off every second bulb. On the third round, you toggle every third bulb (turning on if it’s off or turning off if it’s on). For the ith round, you toggle every i bulb. For the nth round, you only toggle the last</description>
    </item>
    
    <item>
      <title>Self Crossing</title>
      <link>http://localhost:1313/forz/post/self-crossing/</link>
      <pubDate>Sat, 24 Jun 2017 16:10:42 +0000</pubDate>
      
      <guid>http://localhost:1313/forz/post/self-crossing/</guid>
      <description>LeetCode 335. Self Crossing You are given an array x of n positive numbers. You start at point (0,0) and moves x[0] metres to the north, then x[1] metres to the west, x[2] metres to the south, x[3] metres to the east and so on. In other words, after each move your direction changes counter-clockwise. Write a one-pass algorithm with O(1) extra space to determine, if your path crosses itself,</description>
    </item>
    
  </channel>
</rss>