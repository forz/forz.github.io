<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>调度器 on Forz Blog</title>
    <link>/tags/%E8%B0%83%E5%BA%A6%E5%99%A8/</link>
    <description>Recent content in 调度器 on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 12 Jul 2019 13:29:52 +0000</lastBuildDate>
    
	<atom:link href="/tags/%E8%B0%83%E5%BA%A6%E5%99%A8/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go的调度器源码剖析-源码实现</title>
      <link>/post/go%E7%9A%84%E8%B0%83%E5%BA%A6%E5%99%A8%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90-%E6%BA%90%E7%A0%81%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Fri, 12 Jul 2019 13:29:52 +0000</pubDate>
      
      <guid>/post/go%E7%9A%84%E8%B0%83%E5%BA%A6%E5%99%A8%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90-%E6%BA%90%E7%A0%81%E5%AE%9E%E7%8E%B0/</guid>
      <description>源码分析 根据源码实现,调度器有如下细节优化: G对象和M对象默认会复用.除P本地的复用链表外,还有全局链表在多个P之间共享. P分为本地队列和全</description>
    </item>
    
    <item>
      <title>Go的调度器源码剖析-基本原理</title>
      <link>/post/go%E7%9A%84%E8%B0%83%E5%BA%A6%E5%99%A8%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90-%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/</link>
      <pubDate>Fri, 05 Jul 2019 16:46:28 +0000</pubDate>
      
      <guid>/post/go%E7%9A%84%E8%B0%83%E5%BA%A6%E5%99%A8%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90-%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/</guid>
      <description>协程 进程时代 最初的计算机上面没有操作系统，更别提进程、线程和协程了。 后来，现代化的计算机有了操作系统，每个程序都是一个进程，但是操作系统在一</description>
    </item>
    
  </channel>
</rss>