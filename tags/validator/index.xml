<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>validator on Forz Blog</title>
    <link>/tags/validator/</link>
    <description>Recent content in validator on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 14 Dec 2019 16:36:40 +0000</lastBuildDate><atom:link href="/tags/validator/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go中的参数验证:validator</title>
      <link>/post/go%E4%B8%AD%E7%9A%84%E5%8F%82%E6%95%B0%E9%AA%8C%E8%AF%81validator/</link>
      <pubDate>Sat, 14 Dec 2019 16:36:40 +0000</pubDate>
      
      <guid>/post/go%E4%B8%AD%E7%9A%84%E5%8F%82%E6%95%B0%E9%AA%8C%E8%AF%81validator/</guid>
      <description>快速使用 先安装： 1 go get github.com/go-playground/validator/v10 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/go-playground/validator/v10&amp;#34; ) type User struct { Name string `validate:&amp;#34;min=6,max=10&amp;#34;` Age int `validate:&amp;#34;min=1,max=100&amp;#34;` } func main() { validate := validator.New() u1 := User{Name: &amp;#34;lidajun&amp;#34;, Age: 18} err := validate.Struct(u1) fmt.Println(err)</description>
    </item>
    
    <item>
      <title>package:validator.v9</title>
      <link>/post/packagevalidator.v9/</link>
      <pubDate>Thu, 12 Dec 2019 20:43:20 +0000</pubDate>
      
      <guid>/post/packagevalidator.v9/</guid>
      <description>标准库 package validator import &amp;ldquo;gopkg.in/go-playground/validator.v9&amp;rdquo; Package validator 基于标签对结构和单个字段实现值验证. 它还可以处理嵌套结构的跨字段和跨结构验证，并具有深入研究任何类型的数组和映射的能力。 查</description>
    </item>
    
  </channel>
</rss>
