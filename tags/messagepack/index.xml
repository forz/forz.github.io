<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>MessagePack on Forz Blog</title>
    <link>/tags/messagepack/</link>
    <description>Recent content in MessagePack on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 02 Aug 2020 18:46:32 +0000</lastBuildDate><atom:link href="/tags/messagepack/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>序列化:vmihailenco-Msgpack</title>
      <link>/post/%E5%BA%8F%E5%88%97%E5%8C%96vmihailenco-msgpack/</link>
      <pubDate>Sun, 02 Aug 2020 18:46:32 +0000</pubDate>
      
      <guid>/post/%E5%BA%8F%E5%88%97%E5%8C%96vmihailenco-msgpack/</guid>
      <description>func Marshal 1 func Marshal(v interface{}) ([]byte, error) Marshal 返回v的MessagePack编码。 Example Code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 type Item struct { Foo string } b, err := msgpack.Marshal(&amp;amp;Item{Foo: &amp;#34;bar&amp;#34;}) if err != nil { panic(err) } var item Item err = msgpack.Unmarshal(b, &amp;amp;item)</description>
    </item>
    
    <item>
      <title>序列化:MessagePack介绍</title>
      <link>/post/%E5%BA%8F%E5%88%97%E5%8C%96messagepack%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Sun, 02 Aug 2020 17:05:08 +0000</pubDate>
      
      <guid>/post/%E5%BA%8F%E5%88%97%E5%8C%96messagepack%E4%BB%8B%E7%BB%8D/</guid>
      <description>介绍 MessagePack是一种高效的二进制序列化格式。它允许您像JSON一样在多个语言之间交换数据。但是，它更快并且更小。小整数被编码为一</description>
    </item>
    
  </channel>
</rss>
