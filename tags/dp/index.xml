<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DP on Forz Blog</title>
    <link>http://localhost:1313/tags/DP/</link>
    <description>Recent content in DP on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 03 Sep 2017 21:43:56 +0000</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/DP/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>画匠问题</title>
      <link>http://localhost:1313/post/%E7%94%BB%E5%8C%A0%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 03 Sep 2017 21:43:56 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E7%94%BB%E5%8C%A0%E9%97%AE%E9%A2%98/</guid>
      <description>题目: 给定一个整型数组arr,数组中的每个值都为正数，表示完成一幅画作需要的时间，再给定一个整数num表示画匠的数量，每个画匠只能画连在一起</description>
    </item>
    
    <item>
      <title>丢棋子问题</title>
      <link>http://localhost:1313/post/%E4%B8%A2%E6%A3%8B%E5%AD%90%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 03 Sep 2017 19:11:19 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E4%B8%A2%E6%A3%8B%E5%AD%90%E9%97%AE%E9%A2%98/</guid>
      <description>题目: 举例: 解析: map[i][j]的意义为i个棋子扔j次最多搞定的楼数。 1 2 3 4 5 6 0 1 2 3 4 5 6 7 8 9 10 -&amp;gt;次数 1 0 1 2 3 4 5 6 7</description>
    </item>
    
    <item>
      <title>字符串切分</title>
      <link>http://localhost:1313/post/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%87%E5%88%86/</link>
      <pubDate>Wed, 23 Aug 2017 14:46:27 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%87%E5%88%86/</guid>
      <description>数字字符串转换为字母组合的种数 给定一个字符串str, str全部由数字字符组成，如果str中某一个或某相邻两个字符组 成的子串值在1〜26之间，</description>
    </item>
    
    <item>
      <title>字符串交错组成</title>
      <link>http://localhost:1313/post/%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%BA%A4%E9%94%99%E7%BB%84%E6%88%90/</link>
      <pubDate>Tue, 22 Aug 2017 22:44:02 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%BA%A4%E9%94%99%E7%BB%84%E6%88%90/</guid>
      <description>LeetCode 97. Interleaving String Given s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2. For example, Given: s1 = “aabcc”, s2 = “dbbca”, When s3 = “aadbbcbcac”, return true. When s3 = “aadbb</description>
    </item>
    
    <item>
      <title>最长公共子序列/子串</title>
      <link>http://localhost:1313/post/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97%E5%AD%90%E4%B8%B2/</link>
      <pubDate>Tue, 22 Aug 2017 17:42:36 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97%E5%AD%90%E4%B8%B2/</guid>
      <description>最长公共子序列 题目: 给定两个字符串str1和str2,返回两个字符串的最长公共子序列。 解析: 如果str1的长度为M，str2的长度为N,生成</description>
    </item>
    
    <item>
      <title>子数组的最大累加和/累乘积</title>
      <link>http://localhost:1313/post/%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E7%B4%AF%E5%8A%A0%E5%92%8C%E7%B4%AF%E4%B9%98%E7%A7%AF/</link>
      <pubDate>Sun, 25 Jun 2017 00:00:10 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E7%B4%AF%E5%8A%A0%E5%92%8C%E7%B4%AF%E4%B9%98%E7%A7%AF/</guid>
      <description>LeetCode 53. Maximum Subarray Find the contiguous subarray within an array (containing at least one number) which has the largest sum. For example, given the array [-2,1,-3,4,-1,2,1,-5,4], the contiguous subarray [4,-1,2,1] has the largest sum = 6. 解析：动态规划 每个元素有2种选择：加入之前的连续子序列；创建一个新</description>
    </item>
    
    <item>
      <title>正则表达式匹配</title>
      <link>http://localhost:1313/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D/</link>
      <pubDate>Sat, 24 Jun 2017 23:58:16 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D/</guid>
      <description>LeetCode 44. Wildcard Matching Implement wildcard pattern matching with support for ‘?’ and ‘*’. ‘?’ Matches any single character. ‘*’ Matches any sequence of characters (including the empty sequence). The matching should cover the entire input string (not partial). The function prototype should be: bool isMatch(const char s, const char p) Some examples: 1 2 3 4 5 6 7 isMatch(&amp;#34;aa&amp;#34;,&amp;#34;a&amp;#34;)</description>
    </item>
    
    <item>
      <title>括号匹配</title>
      <link>http://localhost:1313/post/%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D/</link>
      <pubDate>Sat, 24 Jun 2017 22:12:01 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D/</guid>
      <description>括号字符的有效性 给定一个字符串str,判断是不是整体有效的括号字符串。 解析: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public static boolean isValid(String str) { if (str == null || str.equals(&amp;#34;&amp;#34;)) {</description>
    </item>
    
    <item>
      <title>跳跃游戏</title>
      <link>http://localhost:1313/post/%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</link>
      <pubDate>Sat, 24 Jun 2017 22:08:56 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</guid>
      <description>LeetCode 55. Jump Game Given an array of non-negative integers, you are initially positioned at the first index of the array. Each element in the array represents your maximum jump length at that position. Determine if you are able to reach the last index. For example: A = [2,3,1,1,4], return true. A = [3,2,1,0,4], return false. 解析：设最远距离为reach</description>
    </item>
    
    <item>
      <title>路径问题</title>
      <link>http://localhost:1313/post/%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 24 Jun 2017 22:08:03 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/</guid>
      <description>LeetCode 62. Unique Paths A robot is located at the top-left corner of a m x n grid (marked ‘Start’ in the diagram below). The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked ‘Finish’ in the diagram below). How</description>
    </item>
    
    <item>
      <title>乱序字符串</title>
      <link>http://localhost:1313/post/%E4%B9%B1%E5%BA%8F%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Sat, 24 Jun 2017 20:29:19 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E4%B9%B1%E5%BA%8F%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>LeetCode 87. Scramble String Given a string s1, we may represent it as a binary tree by partitioning it to two non-empty substrings recursively. Below is one possible representation of s1 = “great”: 1 2 3 4 5 6 7 great / \ gr eat / \ / \ g r e at / \ a t To scramble the string, we may</description>
    </item>
    
    <item>
      <title>最大区域面积</title>
      <link>http://localhost:1313/post/%E6%9C%80%E5%A4%A7%E5%8C%BA%E5%9F%9F%E9%9D%A2%E7%A7%AF/</link>
      <pubDate>Sat, 24 Jun 2017 20:29:09 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E6%9C%80%E5%A4%A7%E5%8C%BA%E5%9F%9F%E9%9D%A2%E7%A7%AF/</guid>
      <description>LeetCode 84. Largest Rectangle in Histogram Given n non-negative integers representing the histogram’s bar height where the width of each bar is 1, find the area of largest rectangle in the histogram. Above is a histogram where width of each bar is 1, given height = [2,1,5,6,2,3]. The largest rectangle is shown in the shaded area, which has area =</description>
    </item>
    
    <item>
      <title>统计和生成所有不同的二叉树</title>
      <link>http://localhost:1313/post/%E7%BB%9F%E8%AE%A1%E5%92%8C%E7%94%9F%E6%88%90%E6%89%80%E6%9C%89%E4%B8%8D%E5%90%8C%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
      <pubDate>Sat, 24 Jun 2017 20:29:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E7%BB%9F%E8%AE%A1%E5%92%8C%E7%94%9F%E6%88%90%E6%89%80%E6%9C%89%E4%B8%8D%E5%90%8C%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
      <description>LeetCode 96. Unique Binary Search Trees Given n, how many structurally unique BST’s (binary search trees) that store values 1…n? For example, Given n = 3, there are a total of 5 unique BST’s. 1 2 3 4 5 1 3 3 2 1 \ / / / \ \ 3 2 1 1 3 2 / /</description>
    </item>
    
    <item>
      <title>添加括号或运算符进行计算</title>
      <link>http://localhost:1313/post/%E6%B7%BB%E5%8A%A0%E6%8B%AC%E5%8F%B7%E6%88%96%E8%BF%90%E7%AE%97%E7%AC%A6%E8%BF%9B%E8%A1%8C%E8%AE%A1%E7%AE%97/</link>
      <pubDate>Sat, 24 Jun 2017 20:28:04 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E6%B7%BB%E5%8A%A0%E6%8B%AC%E5%8F%B7%E6%88%96%E8%BF%90%E7%AE%97%E7%AC%A6%E8%BF%9B%E8%A1%8C%E8%AE%A1%E7%AE%97/</guid>
      <description>LeetCode 494. Target Sum You are given a list of non-negative integers, a1, a2, …, an, and a target, S. Now you have 2 symbols + and -. For each integer, you should choose one from + and - as its new symbol. Find out how many ways to assign symbols to make sum of integers equal to target S. Example 1: 1 2 Input: nums is [1, 1,</description>
    </item>
    
    <item>
      <title>购买股票问题</title>
      <link>http://localhost:1313/post/%E8%B4%AD%E4%B9%B0%E8%82%A1%E7%A5%A8%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 24 Jun 2017 20:26:45 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E8%B4%AD%E4%B9%B0%E8%82%A1%E7%A5%A8%E9%97%AE%E9%A2%98/</guid>
      <description>LeetCode 121. Best Time to Buy and Sell Stock Say you have an array for which the ith element is the price of a given stock on day i. If you were only permitted to complete at most one transaction (ie, buy one and sell one share of the stock), design an algorithm to find the maximum profit. Example 1: 1 2 Input: [7, 1, 5, 3, 6, 4] Output:</description>
    </item>
    
    <item>
      <title>最长上升子序列</title>
      <link>http://localhost:1313/post/%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/</link>
      <pubDate>Sat, 24 Jun 2017 20:26:24 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/</guid>
      <description>LeetCode 300. Longest Increasing Subsequence Given an unsorted array of integers, find the length of longest increasing subsequence. For example, Given [10, 9, 2, 5, 3, 7, 101, 18], The longest increasing subsequence is [2, 3, 7, 101], therefore the length is 4. Note that there may be more than one LIS combination, it is only necessary for you to return the length. Your algorithm should run in O(n2) complexity.</description>
    </item>
    
    <item>
      <title>查找一条直线上的最多点个数</title>
      <link>http://localhost:1313/post/%E6%9F%A5%E6%89%BE%E4%B8%80%E6%9D%A1%E7%9B%B4%E7%BA%BF%E4%B8%8A%E7%9A%84%E6%9C%80%E5%A4%9A%E7%82%B9%E4%B8%AA%E6%95%B0/</link>
      <pubDate>Sat, 24 Jun 2017 19:50:25 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E6%9F%A5%E6%89%BE%E4%B8%80%E6%9D%A1%E7%9B%B4%E7%BA%BF%E4%B8%8A%E7%9A%84%E6%9C%80%E5%A4%9A%E7%82%B9%E4%B8%AA%E6%95%B0/</guid>
      <description>LeetCode 149. Max Points on a Line Given n points on a 2D plane, find the maximum number of points that lie on the same straight line. 解析： 坑点1 如果直线是和y轴平行的，那么不能直接用(y1-y2)/(x1-x2)表示斜</description>
    </item>
    
    <item>
      <title>区间查询问题</title>
      <link>http://localhost:1313/post/%E5%8C%BA%E9%97%B4%E6%9F%A5%E8%AF%A2%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 24 Jun 2017 16:11:52 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E5%8C%BA%E9%97%B4%E6%9F%A5%E8%AF%A2%E9%97%AE%E9%A2%98/</guid>
      <description>LeetCode 303. Range Sum Query - Immutable Given an integer array nums, find the sum of the elements between indices i and j (i ≤ j), inclusive. Example: Given nums = [-2, 0, 3, -5, 2, -1] sumRange(0, 2) -&amp;gt; 1 sumRange(2, 5) -&amp;gt; -1 sumRange(0, 5) -&amp;gt; -3 Note: You may assume that the array does not change. There are many calls to sumRange function. 解析： 数</description>
    </item>
    
    <item>
      <title>换钱</title>
      <link>http://localhost:1313/post/%E6%8D%A2%E9%92%B1/</link>
      <pubDate>Sat, 24 Jun 2017 16:11:15 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E6%8D%A2%E9%92%B1/</guid>
      <description>LeetCode 322. Coin Change You are given coins of different denominations and a total amount of money amount. Write a function to compute the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return -1. Example 1: coins = [1, 2, 5], amount = 11 return 3 (11 = 5 + 5</description>
    </item>
    
    <item>
      <title>Pacific Atlantic Water Flow</title>
      <link>http://localhost:1313/post/Pacific-Atlantic-Water-Flow/</link>
      <pubDate>Sat, 24 Jun 2017 15:34:21 +0000</pubDate>
      
      <guid>http://localhost:1313/post/Pacific-Atlantic-Water-Flow/</guid>
      <description>LeetCode 417. Pacific Atlantic Water Flow A sequence of number is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same. For example, these are arithmetic sequence: 1 2 3 1, 3, 5, 7, 9 7, 7, 7, 7 3, -1, -5, -9 The following sequence is not arithmetic. 1 1, 1, 2, 5, 7 A zero-indexed array</description>
    </item>
    
  </channel>
</rss>