<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>一致性哈希 on Forz Blog</title>
    <link>/tags/%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8C/</link>
    <description>Recent content in 一致性哈希 on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 09 Oct 2019 21:03:19 +0000</lastBuildDate>
    
	<atom:link href="/tags/%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8C/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>一致性哈希算法-Maglev算法</title>
      <link>/post/%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95-maglev%E7%AE%97%E6%B3%95/</link>
      <pubDate>Wed, 09 Oct 2019 21:03:19 +0000</pubDate>
      
      <guid>/post/%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95-maglev%E7%AE%97%E6%B3%95/</guid>
      <description>Maglev一致性哈希算法 Maglev哈希算法来自 Google ， 在其2016年发布的一篇论文中[1]， 介绍了自2008年起服役的网络负载均衡器Magl</description>
    </item>
    
    <item>
      <title>一致性哈希算法-跳跃一致性哈希法</title>
      <link>/post/%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95-%E8%B7%B3%E8%B7%83%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8C%E6%B3%95/</link>
      <pubDate>Wed, 09 Oct 2019 21:03:05 +0000</pubDate>
      
      <guid>/post/%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95-%E8%B7%B3%E8%B7%83%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8C%E6%B3%95/</guid>
      <description>算法内容 对于分布式存储系统，当一个节点失效时，我们并不期望它被移除，而是使用备份节点替换它，或者将它恢复起来，因为我们不期望丢掉它上面的数据</description>
    </item>
    
    <item>
      <title>一致性哈希算法-哈希环法</title>
      <link>/post/%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95-%E5%93%88%E5%B8%8C%E7%8E%AF%E6%B3%95/</link>
      <pubDate>Wed, 09 Oct 2019 21:02:54 +0000</pubDate>
      
      <guid>/post/%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95-%E5%93%88%E5%B8%8C%E7%8E%AF%E6%B3%95/</guid>
      <description>哈希环法的神秘面纱 哈希环法也是使用取模的方法，只是，刚才描述的取模法是对服务器的数量进行取模，而哈希环法是对$2^{32}$取模，什么意思呢</description>
    </item>
    
    <item>
      <title>一致性哈希算法概论</title>
      <link>/post/%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95%E6%A6%82%E8%AE%BA/</link>
      <pubDate>Wed, 09 Oct 2019 20:03:19 +0000</pubDate>
      
      <guid>/post/%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95%E6%A6%82%E8%AE%BA/</guid>
      <description>如何代理一个简单的kvdb？ 假如我们有一个简单的kvdb (key-value-database)， 它支持两个简单的操作： 由于单节点系统的服务</description>
    </item>
    
  </channel>
</rss>