<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Greedy on Forz Blog</title>
    <link>/tags/greedy/</link>
    <description>Recent content in Greedy on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 24 Jun 2017 22:09:05 +0000</lastBuildDate>
    
	<atom:link href="/tags/greedy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>组合</title>
      <link>/post/%E7%BB%84%E5%90%88/</link>
      <pubDate>Sat, 24 Jun 2017 22:09:05 +0000</pubDate>
      
      <guid>/post/%E7%BB%84%E5%90%88/</guid>
      <description>LeetCode 39. Combination Sum Given a set of candidate numbers &amp;copy; (without duplicates) and a target number (T), find all unique combinations in C where the candidate numbers sums to T. The same repeated number may be chosen from C unlimited number of times. Note: All numbers (including target) will be positive integers. The solution set must not contain duplicate combinations. For example, given candidate set [2, 3, 6, 7]</description>
    </item>
    
    <item>
      <title>跳跃游戏</title>
      <link>/post/%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</link>
      <pubDate>Sat, 24 Jun 2017 22:08:56 +0000</pubDate>
      
      <guid>/post/%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</guid>
      <description>LeetCode 55. Jump Game Given an array of non-negative integers, you are initially positioned at the first index of the array. Each element in the array represents your maximum jump length at that position. Determine if you are able to reach the last index. For example: A = [2,3,1,1,4], return true. A = [3,2,1,0,4], return false. 解析：设最远距离为reach</description>
    </item>
    
    <item>
      <title>最长上升子序列</title>
      <link>/post/%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/</link>
      <pubDate>Sat, 24 Jun 2017 20:26:24 +0000</pubDate>
      
      <guid>/post/%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/</guid>
      <description>LeetCode 300. Longest Increasing Subsequence Given an unsorted array of integers, find the length of longest increasing subsequence. For example, Given [10, 9, 2, 5, 3, 7, 101, 18], The longest increasing subsequence is [2, 3, 7, 101], therefore the length is 4. Note that there may be more than one LIS combination, it is only necessary for you to return the length. Your algorithm should run in O(n2) complexity.</description>
    </item>
    
    <item>
      <title>134. Gas Station</title>
      <link>/post/gas-station/</link>
      <pubDate>Sat, 24 Jun 2017 20:26:00 +0000</pubDate>
      
      <guid>/post/gas-station/</guid>
      <description>LeetCode 134. Gas Station There are N gas stations along a circular route, where the amount of gas at station i is gas[i]. You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1). You begin the journey with an empty tank at one of the gas stations. Return the starting gas stat</description>
    </item>
    
    <item>
      <title>分糖果问题</title>
      <link>/post/%E5%88%86%E7%B3%96%E6%9E%9C%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 24 Jun 2017 20:25:50 +0000</pubDate>
      
      <guid>/post/%E5%88%86%E7%B3%96%E6%9E%9C%E9%97%AE%E9%A2%98/</guid>
      <description>LeetCode 135. Candy There are N children standing in a line. Each child is assigned a rating value. You are giving candies to these children subjected to the following requirements: Each child must have at least one candy. Children with a higher rating get more candies than their neighbors. What is the minimum candies you must give? 解析： 先引入爬坡和下坡的概</description>
    </item>
    
    <item>
      <title>Queue Reconstruction by Height</title>
      <link>/post/queue-reconstruction-by-height/</link>
      <pubDate>Sat, 24 Jun 2017 16:11:38 +0000</pubDate>
      
      <guid>/post/queue-reconstruction-by-height/</guid>
      <description>LeetCode 406. Queue Reconstruction by Height Suppose you have a random list of people standing in a queue. Each person is described by a pair of integers (h, k), where h is the height of the person and k is the number of people in front of this person who have a height greater than or equal to h. Write an algorithm to reconstruct the queue. Note: The number of</description>
    </item>
    
    <item>
      <title>Patching Array</title>
      <link>/post/patching-array/</link>
      <pubDate>Sat, 24 Jun 2017 16:11:04 +0000</pubDate>
      
      <guid>/post/patching-array/</guid>
      <description>LeetCode 330. Patching Array Given a sorted positive integer array nums and an integer n, add/patch elements to the array such that any number in range [1, n] inclusive can be formed by the sum of some elements in the array. Return the minimum number of patches required. Example 1: 1 2 nums = [1, 3], n = 6 Return 1. Combinations of nums are [1], [3], [1,3], which form</description>
    </item>
    
    <item>
      <title>密码检查器</title>
      <link>/post/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/</link>
      <pubDate>Sat, 24 Jun 2017 15:32:59 +0000</pubDate>
      
      <guid>/post/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/</guid>
      <description>LeetCode 420. Strong Password Checker A password is considered strong if below conditions are all met: It has at least 6 characters and at most 20 characters. It must contain at least one lowercase letter, at least one uppercase letter, and at least one digit. It must NOT contain three repeating characters in a row (“…aaa…” is weak, but “…aa</description>
    </item>
    
  </channel>
</rss>