<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>redis on Forz Blog</title>
    <link>/tags/redis/</link>
    <description>Recent content in redis on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 09 Jun 2020 18:12:50 +0000</lastBuildDate><atom:link href="/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>缓存穿透、缓存击穿、缓存雪崩</title>
      <link>/post/%E7%BC%93%E5%AD%98%E7%A9%BF%E9%80%8F%E7%BC%93%E5%AD%98%E5%87%BB%E7%A9%BF%E7%BC%93%E5%AD%98%E9%9B%AA%E5%B4%A9/</link>
      <pubDate>Tue, 09 Jun 2020 18:12:50 +0000</pubDate>
      
      <guid>/post/%E7%BC%93%E5%AD%98%E7%A9%BF%E9%80%8F%E7%BC%93%E5%AD%98%E5%87%BB%E7%A9%BF%E7%BC%93%E5%AD%98%E9%9B%AA%E5%B4%A9/</guid>
      <description>缓存穿透 什么是缓存穿透 正常情况下，查询的数据都存在，如果请求一个不存在的数据，也就是缓存和数据库都查不到这个数据，每次都会去数据库查询，这种</description>
    </item>
    
    <item>
      <title>Redis开发规范</title>
      <link>/post/redis%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/</link>
      <pubDate>Sat, 06 Jun 2020 22:50:09 +0000</pubDate>
      
      <guid>/post/redis%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/</guid>
      <description>一、键值设计 1. key名设计 (1)【建议】: 可读性和可管理性 以业务名(或数据库名)为前缀(防止key冲突)，用冒号分隔，比如业务名:表名:id</description>
    </item>
    
    <item>
      <title>用redis实现分布式锁</title>
      <link>/post/%E7%94%A8redis%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</link>
      <pubDate>Tue, 17 Sep 2019 15:49:58 +0000</pubDate>
      
      <guid>/post/%E7%94%A8redis%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</guid>
      <description>单实例Redis 一个Go的实现：https://github.com/bsm/redislock (基于go-redis) 使用方法: 1 2 3 4 5</description>
    </item>
    
  </channel>
</rss>
