<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>k8s on Forz Blog</title>
    <link>/tags/k8s/</link>
    <description>Recent content in k8s on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 22 Feb 2021 17:48:28 +0000</lastBuildDate>
    
	<atom:link href="/tags/k8s/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Grpc在k8s集群中的负载均衡</title>
      <link>/post/grpc%E5%9C%A8k8s%E9%9B%86%E7%BE%A4%E4%B8%AD%E7%9A%84%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</link>
      <pubDate>Mon, 22 Feb 2021 17:48:28 +0000</pubDate>
      
      <guid>/post/grpc%E5%9C%A8k8s%E9%9B%86%E7%BE%A4%E4%B8%AD%E7%9A%84%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</guid>
      <description>背景 很多刚刚接触 gRPC 的用户，通常会惊讶于 Kubernetes 默认提供的负载均衡对于 gRPC 来说无法实现开箱即用的效果。比如，将一个简单的基于 Node.js 实现的 gRPC 微服务部署在 Kubernetes 后</description>
    </item>
    
    <item>
      <title>Nginx Ingress如何负载grpc</title>
      <link>/post/nginx-ingress%E5%A6%82%E4%BD%95%E8%B4%9F%E8%BD%BDgrpc/</link>
      <pubDate>Mon, 22 Feb 2021 17:31:40 +0000</pubDate>
      
      <guid>/post/nginx-ingress%E5%A6%82%E4%BD%95%E8%B4%9F%E8%BD%BDgrpc/</guid>
      <description>概述 一般情况下，我们的系统对外暴露HTTP/HTTPS的接口，内部使用rpc(GRPC)通讯，这时GRPC在服务之间通过service访问，</description>
    </item>
    
  </channel>
</rss>