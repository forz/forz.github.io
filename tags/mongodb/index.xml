<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MongoDB on Forz Blog</title>
    <link>/tags/mongodb/</link>
    <description>Recent content in MongoDB on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 27 Mar 2020 18:47:35 +0000</lastBuildDate>
    
	<atom:link href="/tags/mongodb/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MongoDB的事务实现解析</title>
      <link>/post/mongodb%E7%9A%84%E4%BA%8B%E5%8A%A1%E5%AE%9E%E7%8E%B0%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Fri, 27 Mar 2020 18:47:35 +0000</pubDate>
      
      <guid>/post/mongodb%E7%9A%84%E4%BA%8B%E5%8A%A1%E5%AE%9E%E7%8E%B0%E8%A7%A3%E6%9E%90/</guid>
      <description>Session Session 是 MongoDB 3.6 版本引入的概念，引入这个特性主要就是为实现多文档事务做准备。Session 本质上就是一个「上下文」。 在以前的版本，MongoDB 只</description>
    </item>
    
    <item>
      <title>Journal与oplog</title>
      <link>/post/journal%E4%B8%8Eoplog/</link>
      <pubDate>Fri, 27 Mar 2020 16:52:07 +0000</pubDate>
      
      <guid>/post/journal%E4%B8%8Eoplog/</guid>
      <description>journal journal 是 MongoDB 存储引擎层的概念，目前 MongoDB主要支持 mmapv1、wiredtiger、mongorocks 等存储引擎，都支持配置journ</description>
    </item>
    
    <item>
      <title>MongoDB的事务机制介绍</title>
      <link>/post/mongodb%E7%9A%84%E4%BA%8B%E5%8A%A1%E6%9C%BA%E5%88%B6%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Fri, 27 Mar 2020 16:00:16 +0000</pubDate>
      
      <guid>/post/mongodb%E7%9A%84%E4%BA%8B%E5%8A%A1%E6%9C%BA%E5%88%B6%E4%BB%8B%E7%BB%8D/</guid>
      <description>前言 MongoDB虽然已经在4.2开始全面支持了多文档事务，但并不代表大家应该毫无节制地使用它。相反，对事务的使用原则应该是：能不用尽量不用</description>
    </item>
    
    <item>
      <title>读事务:ReadConcern</title>
      <link>/post/%E8%AF%BB%E4%BA%8B%E5%8A%A1readconcern/</link>
      <pubDate>Thu, 26 Mar 2020 23:53:52 +0000</pubDate>
      
      <guid>/post/%E8%AF%BB%E4%BA%8B%E5%8A%A1readconcern/</guid>
      <description>综述 在读取数据的过程中我们需要关注以下两个问题 从哪里读？关注数据节点位置 什么样的数据可以读？关注数据的隔离性 第一个问题是是由 readPreference 来解決 第二个问</description>
    </item>
    
    <item>
      <title>写事务:WriteConcern</title>
      <link>/post/%E5%86%99%E4%BA%8B%E5%8A%A1writeconcern/</link>
      <pubDate>Thu, 26 Mar 2020 17:10:36 +0000</pubDate>
      
      <guid>/post/%E5%86%99%E4%BA%8B%E5%8A%A1writeconcern/</guid>
      <description>WriteConcern write Concern 決定一个写操作落到多少个节点上オ算成功。包括以下3个字段: { w: &amp;lt;value&amp;gt;, j: &amp;lt;boolean&amp;gt;, wtimeout: &amp;lt;number&amp;gt; } MongoDB支持的WriteConncern选项如下 w选项</description>
    </item>
    
    <item>
      <title>mongo-go-driver使用总结</title>
      <link>/post/mongo-go-driver%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 16 Jul 2019 16:38:41 +0000</pubDate>
      
      <guid>/post/mongo-go-driver%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</guid>
      <description>创建main 创建文件main.go并导入bson，mongo和mongo/options包： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 package main</description>
    </item>
    
  </channel>
</rss>