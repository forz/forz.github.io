<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MongoDB on Forz Blog</title>
    <link>/tags/mongodb/</link>
    <description>Recent content in MongoDB on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 13 May 2020 15:45:55 +0000</lastBuildDate>
    
	<atom:link href="/tags/mongodb/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MongoDB的投影运算符</title>
      <link>/post/mongodb%E7%9A%84%E6%8A%95%E5%BD%B1%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Wed, 13 May 2020 15:45:55 +0000</pubDate>
      
      <guid>/post/mongodb%E7%9A%84%E6%8A%95%E5%BD%B1%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description></description>
    </item>
    
    <item>
      <title>MongoDB的数组查询运算符</title>
      <link>/post/mongodb%E7%9A%84%E6%95%B0%E7%BB%84%E6%9F%A5%E8%AF%A2%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Wed, 13 May 2020 15:45:43 +0000</pubDate>
      
      <guid>/post/mongodb%E7%9A%84%E6%95%B0%E7%BB%84%E6%9F%A5%E8%AF%A2%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description></description>
    </item>
    
    <item>
      <title>MongoDB的评估查询运算符</title>
      <link>/post/mongodb%E7%9A%84%E8%AF%84%E4%BC%B0%E6%9F%A5%E8%AF%A2%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Wed, 13 May 2020 15:45:30 +0000</pubDate>
      
      <guid>/post/mongodb%E7%9A%84%E8%AF%84%E4%BC%B0%E6%9F%A5%E8%AF%A2%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description></description>
    </item>
    
    <item>
      <title>MongoDB的元素查询运算符</title>
      <link>/post/mongodb%E7%9A%84%E5%85%83%E7%B4%A0%E6%9F%A5%E8%AF%A2%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Wed, 13 May 2020 15:44:52 +0000</pubDate>
      
      <guid>/post/mongodb%E7%9A%84%E5%85%83%E7%B4%A0%E6%9F%A5%E8%AF%A2%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description></description>
    </item>
    
    <item>
      <title>MongoDB的逻辑查询运算符</title>
      <link>/post/mongodb%E7%9A%84%E9%80%BB%E8%BE%91%E6%9F%A5%E8%AF%A2%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Wed, 13 May 2020 00:47:14 +0000</pubDate>
      
      <guid>/post/mongodb%E7%9A%84%E9%80%BB%E8%BE%91%E6%9F%A5%E8%AF%A2%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>$and 语法：{ $and: [ { &amp;lt;expression1&amp;gt; }, { &amp;lt;expression2&amp;gt; } , ... , { &amp;lt;expressionN&amp;gt; } ] } $and在一个或多个表达式（例如&amp;lt;expression1&amp;gt;，&amp;lt;expressio</description>
    </item>
    
    <item>
      <title>MongoDB的比较查询运算符</title>
      <link>/post/mongodb%E7%9A%84%E6%AF%94%E8%BE%83%E6%9F%A5%E8%AF%A2%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Tue, 12 May 2020 17:06:03 +0000</pubDate>
      
      <guid>/post/mongodb%E7%9A%84%E6%AF%94%E8%BE%83%E6%9F%A5%E8%AF%A2%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>比较/排序顺序 比较不同BSON类型的值时，MongoDB使用以下比较顺序，从最低到最高： MinKey（内部类型） 空值 数字（整数，整数，双精度</description>
    </item>
    
    <item>
      <title>MongoDB的findAndModify</title>
      <link>/post/mongodb%E7%9A%84findandmodify/</link>
      <pubDate>Tue, 12 May 2020 14:45:50 +0000</pubDate>
      
      <guid>/post/mongodb%E7%9A%84findandmodify/</guid>
      <description>db.collection.findAndModify（） 定义 findAndModify()方法具有以下形式： 1 2 3 4 5 6 7 8 9 10 11 12 13 db.collection.findAndModify({ query:</description>
    </item>
    
    <item>
      <title>MongoDB查询性能分析</title>
      <link>/post/mongodb%E6%9F%A5%E8%AF%A2%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/</link>
      <pubDate>Tue, 12 May 2020 13:55:28 +0000</pubDate>
      
      <guid>/post/mongodb%E6%9F%A5%E8%AF%A2%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/</guid>
      <description>评估查询的性能 inventory包含以下文档的集合： 1 2 3 4 5 6 7 8 9 10 { &amp;#34;_id&amp;#34; : 1, &amp;#34;item&amp;#34; : &amp;#34;f1&amp;#34;, type: &amp;#34;food&amp;#34;, quantity: 500 } { &amp;#34;_id&amp;#34; : 2, &amp;#34;item&amp;#34; : &amp;#34;f2&amp;#34;, type: &amp;#34;food&amp;#34;, quantity: 100 } { &amp;#34;_id&amp;#34; : 3, &amp;#34;item&amp;#34; : &amp;#34;p1&amp;#34;, type: &amp;#34;paper&amp;#34;, quantity:</description>
    </item>
    
    <item>
      <title>MongoDB优化查询性能</title>
      <link>/post/mongodb%E4%BC%98%E5%8C%96%E6%9F%A5%E8%AF%A2%E6%80%A7%E8%83%BD/</link>
      <pubDate>Tue, 12 May 2020 11:12:12 +0000</pubDate>
      
      <guid>/post/mongodb%E4%BC%98%E5%8C%96%E6%9F%A5%E8%AF%A2%E6%80%A7%E8%83%BD/</guid>
      <description>创建索引来支持查询 对于常见的查询，请创建索引。如果查询搜索多个字段，请创建一个复合索引。扫描索引比扫描集合快得多。索引结构小于文档参考，并按</description>
    </item>
    
    <item>
      <title>MongoDB的删除操作</title>
      <link>/post/mongodb%E7%9A%84%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 11 May 2020 20:46:44 +0000</pubDate>
      
      <guid>/post/mongodb%E7%9A%84%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C/</guid>
      <description>示例集合 此页面使用以下MongoDB Go驱动程序功能： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43</description>
    </item>
    
    <item>
      <title>MongoDB的更新操作</title>
      <link>/post/mongodb%E7%9A%84%E6%9B%B4%E6%96%B0%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 11 May 2020 17:36:36 +0000</pubDate>
      
      <guid>/post/mongodb%E7%9A%84%E6%9B%B4%E6%96%B0%E6%93%8D%E4%BD%9C/</guid>
      <description>示例集合 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66</description>
    </item>
    
    <item>
      <title>MongoDB的查询操作</title>
      <link>/post/mongodb%E7%9A%84%E6%9F%A5%E8%AF%A2%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sun, 10 May 2020 22:50:11 +0000</pubDate>
      
      <guid>/post/mongodb%E7%9A%84%E6%9F%A5%E8%AF%A2%E6%93%8D%E4%BD%9C/</guid>
      <description>示例集合 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 docs := []interface{}{ bson.D{ {&amp;#34;item&amp;#34;, &amp;#34;journal&amp;#34;}, {&amp;#34;qty&amp;#34;, 25}, {&amp;#34;size&amp;#34;, bson.D{ {&amp;#34;h&amp;#34;, 14},</description>
    </item>
    
    <item>
      <title>MongoDB的插入操作</title>
      <link>/post/mongodb%E7%9A%84%E6%8F%92%E5%85%A5%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Wed, 06 May 2020 14:55:26 +0000</pubDate>
      
      <guid>/post/mongodb%E7%9A%84%E6%8F%92%E5%85%A5%E6%93%8D%E4%BD%9C/</guid>
      <description>创建collection 如果该集合当前不存在，则插入操作将创建该集合。 插入一个文档 Collection.InsertOne 将单个文档插入到集合中。 以下示例将一个新文档插入到inv</description>
    </item>
    
    <item>
      <title>MongoDB分片集群机制及原理</title>
      <link>/post/mongodb%E5%88%86%E7%89%87%E9%9B%86%E7%BE%A4%E6%9C%BA%E5%88%B6%E5%8F%8A%E5%8E%9F%E7%90%86/</link>
      <pubDate>Sun, 29 Mar 2020 16:14:17 +0000</pubDate>
      
      <guid>/post/mongodb%E5%88%86%E7%89%87%E9%9B%86%E7%BE%A4%E6%9C%BA%E5%88%B6%E5%8F%8A%E5%8E%9F%E7%90%86/</guid>
      <description>为什么要使用分片集群？ 数据容量日益增大，访问性能日渐降低，怎么破？ 新品上线异常火爆，如何支撑更多的并发用户？ 单库已有10TB数据，恢复需要1</description>
    </item>
    
    <item>
      <title>MongoDB复制集机制及原理</title>
      <link>/post/mongodb%E5%A4%8D%E5%88%B6%E9%9B%86%E6%9C%BA%E5%88%B6%E5%8F%8A%E5%8E%9F%E7%90%86/</link>
      <pubDate>Sat, 28 Mar 2020 22:58:32 +0000</pubDate>
      
      <guid>/post/mongodb%E5%A4%8D%E5%88%B6%E9%9B%86%E6%9C%BA%E5%88%B6%E5%8F%8A%E5%8E%9F%E7%90%86/</guid>
      <description>复制集的作用 MongoDB复制集的主要意义在于实现服务高可用. 它的实现依赖于两个方面的功能： 数据写入时将数据迅速复制到另一个独立节点上. 在接</description>
    </item>
    
    <item>
      <title>使用模式构建</title>
      <link>/post/%E4%BD%BF%E7%94%A8%E6%A8%A1%E5%BC%8F%E6%9E%84%E5%BB%BA/</link>
      <pubDate>Sat, 28 Mar 2020 15:33:58 +0000</pubDate>
      
      <guid>/post/%E4%BD%BF%E7%94%A8%E6%A8%A1%E5%BC%8F%E6%9E%84%E5%BB%BA/</guid>
      <description>前言 当涉及MongoDB时，一个经常被问到的问题是“我如何在MongoDB中为我的应用程序构造模式（schema）？”老实说，这要看情况而定</description>
    </item>
    
    <item>
      <title>MongoDB的文档模型设计三部曲</title>
      <link>/post/mongodb%E7%9A%84%E6%96%87%E6%A1%A3%E6%A8%A1%E5%9E%8B%E8%AE%BE%E8%AE%A1%E4%B8%89%E9%83%A8%E6%9B%B2/</link>
      <pubDate>Sat, 28 Mar 2020 10:27:52 +0000</pubDate>
      
      <guid>/post/mongodb%E7%9A%84%E6%96%87%E6%A1%A3%E6%A8%A1%E5%9E%8B%E8%AE%BE%E8%AE%A1%E4%B8%89%E9%83%A8%E6%9B%B2/</guid>
      <description>三部曲 MongoDB文档模型设计三部曲为基础建模,工况细化,套用设计模式: 基础建模 找到对象:根据概念模型或者业务需求推导出逻辑模型 明确关系:</description>
    </item>
    
    <item>
      <title>MongoDB的事务实现解析</title>
      <link>/post/mongodb%E7%9A%84%E4%BA%8B%E5%8A%A1%E5%AE%9E%E7%8E%B0%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Fri, 27 Mar 2020 18:47:35 +0000</pubDate>
      
      <guid>/post/mongodb%E7%9A%84%E4%BA%8B%E5%8A%A1%E5%AE%9E%E7%8E%B0%E8%A7%A3%E6%9E%90/</guid>
      <description>Session Session 是 MongoDB 3.6 版本引入的概念，引入这个特性主要就是为实现多文档事务做准备。Session 本质上就是一个「上下文」。 在以前的版本，MongoDB 只</description>
    </item>
    
    <item>
      <title>Journal与oplog</title>
      <link>/post/journal%E4%B8%8Eoplog/</link>
      <pubDate>Fri, 27 Mar 2020 16:52:07 +0000</pubDate>
      
      <guid>/post/journal%E4%B8%8Eoplog/</guid>
      <description>journal journal 是 MongoDB 存储引擎层的概念，目前 MongoDB主要支持 mmapv1、wiredtiger、mongorocks 等存储引擎，都支持配置journ</description>
    </item>
    
    <item>
      <title>MongoDB的事务机制介绍</title>
      <link>/post/mongodb%E7%9A%84%E4%BA%8B%E5%8A%A1%E6%9C%BA%E5%88%B6%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Fri, 27 Mar 2020 16:00:16 +0000</pubDate>
      
      <guid>/post/mongodb%E7%9A%84%E4%BA%8B%E5%8A%A1%E6%9C%BA%E5%88%B6%E4%BB%8B%E7%BB%8D/</guid>
      <description>前言 MongoDB虽然已经在4.2开始全面支持了多文档事务，但并不代表大家应该毫无节制地使用它。相反，对事务的使用原则应该是：能不用尽量不用</description>
    </item>
    
    <item>
      <title>MongoDB的ReadConcern</title>
      <link>/post/mongodb%E7%9A%84readconcern/</link>
      <pubDate>Thu, 26 Mar 2020 23:53:52 +0000</pubDate>
      
      <guid>/post/mongodb%E7%9A%84readconcern/</guid>
      <description>综述 在读取数据的过程中我们需要关注以下两个问题 从哪里读？关注数据节点位置 什么样的数据可以读？关注数据的隔离性 第一个问题是是由 readPreference 来解決 第二个问</description>
    </item>
    
    <item>
      <title>MongoDB的WriteConcern</title>
      <link>/post/mongodb%E7%9A%84writeconcern/</link>
      <pubDate>Thu, 26 Mar 2020 17:10:36 +0000</pubDate>
      
      <guid>/post/mongodb%E7%9A%84writeconcern/</guid>
      <description>WriteConcern write Concern 決定一个写操作落到多少个节点上オ算成功。包括以下3个字段: { w: &amp;lt;value&amp;gt;, j: &amp;lt;boolean&amp;gt;, wtimeout: &amp;lt;number&amp;gt; } MongoDB支持的WriteConncern选项如下 w选项</description>
    </item>
    
    <item>
      <title>mongo-go-driver使用总结</title>
      <link>/post/mongo-go-driver%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 16 Jul 2019 16:38:41 +0000</pubDate>
      
      <guid>/post/mongo-go-driver%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</guid>
      <description>创建main 创建文件main.go并导入bson，mongo和mongo/options包： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 package main</description>
    </item>
    
  </channel>
</rss>