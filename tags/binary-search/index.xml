<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Binary Search on Forz Blog</title>
    <link>/tags/binary-search/</link>
    <description>Recent content in Binary Search on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 03 Sep 2017 18:26:54 +0000</lastBuildDate><atom:link href="/tags/binary-search/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>两个排序数组中的查找问题</title>
      <link>/post/%E4%B8%A4%E4%B8%AA%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 03 Sep 2017 18:26:54 +0000</pubDate>
      
      <guid>/post/%E4%B8%A4%E4%B8%AA%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE%E9%97%AE%E9%A2%98/</guid>
      <description>LeetCode 4. Median of Two Sorted Arrays There are two sorted arrays nums1 and nums2 of size m and n respectively. Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)). Example 1: nums1 = [1, 3] nums2 = [2] The median is 2.0 Example 2: nums1 = [1, 2] nums2 = [3, 4] The median is (2 + 3)/2 = 2.5 解</description>
    </item>
    
    <item>
      <title>在数组中找到一个局部最小的位置</title>
      <link>/post/%E5%9C%A8%E6%95%B0%E7%BB%84%E4%B8%AD%E6%89%BE%E5%88%B0%E4%B8%80%E4%B8%AA%E5%B1%80%E9%83%A8%E6%9C%80%E5%B0%8F%E7%9A%84%E4%BD%8D%E7%BD%AE/</link>
      <pubDate>Fri, 01 Sep 2017 23:36:04 +0000</pubDate>
      
      <guid>/post/%E5%9C%A8%E6%95%B0%E7%BB%84%E4%B8%AD%E6%89%BE%E5%88%B0%E4%B8%80%E4%B8%AA%E5%B1%80%E9%83%A8%E6%9C%80%E5%B0%8F%E7%9A%84%E4%BD%8D%E7%BD%AE/</guid>
      <description>题目: 解析: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 public static int getLessIndex(int[] arr) { if (arr == null || arr.length == 0) { return -1; // no exist } if (arr.length == 1 || arr[0] &amp;lt; arr[1]) { return 0; } if (arr[arr.length - 1] &amp;lt; arr[arr.length</description>
    </item>
    
    <item>
      <title>在有序矩阵中找数</title>
      <link>/post/%E5%9C%A8%E6%9C%89%E5%BA%8F%E7%9F%A9%E9%98%B5%E4%B8%AD%E6%89%BE%E6%95%B0/</link>
      <pubDate>Sun, 25 Jun 2017 02:27:16 +0000</pubDate>
      
      <guid>/post/%E5%9C%A8%E6%9C%89%E5%BA%8F%E7%9F%A9%E9%98%B5%E4%B8%AD%E6%89%BE%E6%95%B0/</guid>
      <description>LeetCode 74. Search a 2D Matrix Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties: Integers in each row are sorted from left to right. The first integer of each row is greater than the last integer of the previous row. 解析： 因为每行从小到大排序，而且每</description>
    </item>
    
    <item>
      <title>在有序旋转数组中的查找</title>
      <link>/post/%E5%9C%A8%E6%9C%89%E5%BA%8F%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE/</link>
      <pubDate>Sun, 25 Jun 2017 02:26:09 +0000</pubDate>
      
      <guid>/post/%E5%9C%A8%E6%9C%89%E5%BA%8F%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE/</guid>
      <description>LeetCode 153. Find Minimum in Rotated Sorted Array Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand. (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2). Find the minimum element. You may assume no duplicate exists in the array. Subscribe to see which companies asked this question. 解析： 二分法，旋</description>
    </item>
    
    <item>
      <title>子数组的最大累加和/累乘积</title>
      <link>/post/%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E7%B4%AF%E5%8A%A0%E5%92%8C%E7%B4%AF%E4%B9%98%E7%A7%AF/</link>
      <pubDate>Sun, 25 Jun 2017 00:00:10 +0000</pubDate>
      
      <guid>/post/%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E7%B4%AF%E5%8A%A0%E5%92%8C%E7%B4%AF%E4%B9%98%E7%A7%AF/</guid>
      <description>LeetCode 53. Maximum Subarray Find the contiguous subarray within an array (containing at least one number) which has the largest sum. For example, given the array [-2,1,-3,4,-1,2,1,-5,4], the contiguous subarray [4,-1,2,1] has the largest sum = 6. 解析：动态规划 每个元素有2种选择：加入之前的连续子序列；创建一个新</description>
    </item>
    
    <item>
      <title>数组中的位置查找</title>
      <link>/post/%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E4%BD%8D%E7%BD%AE%E6%9F%A5%E6%89%BE/</link>
      <pubDate>Sat, 24 Jun 2017 22:11:50 +0000</pubDate>
      
      <guid>/post/%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E4%BD%8D%E7%BD%AE%E6%9F%A5%E6%89%BE/</guid>
      <description>LeetCode 35. Search Insert Position Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order. You may assume no duplicates in the array. Here are few examples. [1,3,5,6], 5 → 2 [1,3,5,6], 2 → 1 [1,3,5,6], 7 → 4 [1,3,5,6], 0 → 0 解析：在有序</description>
    </item>
    
    <item>
      <title>根据大小猜数</title>
      <link>/post/%E6%A0%B9%E6%8D%AE%E5%A4%A7%E5%B0%8F%E7%8C%9C%E6%95%B0/</link>
      <pubDate>Sat, 24 Jun 2017 22:11:42 +0000</pubDate>
      
      <guid>/post/%E6%A0%B9%E6%8D%AE%E5%A4%A7%E5%B0%8F%E7%8C%9C%E6%95%B0/</guid>
      <description>LeetCode 374. Guess Number Higher or Lower We are playing the Guess Game. The game is as follows: I pick a number from 1 to n. You have to guess which number I picked. Every time you guess wrong, I’ll tell you whether the number is higher or lower. You call a pre-defined API guess(int num) which returns 3 possible results (-1, 1, or 0): -1 :</description>
    </item>
    
    <item>
      <title>区间问题</title>
      <link>/post/%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 24 Jun 2017 22:07:55 +0000</pubDate>
      
      <guid>/post/%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/</guid>
      <description>LeetCode 228. Summary Ranges Given a sorted integer array without duplicates, return the summary of its ranges. For example, given [0,1,2,4,5,7], return [“0-&amp;gt;2”,”4-&amp;gt;5”,”7”]. 解析： 将一组数划分成若干的区间，用双指针分别</description>
    </item>
    
    <item>
      <title>H-Index</title>
      <link>/post/h-index/</link>
      <pubDate>Sat, 24 Jun 2017 19:51:15 +0000</pubDate>
      
      <guid>/post/h-index/</guid>
      <description>LeetCode 274. H-Index Given an array of citations (each citation is a non-negative integer) of a researcher, write a function to compute the researcher’s h-index. According to the definition of h-index on Wikipedia: “A scientist has index h if h of his/her N papers have at least h citations each, and the other N − h papers have</description>
    </item>
    
  </channel>
</rss>
