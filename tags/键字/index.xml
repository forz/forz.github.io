<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>键字 on Forz Blog</title>
    <link>http://localhost:1313/tags/%E9%94%AE%E5%AD%97/</link>
    <description>Recent content in 键字 on Forz Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 24 Jun 2017 09:58:38 +0000</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/%E9%94%AE%E5%AD%97/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>解析“mutable</title>
      <link>http://localhost:1313/post/%E8%A7%A3%E6%9E%90mutable/</link>
      <pubDate>Sat, 24 Jun 2017 09:58:38 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E8%A7%A3%E6%9E%90mutable/</guid>
      <description>在C++中，mutable也是为了突破const的限制而设置的。被mutable修饰的变量，将永远处于可变的状态，即使在一个const函数中</description>
    </item>
    
    <item>
      <title>解析“volatile”</title>
      <link>http://localhost:1313/post/%E8%A7%A3%E6%9E%90volatile/</link>
      <pubDate>Sat, 24 Jun 2017 09:53:31 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E8%A7%A3%E6%9E%90volatile/</guid>
      <description>volatile概述 volatile 关键字是一种类型修饰符，用它声明的类型变量表示可以被某些编译器未知的因素更改，比如：操作系统、硬件或者其它线程等。遇到</description>
    </item>
    
    <item>
      <title>解析“const”</title>
      <link>http://localhost:1313/post/%E8%A7%A3%E6%9E%90const/</link>
      <pubDate>Fri, 23 Jun 2017 20:08:52 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E8%A7%A3%E6%9E%90const/</guid>
      <description>const的用法 修饰变量 修饰常量 与变量不同，有const修饰的量是常量，常量的值不可改变，在定义的时候必须初始化，使用未初始化的常量是错误的</description>
    </item>
    
    <item>
      <title>解析“extern”</title>
      <link>http://localhost:1313/post/%E8%A7%A3%E6%9E%90extern/</link>
      <pubDate>Fri, 23 Jun 2017 17:43:54 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E8%A7%A3%E6%9E%90extern/</guid>
      <description>基本解释 extern可以置于变量或者函数前，以标示变量或者函数的定义在别的文件中，提示编译器遇到此变量和函数时在其他模块中寻找其定义。此外e</description>
    </item>
    
  </channel>
</rss>