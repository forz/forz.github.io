[
    {
        "title": "back_inserter()用法",
        "uri": "post/ std::copy()和std::back_inserter()用法",
        "content": "include       template backinsertiterator back_inserter  Container  x        include  include      std  back_inserter    class   public  A     t   9     A     t   7    private  int t     int tmain int argc  TCHAR  argv      std  vector v1 3  10   std  vector v2 4  9   std  copy v1 begin    v1 end    v2 begin     std  vector v3 1                         v3               v1   std  copy v1 begin    v1 end    v3 begin                   std  back_inserter      std  copy v1 begin    v1 end    std  back_inserter v3    std  vector v4  v4 push_back new A     v4 push_back new A     v4 push_back new A     std  vector v5 4                      v5         delete           std  copy v4 begin    v4 begin     1  v5 begin     std  vector v6  a  v6 push_back a   v6 push_back a   v6 push_back a   std  vector v7 4      v7                    std  copy v6 begin    v6 begin     1  v7 begin     return 0         std  copy            clear  erase                                     std  back_inserter                         push_back          std  copy",
        "objectID": "post/ std::copy()和std::back_inserter()用法",
        "date": "2017-09-07T17:39:18.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "“之”字形打印矩阵",
        "uri": "post/\"之\"字形打印矩阵",
        "content": "public static void printMatrixZigZag int matrix    int tR   0  int tC   0  int dR   0  int dC   0  int endR   matrix length   1  int endC   matrix 0  length   1  boolean fromUp   false   tR    endR   1    printLevel matrix  tR  tC  dR  dC  fromUp   tR   tC    endC   tR   1   tR  tC   tC    endC   tC   tC   1  dC   dR    endR   dC   1   dC  dR   dR    endR   dR   dR   1  fromUp    fromUp    System out println      public static void printLevel int m  int tR  int tC  int dR  int dC  boolean f     f     tR    dR   1    System out print mtR               else    dR    tR   1    System out print mdR",
        "objectID": "post/\"之\"字形打印矩阵",
        "date": "2017-08-27T20:04:40.000Z",
        "tags": [
            "Array"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "“之”字形翻译字符串",
        "uri": "post/\"之\"字形翻译字符串",
        "content": "LeetCode 6  ZigZag Conversion     PAYPALISHIRING                                               P H N P L S G Y R         PAHNAPLSIIGYIR                        string convert string text  int nRows   convert  PAYPALISHIRING   3       PAHNAPLSIIGYIR                                                                                                     class Solution   public  string convert string s  int nRows   if nRows    1  return s  string res nRows            int   0  j  gap   nRows 2  while i 0    j  res j     s i            nRows 2             string str             for i   0    nRows    i          str    res i   return str",
        "objectID": "post/\"之\"字形翻译字符串",
        "date": "2017-06-25T02:27:57.000Z",
        "tags": [
            "String"
        ],
        "categories": [
            "解题报告 "
        ]
    },
    {
        "title": "“抛出exception”与“传递参数”或“调用虚函数”之间的区别",
        "uri": "post/“抛出exception”与“传递参数”或“调用虚函数”之间的区别",
        "content": "catch                   c class Widget          void f1 Widget w   void f2 Widget  w   void f3 const Widget  w   void f4 Widget  pw   void f5 const Widget  pw   catch  Widget w      catch  Widget  w      catch  const Widget  w      catch  Widget  pw      catch  const Widget  pw                                                                                                                                                                          Widget       Widget                       Widget   istream operator   istream  s  Widget  w   void passAndThrowWidget     Widget localWidget  cin    localWidget       localWidget   operator   throw localWidget        localWidget          localWidget     operator                 operator            w    localWidget     w            localWidget                                                  lcalWidget              catch       localWidget                                                                          localWidget                        localWidget                catch                       Widget    Widget                  C                                                passAndThrowWidget      localWidget       static   void passAndThrowWidget     static Widget localWidget  cin    localWidget  throw localWidget                localWidget                         catch      localWidget       localWidget                                                   static type                        dynamic type                         passAndThrowWidget  class Widget          class SpecialWidget  public Widget          void passAndThrowWidget     SpecialWidget localSpecialWidget      Widget  rw   localSpecialWidget     rw    SpecialWidget throw rw             Widget                     Widget    rw        SpecialWidget    rw       statictype   Widget     SpecialWidget              rw        SpecialWidget          rw       static type                              C                                         catch                    catch            catch  Widget  w        throw    catch  Widget  w        throw w        catch           catch                      catch                                        current exception                            SpecialWidget                      SpecialWidget       w       static type   Widget                           catch                 Widget    w       static type   Widget            throw                                                                     Widget     catch         passAndThrowWidgetp       c catch  Widget w      catch  Widget  w      catch  const Widget  w                                         const                               const                                                                                                                                        catch      catch  Widget w                                                              w                     catch  Widget  w                catch  const Widget  w                                                                                                                                                                                                                                                        Catch                                                                  catch                                                                                       the standard math library   sqrt     double sqrt double                            int i  double sqrtOfi   sqrt i        C       int double           sqrt     i        double             double      catch                             c void f int value    try    someFunction      throw value          catch  double d                    try       int         double     catch                      double                      int            int   int     catch         catch                                                catch                        C     STL                         inheritance_based                            c catch  runtime_error      catch  runtime_error       catch  const runtime_error       catch  runtime_error       catch  const runtime_error                        typed pointer          untyped pointer       const void      catch                   catch  const void                                      catch                                             catch                           catch         try           c try         catch logic_error  ex          catch invalid_argument  ex                                                dynamic type                                                       catch              catch                                                                                                                                                                              catch                                       catch",
        "objectID": "post/“抛出exception”与“传递参数”或“调用虚函数”之间的区别",
        "date": "2017-09-01T17:18:07.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "八大经典排序算法",
        "uri": "post/八大经典排序算法",
        "content": "ri rj  ri rj             ri  rj                                                Insertion Sort                                                                  a 0 n 1       a 0   1         a 1  n 1   i 1  a i         a 0 i 1    a 0 i        i          i  n 1                          a i         a i 1      a i    a i 1   a 0 i                j i 1 temp a i         a j                a j   0    a j    temp  j    a j   1    a j   a j   1    temp         a j      a 0 j 1                              a j      a j 1    a j     a j  a j 1   j   a j 1    0    a j    a j   1   j    Swap a j   a j   1                                n 1         O n                  n n 1  2        O n 2                 O n 2            2                   O 1                                                    1                                                                                                                                                                                                                        DL Shell 1959                                                                                                                                                                                                                   1                              n 10     49  38  65  97  26  13  27  49  55  4   1A 1B 2A 2B                                                             49  13   38  27   65  49   97  55   26  4             13  49   27  38   49  65   55  97   4  26                     1A 1E  2A 2E      1B     1A      2B 2A     1C                        gap                                              void shellsort3 int a    int n    int i  j  gap   gap   n 3   1  gap   0  gap   gap   3   1      gap  i   gap    0    a j    a j   gap   j    gap             Swap a j   a j   gap           Shell   gap n 2 gap gap 2   gap 1   Knuth   gap gap 3 1        gap               gap                                                                        2    1 gap                  O 1                                                                                                              O N 2                                                                                            shell                                                                                                                                        a 0 n 1               a 0  n 1   i 0     a i n 1               a i        a 0 i            i          i  n 1                               void Selectsort int a    int n    int i  j  nMinIndex   i   0    1     inline int left int idx         return  idx   A i                       i  A PARENT i     A i                      n         lgn           n               n 2 1 n 2 2    n                                               MAX HEAPIFY                          i     i                                   MAX HEAPIFY                               i 2                       2                         i 4                                              void max_heapify vector  nums  int idx int n       i         int largest   idx   largest          int l   left idx   r   right idx                  l nums largest   largest   l   r nums largest   largest   r   largest    idx            swap nums idx   nums largest    max_heapify nums  largest n                           void max_heapify vector  nums  int idx int n       i         int largest   idx   largest          int l left idx                            while l nums largest   largest   l   r nums largest   largest   r   largest    idx             break    swap nums idx   nums largest    idx largest  l left idx             BUILD MAX HEAP                              A 1   N                                  n 2                 void buildmaxheap vector  nums    heap_size   nums size     int    heap_size    1    1     0  i       heap_size    1    1        max_heapify nums  i           HEAPSORT                        A 1 n                         A 1                                  1                        void heapsort vector  nums  int k    buildmaxheap nums   int n nums size     int   0   0     i  0             i 0  j 0  heap 0   0       0     heap j     num    i     num     i  num      break  heap i    heap j            j      i     j  j    i   1    2    heap i    num  return 0                     int maxheapinsert int  heap  int n  int num    int i  j  heap n    num   num       n  j   parent i    j  i      int j    i   1    2   j    0       0    a i              i  k 1     1                        2                  S   2  k   1    2  k   2    2  k   3        2    k 1                           S     a1  1   q n         1 q   S   2 k  k  1    k              2 k  a j   Swap a j   1   a j                                   true    false                               2 void BubbleSort2 int a    int n    int j  k  bool flag  k   n  flag   true   flag    flag   false   j   1  j a j     Swap a j   1   a j    flag   true    k                    100         10      90            10                           10                                                       3 void BubbleSort3 int a    int",
        "objectID": "post/八大经典排序算法",
        "date": "2017-06-25T22:45:48.000Z",
        "tags": null,
        "categories": [
            "算法"
        ]
    },
    {
        "title": "包含无符号数的计算",
        "uri": "post/包含无符号数的计算",
        "content": "include int main   unsigned int i 3  printf    u n i  1   return 0          4294967293  32     i  1   4294967293   32        int     0 4294967295     int        2147483648 2147483647           4294967296    0 4294967295    0 2147483647 U 2147483648 4294967295    bit   2147483648  1       im  2147483648 4294967295                     11  4294967295   2  4294967294   3  4294967293     unsigned short A 10  printf   A   u n   A            A            10  32            0000 0000 0000 0000 0000 0000 0000 1010           A        1111 1111 1111 1111 1111 1111 1111 0101         0xFFFFFFF5                   11                      0 4294967295  0xFFFFFFF5            4294967285           4294967285     usigned int a  a 7  cout",
        "objectID": "post/包含无符号数的计算",
        "date": "2017-09-05T14:11:14.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "背包九讲",
        "uri": "post/背包九讲",
        "content": "1 01     1 1    1 2      1 3         1 4          1 5        1 6    01                                                          01                                                    2        2 1    2 2      2 3           2 4    01       2 5 O VN     2 6                                                                                                                                                             3        3 1    3 2      3 3    01     3 4      O V N      3 5    4          4 1         1 2 3                              01                                                     4 2 01              01                                                                                                  O V N          4 3         4 4                                                             01                                                                                                      5           5 1    5 2    5 3          5 4                                                                                                                                                                                                  5 5                                                                          6         6 1    6 2    6 3                                                                 7                                    7          7 1                                    i      j       i       j                                                         7 2    7 3        7 4    NOIP2006                                                                                                                                                                                                                                     NOIP2007             8      8 1    8 2        8 3                                                                                                        v          v                                                                                                                       0     V                                                                                                                   9                                                                                                                                                                                     F                                              max  min                  9 1      9 2              9 3       9 4         9 5       K    9 6",
        "objectID": "post/背包九讲",
        "date": "2017-09-15T11:25:54.000Z",
        "categories": [
            "算法"
        ]
    },
    {
        "title": "编译错误和运行错误的区别",
        "uri": "post/编译错误和运行错误的区别",
        "content": "1                                                                                    2                                        0",
        "objectID": "post/编译错误和运行错误的区别",
        "date": "2017-06-23T17:23:03.000Z",
        "tags": [
            "字节对齐"
        ],
        "categories": [
            "C++"
        ]
    },
    {
        "title": "变量与函数打桩:gostub",
        "uri": "post/变量与函数打桩:gostub",
        "content": "gostub                                                        stub    var configFile    config json  func GetConfig      byte  error    return ioutil ReadFile configFile       Test code stubs    gostub Stub  configFile    tmp test config   data  err    GetConfig      data will return contents  tmp test config file                             gostub                  var timeNow   time Now func GetDate   int   return timeNow   Day          gostub timeNow             stubs    gostub Stub  timeNow  func   time Time   return time Date 2015  6  1  0  0  0  0  time UTC     defer stubs Reset      Test check GetDate returns 6                              StubFunc  stubs    gostub StubFunc  timeNow  time Date 2015  6  1  0  0  0  0  time UTC   defer stubs Reset   StubFunc                    var osHostname   osHostname          production code using osHostname call it     Test code  stubs    gostub StubFunc  osHostname   fakehost   nil  defer stubs Reset   StubEnv                                stubs    gostub New   stubs SetEnv  GOSTUBVAR    testvalue   defer stubs Reset              Reset                                       stubs    gostub Stub  v1  1  stubs Stub  v2  2  defer stubs Reset                                   defer gostub Stub  v1  1  Stub  v2  2  Reset              Reset                                    return    stubs    gostub Stub  v1  1  defer stubs Reset      testing stubs Stub  v1  5     testing stubs Stub  b2  6                                           gostub                           Stubs                type Stubs struct      stubs map variable pointer  being stubbed  original value  stubs map reflect Value reflect Value origEnv map string envVal   Stub  stubVal     varToStub        Stubs      varToStub            stubVal           func Stub varToStub interface    stubVal interface     Stubs   return New   Stub varToStub  stubVal    StubFunc   stubval              Stubs      funcVarToStub                               StubFunc  func StubFunc funcVarToStub interface    stubVal    interface     Stubs   return New   StubFunc funcVarToStub  stubVal       func New    Stubs New          Stubs   func  s  Stubs  Reset   Reset               func  s  Stubs  ResetSingle varToStub interface    ResetSingle               func  s Stubs  SetEnv k  v string  Stubs SetEnv              func  s Stubs  UnsetEnv k string  Stubs UnsetEnv           func  s Stubs  Stub varToStub interface    stubVal interface    Stubs Stub  stubVal     varToStub     varToStub            stubVal           func  s Stubs  StubFunc funcVarToStub interface    stubVal    interface    Stubs StubFunc   stubval              Stubs     funcVarToStub                               StubFunc       GoStub                                                                                   num                           num    100    200           package main import    fmt   github com prashantv gostub    var counter   100 func stubGlobalVariable     stubs    gostub Stub  counter  200  defer stubs Reset   fmt Println  Counter    counter    func main     stubGlobalVariable        output     Counter  200 stubs GoStub       Stub          Reset                                                         func Exec cmd string  args    string   string  error          Exec       GoStub          Exec    GoStub                       Exec                 Exec             var Exec   func cmd string  args    string   string  error                               Exec     Exec               Exec        Exec                                 Exec              stubs    Stub  Exec  func cmd string  args    string   string  error    return  xxx vethName100 yyy   nil    defer stubs Reset     GoStub       StubFunc                   stubs    StubFunc  Exec  xxx vethName100 yyy   nil  defer stubs Reset           Golang                                                                     package Adapter import    time   fmt   os   github com prashantv gostub    var timeNow   time Now var osHostname   os Hostname func getDate   int   return timeNow   Day     func getHostName    string  error    return osHostname     func StubTimeNowFunction     stubs    gostub Stub  timeNow  func   time Time   return time Date 2015  6  1  0  0  0  0  time UTC     fmt Println getDate    defer stubs Reset     func StubHostNameFunction     stubs    gostub StubFunc  osHostname   LocalHost   nil  defer stubs Reset   fmt Println getHostName            package main import  GoExample GoStub StubFunction  func main     Adapter StubTimeNowFunction   Adapter StubHostNameFunction                                                         package main import    fmt   github com prashantv gostub    var CleanUp   cleanUp func cleanUp val string    fmt Println val    func main     stubs    gostub StubFunc  CleanUp  CleanUp  Hello go   defer stubs Reset               Stub    StubFunc         stubs         Stub   StubFunc                                                      map           Reset                     stubs    gostub Stub  v1  1  defer stubs Reset      testing stubs Stub  v1  5     testing stubs Stub  b2  6                  ",
        "objectID": "post/变量与函数打桩:gostub",
        "date": "2020-01-07T14:50:32.000Z",
        "tags": [
            "Go",
            "gostub"
        ],
        "categories": [
            "Go测试"
        ]
    },
    {
        "title": "不包含本位置值的累乘数组",
        "uri": "post/不包含本位置值的累乘数组",
        "content": "LeetCode 238  Product Array Except Self Given array n integers n   1  nums  return array output output i  equal product elements nums except nums i   Solve without division O n   example  given  1 2 3 4   return  24 12 8 6   Follow up  solve constant space complexity   Note  output array does not count extra space purpose space complexity analysis       result   left  right                               result          right                   right   class Solution   public  vector productExceptSelf vector  nums    vector res nums size    1    res        int   1    0    i          res i     right   res  i             right    nums i      right   return res",
        "objectID": "post/不包含本位置值的累乘数组",
        "date": "2017-09-01T23:07:27.000Z",
        "tags": [
            "Array"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "不使用vector保存bool的理由",
        "uri": "post/不使用vector-bool-的理由",
        "content": "http   blog csdn net u013249689 article details 25297657 vector                    vector                          bool     bool    char                       C      vector                                   bit                 bool  8                   C            byte         vector     references iterators            bool                                     T  p    v front   vector                 vector                             int                   vecotr                                       vecotr                            deque   vector         deque",
        "objectID": "post/不使用vector-bool-的理由",
        "date": "2017-06-24T14:32:28.000Z",
        "categories": [
            "C++ "
        ]
    },
    {
        "title": "不要以多态方式处理数组",
        "uri": "post/不要以多态方式处理数组",
        "content": "C                                                                  BST               BST       BalancedBST  class BST          class BalancedBST  public BST               BST   BalancedBST     int                     BST         BST        void printBSTArray ostream  s  const BST array    int numElements     int   0   array    0   i    deleteArray cout  balTreeArray   array i  BST   BST",
        "objectID": "post/不要以多态方式处理数组",
        "date": "2017-09-01T14:46:17.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "不用额外变量交换两个整数的值",
        "uri": "post/不用额外变量交换两个整数的值",
        "content": "a b            a b        b  b     b      b                                    a  b     c c  a      b               a 4 100 b 3 011 a b c 000    c      b    a 4 100  c 000  a c 011 3 b b  c     a   b 3 011 c 000  b c 100 4 a                    a   b              a    c  b  b            a   c  b    a            a    b  b   a",
        "objectID": "post/不用额外变量交换两个整数的值",
        "date": "2017-08-27T18:16:47.000Z",
        "tags": [
            "it Manipulation"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "不用流程控制语句,如何打印1~1000的数",
        "uri": "post/不用流程控制语句-如何打印1-1000的数",
        "content": "c  include struct print   static int a  print     printf   d n  print  a   a         int print  a  1  int main     print tt 1000   return 0",
        "objectID": "post/不用流程控制语句-如何打印1-1000的数",
        "date": "2017-09-05T15:49:05.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "不用任何比较判断找出两个数中较大的数",
        "uri": "post/不用任何比较判断找出两个数中较大的数",
        "content": "32   a b   a b                                 a b              a    b            getMax1    sign          n       0  1      0 flip        n 1   0   n 0   1       a b    0      scA 1 scB 0   a b        scA 0 scB 1 scA scB     1      0   return   scA   b   scB     a b            a     b                  a b                                           getMax2    public static int flip int n    return n   1    public static int sign int n    return flip  n    31    1     public static int getMax1 int a  int b    int c     b  int scA   sign c   int scB   flip scA   return   scA   b   scB    public static int getMax2 int a  int b    int c     b  int sa   sign a   int sb   sign b   int sc   sign c   int difSab   sa   sb  int sameSab   flip difSab   int returnA   difSab   sa   sameSab   sc  int returnB   flip returnA   return   returnA   b   returnB        getMax2      a    b      difSab 1 sameSab  0        a 0     b   sa 1 sb  0       a    a     b 0   sa 0  sb  1       b    a    b      difSab 0 sameSab 1         a b            a b 0   sc l     a    a b   sc 0     b               difSab   sa   sameSab   sc    b   flip difSab   sa   sameSab   sc",
        "objectID": "post/不用任何比较判断找出两个数中较大的数",
        "date": "2017-08-27T18:35:10.000Z",
        "tags": [
            "it Manipulation"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "不用sizeof(),如何判断操作系统是16位还是32位",
        "uri": "post/不用sizeof-如何判断操作系统是16位还是32位",
        "content": "0          0               32               11111111111111111111111111111111          c  include int main     unsigned int    0  if  a 65536  printf  32    1    else printf  16   n    return 0            32",
        "objectID": "post/不用sizeof-如何判断操作系统是16位还是32位",
        "date": "2017-09-05T14:21:05.000Z",
        "tags": [
            "Bit Manipulation"
        ],
        "categories": [
            "解题报告 "
        ]
    },
    {
        "title": "测试金字塔实战",
        "uri": "post/测试金字塔实战",
        "content": "DevOpsike Cohn       Succeeding Agile                                                          Mike Cohn                                                                                       Mike Cohn                                                                                                               Cohn                                                                                                                                                                   Cohn                                             Cohn                                  react angular ember js       UI                             UI                                                                    JUnit         Mockito       Wiremock          Pact                 Selenium                   REST assured       REST API                                                                             REST                  REST              Spring Boot                Spring Boot                     Github      Readme                                                  REST      hello      Hello World   hello  lastname     lastname                 Hello  Firstname   Lastname    weather                                                       HTTP     REST                                    HTTP        API                       Spring Service        Spring     Controller    REST       HTTP       Repository                          Client     API                HTTPS   darksky net        Domain                                           Spring                         Domain Driven Design                                                                                                                                                                                                             repositories             CRUD                  Spring Data  Spring Data                CRUD                                                       Postgreay Fields   Working Effectively Unit Tests                                                                                                                                                                          service                          stub                                                                                                                                                                                                                                                                                                                                                                                                                 mocks          mock                                                                                                                                                        HTTP                                                                                                                                                                                                                                                                                               controller                   repository                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        x   y      z   ",
        "objectID": "post/测试金字塔实战",
        "date": "2020-01-05T23:06:06.000Z",
        "tags": [
            "测试金字塔"
        ],
        "categories": [
            "软件工程"
        ]
    },
    {
        "title": "层级时间轮的Golang实现",
        "uri": "post/层级时间轮的Golang实现",
        "content": "Python     Golang           Celery              Golang                                                         HTTP                                                     Timer                      Timer       d                          d                          Timer               Timer                        Golang     Timer                         O log n      Web        100w                                                Timer             Hashed Hierarchical Timing Wheels          Timer                      Timer              O 1                      Simple Timing Wheel       Netty4   HashedWheelTimer        Hierarchical Timing Wheels       Kafka   Purgatory                     Kafka                  Golang                                                                      u     n                          n u    u   1ms n   3                            3ms                                           1             0ms  1ms          1    1ms  2ms      2    2ms  3ms      3                   1ms       task1              2               1ms          2              task1                  2             0ms  1ms          2    1ms  2ms      3    2ms  3ms      1                  2ms       task2             1                            n             n u                                n                                                  round                         u   1ms n   3                  1                4ms                 round   1 4 3             4ms    round 3ms    1ms       2             2           round    0                   round       round    0       3ms             2          round   0                                                                 O n                                                                                      u                           Kafka   Purgatory                         n              u                            Overflow Wheel         n u                                                                                                 u   1ms n   3                       1ms     3              3ms     3                                      Level 1                     1             0ms  1ms          1    1ms  2ms      2    2ms  3ms      3                   2ms       task1                     3                       4ms       task2                               Level 2                            1                       2               2ms                   3            task1                                  1                1ms                   1                          2            task2                        1ms    task2               2                1ms                   2              task2                                  2    Kafka               Kafka Timer      Kafka                                                   wheelSize                      bucket    bucket        tick                                                                                                                                                                                                                                                                                                                   tick                                          tick       Kafka   tick   1ms                                    Kafka               Java     DelayQueue                         bucket          DelayQueue          bucket                    bucket                                task1            bucket2          task1       expiration        currentTime            duration       bucket2    Offer   DelayQueue    DelayQueue                     earliest   bucket                 bucket2      poll         bucket2              currentTime       bucket2   expiration            1ms           bucket2      task1             Kafka                     DelayQueue   offer      poll                 O log n                bucket                O log n     n                           RussellLuo Github     https   github com RussellLuo timingwheel timingwheel   Golang            Kafka                utils         package timingwheel import    sync   time       truncate returns result rounding x toward zero multiple m     m c   npq    make priorityQueue  n  c 2  copy npq   pq   pq   npq       length                      x     x         pq    pq  0   n 1  item    x   item  item Index   n   pq  n    item             func  pq  priorityQueue  Pop   interface     n    len  pq  c    cap  pq                n 25   npq    make priorityQueue  n  c 2  copy npq   pq   pq   npq                        item      pq  n 1  item Index    1 pq    pq  0   n 1  return item              max    nil      max                 max                   func  pq priorityQueue  PeekAndShift max int64   item  int64    pq Len      0   return nil  0             item      pq  0            max  return nil     max    item Priority   max   return nil  item Priority   max             heap Remove pq  0      item   return item  0      end PriorityQueue implementation           package delayqueue import    container heap   sync   sync atomic   time       DelayQueue unbou",
        "objectID": "post/层级时间轮的Golang实现",
        "date": "2019-10-23T17:21:10.000Z",
        "tags": [
            "Go",
            "时间轮"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "查找单独/重复/丢失的元素",
        "uri": "post/查找单独:重复:丢失的元素",
        "content": "LeetCode 136  Single Number Given array integers  every element appears twice except one  Find single one  Note  algorithm linear runtime complexity  implement without using extra memory                                                               class Solution   public  int singleNumber vector  nums    int result   0    int i 0  i  nums    int count 32   0   int result 0  for int i 0 i i  1              i      count i  count i  3       3      result   count i  singleNumber vector  nums    int diff   accumulate nums begin    nums end    0  bit_xor     diff     diff                     1 vector rets    0  0           int num   nums      num   diff     0     bit not set   rets 0     num    else    bit set   rets 1     num      return rets                x   x   x 0    0 x        1 x        x 2           x 0  x   x    0   0    0   x  0  x  x              x     x            1    1      x  x                     0       1     1   x      2 m   m 0   x            1       m 1       m 0      0      x         x   1        m 0  m 1       1    x    x       x   x       2 m           x  y    2 k     y     1       x       k        x          k 0      k 1  1   x        k 0  1  k 1   0   1     k      0  k 1            1               x                     k 1   1       0    2 k  x    2              x   x   x 0    0 x        1 x        x 2            x 32   2        2 5  x   x    32  x 28   2         4  x     x    4  x 24   2        8   x   x    8  LeetCode 268  Missing Number Given array containing n distinct numbers taken 0  1  2     n  find one missing array  example  Given nums    0  1  3  return 2  Note  algorithm run linear runtime complexity  implement using constant extra space complexity              0 n  n nums size                    result   0 n                                          class Solution   public  int missingNumber vector  nums    int result   nums size    int i 0  for int num nums   result    num  result    i  i      return result       LeetCode 389  Find Difference Given two strings s t consist lowercase letters  String t generated random shuffling string s add one letter random position  Find letter added t  Example  Input  s    abcd  t    abcde  Output  e Explanation   e  letter added             s t                                                 class Solution   public  char findTheDifference string s  string t    s    t  int ch  0  for auto val  s  ch    val  return ch          hash   class Solution   public  char findTheDifference string s  string t    unordered_map hash  char ans  for auto ch  s  hash ch     for auto ch  t  if   hash ch  findDisappearedNumbers vector  nums    vector res  for int   0    nums    for int   0  0    nums i  findDuplicates vector  nums    vector res  for int   0    nums size      i  while nums nums i    1     nums i   swap nums nums i    1   nums i    for int   0    nums size      i  if nums i       1  res push_back nums i    return res",
        "objectID": "post/查找单独:重复:丢失的元素",
        "date": "2017-06-24T23:58:53.000Z",
        "tags": [
            "Bit Manipulation"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "查找二叉树的中心节点",
        "uri": "post/查找二叉树的中心节点",
        "content": "LeetCode 310  Minimum Height Trees undirected graph tree characteristics  choose node root  result graph rooted tree  Among possible rooted trees  minimum height called minimum height trees  MHTs   Given graph  write function find MHTs return list root labels  Format graph contains n nodes labeled 0 n   1  will given number n list undirected edges  each edge pair labels   assume no duplicate edges will appear edges  edges undirected   0  1   1  0  thus will not appear together edges  Example 1  Given n   4  edges     1  0    1  2    1  3   0   1     2 3 return  1  Example 2  Given n   6  edges     0  3    1  3    2  3    4  3    5  4   0 1 2       3   4   5 return  3  4  Note   1  According definition tree Wikipedia   a tree undirected graph two vertices connected exactly one path  words  connected graph without simple cycles tree    2  height rooted tree number edges longest downward path root leaf                 BFS               BFS                BFS               1                                                                                                             hint   MHTs graph most                              class Solution                                                     public  vector findMinHeightTrees int n  vector   edges    vector indegree n 0   ans  for auto val  edges  indegree val first     indegree val second           unordered_map  hash         for auto val  edges            hash val first  insert val second   hash val second  insert val first     while n   2          leaf                              root nodes  vector vec  for int  0    0  ans push_back i   return ans",
        "objectID": "post/查找二叉树的中心节点",
        "date": "2017-09-14T21:04:37.000Z",
        "tags": [
            "BFS"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "查找二叉树中的搜索二叉树",
        "uri": "post/查找二叉树中的最大搜索二叉子树",
        "content": "head                                                    M        O N          O h   h            node                                    node               node left      node                node right    node                    node value  node                   node value      node                                   node                        node                 node                  node                                                                     cur     cur      4                         IBST      ISize      IMin      IMax     cur      4                        rBST      rSize      rMin      rMax       2                                 cur                lBST rBST                       2                   public static class Node   public int value  public Node left  public Node right  public Node int data    this value   data      public static Node biggestSubBST Node head    int   record   new int 3      0  size  1  min  2  max return posOrder head  record     public static Node posOrder Node head  int   record     head    null    record 0    0  record 1    Integer MAX_VALUE  record 2    Integer MIN_VALUE  return null    int value   head value  Node left   head left  Node right   head right  Node lBST   posOrder left  record   int lSize   record 0   int lMin   record 1   int lMax   record 2   Node rBST   posOrder right  record   int rSize   record 0   int rMin   record 1   int rMax   record 2   record 1    Math min lMin  value   record 2    Math max rMax  value    left    lBST    right    rBST    lMax rSize   lBST   rBST                                          head                                                        N         O N     O NlogN                                          10                                    10                                     3 20         3 20                                                                                                          4 1 1         1    4         10         1       1    4         10         1                 13        3 21                     h                       h             3 20                 10              3 21                 13                 10   13     12                      12                                       12                   12                12                              10     10     12        10          10                    12     10                10                         14     14     10        14               12                   14           12                  14             11   15       14           12                           14                    14         14 1 1      14    1    14    1       14      3                        12         10     10                 10          3         10 3 3    10 3 0               12                12        4      3     10       1    10          3 23                              3 24      3 24            A                   S              S            A B C    S     D    S    A  B C        A                   S                                              D   S        D       D           S                   d1 d2 1     C  S                  d1 d2 1       A         S          3 25        h              h                      h              h                    h               12                       3 26          h                  h                                                                                                                                                                   public static class Node   public int value  public Node left  public Node right  public Node int data    this value   data      public static class Record          public int l  public int r  public Record int left  int right    this l   left  this r   right      public static int bstTopoSize2 Node head    Map map   new HashMap    return posOrder head  map     public static int posOrder Node h  Map map     h    null    return 0                         int ls   posOrder h left  map   int rs   posOrder h right  map                     h modifyMap h left  h value  map  true   modifyMap h right  h value  map  false   Record lr   map get h left   Record rr   map get h right              int lbst   lr    null   0   lr l   lr r   1  int rbst   rr    null   0   rr l   rr r   1         map put h  new Record lbst  rbst            h         h      lbst   rbst   1        h    max ls  rs  return Math max lbst   rbst   1  Math max ls  rs      public static int modifyMap Node n  int v  Map m  boolean s     n    null      m containsKey n      return 0    Record r   m get n     s    n value   v        s     n value   v                                                           m remove n   return r l   r r   1    else                            int minus   modifyMap s   n right   n left  v  m  s    s    r r   r r   minus    else   r l   r l   minus    m put n  r   return minus                                                3 27      3 27          a   c              A    d   f              B    g   i              C    j   k               D                                                        D ",
        "objectID": "post/查找二叉树中的最大搜索二叉子树",
        "date": "2017-08-18T22:03:48.000Z",
        "tags": [
            "Tree",
            "DFS",
            "BST"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "查找符号链接及其指向目标",
        "uri": "post/查找符号链接及其指向目标",
        "content": "",
        "objectID": "post/查找符号链接及其指向目标",
        "date": "2017-09-09T18:26:00.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "查找回文子串和回文子序列",
        "uri": "post/查找回文子串和回文子序列",
        "content": "LeetCode 409  Longest Palindrome Given string consists lowercase uppercase letters  find length longest palindromes built letters  case sensitive  example  Aa  not considered palindrome here  Note  Assume length given string will not exceed 1 010  Example  Input   abccccdd  Output  7 Explanation  One longest palindrome built  dccaccd   whose length 7                                                                                                                 class Solution   public  int longestPalindrome string s    int sum s size    vector hash 52           for char c s    if c  a   hash c  a      else hash  c  A   26       int count 0  for auto it hash    if it 2  count                   return count 0 sum count 1 sum       LeetCode 5  Longest Palindromic Substring        s  s                s      1000                                    dpi   s i  s j            max_len            dp              class Solution   public  string longestPalindrome string s    const int n   s size    deque   f n  deque n  false    int max_len   1  start   0                   int j   0  j   0  i     if s i     s j                           dpi     1   partition string s    vector path        vector  result        DFS s  path  result  0   return result    void DFS string   s  vector  path  vector   result  int begin         s begin    partition    begin    s size              result push_back path   return     int   begin    end                      132  Palindrome Partitioning II Given string s  partition s every substring partition palindrome  Return minimum cuts needed palindrome partitioning s  example  given s    aab   Return 1 palindrome partitioning   aa   b   produced using 1 cut                                                     DP       f i j        i j       cut           f i j  min f i k  f k 1 j  f i j   i k j 0 i j  palindrome s size    vector s size    false    vector dp s size   1    int   0    0     i   int j   i  j  0  j   if isPalj  dp i    min dp i   dp j  1",
        "objectID": "post/查找回文子串和回文子序列",
        "date": "2017-06-25T02:28:08.000Z",
        "tags": [
            "区间DP",
            "Backtracking"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "查找区间最大值",
        "uri": "post/查找区间最大值",
        "content": "LeetCode 162  Find Peak Element peak element element greater its neighbors  Given input array num i    num i 1   find peak element return its index  array may contain multiple peaks  case return index one peaks fine  may imagine num  1    num n        example  array  1  2  3  1   3 peak element function return index number 2                 class Solution   public  int findPeakElement vector  nums    return max_element nums begin    nums end      nums begin",
        "objectID": "post/查找区间最大值",
        "date": "2017-06-24T19:49:49.000Z",
        "tags": [
            "Array",
            "STL"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "查找数组中的重复项",
        "uri": "post/查找数组中的重复项",
        "content": "LeetCode 217  Contains Duplicate Given array integers  find array contains duplicates  function return true value appears least twice array  return false every element distinct             class Solution   public  bool containsDuplicate vector  nums    map hmap  for int i 0 i  nums  int k    map hmap  for int i 0 i nums i  i    else   if i hmap nums i    nums  int k  int t    multiset bst     set        OJ        1 2147483647   int   0  2  1  1  2  3                 f n    n    f n                 0                                                                                    0  2  3                            2131       0  2   1 3   1  2  3                             0  2  3  1  1  1  1                 class Solution   public  int findDuplicate vector  nums    int fast   nums nums 0    int slow   nums 0                 0                                        while slow    fast    slow nums slow   fast nums nums fast                           0                                            fast   0  while slow  fast    slow nums slow   fast nums fast     return slow",
        "objectID": "post/查找数组中的重复项",
        "date": "2017-06-24T23:58:05.000Z",
        "tags": [
            "Sliding Window",
            "Hash"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "查找一条直线上的最多点个数",
        "uri": "post/查找一条直线上的最多点个数",
        "content": "LeetCode 149  Max Points Line Given n points 2D plane  find maximum number points lie straight line        1       y             y1 y2   x1 x2         INT_MAX        2                1 1    2 2    1 1                            i         i    n 1                 k  i              k       i                     samepointnum       i             map            samepointnum   3                     int             float  double                   Definition point  struct Point   int x  int y  Point     x 0   y 0     Point int a  int b    x a   y b           class Solution   public  int maxPoints vector  points    int result   0  for int   0  map  for int j     1  j second     localMax    samePoint               result   max result  localMax             return result",
        "objectID": "post/查找一条直线上的最多点个数",
        "date": "2017-06-24T19:50:25.000Z",
        "tags": [
            "DP",
            "Backtracking"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "常见的端口扫描类型及原理",
        "uri": "post/常见的端口扫描类型及原理",
        "content": "filtering               IDS                                       TCP 3                                                                     IP          TCP FIN   TCP ACK   NULL   XMAS   SYN ACK     TCP connect              TCP                                                      IDS                                 TCP connect                              Client   SYN  Server   SYN ACK         Client   ACK          Client                            TCP connect                              Client   SYN  Server   RST ACK                                                                           connect                                               I O                                                                          logs                                  TCP SYN                        SYN        SYN ACK       ACK      RST                            TCP                                                        root          Client  SYN Server   SYN ACK Client  RST                          Client  SYN Server   RST            SYN    TCP Connect         SYN         SYN                                                                                                                                            SYN                        TCP FIN             TCP 3        TCP    FIN             TCP        TCP         FIN                        RST                                             RST                                                                                              windows       windows                            RST         UDP    UDP              UDP              ICMP port Unreachable  ICMP                                                               UDP     SQL Server      1434      x02    x03                  linux windows          UDP                                                                         UDP                        UDP",
        "objectID": "post/常见的端口扫描类型及原理",
        "date": "2017-06-25T14:21:58.000Z",
        "tags": null,
        "categories": [
            "Linux内核"
        ]
    },
    {
        "title": "常见位运算问题",
        "uri": "post/常见位运算问题",
        "content": "LeetCode 191  Number 1 Bits Write function takes unsigned integer returns number  1  bits  also known Hamming weight   example  32 bit integer  11  binary representation 00000000000000000000000000001011  so function return 3     n n  n 1     n        1 class Solution   public  int hammingWeight uint32_t n    int ans   0   n    n     n 1   ans      return ans          STL     bitset        class Solution   public  int hammingWeight uint32_t n    bitsetb n   return b count     b            LeetCode 338  Counting Bits Given non negative integer number num  every numbers range 0     num calculate number 1 s binary representation return array  Example  num   5 return  0 1 1 2 1 2       1               1          1      ret n    ret n  1    n 2 class Solution   public  vector countBits int num    vector ret num 1  0   for int i 1  i 1    i 2  return ret       LeetCode 190  Reverse Bits Reverse bits given 32 bits unsigned integer  example  given input 43261596  represented binary 00000010100101000001111010011100   return 964176192  represented binary 00111001011110000010100101000000      result       n         class Solution   public  uint32t reverseBits uint32t n    uint32_t result  0  for int i 0  i i 1      n return result       LeetCode 397  Integer Replacement Given positive integer n operations follow  n even  replace n n 2  n odd  replace n either n   1 n   1  minimum number replacements needed n become 1  Example 1  Input  8 Output  3 Explanation  8    4    2    1 Example 2  Input  7 Output  4 Explanation  7    8    4    2    1 7    6    3    2    1          2            2                    1       n          n   n   1  n   1                            1      1                                     n       1                    INT_MAX    1                 class Solution   int res   0  public  int integerReplacement int n     n    1             return res   n    3    3      11                       return res  2   n    INT_MAX  return 32  res          dfs       n   1        n   1    4    0    n       11   n   n   1 integerReplacement n   1   else   n       01   n   n   1 integerReplacement n   1   else integerReplacement n   2     n          n      n 2 return res       LeetCode 201  Bitwise Numbers Range Given range  m  n  0   1  n   1  offset      return m  data    int count   0   auto c   data             count    0                   c    5     0b110  count   1               1  else   c    4     0b1110  count   2               2  else   c    3     0b11110  count   3               3  else   c    7   return false      1              else     c    6     0b10  return false                     0b10              false count               1     return count    0       LeetCode 318  Maximum Product Word Lengths Given string array words  find maximum value length word i     length word j   two words not share common letters  may assume word will contain lower case letters  no two words exist  return 0  Example 1  Given   abcw    baz    foo    bar    xtfn    abcdef   Return 16 two words  abcw    xtfn   Example 2  Given   a    ab    abc    d    cd    bcd    abcd   Return 4 two words  ab    cd   Example 3  Given   a    aa    aaa    aaaa   Return 0 No pair words                                   1              0            26              int     26                    string              mask                       0    1  class Solution   public  int maxProduct vector  words    vector mask words size     0   for int i 0 i readBinaryWatch int num    vector rs   int h   0  h  h hour    1  2  4  8   minute    1  2  4  8  16  32             public  vector readBinaryWatch int num    vector res  helper res  make_pair 0  0   num  0   return res    void helper vector  res  pair time  int num  int start_point      dfs       dfs              num    0          res pushback tostring time first     time second   10     0           to_string time second    return     int   start_point    hour size     minute size         i   hour size             time first    hour i    time first   12  helper res  time  num   1    1   time first    hour i              else          time second    minute i   hour size      time second   60  helper res  time  num   1    1           60 time second    minute i   hour size",
        "objectID": "post/常见位运算问题",
        "date": "2017-06-25T02:25:37.000Z",
        "tags": [
            "Bit Manipulation"
        ],
        "categories": [
            "解题报告 "
        ]
    },
    {
        "title": "常见性能优化思路",
        "uri": "post/常见性能优化思路",
        "content": "lock free                         cache      I cache D cache                                                           I O                                    I O     I O                                                                         I O          I O     select poll epoll   I O                                           I O            stdio   read write                                                                                                                                                                                                                   tcmalloc                                                                                                                       std  string                        std  string                                                                                                                                                                                                      0             API                     0    char buf 1024                     0                    char     string                 0      char       buffer                                                    4 5                         CPU sys             minflt                                                                                                                                                4 5                                                                             1                                                                                         side effect                       gcc 3 4 5            gcc                         2                   const       MAXX            pow MAXX                  pow        CPU   10                             MAXXPOW             2      10                                                                                                                              CPU 15 20                                                                                                                                                                                1                            cpp         cpp                       2                        get           5                                                          48            ab                a b                             2                                                             8   3          2             a8 a    strncpy            snprintf         gcc              O2                                                 3        tcmalloc  O2         10          http   blog csdn net luckysym article details 38309137 http   www cnblogs com wujianlundao archive 2012 11 18 2776372 html",
        "objectID": "post/常见性能优化思路",
        "date": "2017-06-25T19:39:19.000Z",
        "tags": null,
        "categories": [
            " 软件工程 "
        ]
    },
    {
        "title": "丑数",
        "uri": "post/丑数",
        "content": "LeetCode 263  Ugly Number Write program check whether given number ugly number  Ugly numbers positive numbers whose prime factors include 2  3  5  example  6  8 ugly 14 not ugly includes prime factor 7  Note 1 typically treated ugly number              2 3 5             2 3 5      0           1          2 3 5     1         2 3 5     4  4 2             class Solution   public  bool isUgly int num     int i 2  dp n   int index2   0  index3   0  index_5   0  int val2   2  val3   3  val_5   5  dp 0    1  for int   1 i   primes    vector res n INT_MAX  index primes size   0   res 0  1            1 int size primes size    for int i 1 i",
        "objectID": "post/丑数",
        "date": "2017-06-24T23:59:47.000Z",
        "tags": [
            "Math"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "初识分布式系统",
        "uri": "post/初识分布式系统",
        "content": "IBM HP                                                                                                                                                  distributed systemdistributed                                             cluster                                                   https   www hollischuang com archives 655",
        "objectID": "post/初识分布式系统",
        "date": "2019-09-20T15:47:40.000Z",
        "tags": [
            "分布式"
        ],
        "categories": [
            "架构"
        ]
    },
    {
        "title": "除法的化简",
        "uri": "post/除法的化简",
        "content": "LeetCode 399  Evaluate Division Equations given format   B   k  B variables represented strings  k real number  floating point number   Given queries  return answers  answer does not exist  return  1 0  Example  Given   b   2 0  b   c   3 0  queries are    c      b          e             x   x       return  6 0  0 5   1 0  1 0   1 0    input is  vector  equations  vector  values  vector  queries   equations size      values size    values positive  represents equations  Return vector  According example above  equations       a    b      b    c      values    2 0  3 0   queries       a    c      b    a      a    e      a    a      x    x      input always valid  may assume evaluating queries will result no division zero no contradiction      FLoyd                  a b   2 0       a  b    2 0      a  b       b a  b a   1 2 0   0 5                          a b         a b                      a b b c   a c    a b   b c   class Solution   public  vector calcEquation vector  equations vector  values  vector  queries    unordered_map  hash              for int   0  ans  for auto val  queries                  ans push_back hashval first  count val second  hash val first  1   return ans",
        "objectID": "post/除法的化简",
        "date": "2017-06-25T02:22:24.000Z",
        "tags": [
            "DFS",
            "Graph"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "创建临时文件和目录",
        "uri": "post/创建临时文件和目录",
        "content": "Linux                  Linux   tmp                    Linux                 tmp                           tmp                                                             mktemp      tmp                shell              umask                                                                        root                      mktemp                mktemp                                                         6 X       mktemp testing XXXXXX mktemp    6       6 X                                                    mktemp                                   tempfile   mktemp test19 XXXXXX    tmp          t     mktemp                          mktemp                               mktemp              Linux                              mktemp                                               tempfile   mktemp  t tmp XXXXXX          d    mktemp                                                    tempdir   mktemp  d dir XXXXXX",
        "objectID": "post/创建临时文件和目录",
        "date": "2017-08-10T17:12:14.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "磁盘空间命令",
        "uri": "post/磁盘空间命令",
        "content": "mount   Linux            mount       mount                   mount                                                                       root          root      sudo                     mount  t type device directory type                   Linux                   Windows PC                        vfat Windows       ntfs Windows NT XP Vista  Windows 7              iso9660   CD ROM         U          vfat        CD     iso9660                                                    U  dev sdb1    media disk          mount  t vfat  dev sdb1  media disk               root                                 o                                     umount    Linux                                         umount                  n              umount           umount  directory   device   umount",
        "objectID": "post/磁盘空间命令",
        "date": "2017-08-07T11:49:47.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "从5随机到7随机及其扩展",
        "uri": "post/从5随机到7随机及其扩展",
        "content": "1 5     rand1To5    public int randlTo5     return  int   Math random     5    1                         randlT 5         1 7     rand1To7      public static int rand1To5     return  int   Math random     5    1    public static int rand1To7     int num   0    num    rand1To5     1    5   rand1To5     1     num   20   return num   7   1             P    0  1 p    1     randO1p    public int randOlp            p double p   0 83  return Math random   11   return num   6   1                   1 M     rand1ToM    public int rand1ToM int m    return  int   Math random     m   1                                  m n   rand1ToM m          1 n     rand1ToN      public static int rand1ToM int m    return  int   Math random     m    1    public static int rand1ToN int n  int m    int   nMSys   getMSysNum n   1  m   int   randNum   getRanMSysNumLessN nMSys  m   return getNumFromMSysNum randNum  m    1        value  m    public static int   getMSysNum int value  int m    int   res   new int 32   int index   res length   1   value    0    res index      value   m  value   value   m    return res                0 nMsys          m      public static int   getRanMSysNumLessN int   nMSys  int m    int   res   new int nMSys length   int start   0   nMSys start     0    start      int index   start  boolean lastEqual   true   index    nMSys length    res index    rand1ToM m    1   lastEqual     res index    nMSys index     index   start  lastEqual   true  continue    else   lastEqual   res index     nMSys index       index      return res       m          public static int getNumFromMSysNum int   mSysNum  int m    int res   0   int   0     mSysNum length  i      res   res   m   mSysNum i     return res",
        "objectID": "post/从5随机到7随机及其扩展",
        "date": "2017-09-02T12:31:15.000Z",
        "tags": [
            "Math"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "从石堆取石子的博弈问题",
        "uri": "post/从石堆取石子的博弈问题",
        "content": "LeetCode 292  Nim Game playing following Nim Game friend  heap stones table  time one turns remove 1 3 stones  one removes last stone will winner  will first turn remove stones  clever optimal strategies game  Write function determine whether win game given number stones heap  example  4 stones heap  will win game  no matter 1  2  3 stones remove  last stone will always removed friend  Hint  5 stones heap  figure remove stones will always winner                                                                                             3      3               4                                  5                    4                       1 10        1 Win 2 Win 3 Win 4 Lost 5 Win 6 Win 7 Win 8 Lost 9 Win 10 Win               4               4             class Solution   public  bool canWinNim int n    return n   4       LeetCode 464  Win  100 game   two players turns adding  running total  integer 1  10  player first causes running total reach exceed 100 wins  change game so players cannot re use integers  example  two players turns drawing common pool numbers 1  15 without replacement until reach total    100  Given integer maxChoosableInteger integer desiredTotal  determine first player move force win  assuming players play optimally  always assume maxChoosableInteger will not larger 20 desiredTotal will not larger 300  Example Input  maxChoosableInteger   10 desiredTotal   11 Output  false Explanation  No matter integer first player choose  first player will lose  first player choose integer 1 10  first player choose 1  second player choose integers 2 10  second player will win choosing 10 total   11     desiredTotal  integers chosen first player  second player will always win                  maxChoosableInteger  desiredTotal            1 maxChoosableInteger                                            0         desiredTotal                                                     desiredTotal                                               DP                                                20     int                         map    visit                             i  target     i         canWin target   i  mask   visited     false    mask   visited   i      1       visited       return true                          return true     return false               m visited    false  class Solution   private  int maxn  map m     map       map                map   public  bool canIWin int maxChoosableInteger  int desiredTotal    maxn   maxChoosableInteger  if maxn    desiredTotal  return true        if  1   maxn    maxn   2   target    canWin target   i  mask   visited     false     m visited    true  return true      m visited    false  return false",
        "objectID": "post/从石堆取石子的博弈问题",
        "date": "2017-06-24T22:11:34.000Z",
        "tags": [
            "Math",
            "博弈DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "从B树、B+树、B*树谈到R树",
        "uri": "post/从B树、B-树、B-树谈到R树",
        "content": "Binary Search Tree          Balanced Binary Search Tree      Red Black Tree   B tree B  tree  B  tree  B Tree                          O log2N                                                                                                                                            I O                                                                                                                                                                                                                                                                                                                                                              B tree  B             B        B                                            B      B                   B     B    B        B tree          B tree  B                                   B        B               B tree    B             B                                    B                        blog                  I 0                      B   B                  B   B         B             B                          B                      n    B      O lgn                                 B    O logn             insert     delete                    B                B            R   n x         x x n x  1               x   n x        x   n x  1                               R                             x   n x        x   n x  1       2    D H     3       3    Q T X     4          B  B              m  B                  m    m  2                        ceil m   2        ceil x                            2                                                                                                              null              n         n P0 K1 P1 K2 P2    Kn Pn      Ki  i 1 n                 K i 1  2                m                 m 1                                     2m 1                2m             2m 1                       B   B         B            2 3         B                 m 2 t 2     mmin 2 m    2   B                 B                       B   B  B      m m  2                              2  3  4        2 3 4                 t   B                                                  disk drives            1k 4k                                                       B          B                              IO                    3            B                        17                     17              p1    17                    typedef struct         int file_num       key   char   filename maxfile_num              BTNode   BTptr maxfilenum 1                 FILEHARDADDR offset maxfilenum    BTNode                B         2          BTNODE                                           29                       1               IO   1              17 35                          17      2                      J                J                                                                    K L        M           J             B                                        n    ceil m   2  1",
        "objectID": "post/从B树、B-树、B-树谈到R树",
        "date": "2017-06-25T22:44:23.000Z",
        "tags": [
            "量数据"
        ],
        "categories": [
            "算法"
        ]
    },
    {
        "title": "从N个数中等概率打印M个数",
        "uri": "post/从N个数中等概率打印M个数",
        "content": "N          air     n            arr  M                          O M          O 1       arr        public static void printRandM int   arr  int m     arr    null    arr length    0    m   0    return    m   Math min arr length  m   int count   0  int   0   count   m       int   Math random      arr length   count    System out println arr i    swap arr  arr length   count     1  i       public static void swap int   arr  int index1  int index2    int tmp   arr index1   arr index1    arr index2   arr index2    tmp",
        "objectID": "post/从N个数中等概率打印M个数",
        "date": "2017-09-03T17:02:02.000Z",
        "tags": [
            "Random"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "打印二叉树的边界节点",
        "uri": "post/打印二叉树的边界节点",
        "content": "head                                                                                                                                                                        O n             0 h   h                                                                                                                             1 2  4  7  11 13                                                      14 15                                                  16 12 10  6 3                      printEdgel",
        "objectID": "post/打印二叉树的边界节点",
        "date": "2017-08-17T17:32:32.000Z",
        "tags": [
            "Tree"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "打印N个数组整体最大的Top K",
        "uri": "post/打印N个数组整体最大的Top-K",
        "content": "N                            N         K           N            N       219 405 538 845 971 148 558 52 99 348 691      k 5      Top 5  971 845 691 558 538                  k                      O KlogN       public static class HeapNode   public int value       public int arrNum            public int index               public HeapNode int value  int arrNum  int index    this value   value  this arrNum   arrNum  this index   index      public static void printTopK int matrix  int topK    int heapSize   matrix length  HeapNode   heap   new HeapNode heapSize    int   0     heapSize  i      int index   matrix i  length   1  heapi    new HeapNode matrix i  i  index   heapInsert heap  i     System out println  TOP     topK            int   0     topK  i       heapSize    0    break    System out print heap 0  value          heap 0  index    0    heap0  value   matrix heap 0  arrNum index     else   swap heap  0    heapSize     heapify heap  0  heapSize       public static void heapInsert HeapNode   heap  int index     index    0    int parent    index   1    2   heap parent  value heap index  value    largest   left     right heap largest  value    largest   right     largest    index    swap heap  largest  index     else   break    index   largest  left   index   2   1  right   index   2   2      public static void swap HeapNode   heap  int index1  int index2    HeapNode tmp   heap index1   heap index1    heap index2   heap index2    tmp",
        "objectID": "post/打印N个数组整体最大的Top-K",
        "date": "2017-09-01T23:54:58.000Z",
        "tags": [
            "Array",
            "Heap"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "打桩框架:gomonkey",
        "uri": "post/打桩框架:gomonkey",
        "content": "gomonkey   golang                                              gomonkey                                       gomonkey 1 0                                                                                                                            https   github com agiledragon gomonkey releases tag v1 0      gomonkey     API                                      goconvey        golang                                      Web       ApplyFunc ApplyFunc         func ApplyFunc target  double interface     Patches func  this Patches  ApplyFunc target  double interface    Patches ApplyFunc                           patches      Reset                         import      github com agiledragon gomonkey     github com smartystreets goconvey convey   testing   github com agiledragon gomonkey test fake   encoding json    var   outputExpect    xxx vethName100 yyy    func TestApplyFunc t  testing T    Convey  TestApplyFunc   t  func     Convey  one func succ   func     patches    ApplyFunc fake Exec  func _ string  _    string   string  error    return outputExpect  nil    defer patches Reset   output  err    fake Exec         So err  ShouldEqual  nil  So output  ShouldEqual  outputExpect     Convey  one func fail   func     patches    ApplyFunc fake Exec  func _ string  _    string   string  error    return     fake ErrActual    defer patches Reset   output  err    fake Exec         So err  ShouldEqual  fake ErrActual  So output  ShouldEqual         Convey  two funcs   func     patches    ApplyFunc fake Exec  func _ string  _    string   string  error    return outputExpect  nil    defer patches Reset   patches ApplyFunc fake Belong  func _ string  _   string  bool   return true    output  err    fake Exec         So err  ShouldEqual  nil  So output  ShouldEqual  outputExpect  flag    fake Belong     nil  So flag  ShouldBeTrue     Convey  input output param   func     patches    ApplyFunc json Unmarshal  func _   byte  v interface    error   p    v   map int int   p   make map int int    p  1    2   p  2    4 return nil    defer patches Reset   var m map int int err    json Unmarshal nil   m  So err  ShouldEqual  nil  So m 1   ShouldEqual  2  So m 2   ShouldEqual  4          ApplyMethod ApplyMethod         func ApplyMethod target reflect Type  methodName string  double interface     Patches func  this Patches  ApplyMethod target reflect Type  methodName string  double interface    Patches ApplyMethod                                                     patches      Reset                           import      github com agiledragon gomonkey     github com smartystreets goconvey convey   testing   reflect   github com agiledragon gomonkey test fake    func TestApplyMethod t  testing T    slice    fake NewSlice   var s  fake Slice Convey  TestApplyMethod   t  func     Convey  for succ   func     err    slice Add 1  So err  ShouldEqual  nil  patches    ApplyMethod reflect TypeOf s    Add   func _  fake Slice  _ int  error   return nil    defer patches Reset   err   slice Add 1  So err  ShouldEqual  nil  err   slice Remove 1  So err  ShouldEqual  nil  So len slice   ShouldEqual  0     Convey  for already exist   func     err    slice Add 2  So err  ShouldEqual  nil  patches    ApplyMethod reflect TypeOf s    Add   func _  fake Slice  _ int  error   return fake ERRELEMEXIST    defer patches Reset   err   slice Add 1  So err  ShouldEqual  fake ERRELEMEXIST  err   slice Remove 2  So err  ShouldEqual  nil  So len slice   ShouldEqual  0     Convey  two methods   func     err    slice Add 3  So err  ShouldEqual  nil  defer slice Remove 3  patches    ApplyMethod reflect TypeOf s    Add   func _  fake Slice  _ int  error   return fake ERRELEMEXIST    defer patches Reset   patches ApplyMethod reflect TypeOf s    Remove   func _  fake Slice  _ int  error   return fake ERRELEMNT_EXIST    err   slice Add 2  So err  ShouldEqual  fake ERRELEMEXIST  err   slice Remove 1  So err  ShouldEqual  fake ERRELEMNT_EXIST  So len slice   ShouldEqual  1  So slice 0   ShouldEqual  3     Convey  one func one method   func     err    slice Add 4  So err  ShouldEqual  nil  defer slice Remove 4  patches    ApplyFunc fake Exec  func _ string  _    string   string  error    return outputExpect  nil    defer patches Reset   patches ApplyMethod reflect TypeOf s    Remove   func _  fake Slice  _ int  error   return fake ERRELEMNT_EXIST    output  err    fake Exec         So err  ShouldEqual  nil  So output  ShouldEqual  outputExpect  err   slice Remove 1  So err  ShouldEqual  fake ERRELEMNT_EXIST  So len slice   ShouldEqual  1  So slice 0   ShouldEqual  4          ApplyGlobalVar ApplyGlobalVar         func ApplyGlobalVar target  double interface     Patches func  this Patches  ApplyGlobalVar target  double interface    Patches ApplyGlobalVar                                  patches      Reset                           import      github com agiledragon gomonkey     github com smartystreets goconvey convey   testing    var num   10 func TestApplyGlobalVar t  testing T    Convey  TestApplyGlobalVar   t  func     Convey  change   func     patches    ApplyGlobalVar  num  150  defer p",
        "objectID": "post/打桩框架:gomonkey",
        "date": "2020-01-27T15:30:34.000Z",
        "tags": [
            "Go",
            "gomonkey"
        ],
        "categories": [
            "Go测试"
        ]
    },
    {
        "title": "大端模式和小端模式转化及网络字节序",
        "uri": "post/大端模式和小端模式转化及网络字节序",
        "content": "http   blog csdn net szchtx article details 42834391           Big Endian                                                                                                                 Little Endian                                                                                                                                                                  bool IsBigEndian    union NUM  int a  char b   num  num a   0x1234  if  num b    0x12    return true    return false                   32     4             uint32t reversebytesuint32t uint32_t value   return  value   0x000000FFU    8    value   0xFF000000U     24            8  0 8    24      8  24 32   8 16   8     16 24      8   16          8   16                                             32        64   8                                        64   32          64   32                 32     32      32     32  uint64t reversebytesuint64t uint64_t value   uint32t highuint64   uint64t reversebytesuint32t uint32_t value         32      uint64t lowuint64    uint64t reversebytesuint32t uint32_t value    32        32      return  highuint64   32    lowuint64                                                                                                             UDP TCP IP                                                                                                                                                                                                        0x12345678   80X86                                   htonl                               htons   host network short  short                    ntohs   network host short  short                    htonl   host network long  long                    ntohl   network host long  long",
        "objectID": "post/大端模式和小端模式转化及网络字节序",
        "date": "2017-06-25T16:49:07.000Z",
        "tags": null,
        "categories": [
            "Linux编程 "
        ]
    },
    {
        "title": "带缓存IO和不带缓存IO",
        "uri": "post/带缓存IO和不带缓存IO",
        "content": "system call                                                                                                                                             Application Programming Interface API                          API                                                I O              I O           IO                       read   write                                  IO                                                                                                  100             ssizet write  int fd const void   buf sizet count          count 10          10                                                IO                                                IO    IO    IO   ANSI C    IO                    I O             read write       IO                     I O            I O      malloc                             I O      I O                                          I O     I O   stdin stdout                read write  stderr                                           I O                   I   O                                 fgets fputs                      I   O        read write          I   O                        fgets                                                                      100            IO  write      10                                                  50        C    fwrite                      50                     write                                  IO  fwrite            IO  write          fwrite   100             write            I   O           I O             read write           IO                         IO",
        "objectID": "post/带缓存IO和不带缓存IO",
        "date": "2017-06-25T14:23:32.000Z",
        "tags": null,
        "categories": [
            "Linux内核"
        ]
    },
    {
        "title": "单机定时器的实现方案",
        "uri": "post/单机定时器的实现方案",
        "content": "TCP                                              11   0                                                                                                                  Deadline                                  NewTask            Cancel                      Run                                                                NewTask   Cancel                                                      NewTask       Cancel       Run                                                 LinkedList            NewTask O N  Cancel O 1  Run O 1      NewTask O N           expireTime           Cancel O 1      Cancel                                                                      Run O 1              expireTime                                                                                                                                                                                PriorityQueue                 Comparator             expireTime   Comparator        NewTask O logN  Cancel O logN  Run O 1  NewTask O logN    Cancel O logN                       Run O 1    expireTime                                                         O nlgn              NewTask   Cancel     trade off                                                                                                            bucket      bucket                List                                       bucket                           bucket    HashMap       newTask    put    List     Hash                bucket   1                  8s          0          3s                 0 3 3            3                10s                2            2     round 1                   round   0    bucket        round   1        bucket5          8 5 13s                 16 5 21s              NewTask O 1  Cancel O 1  Run O M  Tick O 1  M  bucket  M   N C     C     bucket                                                  bucket                   Run    O M    O 1               List       O 1                    O M                         bucket                 tickDuration   ticksPerWheel  tickDuration     bucket        ticksPerWheel         bucket                            bucket      ticksPerWheel         bucket                tickDuration                              CPU                     ticksPerWheel                   tickDuration              care                       1ms   spoke   2 10        1s 2 20  17 476min      1s   spoke   2 10      17min 2 20  12day                                                                                              round       bucket     List                                                                                          spoke                 spoke                                      5           spoke            8 6 6 6 6            2 6 2 6 2 6 2 6 2 8   2 32 ticks    tick   10ms                 42949672 96s   497                      round              round      round   0         round                          NewTask O H  Cancel O H  Run O M  Tick O 1  H                3   10    50   30          tickDuration   1s               3246060 106060 5060 30                 wheel1 tickDuration   1   wheel2 tickDuration   1    wheel3 tickDuration   1   wheel4 tickDuration   1                  3 10 50 30                            tickDuration                                                                                                                                                        PriorityQueue                                     bucket       ticksPerWheel tickDuration                                                     Worker                                                        bucket                                                                                                                                                                              https   www cnkirito moe timer  https   blog csdn net anonymalias article details 52022787",
        "objectID": "post/单机定时器的实现方案",
        "date": "2019-10-20T16:43:10.000Z",
        "tags": [
            "定时器"
        ],
        "categories": [
            "架构"
        ]
    },
    {
        "title": "单机限流算法总结",
        "uri": "post/单机限流算法总结",
        "content": "Nginx    Web Server                                                                             Rate limit                                   Web                HTTP                                                                                                                                                                    X RateLimit Limit  60     60    X RateLimit Remaining  23            X RateLimit Reset  1540650789              HTTP Response                                                                                                                                Counter                                      query           200                 count                1                        count                                    1          1                                                   1      count              count        type Counter struct   Count uint          Limit uint               Interval int64         ms RefreshTime int64           func  c  Counter  rateLimit   bool      time Now   Unix     return b   return                                                                                                                                                                                  Traffic Shaping       Rate Limiting                                                                                                                                                                                rate                                                                      type TokenBucket struct   Capacity int64         Rate int64           Tokens int64           RefreshTime int64   func  t  TokenBucket  rateLimit   bool      time Now   Unix            t Tokens   min t Capacity  t Tokens  now t RefreshTime  t Rate   t RefreshTime   t Tokens   1            1      return false   else                t Tokens   return true                                      B                                 N                                                                 3    4                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               https   www jianshu com p a59c13e70582 https   blog biezhi me 2018 10 rate limit algorithm html",
        "objectID": "post/单机限流算法总结",
        "date": "2019-11-04T11:51:54.000Z",
        "tags": [
            "限流"
        ],
        "categories": [
            "架构"
        ]
    },
    {
        "title": "单链表排序总结",
        "uri": "post/单链表排序总结",
        "content": "LeetCode 147  Insertion Sort List Sort linked list using insertion sort                                          i                                        i 1        i 1                           i                                                         Definition singly linked list  struct ListNode   int val  ListNode  next  ListNode int x    val x   next NULL           class Solution   public  ListNode  insertionSortList ListNode  head    if head    nullptr  return nullptr  ListNode  helper   new ListNode 0         ListNode  cur   head  while cur  nullptr              cur   ListNode  next   cur  next       cur        ListNode  pre   helper            cur                                  while         pre   pre  next             while pre  next  NULL    pre  next  valval                   cur     pre            pre   pre  next       cur  pre  next   cur  next   pre  next        pre  next   cur        cur   next          cur   return helper  next                          head                        0 1                   0 1                                                                                                                                                                                newHead                                                                      2  1  3     1         2  3                                                                               newHead  public static class Node   public int value  public Node next  public Node int data    this value   data      public static Node selectionSort Node head    Node tail   null           Node cur   head             Node smallPre   null           Node small   null           cur    null    small   cur  smallPre   getSmallestPreNode cur    smallPre    null    small   smallPre next  smallPre next   small next    cur   cur    small   cur next   cur   tail    null    head   small    else   tail next   small    tail   small    return head    public static Node getSmallestPreNode Node head    Node smallPre   null  Node small   head  Node pre   head  Node cur   head next   cur    null     cur value next    NULL return head                ListNode fast   head  slow   head   fast  next    NULL    fast  next  next    NULL    fast   fast  next  next  slow   slow  next          fast   slow  slow   slow  next   slow           fast  next   NULL  ListNode  l1   sortList head            ListNode  l2   sortList slow            return mergeTwoLists l1  l2        Merge Two Sorted Lists ListNode mergeTwoLists ListNode l1  ListNode  l2    ListNode dummy INT_MIN           ListNode  tail    dummy   l1    l2     l1  val val    tail  next   l1  l1   l1  next    else   tail  next   l2  l2   l2  next    tail   tail  next    tail  next   l1   l1   l2              tail  return dummy  next                                   head         next  NULL         head                                                                                                       O n 2                               O nlogn                                                                                                                                                                                                                                next                                                  p q        next             p   key      key p q   key      key    q                                                                                            struct Node   int key  Node  next  Node int nKey  Node  pNext    key nKey    next pNext        Node  GetPartion Node  pBegin  Node  pEnd    if pBegin  pEnd                  return pBegin  int key   pBegin  key       Node  p   pBegin             Node  q   p  next  while q    pEnd    if q  key next          pBegin swap p  key q  key     q   q  next    swap p  key pBegin  key   return p    void QuickSort Node  pBeign  Node  pEnd    if pBeign    pEnd    Node  partion   GetPartion pBeign pEnd   QuickSort pBeign partion   if partion  next  QuickSort partion  next pEnd",
        "objectID": "post/单链表排序总结",
        "date": "2017-06-24T20:31:28.000Z",
        "tags": [
            "Linked List",
            "Sort"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "当你输入一个网址的时候，实际会发生什么?",
        "uri": "post/当你输入一个网址的时候，实际会发生什么",
        "content": "HTTP HTML                                                                              IP                    IP   DNS                      DNS                          DNS                          2   30                                             windows  gethostbyname                                                  DNS    ISP DNS          check   ISP  DNS                               ISP DNS                     com        Facebook         DNS          com                                DNS           DNS            wikipedia org    facebook com                   IP                        DNS  DNS       IP            Facebook com         IP                IP                                                           DNS                          IP                                         Anycast    IP                      Anycast TCP                           DNS     Anycast         DNS    3      web       HTTP      Facebook                                                            Facebook        http   facebook com  HTTP 1 1 Accept  application x ms application  image jpeg  application xaml xml        User Agent  Mozilla 4 0  compatible  MSIE 8 0  Windows NT 6 1  WOW64        Accept Encoding  gzip  deflate Connection  Keep Alive Host  facebook com Cookie  datr 1265876274        locale enUS  lsd WW       cuser 2101                 URL   http   facebook com             User Agent                    Accept Accept Encoding     Connection                 TCP                    cookies                   cookies                   cookies                          Cookies                                  HTTP                    fiddler      FireBug                                                           URL      e g   http   robozzle com puzzle aspx id 85                       http   facebook com                                  http    example com folderOrFile               folderOrFile                                                                   4  facebook                Facebook              HTTP 1 1 301 Moved Permanently Cache Control  private  no store  no cache  must revalidate  post check 0  pre check 0 Expires  Sat  01 Jan 2000 00 00 00 GMT Location  http   www facebook com  P3P  CP  DSP LAW  Pragma  no cache Set Cookie  madewriteconn deleted  expires Thu  12 Feb 2009 05 09 50 GMT  path    domain  facebook com  httponly Content Type  text html  charset utf 8 X Cnection  close Date  Fri  12 Feb 2010 05 09 51 GMT Content Length  0            301                  http   www facebook com      http   facebook com                                                                                   http   www igoro com   http   igoro com                                              301                    www    www                                                                 5                       http   www facebook com                            http   www facebook com  HTTP 1 1 Accept  application x ms application  image jpeg  application xaml xml        Accept Language  en US User Agent  Mozilla 4 0  compatible  MSIE 8 0  Windows NT 6 1  WOW64        Accept Encoding  gzip  deflate Connection  Keep Alive Cookie  lsd XW       c_user 21       x referer       Host  www facebook com                 6                                                                                        facebook            Web       web       IIS        HTTP                                       HTML          ASP NET PHP RUBY                                     http   example com folder1 page1 aspx         httpdocs folder1 page1 aspx     web                          page1 aspx         http   example com folder1 page1                     cookies                                       HTML                                        SQL                                                     sharding                                                                     Fackbook       feed                                                                                               HTML                   HTTP 1 1 200 OK Cache Control  private  no store  no cache  must revalidate  post check 0  pre check 0 Expires  Sat  01 Jan 2000 00 00 00 GMT P3P  CP  DSP LAW  Pragma  no cache Content Encoding  gzip Content Type  text html  charset utf 8 X Cnection  close Transfer Encoding  chunked Date  Fri  12 Feb 2010 09 05 55 GMT 2b3Tn              35kB           blob                      gzip         blob             HTML                                        cookies                                 Content type    text html               HTML                                              URL           8         HTML             HTML                             HTML           HTML                                                        facebook com         URL     http   static ak fbcdn net rsrc php z12E0 hash 8q2anwu7 gif http   static ak fbcdn net rsrc php zBS5C hash 7hwy7at6 gif   CSS     http   static ak fbcdn net rsrc php z448Z hash 2plh8s4n css http   static ak fbcdn net rsrc php zANE1 hash cvtutcee css   JavaScript    http   static ak fbcdn net rsrc php zEMOA ",
        "objectID": "post/当你输入一个网址的时候，实际会发生什么",
        "date": "2017-06-25T20:02:36.000Z",
        "tags": [
            "TTP"
        ],
        "categories": [
            "网络"
        ]
    },
    {
        "title": "地址的类型转换和数学计算",
        "uri": "post/地址的类型转换和数学计算",
        "content": "include using namespace std  int main void    int ch  ch getchar    cout ch   ch     char ch        ch                                              char  a  int   a  char                static_cast a   char a  int   a         char                                                                include int main     int   3  float b  float c  b    float a  c     float   a   printf  b    f nc    f n  b c   return 0                                                                                byte                 struct BBB   long num  char  name  short int data  char ha  short ba 5     p  p 0x1000000  p 0x200 __   Ulong p 0x200 __   char  p 0x200 __         32 CPU   sizeof long    4 bytes sizeof char      4 bytes sizeof short int    sizeof short    2 bytes sizeof char    1 bytes    4      sizeof struct BBB    sizeof p    4   4   2   1   1       2  5   2       24 bytes   Dev C      p 0x1000000  p 0x200 __    0x1000000   0x200 24                           p  sizeof p  0x200   char p 0x200 __    0x1000000   0x200 1      char                sizeof p         1 char      1    Ulong p 0x200 __    0x1000000   0x200                p                                                                            x86            intmain     int a 4   1 2 3 4   int ptr1  int    a 1   int ptr2  int    int a 1   int ptr0   a 1  printf   d n  ptr0   printf   x  x  ptr1  1   ptr2   return 0                  ptr0 a  a               a          a 0      a           a 1            a 1    a 1           a 5   ptr1   a 1        int      int      ptr ptr1       a     int       ptr1  1       ptr1 1   ptr1    4  byte      0x4  ptr2          int a 1      a 0                       int      ptr2     ptr2        a 0            4  byte               C                                                                            sizeof",
        "objectID": "post/地址的类型转换和数学计算",
        "date": "2017-06-23T14:47:16.000Z",
        "tags": null,
        "categories": [
            "C++"
        ]
    },
    {
        "title": "为什么Go拒绝递归锁",
        "uri": "post/递归锁与非递归锁解析",
        "content": "Mutex        recursive mutex       non recursive mutex             reentrant mutex              non reentrant mutex                                                                 Windows  Mutex Critical Section       Linux  pthreadmutext                PTHREADMUTEXRECURSIVE    pthreadmutext                                                            p Prev Next    p                             x  p Prev                                                                                                                                                                           i   d i    d                                                                                                                Go  map                                func F     mu Lock       stuff     G       stuff     mu Unlock     func G     mu Lock       stuff     mu Unlock          mu Lock                          mu Unlock          G mu Lock mu Unlock         no ops          mu           mu           mu Lock G                        F   G          F       G                                                                                       func F     mu Lock       stuff                                                                                                      G          called mu already held     Caller careful ensure     func g         stuff       func G     mu Lock   g   mu Unlock                   g gLocked            TryLock         CL                                                     CL",
        "objectID": "post/递归锁与非递归锁解析",
        "date": "2019-01-25T13:18:41.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "点赞系统的设计",
        "uri": "post/点赞系统的设计",
        "content": "Redis                                                                                          Redis                                       Redis         1 1 Redis       Redis                Docker      Redis docker run  d  p 6379 6379 redis 4 0 8             Redis            Redis     redis server     1 2 Redis   SpringBoot         pom xml       org springframework boot spring boot starter data redis                 EnableCaching  SpringBootApplication  EnableDiscoveryClient  EnableSwagger2  EnableFeignClients basePackages    com solo coderiver project client    EnableCaching public class UserApplication   public static void main String   args    SpringApplication run UserApplication class  args               Redis     RedisConfig import com fasterxml jackson annotation JsonAutoDetect  import com fasterxml jackson annotation PropertyAccessor  import com fasterxml jackson databind ObjectMapper  import org springframework boot autoconfigure condition ConditionalOnMissingBean  import org springframework context annotation Bean  import org springframework context annotation Configuration  import org springframework data redis connection RedisConnectionFactory  import org springframework data redis core RedisTemplate  import org springframework data redis core StringRedisTemplate  import org springframework data redis serializer Jackson2JsonRedisSerializer  import java net UnknownHostException   Configuration public class RedisConfig    Bean  ConditionalOnMissingBean name    redisTemplate   public RedisTemplate redisTemplate  RedisConnectionFactory redisConnectionFactory  throws UnknownHostException   Jackson2JsonRedisSerializer jackson2JsonRedisSerializer   new Jackson2JsonRedisSerializer Object class   ObjectMapper om   new ObjectMapper    om setVisibility PropertyAccessor ALL  JsonAutoDetect Visibility ANY   om enableDefaultTyping ObjectMapper DefaultTyping NON_FINAL   jackson2JsonRedisSerializer setObjectMapper om   RedisTemplate template   new RedisTemplate    template setConnectionFactory redisConnectionFactory   template setKeySerializer jackson2JsonRedisSerializer   template setValueSerializer jackson2JsonRedisSerializer   template setHashKeySerializer jackson2JsonRedisSerializer   template setHashValueSerializer jackson2JsonRedisSerializer   template afterPropertiesSet    return template     Bean  ConditionalOnMissingBean StringRedisTemplate class  public StringRedisTemplate stringRedisTemplate  RedisConnectionFactory redisConnectionFactory  throws UnknownHostException   StringRedisTemplate template   new StringRedisTemplate    template setConnectionFactory redisConnectionFactory   return template             Redis   SpringBoot                      1 3 Redis         Redis       5                5          String      List     Set     Hash      Zset             5                                   String                                                 increment      decrement  List                                                    trim                          Set             unorderedcollection                                                                                Hash                                   Zset       member        score                                             range           1 4       Redis          Redis                                                                                                 Redis              Redis       Hash         Hash                                                                                  id   likedPostId       id   likedUserId         1         0      id       id        id                                   likedUserId  likedPostId       1              likedUserId  likedPostId       0                      id              RDM          1 5    Redis Redis                                          RedisService     RedisService java import com solo coderiver user dataobject UserLike  import com solo coderiver user dto LikedCountDTO  import java util List  public interface RedisService             1  param likedUserId  param likedPostId    void saveLiked2Redis String likedUserId  String likedPostId                  0  param likedUserId  param likedPostId    void unlikeFromRedis String likedUserId  String likedPostId        Redis           param likedUserId  param likedPostId    void deleteLikedFromRedis String likedUserId  String likedPostId               1  param likedUserId    void incrementLikedCount String likedUserId               1  param likedUserId    void decrementLikedCount String likedUserId         Redis            return    List getLikedDataFromRedis          Redis            return    List getLikedCountFromRedis               RedisServiceImpl java import com solo coderiver user dataobject UserLike  import com solo coderiver user dto LikedCountDTO  import com solo coderiver user enums LikedStatusEnum  import com solo coderiver user service LikedService  import com solo coderiver user service RedisService  import com solo coderiver user utils RedisKeyUtils  import lombok extern slf4j Slf4j  import org springframework beans factory annotation Autowired  ",
        "objectID": "post/点赞系统的设计",
        "date": "2019-11-29T21:23:47.000Z",
        "tags": [
            "架构"
        ],
        "categories": [
            "架构"
        ]
    },
    {
        "title": "调试工具Valgrind",
        "uri": "post/调试工具Valgrind",
        "content": "Valgrind    Linux                           Purify                    CPU                                    Valgrind                   cache               Valgrind                                                     GDB            GDB                                                    pedantic  Wall  Wextra                                       Valgrind                             Valgrind     Memcheck                                         malloc free new delete                                                   malloc                                              malloc free new delete    memcpy        dst src             C C            Memcheck          Callgrind  gprof                                    gprof                                 Callgrind                                cache                        callgrind_annotate                    Cachegrind cachegrind   cache         CPU  L1  D1 L2 cache               cache                cache              cache                                                              x86 amd64   cachegrind  CPUID       cache                          Helgrind helgrind              helgrind                                                                                                      Helgrind                                                          Helgrind      Eraser                               Massif                                          Massif                                                         Massif          profile                                          C         C                lackey nulgrind    lackey nulgrind     Lackey           Nulgrind                           Valgrind        valgrind  options  prog and args  options             Valgrind     tool            valgrind   toolname      memcheck   h   help                           version   valgrind                    q   quiet                  verbose           trace children          default  no    track fds             default  no    time stamp        LOG     default  no    log fd    LOG        2 stderr    log file           filename PID     PID        ID   log file exactly    LOG    file LOG       xml yes     xml       memcheck     num callers  show callers stack traces  12    error exitcode                 0 disable    db attach        valgrind        gdb  default  no    db command              gdb  nw  f  p     Memcheck           leak check     leak        Leak                               summary                  malloc    free      full      leaks          malloc free   default  summary    show reachable     no           leaks    malloc           leaks  default  no  Valgrind          tar  jxvf valgrind 3 11 0 tar bz2  C  usr local src        cd  usr local src valgrind 3 11 0     autogen sh           autoconf      autogen sh   Valgrind   MakeFile     configure   prefix  usr local      valgrind    install Valgrind     valgrind                              g           O0         valgrind                                                                    trace children yes         memcheck               sample c              gcc          gcc  g  O0 sample c  o sample   valgrind                     32372      Process ID               valgrind                  valgrind                                                         4 bytes                                                                           40 bytes                         fun                                   valgrind    memcheck     1                 include int main     int x  if x    0    printf  X zero      return 0    Valgrind     14222   Conditional jump move depends uninitialised value s  14222   0x400484  main  sample2 c 6  X zero  14222   14222   ERROR SUMMARY  1 errors 1 contexts  suppressed  5 1  14222   malloc free  use exit  0 bytes 0 blocks  14222   malloc free  0 allocs  0 frees  0 bytes allocated  14222   counts detected errors  rerun with   v 14222   heap blocks freed    no leaks possible   2              include  include int main int argc char  argv      int len 5  int i  int pt  int malloc len sizeof int    int  p pt  for i 0 i  include  include int main int argc char  argv      char x 50   int i  for i 0 i  include int main int argc char  argv      char p  char malloc 10   char  pt p  int i  for i 0 i int main     char x    char malloc 20   char y    char malloc 20   x y  free x   free y   return 0    Valgrind     19013   Invalid free     delete   delete   19013   0x4A0541E  free  vgreplacemalloc c 233  19013   0x4004F5  main  sample5 c 8  19013   Address 0x4C2E078 0 bytes inside block size 20 free d 19013   0x4A0541E  free  vgreplacemalloc c 233  19013   0x4004EC  main  sample5 c 7  19013   19013   ERROR SUMMARY  1 errors 1 contexts  suppressed  5 1  19013   malloc free  use exit  20 bytes 1 blocks  19013   malloc free  2 allocs  2 frees  40 bytes allocated  19013   counts detected errors  rerun with   v 19013   searching pointers 1 not freed blocks  19013   checked 66 584 bytes  19013   19013   LEAK SUMMARY  19013   definitely lost  20 bytes 1 blocks  19013   possibly lost  0 bytes 0 blocks  19013   reachable  0 byt",
        "objectID": "post/调试工具Valgrind",
        "date": "2017-06-25T05:10:36.000Z",
        "tags": null,
        "categories": [
            "Linux编程"
        ]
    },
    {
        "title": "调整[0,x)区间上的数出现的频率",
        "uri": "post/调整[0,x)区间上的数出现的频率",
        "content": "public static double randXPowerK int k     k   1    return 0    double res    1   int   0     k  i      res   Math max res  Math random       return res",
        "objectID": "post/调整[0,x)区间上的数出现的频率",
        "date": "2017-09-03T14:47:00.000Z",
        "tags": [
            "Random"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "调整搜索二叉树中两个错误的节点",
        "uri": "post/调整搜索二叉树中两个错误的节点",
        "content": "LeetCode 99  Recover Binary Search Tree Two elements binary search tree  BST  swapped mistake  Recover tree without changing its structure  Note  solution using O n  space pretty straight forward  devise constant space solution                                                     pre                             pre                                      2                                       pre                      root                           1 2 3 4 5                  1 5 3 4 2        5  3           5       4  2           2  5 2              Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  TreeNode p q  TreeNode  prev  void recoverTree TreeNode  root    p q prev NULL  inorder root   swap p  val q  val     void inorder TreeNode  root    if root  NULL  return  inorder root  left   if prev  NULL   prev  val root  val                                   p q   if p  NULL p prev  q root    prev root          inorder root  right                 class Solution   public  void recoverTree TreeNode  root    if  root  return  TreeNode wnd1   NULL  wnd2   NULL  TreeNode cur   root  pre   NULL   preTrav   NULL  while cur   if  cur    left   if preTrav     preTrav    val   cur    val            if  wnd1   wnd1   preTrav    wnd2   cur    preTrav   cur  cur   cur    right   else  pre   cur  cur   cur    left  while cur    right    cur    right    pre   cur   cur    right    if  cur    right   cur    right   pre  cur   pre    left   else  cur    right   NULL  if preTrav     preTrav    val   pre    val            if  wnd1   wnd1   preTrav    wnd2   pre    preTrav   pre  cur   pre    right        int temp   wnd1    val  wnd1    val   wnd2    val  wnd2    val   temp                                                                                                                                                                                                     getTwoErrParents           2 Node     parents  parents 0               parents 1                public static class Node   public int value  public Node left  public Node right  public Node int data    this value   data      public static Node   getTwoErrParents Node head  Node e1  Node e2     e1 e2          Node   parents   new Node 2    head    null    return parents    Stack stack   new Stack      stack isEmpty      head    null     head    null             stack push head   head   head left    else   head   stack pop     head left    e1    head right    e1    parents 0    head     head left    e2    head right    e2    parents 1    head    head   head right      return parents                            e1  e1      e1P  e1       e1L  e1      e1R          e2  e2      e2P  e2      e2L  e2      e2R                                    e2   e1P       e1L e1R  e2       e1  e2P       e2L  e2R  e1                                              e1        e1P null    e2  e1P         e1P   left   right             e1P null    Node             e1    e2      e1  e2L    e2L  el      e1 left     e2L                                       e1            e2                                                    el e2                       el e2                       el e2                                    el    e2   e1    e2      e2     e1                                          14           e1 e2                e1   e1 e2     e2    e1      e1   e1  e2   e2 e2P      e1   e1  e2   e2 e2P      e2   e2 e1     e1    e2      e2   e2  e1   e1 e1P      e2   e2  e1   e1 e1P      e1 e2     e1 e2     e2    e1     e1 e1P       e1 e2     e1 e2     e2    e1     e1 e1P       e1 e2     e2 el     el    e2     e2 e2P       e1 e2     e2 e1     e1    e2     e2 e2P      e1 e2               e1 e1P     e2 e2P      e1 e2               e1 e1P     e2 e2P      e1 e2               e1 e1P     e2 e2P      el e2               e1 e1P     e2 e2P         1   3               e2    4   6               e1                        public static Node recoverTree Node head    Node   errs   getTwoErrNodes head   Node   parents   getTwoErrParents head  errs 0   errs 1    Node e1   errs 0   Node e1P   parents 0   Node e1L   e1 left  Node e1R   e1 right  Node e2   errs 1   Node e2P   parents 1   Node e2L   e2 left  Node e2R   e2 right   e1    head     e1    e2P        1 e1 left   e2L  e1 right   e2R  e2 right   e1  e2 left   e1L    else  e2P left    e2        2 e2P left   e1  e2 left   e1L  e2 right   e1R  e1 left   e2L  e1 right   e2R    else       3 e2P right   e1  e2 left   e1L  e2 right   e1R  e1 left   e2L  e1 right   e2R    head   e2    else  e2    head     e2    e1P         4 e2 left   e1L  e2 right   e1R  e1 left   e2  e1 right   e2R    else  e1P left    e1         5 e1P left   e2  e1 left   e2L  e1 right   e2R  e2 left   e1L  e2 right   e1R    else        6 e1P right   e2  e1 left   e2L  e1 right   e2R  e2 left   e1L  e2 right   e1R    head   e1    else    e1    e2P     e1P left    e1         7 e1P left   e2  e1 left   e2L  e1 right   e2R  e2 left   e1L  e2 right   e1    else        8 e1P right   e2  e1 left   e2L  e1 right",
        "objectID": "post/调整搜索二叉树中两个错误的节点",
        "date": "2017-08-19T20:13:36.000Z",
        "tags": [
            "Tree",
            "BST"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "迭代器和指针的区别",
        "uri": "post/迭代器和指针的区别",
        "content": "STL  Standard Template Library                                       lift                                                                           cout                                                                                                       STL           STL",
        "objectID": "post/迭代器和指针的区别",
        "date": "2017-06-24T11:42:56.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "定时运行作业",
        "uri": "post/定时运行作业",
        "content": "Linux                    at   cron                              at          at      Linux         at               shell        at     atd                      atd                       var spool at     at               atd      60               atd        3                       atd             at   at               f filename  time       at    STDIN              f                       time     Linux                       at                     at                             10 15  AM PM      10 15 PM            now noon midnight  teatime 4 PM                                             MMDDYY MM DD YY DD MM YY         Jul 4 Dec 25                           25 min     10 15 PM 10 15 7      at                 job queue           at                       26                    a z      A Z                                nice         at        a                       q                      Linux                           Linux                     STDOUT STDERR     STDOUT STDERR                     cat test13 sh    bin bash Test using command echo  This script ran   date   B d  T   echo sleep 5 echo  This script s end        f test13 sh job 7 2015 07 14 12 38   at                            f             now  at             e mail  at          at    sendmail                      sendmail                 at            STDOUT STDERR        cat test13b sh    bin bash Test using command echo  This script ran   date   B d  T     test13b out echo    test13b out sleep 5 echo  This script s end        test13b out      M  f test13b sh job 8 2015 07 14 12 48     cat test13b out script ran July14 12 48 18 script s end           at                 M                atq   atq                     atq 20 2015 07 14 13 03   Christine 18 2015 07 15 13 03 Christine 17 2015 07 14 16 00 Christine 19 2015 07 14 13 30 Christine                                       atrm                      atrm                                                   atrm 18             Linux    cron              cron                      cron                  1  cron    cron                             min hour dayofmonth month dayofweek command cron                  1 5                            10 15          cron       15 10       command  dayofmonth month  dayofweek            cron        10 15               4 15 PM                15 16     1 command            mon tue wed thu fri sat sun     0    6        dayofweek                         12                00 12 1     command dayofmonth            1 31                                    dayofmonth                   Linux Unix                          date   if then             01  00 12        date   d  d tomorrow   01       command        12                   cron                                                                    15 10        home rich test4 sh   test4out cron                                                2   cron             root          cron             Linux    crontab     cron          cron        l      crontab  l no crontab rich            cron            cron            e           crontab                  cron                                3    cron                             cron          4       hourly daily monthly weekly                          daily   cron         4  anacron   cron           Linux   7 24         Linux                             cron                  Linux                             cron                           Linux       anacron      anacron                              Linux                                                                                               anacron                       anacron        cron         etc cron monthly                             cron                 var spool  anacron    sudo cat  var spool anacron  cron monthly 20150626   anacron                etc anacrontab            sudo cat  etc anacrontab  etc anacrontab  configuration file anacron anacron 8  anacrontab 5  details  SHELL  bin sh PATH  sbin  bin  usr sbin  usr bin MAILTO root maximal random delay added base delay jobs RANDOM_DELAY 45 jobs will started during following hours STARTHOURSRANGE 3 22  period days delay minutes job identifier command 1 5 cron daily nice run parts  etc cron daily anacron         cron         period delay identifier command period                    anacron                   delay          anacron                      command     run parts     cron      run parts                       anacron       etc cron hourly        anacron                     identifier               cron weekly                          shell                         bash shell              bash shell                  shell      shell                                bash shell                                                                          HOME  bash_profile  HOME  bash_login  HOME  profile                                     shell  bash shell     bashrc     bashrc          bash            bashrc               bash shell            bash shell",
        "objectID": "post/定时运行作业",
        "date": "2017-08-11T09:47:13.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "定位系统环境变量",
        "uri": "post/定位系统环境变量",
        "content": "shell     Linux      bash shell       bash                             bash             bash shell      bash shell 3              shell      shell    shell           shell   shell     Linux    bash shell     shell     shell  5                 etc profile  HOME  bash_profile  HOME  bashrc  HOME  bash_login  HOME  profile  etc profile         bash shell                               etc profile    etc profile   bash shell                Linux   bash      etc profile           HOME                                                        Linux                     HOME  bash_profile  HOME  bashrc  HOME  bash_login  HOME  profile                                 ls                   HOME                                          bash shell       shell                                HOME  bash_profile  HOME  bash_login  HOME  profile             HOME  bashrc                          shell       bash shell                        bash            shell     shell    shell     shell                            bash      shell           etc profile         HOME      bashrc     bashrc              etc      bashrc                                      shell     shell     shell     shell         shell                            bash shell   BASH_ENV      shell        shell                                    shell                 shell           BASH_ENV       shell                      shell          shell      shell     shell                shell   shell   etc profile  etc profile d   sh  HOME  bashrc                    shell                 shell                  shell                  shell             shell           BASH_ENV        shell                              Linux                                      etc profile                                                                 etc profile d         sh                                                   bash shell       HOME  bashrc              shell         BASH_ENV                 HOME  bashrc           shell",
        "objectID": "post/定位系统环境变量",
        "date": "2017-08-07T22:09:00.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "丢棋子问题",
        "uri": "post/丢棋子问题",
        "content": "mapi    i    j          0 1 2 3 4 5 6 7 8 9 10      1 0 1 2 3 4 5 6 7 8 9 10 2 0 1 3 6 10 15 21 28 36 45 55 3 0 1 3 7 14 25 41 63 92 129 175 4 0 1 3 7 15 30 56 98 162 255 385 5 0 1 3 7 15 31 62 119 218 381 637   V     public static int solution5 int nLevel  int kChess     nLevel   bsTimes    return bsTimes    int   dp   new int kChess   int res   0   true    res    int previous   0   int   0    nLevel    return res          public static int log2N int n    int res    1   n    0    res    n      1    return res",
        "objectID": "post/丢棋子问题",
        "date": "2017-09-03T19:11:19.000Z",
        "tags": [
            "DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "读事务:ReadConcern",
        "uri": "post/读事务:ReadConcern",
        "content": "readPreference              readConcern                         readPreference         Driver                                       readConcern                       readPreference     readPreference readpreference                            prmary        primarypreferred                      secondary        secondarypreferred                        nearest         ReadPreference                          primary primarypreferred                                 secondary secondarypreferred                           secondary                                                                       nearest                     Readpreference Tag readpreference            Tag                              5         3                  2                      Tag             3         purpose   online    2         purpose  analyse            online        analyse Readpreference      Mongodb         mongodb   host1 27107 host2 27107 host3 27017  replicaset rs readpreference secondary    Mongodb      APl  MongoCollection Withreadpreference Readpreference readpref  Mongo Shell  db collection Find     Readpref   secondary           readpreference               readpreference   prmary           prmary                      primarypreferred    Tag                           Tag                                                                                           Tag                                         Tag  Tag                                             0  readConcern     read Concern    readpreference           read Concern                                      available            local                   majority                                linearizable           snapshot             local available       oalL   available                                 chunk x     shard1   shard2            chunk x          shard1   shard2            shard1     chunk X           chunk x           shard1 config        chunk x      shard1       shard2        local   available     local       shard2           x  available  shard2             x                   local                                            available Mongodb",
        "objectID": "post/读事务:ReadConcern",
        "date": "2020-03-26T23:53:52.000Z",
        "tags": [
            "MongoDB"
        ],
        "categories": [
            "MongoDB"
        ]
    },
    {
        "title": "堆栈跟踪:Stack-Trace",
        "uri": "post/堆栈跟踪:Stack-Trace",
        "content": "Stack Trace                             panic           Stack Trace                  Go                                log             panic     log                                  bug             bug                        log                    Go                                                                                                  1 package main func main     slice    make   string  2  4  Example slice   hello   10    func Example slice   string  str string  int    panic  Want stack trace       1          main    5   Example   Example    8                slice                               panic                   2 Panic  Want stack trace goroutine 1  running   main Example 0x2080c3f50  0x2  0x4  0x425c0  0x5  0xa   Users bill Spaces Go Projects src github com goinaction code  temp main go 9  0x64 main main    Users bill Spaces Go Projects src github com goinaction code  temp main go 5  0x85 goroutine 2  runnable   runtime forcegchelper    Users bill go src runtime proc go 90 runtime goexit    Users bill go src runtime asm_amd64 s 2232  0x1 goroutine 3  runnable   runtime bgsweep    Users bill go src runtime mgc0 go 82 runtime goexit    Users bill go src runtime asm_amd64 s 2232  0x1   2   panic       goroutine    goroutine                panic gotoutine                    3 goroutine 1  running   main Example 0x2080c3f50  0x2  0x4  0x425c0  0x5  0xa   Users bill Spaces Go Projects src github com goinaction code  temp main go 9  0x64 main main    Users bill Spaces Go Projects src github com goinaction code  temp main go 5  0x85   Go 1 6                  panic             goroutine       3      panic      goroutine id  1 goroutine       panic        main package  Example                     panic       9         Example         main package main                   Example                 panic      goroutine                 Example         4    Declaration main Example slice   string  str string  int     Call Example main  slice    make   string  2  4  Example slice   hello   10     Stack trace main Example 0x2080c3f50  0x2  0x4  0x425c0  0x5  0xa    4   Example                                                                 6 16                                         string      slice                       header value             slice       word                   slice    5    Slice parameter value slice    make   string  2  4     Slice header values Pointer  0x2080c3f50 Length  0x2 Capacity  0x4    Declaration main Example slice   string  str string  int     Stack trace main Example 0x2080c3f50  0x2  0x4  0x425c0  0x5  0xa    5   0x2080c3f50         string    0x2  slice   0x4                                                     header              word                               6    String parameter value  hello     String header values Pointer  0x425c0 Length  0x5    Declaration main Example slice   string  str string  int     Stack trace main Example 0x2080c3f50  0x2  0x4  0x425c0  0x5  0xa    6           4   5            0x425c0                0x5  hello                                      word     7    Integer parameter value 10    Integer value Base 16  0xa    Declaration main Example slice   string  str string  int     Stack trace main Example 0x2080c3f50  0x2  0x4  0x425c0  0x5  0xa    7              Example              0xa      10                  Example        8 package main import  fmt  type trace struct   func main     slice    make   string  2  4  var t trace t Example slice   hello   10    func  t  trace  Example slice   string  str string  int    fmt Printf  Receiver Address   p n   t  panic  Want stack trace       8  5         trace   14 example   trace pointer receiver       10   t    trace  11                  pointer receiver    Go  t      receiver type                                    9 Receiver Address  0x1553a8 panic  Want stack trace goroutine 1  running   main   trace  Example 0x1553a8  0x2081b7f50  0x2  0x4  0xdc1d0  0x5  0xa   Users bill Spaces Go Projects src github com goinaction code  temp main go 16  0x116 main main    Users bill Spaces Go Projects src github com goinaction code  temp main go 11  0xae   9  5         receiver pointer type             trace                         receiver                   receiver                                  Example                                Packing                 word                    10 package main func main     Example true  false  true  25    func Example b1  b2  b3 bool  uint8    panic  Want stack trace       10  Example        4                      8bit            8bit                   word   32    64                         11 goroutine 1  running   main Example 0x19010001   Users bill Spaces Go Projects src github com goinaction code  temp main go 8  0x64 main main    Users bill Spaces Go Projects src github com goinaction code  temp main go 4  0x32                   0x19010001    12    Parameter values true  false  true  25    Word value Bits Binary Hex Value 00 07 0000 0001 01 true 08 15 0000 0000 00 false 16 23 0000 0001 01 true 24 31 0001 1001 19 25    Declaration main Example b1  b2  b3 bool  uint8     Stack ",
        "objectID": "post/堆栈跟踪:Stack-Trace",
        "date": "2020-02-11T09:44:31.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go调优"
        ]
    },
    {
        "title": "多进程模型详解",
        "uri": "post/多进程模型详解",
        "content": "pid                         PCB        PCB                             PCB                                          PCB        PCB                                                                                                                                   execv                             shell         shell   fork          execv                                                                        0       1         1      init       getty      shell                            program                  shell              shell     shell                 shell                                pid_t fork void            1       pid   0     pid    0       void exit int status   status              S    0          PID  pid_t getpid void        pid       PID  pid_t getppid void        pid                exit   _exit   return  main    exit   exit     exit    exit                            exit                         exit      exit            return exit     exit                        return                           main                     abort                         fork                                                                                                        init     init                                                   wait  waitpid                                                   1   pid_t wait int  status       wait            wait                                                    status                  2   pidt waitpid pidt pid  int  status  int options         pid         id    1      0            pid                   pid 0            pid      status           options          waitpid      options   WNOHANG                  options   WUNYRACED                              Linux      UNIX                                                                                                                                                                                                               int pipe int fd 2    fd 2       fd 0  fd 1          fd 0         fd 1                      fd 0  close          fd 1  close                      FIFO                                                        int mkfifo const char  pathname  mode_t mode   pathname      FIFO                  mode  open                                                                                                                          int shmget key_t key  int size  int flag           key                1  key                           key  size         flag        open mode                   void shmat int shmid  void addr  int flag                 shmid shmget         addr              flag                int shmdt const void  shmaddr         0      1  shmaddr  shmat                                                                                                                                                                                                                                                                                                        POSIX           SYSTEM V                 int semget key_t key  int nsems  int semflag                     1  key   pid  nsems           semflag                    int semop int semid  struct sembuf  sops  unsigned nsops                  sembuf            semop      sembuf        struct sembuf         struct sembuf  short sem_num  short sem_op  short sem_flg                     1  semid          semget        sops   struct sembuf          sembuf          nsops             sops              1          1                          int semctl int semid  int semnum  int cmd  union semun arg   semid          semnum                      arg union semun         ipcs                       ipcs  a                    ipcs  l         ipcs  u",
        "objectID": "post/多进程模型详解",
        "date": "2017-09-10T22:25:16.000Z",
        "categories": [
            "Linux编程"
        ]
    },
    {
        "title": "多态实现机制详解",
        "uri": "post/多态实现机制详解",
        "content": "1                               0                                                   1      struct X   int a  int b      define VALUEOFPTR p    long  p  int main     int X   p   0     VALUEOFPTR p      1 p    X  a     VALUEOFPTR p     0 p    X  b     VALUEOFPTR p     4 return 0    2                          size           x64  16       ptr adj      1           ptr                           this    adj         this        this                adj   0    extern  C  int printf const char         struct B   void foo     printf  B  foo      0x p n   this        struct D   public B   void bar     printf  D  bar      0x p n   this        void  B   pbfoo       B  foo     ptr  points _ZN1B3fooEv  adj  0 void  D   pdfoo       D  foo     ptr  points _ZN1B3fooEv  adj  0 void  D   pdbar       D  bar     ptr  points _ZN1D3barEv  adj  0 extern  C  void _ZN1B3fooEv B    extern  C  void _ZN1D3barEv D     define PART1OFPTR p     long  p  0     long  p              long            define PART2OFPTR p     long   p  1   int main     printf   B  foo  ptr  0x lX n   PART1OFPTR pbfoo    printf   B  foo  adj  0x lX n   PART2OFPTR pbfoo       0 printf   D  foo  ptr  0x lX n   PART1OFPTR pdfoo    printf   D  foo  adj  0x lX n   PART2OFPTR pdfoo       0 printf   D  bar  ptr  0x lX n   PART1OFPTR pdbar    printf   D  bar  adj  0x lX n   PART2OFPTR pdbar       0 D  d   new D    d  foo    _ZN1B3fooEv d      equal d  foo   d  bar    _ZN1D3barEv d      equal d  bar   return 0     2          ptr                           1     1    0        adj       this                       this          0                     A B                             vptr   C       A B        C        A  foo B  bar       C    foo    C      A  foo     C  foo   C         vptr1 vptr2             A  foo C  foo  B  Bar C  bar             0      ptr 1 0 1 1   C  quz    4      ptr 5 4 1 5        pc  C  bar        pc   pcbar            B  bar    _ZN1B3barEv pc   pc      B          this         B  bar      adj     extern  C  int printf const char         struct   virtual void foo     printf  A  foo      0x p n   this        struct B   virtual void bar     printf  B  bar      0x p n   this        struct C   public A  public B   virtual void quz     printf  C  quz      0x p n   this        void  A   pafoo       A  foo     ptr  1  adj  0 void  B   pbbar       B  bar     ptr  1  adj  0 void  C   pcfoo       C  foo     ptr  1  adj  0 void  C   pcquz       C  quz     ptr  5  adj  0 void  C   pcbar       C  bar     ptr  1  adj  8  define PART1OFPTR p     long   p  0    define PART2OFPTR p     long   p  1   int main     printf   A  foo  ptr  0x lX     PART1OFPTR pafoo       1 printf   A  foo  adj  0x lX n   PART2OFPTR pafoo       0 printf   B  bar  ptr  0x lX     PART1OFPTR pbbar       1 printf   B  bar  adj  0x lX n   PART2OFPTR pbbar       0 printf   C  foo  ptr  0x lX     PART1OFPTR pcfoo       1 printf   C  foo  adj  0x lX n   PART2OFPTR pcfoo       0 printf   C  quz  ptr  0x lX     PART1OFPTR pcquz       5 printf   C  quz  adj  0x lX n   PART2OFPTR pcquz       0 printf   C  bar  ptr  0x lX     PART1OFPTR pcbar       1 printf   C  bar  adj  0x lX n   PART2OFPTR pcbar       4 return 0    VPTR   VTABLE                           VTABLE                                VTABLE                                    VTABLE                    virtual               1     vptr           n                      n     vptr                               class specific                         staic                                                                                       vptr                         gcc           vptr                    vptr                                                                                          vtable Linux Unix                 rodata                                         1                                                                                 B         B  foo B  bar        D              B    B  foo      override       B  bar D  bar         D  quz                                        2                     B          D                     D                                                3                          pb B                       pb      B           D         pb  bar                operator         B  bar   pb B          bar B  bar   B  bar D  bar                     pb                                                  vptr                        ptr                     1  B  bar            ptr     9   B           8 8 1 9          pb  bar         vptr      vtbl                   pb  B         B   vptr      8  char  vptr   8      B  bar    pb  D         D   vptr      8  char  vptr   8       D  bar    pb             4                                                     vptr         D           D        B             B D     primary base class                                                                                                                          5                       4          1                 overwrite          D  f            f1    f2              Df                                           B        B1 B2    D         D    B1 B",
        "objectID": "post/多态实现机制详解",
        "date": "2017-06-24T14:39:11.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "多线程模型详解",
        "uri": "post/多线程模型详解",
        "content": "https   github com linw7 Skill Tree blob master  E6 93 8D E4 BD 9C E7 B3 BB E7 BB 9F md mutex                                                                                int   10                         i         CPU                                            i     1                                                                                                                                                                                          QQ                                                                                                                                                                                                            tid                                                                      PC                                                                       main                                                            main                                       main                                            int pthreadcreate pthreadt pthread  const pthreadattrt attr  void  start_routine  void    void agr           pthread start_routine                         NULL  pthread        tid  pthread   tid   pthread_t    unsigned long int  attr                           NULL       start_routine                    arg                                                                  ID  pthreadt pthreadself             ID          int pthreadjoin pthreadt tid  void   retval           tid                     wait waitpid         pthread_join         tid            tid   retval             tid                  NULL       pthread_exit void  retval                    retval             pthread_join    retval           int pthreaddetach pthreadt tid                   pthreaddetach tid      pthreaddetach pthread_self                              tid                      pthreadattrt          typedef struct  int etachstate             int schedpolicy            struct sched_param schedparam             int inheritsched            int scope                         size_t guardsize                 int stackaddr_set            void   stackaddr            size_t stacksize            pthreadarrtt                       pthreadattrget      pthreadattrset",
        "objectID": "post/多线程模型详解",
        "date": "2017-06-25T14:20:42.000Z",
        "tags": null,
        "categories": [
            "Linux编程"
        ]
    },
    {
        "title": "多线程之间共享哪些资源？",
        "uri": "post/多线程之间共享哪些资源？",
        "content": "bss  data                                         new             new                                                                      ID    ID         ID            ID   ID                                                                                                                                                                                                         error                                       errno",
        "objectID": "post/多线程之间共享哪些资源？",
        "date": "2017-06-25T14:22:33.000Z",
        "tags": null,
        "categories": [
            "Linux编程"
        ]
    },
    {
        "title": "多线程中的信号处理",
        "uri": "post/多线程中的信号处理",
        "content": "linux                                       linux           signal mask                              sigmask               signal action                      sigaction                                     SIGPIPE SIGEGV                         pthreadkill           pthreadkill                        kill           SIGINT SIGHUP job control                                                                        signal mask           signal action               pthread_sigmask   sigmask                    sigaction                          sigaction",
        "objectID": "post/多线程中的信号处理",
        "date": "2017-06-25T14:22:16.000Z",
        "tags": null,
        "categories": [
            "Linux编程"
        ]
    },
    {
        "title": "二叉树的按层打印与ZigZig打印",
        "uri": "post/二叉树的按层打印与ZigZig打印",
        "content": "LeetCode102  Binary Tree Level Order Traversal Given binary tree  return level order traversal its nodes  values   ie  left right  level level   example  Given binary tree  3 9 20 null null 15 7   3     9 20     15 7 return its level order traversal as     3    9 20    15 7                                 2             Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  vector  levelOrder TreeNode  root    vector result           root       return result  queue vec                 vec push root             vec empty      queue tmp_vec                  vector tmp_result                 vec empty        BFS TreeNode  node   vec front            vec pop     node  left              2 tmp_vec push node  left    node  right  tmp_vec push node  right   tmpresult pushback node  val               vec   tmp_vec            result pushback tmpresult            return result        107  Binary Tree Level Order Traversal II Given binary tree  return bottom up level order traversal its nodes  values   ie  left right  level level leaf root   example  Given binary tree  3 9 20 null null 15 7   3     9 20     15 7 return its bottom up level order traversal as     15 7    9 20    3                           Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  vector  levelOrderBottom TreeNode  root    BFS             vector result           root       return result  queue vec                 vec push root             vec empty      queue tmp_vec                  vector tmp_result                 vec empty        BFS TreeNode  node   vec front            vec pop     node  left              2 tmp_vec push node  left    node  right  tmp_vec push node  right   tmpresult pushback node  val               vec   tmp_vec            result pushback tmpresult                          reverse result begin    result end     return result       103  Binary Tree Zigzag Level Order Traversal Given binary tree  return zigzag level order traversal its nodes  values   ie  left right  right left next level alternate between   example  Given binary tree  3 9 20 null null 15 7   3     9 20     15 7 return its zigzag level order traversal as     3    20 9    15 7                                                                                       Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  vector   zigzagLevelOrder TreeNode  root     root    NULL    empty tree return vector       vector   result  queue nodesQueue  nodesQueue push root   bool leftToRight   true     nodesQueue empty      int size   nodesQueue size              vector row size            int   0  val         node  left  nodesQueue push node  left    node  right  nodesQueue push node  right     leftToRight    leftToRight           result push_back row     return result",
        "objectID": "post/二叉树的按层打印与ZigZig打印",
        "date": "2017-06-25T02:21:28.000Z",
        "tags": [
            "Tree",
            "BFS"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "二叉树的类型",
        "uri": "post/二叉树的类型",
        "content": "i           2  i 1   i 1      k       2 k 1    k 1     n             log2  n 1                      n0   2     n2  n0 n2 1    1     i           2 i 1   i 1                      i 1   i       2 i 1  2 0  1    1                     i 1  i       2 i 1        01                       i 1        2 i                            i 1                i       2       i 1            2 2 i 1  2 i                  2    k       2 k  1    k 1                                              1       k            20 21   2k 1 2k 1          3   n             log2  n 1          2       h       2 h  1           n             log2 n 1     4                    n0   2     n2  n0 n2 1                      2          n   0     n0      1     n1      2     n2                   n n0 n1 n2      0        1         2                      n1 2n2                                           n n1 2n2 1                  n0 n2 1                                                                               2                                                                                                            1                                                                                                                                    1 n                                mid                      n     n                                                Huffman Tree",
        "objectID": "post/二叉树的类型",
        "date": "2017-06-25T22:45:38.000Z",
        "tags": null,
        "categories": [
            "算法"
        ]
    },
    {
        "title": "二叉树的前序/中序/后序遍历",
        "uri": "post/二叉树的前序:中序:后序遍历",
        "content": "LeetCode 94  Binary Tree Inorder Traversal Given binary tree  return inorder traversal its nodes  values                                                     Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  vector inorderTraversal TreeNode  root                     vector vector  stack stack  TreeNode  pCurrent   root  while  stack empty      pCurrent    if pCurrent                        stack push pCurrent   pCurrent   pCurrent  left    else                                             TreeNode  pNode   stack top    stack pop    vector push_back pNode  val   pCurrent   pNode  right      return vector                   O 1                                                         left   right                                    NULL                                          NULL                    2                                        left  right         right      left                                                                                                                                                                                                                                                       a                                                    b                                                                                 1 2          class Solution   public  vector inorderTraversal TreeNode  root                                                                                vector v  if NULL    root  return v  TreeNode cur  pre        cur   root  while cur   if  cur    left                                      v push_back cur    val   cur   cur    right   else                                              pre   cur          pre cur   cur    left  while cur    right    cur    right    pre                                      cur   cur    right    if  cur    right                                                                                        cur    right   pre  cur   pre    left                     else                                                                                                                   cur    right   NULL  v push_back pre    val   cur   pre    right                 return v       LeetCode 144  Binary Tree Preorder Traversal Given binary tree  return preorder traversal its nodes  values                                         Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  vector preorderTraversal TreeNode  root    stack nodeStack  vector result    base case if root  NULL  return result  nodeStack push root           while  nodeStack empty      TreeNode  node  nodeStack top    result push_back node  val   nodeStack pop           if node  right       nodeStack push node  right   if node  left       nodeStack push node  left                     return result       LeetCode 145  Binary Tree Postorder Traversal Given binary tree  return postorder traversal its nodes  values                                                                    Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  vector postorderTraversal TreeNode  root    stack nodeStack  vector result  if root  NULL  return result  nodeStack push root   while  nodeStack empty      TreeNode  node  nodeStack top    result push_back node  val   nodeStack pop    if node  left       nodeStack push node  left   if node  right       nodeStack push node  right     reverse result begin   result end     return result               class Solution   public  vector postorderTraversal TreeNode  root    vector result  const TreeNode p  q     p         q            stack s  p   root     p    nullptr              s push p   p   p  left    q   nullptr    s empty      p   s top    s pop     p  right    q                        result push_back p  val   q   p                   else   s push p                        p   p  right              break          s empty     return result                class Solution   public  vector postorderTraversal TreeNode  root    vector result  TreeNode dummy  1   TreeNode cur  prev   nullptr  std  function visit    result  result push_back node  val      dummy left   root  cur    dummy   cur    nullptr     cur  left    nullptr    prev   cur             cur   cur  right    else   TreeNode  node   cur  left   node  right    nullptr    node  right    cur  node   node  right   node  right    nullptr                      node  right   cur  prev   cur             cur   cur  left    else                           visit_reverse cur  left  prev  visit   prev  right   nullptr  prev   cur             cur   cur  right        return result    private          static void reverse TreeNode from  TreeNode to    TreeNode x   from  y   from  right   z   from    to  return   x    to    z   y  right  y  right   x  x   y  y   z                        stat",
        "objectID": "post/二叉树的前序:中序:后序遍历",
        "date": "2017-06-25T02:26:40.000Z",
        "tags": [
            "Tree"
        ],
        "categories": [
            "解题报告 "
        ]
    },
    {
        "title": "二叉树的深度",
        "uri": "post/二叉树的深度",
        "content": "LeetCode 104  Maximum Depth Binary Tree Given binary tree  find its maximum depth  maximum depth number nodes along longest path root node down farthest leaf node                 dfs    dfs                   Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  int maxDepth TreeNode  root    return root    NULL   0   max maxDepth root    left   maxDepth root    right     1       LeetCode 111  Minimum Depth Binary Tree Given binary tree  find its minimum depth  minimum depth number nodes along shortest path root node down nearest leaf node                                                                                                  lleft   int r   minDepth root  right     l                  return r 1    r  return l 1  return  lleft         while r   hr   r r  right             leftDepth rightDepth      node                    node            pow 2 leftDepth  1  if hl  hr  return 1left  countNodes root  right",
        "objectID": "post/二叉树的深度",
        "date": "2017-06-25T00:01:10.000Z",
        "tags": [
            "Tree",
            "DFS"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "二叉树的序列化与反序列化",
        "uri": "post/二叉树的序列化与反序列化",
        "content": "LeetCode 297  Serialize Deserialize Binary Tree Serialization process converting data structure object sequence bits so stored file memory buffer  transmitted across network connection link reconstructed later computer environment  Design algorithm serialize deserialize binary tree  no restriction serialization deserialization algorithm work  just need ensure binary tree serialized string string deserialized original tree structure  example  may serialize following tree 1     2 3     4 5   1 2 3 null null 4 5    just LeetCode OJ serializes binary tree  not necessarily need follow format  so please creative different approaches yourself  Note  not use class member global static variables store states  serialize deserialize algorithms stateless                                                                                                                                                                         Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Codec   public     Encodes tree single string  string serialize TreeNode  root                ostringstream out       serialize root  out   return out str        string      Decodes encoded data tree  TreeNode  deserialize string data          istringstream in data        return deserialize in     private  void serialize TreeNode  root  ostringstream  out     root          val left  out   serialize root  right  out     else          val        val         return nullptr  TreeNode  root   new TreeNode stoi val    root  left   deserialize in   root  right   deserialize in   return root          Codec object will instantiated called such     Codec codec     codec deserialize codec serialize root    LeetCode 449  Serialize Deserialize BST Serialization process converting data structure object sequence bits so stored file memory buffer  transmitted across network connection link reconstructed later computer environment  Design algorithm serialize deserialize binary search tree  no restriction serialization deserialization algorithm work  just need ensure binary search tree serialized string string deserialized original tree structure  encoded string compact possible  Note  not use class member global static variables store states  serialize deserialize algorithms stateless                 LeetCode 331  Verify Preorder Serialization Binary Tree One serialize binary tree use pre order traversal  When encounter non null node  record node s value  null node  record using sentinel value    9     3 2         4 1   6                     example  above binary tree serialized string  9 3 4     1     2   6         represents null node  Given string comma separated values  verify whether correct preorder traversal serialization binary tree  Find algorithm without reconstructing tree  comma separated value string either integer character     representing null pointer  may assume input format always valid  example contain two consecutive commas  1  3   Example 1   9 3 4     1     2   6      Return true Example 2   1    Return false Example 3   9     1  Return false                                              2    1    2    1             0    1    0    1                         1          1                                                               diff   outdegree   indegree              diff  0              diff   1                diff                                                                        class Solution   public  bool isValidSerialization string preorder    stringstream ss preorder   string val  int diff   1   getline ss  val         diff    1   diff   0  return false   val         diff    2    return diff    0",
        "objectID": "post/二叉树的序列化与反序列化",
        "date": "2017-06-24T16:12:28.000Z",
        "tags": [
            "BST",
            "Tree"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "二叉树节点间的公共祖先",
        "uri": "post/二叉树节点间的公共祖先",
        "content": "LeetCode 235  Lowest Common Ancestor Binary Search Tree Given binary search tree  BST   find lowest common ancestor  LCA  two given nodes BST  According definition LCA Wikipedia   The lowest common ancestor defined two nodes v w lowest node T v w descendants  where allow node descendant itself    6_     2_ 8_         0 _4 7 9     3 5 example  lowest common ancestor  LCA  nodes 2 8 6  example LCA nodes 2 4 2  node descendant itself according LCA definition      1   a b                       2   a b                       3   a b                                             Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  TreeNode  lowestCommonAncestor TreeNode  root  TreeNode  p  TreeNode  q     p    val val    q    val val  return lowestCommonAncestor root    left  p  q    p    val   root    val    q    val   root    val  return lowestCommonAncestor root    right  p  q     DFS                    return                               return root       LeetCode 236  Lowest Common Ancestor Binary Tree Given binary tree  find lowest common ancestor  LCA  two given nodes tree  According definition LCA Wikipedia   The lowest common ancestor defined two nodes v w lowest node T v w descendants  where allow node descendant itself    3_     5_ 1_         6 _2 0 8     7 4 example  lowest common ancestor  LCA  nodes 5 1 3  example LCA nodes 5 4 5  node descendant itself according LCA definition                                                                                                                                   Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  TreeNode  lowestCommonAncestor TreeNode  root  TreeNode  p  TreeNode  q    if root  NULL  root  p  root  q                                         return root  TreeNode  left lowestCommonAncestor root  left p q   TreeNode  right lowestCommonAncestor root  right p q   if left  NULL  right  NULL  return root  return left  NULL left right      p q    root         root    LCA                                                              O N               Tarjan                 3 42              ques 0     4   7  ques l     7   8  ques 2     8     9   ques 3      9     3   ques 4      6     6   ques 5   null     5   ques 6   null   null        ques     ans                        1     1   2          ques 4   ans 4    6     1  2     null              ques 5   ans 5     5  3     1    2    null     null    ques 6    ans 6  null                                    1         queryMap indexMap queryMap       key             value          key             indexMap  key             value                 key               ans                  node  node                  queryMap          ans           indexMap        ques 0 3  queryMap indexMap                    1  2                                                                                   Tarjan    M                                      3 42         1                1   2       9                    2      4         4      4       4         4   7          7     7      7                                     2        p      p       2         4     4      4    p                               4 2        4 2         2      7         7       7       7       7    4          4     4 2     4 2         2      4   7         indexMap       0       ans 0     2       7   8          8     8      8                          5         5       5       5         7     7         7 5        7 5         5",
        "objectID": "post/二叉树节点间的公共祖先",
        "date": "2017-06-25T02:22:13.000Z",
        "tags": [
            "DFS",
            "Tree",
            "LCA"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "翻转字符串",
        "uri": "post/翻转字符串",
        "content": "LeetCode 344  Reverse String Write function takes string input returns string reversed  Example  Given s    hello   return  olleh                          class Solution   public  string reverseString string s    int   0  j   s size     1  while i   temp  string res temp rbegin   temp rend      ss    temp    reverse temp begin   temp end     res   res         temp    return res       151  Reverse Words String Given input string  reverse string word word  example  Given s    the sky blue   return  blue sky the   Update  2015 02 12   C programmers  Try solve in place O 1  space                                         O 1            string           string                     class Solution          public  void reverseWords string  s    if s size     0  return  int left   0  right   0   0    right left               while i   temp  s   temp   ss    temp  s   temp         s                    O 1         string      class Solution   public  void reverseWords string  s    string result        int   0  0  result         result       result   s substr pos    pos    result  i      s   result",
        "objectID": "post/翻转字符串",
        "date": "2017-06-24T16:10:18.000Z",
        "tags": null,
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "反转链表",
        "uri": "post/反转链表",
        "content": "LeetCode 24  Swap Nodes Pairs Given linked list  swap every two adjacent nodes return its head  example  Given 1  2  3  4  return list 2  1  4  3  algorithm use constant space  may not modify values list  nodes itself changed                             Definition singly linked list  struct ListNode   int val  ListNode  next  ListNode int x    val x   next NULL           class Solution   public  ListNode  swapPairs ListNode  head    ListNode  p   head   p    p  next    swap p  val  p  next  val   p   p  next  next    return head       LeetCode 206  Reverse Linked List Reverse singly linked list                                                                       A  B  X    B  A  X                                         class Solution   public  ListNode  reverseList ListNode  head    if head  NULL  head  next  NULL        return head  ListNode   pre NULL        A       NULL   head  next  NULL  ListNode   cur head        B ListNode   tmp NULL         while cur      A          tmp cur  next           X cur  next pre         B  A pre cur           cur tmp                return pre                                                      dummy    N                               dummy  next           N     A  B  Y       N  B     A  Y  N         A B N    N  B     A  Y                N  next                    class Solution   public  ListNode  reverseList ListNode  head      head  return head  ListNode  dummy   new ListNode  1   dummy  next   head  ListNode  pre   head    A ListNode  cur   pre  next    B  cur    pre  next   cur  next    A  Y cur  next   dummy  next   B    dummy  next   cur    N  B cur  pre  next    cur                       return dummy  next                             p                                                                                                    p                                                               Definition singly linked list  struct ListNode   int val  ListNode  next  ListNode int x    val x   next NULL           class Solution   public  ListNode  reverseList ListNode  head     head    nullptr    head  next    nullptr  return head          ListNode  p   reverseList head  next   head  next  next   head             head  next   nullptr      0  return p       92  Reverse Linked List II Reverse linked list position m n  in place one pass  example  Given 1  2  3  4  5  NULL  m   2 n   4  return 1  4  3  2  5  NULL  Note  Given m  n satisfy following condition  1   m   n   length list                 m n              3                                      newhead     n m    cur                   cur   prev    prev                                 Definition singly linked list  struct ListNode   int val  ListNode  next  ListNode int x    val x   next NULL           class Solution   public  ListNode reverseBetween ListNode head  int m  int n    ListNode dummy  1   dummy next   head  ListNode  prev    dummy   int   0  next  ListNode  const newhead   prev   newhead  m 1             X prev   newhead  next           A ListNode  cur   prev  next           B  int   m  next   cur  next    A  Y cur  next   newhead  next   B    newhead  next   cur     N  B cur   prev  next    cur                       return dummy next       143  Reorder List Given singly linked list L  L0 L1   Ln 1 Ln  reorder to  L0 Ln L1 Ln 1 L2 Ln 2   in place without altering nodes  values  example  Given  1 2 3 4   reorder  1 4 2 3                                                      O n                                Definition singly linked list  struct ListNode   int val  ListNode  next  ListNode int x    val x   next NULL           class Solution   public  void reorderList ListNode  head    if  head     head  next  return  ListNode slow   head  fast   head  p head  q head  while fast  next    fast  next  next  slow   slow  next  fast   fast  next  next  fast   slow  next slow  next   NULL    fast    slow              ListNode   pre fast  ListNode   cur fast  next  ListNode   tmp NULL  fast  next   NULL  while cur    tmp cur  next  cur  next pre  pre cur  cur tmp    while head    pre    head pre              auto tem1   head  next  tem2   pre  next                     pre  next   head  next  head  next   pre  head   tem1  pre   tem2         25  Reverse Nodes k Group Given linked list  reverse nodes linked list k time return its modified list  k positive integer less equal length linked list  number nodes not multiple k left out nodes end remain is  may not alter values nodes  nodes itself may changed  constant memory allowed  example  Given linked list  1  2  3  4  5 k   2  return  2  1  4  3  5 k   3  return  3  2  1  4  5             dummy       k       k                num               K                nhead pre                             nhead  next   pre                 Definition singly linked list  struct ListNode   int val  ListNode  curt  ListNode int x    val x   curt NULL           class Solution   public  ListNode reverseKGroup ListNode head  int k    if head  NULL  k  1  return head  ListNode  dummy   new ListNode  1         dummy  next   head          int num 1  while head   head  next           num    List",
        "objectID": "post/反转链表",
        "date": "2017-06-25T02:24:14.000Z",
        "tags": [
            "Linked List"
        ],
        "categories": [
            "解题报告 "
        ]
    },
    {
        "title": "仿函数和函数指针",
        "uri": "post/仿函数和函数指针",
        "content": "C                                                                                                                          int func   int x                   int   func   int x          func                                                                      int   f  int  int                     int          int    int max int a  int b    return   b     b    f   max         f         max int c     f  1  2                                  typedef                   typedef int   PF   int x   PF pf    pf                typedef void   PFT    char  int    void bar char ch  int i    cout  include using namespace std  int main     greater ig  cout    6  4       B  true                   greater ig          ig    ig 4 6       operator          4 6         greater                        4 6         4 6  STL        predicate            bool                                                                                                                                 operator                  inline                                                     inline                                                         inline                                          CallBack                                                        operator                                                                                                   plus    Addition function object class  class template   minus    Subtraction function object class  class template   multiplies    Multiplication function object class  class template   divides    Division function object class  class template   modulus    Modulus function object class  class template   negate    Negative function object class  class template         equal_to    Function object class equality comparison  class template   notequalto     Function object class non equality comparison  class template   greater    Function object class greater than inequality comparison  class template   greater_equal      Function object class greater than or equal to comparison  class template   less    Function object class less than inequality comparison  class template   less_equal      Function object class less than or equal to comparison  class template         logical_and   Logical function object class  class template   logical_or   Logical function object class  class template   logical_not   Logical NOT function object class  class template       bit_and     Bitwise function object class  class template   bit_or     Bitwise function object class  class template   bit_xor      Bitwise XOR function object class  class template      http   www cplusplus com",
        "objectID": "post/仿函数和函数指针",
        "date": "2017-06-23T17:11:28.000Z",
        "tags": [
            "仿函数"
        ],
        "categories": [
            "STL"
        ]
    },
    {
        "title": "访问控制与继承",
        "uri": "post/访问控制与继承",
        "content": "public         public                                 include  include using namespace std  class AccessTest   public  int pub_mem  int pub_fun      protected  int prot_mem  int prot_fun      private  int priv_memb  int priv_fun         int main     AccessTest at  at pub_mem    OK    public     at pub_func      OK    public     return 0    protected         protected                                                        include  include using namespace std  class AccessTest   friend void Atest    friend class CAtest  public  int pub_mem  void pub_fun     protected  int prot_mem  void prot_fun     private  int priv_memb  void priv_fun        class CAtest   public  void x     AccessTest t  t prot_fun      OK        protected     int x t prot_mem    OK        protected          void Atest     AccessTest t  t prot_fun      OK         protected     int x t prot_mem    OK         protected       int main     AccessTest at  at prot_mem    ERROR          protected     at prot_fun      ERROR          protected     Atest    return 0    private         private                                                        include  include using namespace std  class AccessTest   friend void Atest    friend class CAtest  public  int pub_mem  void pub_fun     protected  int prot_mem  void prot_fun     private  int priv_memb  void priv_fun        class CAtest   public  void x     AccessTest t  t priv_fun      OK        private     int x t priv_memb    OK        private          void Atest     AccessTest t  t priv_fun      OK         private     int x t priv_memb    OK         private       int main     AccessTest at  at priv_memb    ERROR          private     at priv_fun      ERROR          private     Atest    return 0       public          protected           private                    public        public                               public   protected            private                    public         protected private       public           public protected         public protected    include  include using namespace std  class AccessTest   public  int pub_mem  void pub_fun     protected  int prot_mem  void prot_fun     private  int priv_memb  void priv_fun        class DAccessTest public AccessTest   public  void test     int x pub_mem    OK pub_fun      OK int y prot_mem   OK prot_fun     OK int z priv_memb    ERROR priv_fun     ERROR      int main     DAccessTest dt  int x dt pub_mem   OK int y dt prot_mem    ERROR int z dt priv_memb    ERROR return 0    protected        protected      public             protected protected private                    public   protected            private                              public          protected     protected           public protected          protected    private                                        include  include using namespace std  class AccessTest   friend void Atest    friend class CAtest  public  int pub_mem  void pub_fun     protected  int prot_mem  void prot_fun     private  int priv_memb  void priv_fun        class DAccessTest protected AccessTest   public  void test     int x pub_mem    OK pub_fun      OK int y prot_mem    OK prot_fun      OK int z priv_memb    ERROR priv_fun      ERROR      int main     DAccessTest dt  int x dt pub_mem    ERROR                  int y dt prot_mem    ERROR                  int z dt priv_memb    ERROR return 0    private        private      public             private                  public   protected            private                                          private     private           public protected                 private        private    private                                        include  include using namespace std  class AccessTest   friend void Atest    friend class CAtest  public  int pub_mem  void pub_fun     protected  int prot_mem  void prot_fun     private  int priv_memb  void priv_fun        class DAccessTest private AccessTest   public  void test     int x pub_mem    OK pub_fun      OK int y prot_mem   OK prot_fun     OK int z priv_memb    ERROR priv_fun     ERROR      int main     DAccessTest dt  int x dt pub_mem   ERROR                  int y dt prot_mem    ERROR                  int z dt priv_memb    ERROR  private       return 0                                 public protected private           public            private  public protected         public                  protected            private  public protected         protected                  protected    private            private  public protected         private                private  class struct    class           private   struct    public  class Base     private   int a  int b    Base ba  int x ba a      int y ba b      struct St     public   int a  int b     St st  int x st a    OK int y st b   OK class      private   struct   public  class Base       class Derive Base        private   struct BStruct       struct DStruct BStruct        public",
        "objectID": "post/访问控制与继承",
        "date": "2017-06-23T17:25:18.000Z",
        "tags": null,
        "categories": [
            "C++"
        ]
    },
    {
        "title": "斐波那契数列",
        "uri": "post/斐波那契数列",
        "content": "LeetCode 70  Climbing Stairs climbing stair case  takes n steps reach top  time either climb 1 2 steps  distinct ways climb top  Note  Given n will positive integer       Fibonacci     DP f n  f n 1  f n 2    i  i 1 i 2           class Solution   public  int climbStairs int n    int prev   0            1  1 2  2                    int cur   1  for int   1   include using namespace std  const int MOD   10000  struct matrix   int m2   ans  base  matrix multi matrix a  matrix b    matrix tmp  for int   0     1    return ans m0    int main     int n  while scanf   d    n     n     1    printf   d n   fast_mod n      return 0    LeetCode 91  Decode Ways message containing letters A Z encoded numbers using following mapping   A     1   B     2      Z     26  Given encoded message containing digits  determine total number ways decode it  example  Given encoded message  12   decoded  AB   1 2   L   12   number ways decoding  12  2         fibonacci           dp      s                       dp i        i                            1    0           2      dp i    dp i 2         1       2      1 6          2                         1      dp i    dp i 1              3    i i 1 i 2     2          class Solution   public  int numDecodings string s     s empty      s 0      0   return 0  int prev   0    dp 0  int cur   1    dp 1             1  size_t   1     1      p   1     0    res   muliMatrix res  tmp     tmp   muliMatrix tmp  tmp     return res    public static int muliMatrix int m1  int m2    int res   new intm1 length length    int   0    m1 length  i       int j   0  j   m2 0  length  j       int k   0  k   m2 length  k      resi    m1i   m2k        return res",
        "objectID": "post/斐波那契数列",
        "date": "2017-06-25T02:25:49.000Z",
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "分布式理论:CAP定理",
        "uri": "post/分布式理论-CAP定理",
        "content": "CAP    CAP                Consistency       Availability      Partition tolerance                          2   CAP                                                                                                                                                  CAP                                                                                                                                                                                                                                                         Consistency          all nodes data time                                                                                                                                                                                                                                                                                                                                                                 CAP                         Availability          Reads writes always succeed                                                                                                                          5 9             99 999              1 0 99999 36524 60   5 256 min                                                                                   WEB                                     Partition Tolerance              the system continues operate despite arbitrary message loss failure part system                                                                                                                                                                                                                                                                                                                         CAP   P      CAP            C           CAP       P         CA                 CAP    C A P         CAP    Spanner    CAP             Spanner                   Google                      P                                            Google                   CA   P                                                P        CAP       CA                 P  CAP               CAP              N1 N2        N1 N2                    N1        A       V N2        B      V    A B            V                           C     N1 N2         V0 V0         A            N1  N2                    P      N1 N2                       N1 N2                                  N1           A     V0 V1               M  V1   N2 V0   N2    V0    V1 N2       N2       CAP                               C  N1 N2    V                 A  N1 N2                        P  N1 N2                                                                    N1 N2                                                                 N1 N2              N1          N1    V0     V1                     M   N2       V0          N2                                        V1                                    V0                                       M                V1                                               CAP       CAP                                         CA without P                                                          P                       CAP              CAP           P            C A                 MySql Oracle                                                      P            CA                      LDAP xFS                         CP without                                         CAP     CP   A       CP      A                                                             CP                                 CP                                     Redis HBase             Zookeeper   CAP          CP       Redis HBase             Zookeeper                                                     ZooKeeper  CP                   ZooKeeper                                                           ZooKeeper                            ZooKeeper                                                ZooKeeper    CP   AP            CP                                               AP wihtout C                                                                                                                                                                                   N 9                       12306                                12306                                                                                                                                                                                                                                                                                                                                                      N 9    P A   C                                                    AP         Coda Web    DNS                                   CAP                                               C                                    A                     C   A        P                     P                                                             C A    C A                                                                                                     0  100                                                                                                     ",
        "objectID": "post/分布式理论-CAP定理",
        "date": "2019-09-19T17:18:05.000Z",
        "tags": [
            "分布式"
        ],
        "categories": [
            "架构"
        ]
    },
    {
        "title": "分布式锁的实现",
        "uri": "post/分布式锁的实现",
        "content": "ReentrantLock    lock trylock  tryLock long timeOut                                                                Mysql                          Mysql              version    Mysql      InnoDB for update    Mysql                       Mysql                                                                                                                                             SQL       method_name                                                                                                           Sql                                                                                                                              insert                                                                                                                                                                                                             while     insert                                                                                                           Mysql      InnoDB   for update                                                                                      MySql InnoDB                             for update                              InnoDB                                                      method_name                                                                                                                                                                       1     public void lock    connection setAutoCommit false  int count   0  while count   N 2 1                                lock validity time                                                                             3                                    Redis      N 2 1                                         Redis                 Redis Lua                                        Redis                                  N Redis                Redlock                          Redis        failover           Redlock                                         Redis                  5 Redis   A  B  C  D  E                  1     A  B  C        D E         C          1 C                   C       2   C  D  E              1    2                       Redis AOF                 fsync             1               Redis              fsync                 fsync                    Redis                                              antirez         delayed restarts                                                     lock validity time                                              Redlock                          antirez                   Redis                                                                          Redis               Redis             SET                                              Redis                                        Redis                                                           Redlock     Martin Kleppmann 2016 02 08        blog      distributed locking     Redlock                         timing assumption                          Redlock      timing                         5 Redis  A  B  C  D  E      1 Redis  A  B  C                     D E        C                              2 Redis  C  D  E                       1    2                                  Redlock     safety property                                          Martin                                                     asynchronous model                     timing assumption             pause                                                                     safety property             liveness property                                                                                    Paxos  Raft            Redlock                Martin                           GC pause  Redlock             1 Redis  A  B  C  D  E         Redis                1     1                GC pause      Redis             2 A  B  C  D  E           1 GC pause          2     Redis           1                1    2             Martin                Redlock             Redis                                          lock validity time            5     1 GC pause                                          antirez                   Martin       Redlock                              Martin                                        GC pause                 GC pause      1           GC pause      1                    Martin                                GC pause               GC pause  Redis      1                                  1     Redlock              1                 Redlock              2      Redis                                                          1                                                   1                 Martin                                             Martin                  efficiency                       Redis                   Redlock         heavyweight            correctness                     Redlock                                             timing                fencing token            Martin         ETCD                  Martin            antirez                         Is Redlock safe           timing                Martin         Martin  Redlock                    ",
        "objectID": "post/分布式锁的实现",
        "date": "2019-09-06T18:02:26.000Z",
        "tags": [
            "分布式"
        ],
        "categories": [
            "架构"
        ]
    },
    {
        "title": "分布式系统的死锁处理",
        "uri": "post/分布式系统的死锁处理",
        "contenti                       Ri                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         __           4           m                                 m 1                                                                       r p m 1  1                                      X                                           5         1     4                                                        X                 X",
        "objectID": "post/分布式系统的死锁处理",
        "date": "2019-09-23T10:24:33.000Z",
        "tags": [
            "分布式"
        ],
        "categories": [
            "架构"
        ]
    },
    {
        "title": "分布式延时任务方案",
        "uri": "post/分布式延时任务方案",
        "contentgN                                                                                            OOM                                     Linux         Linux                                                                                                                                                                                   tick            3         ticksPerWheel    tick   tickDuration   tick         timeUnit          ticksPerWheel 60 tickDuration 1 timeUnit                                1           4                          5        20                     8    20        2      2    5   20   8   1                                                    O lgn                  O 1                                                                                                          OOM   redis     Redis  ZSet      Set     HashMap    SkipList             HashMap       score                        HashMap   score                                              O logn                              redis zset zset              member       score   score          zset          ZADD key score member   score member   score member               ZRANGE key start stop  WITHSCORES      score ZSCORE key member      ZREM key member  member                              zadd score         unix         zrangeWithScores                      zrangeWithScores                                                      zset                                            score member                                     Sorted Set                                                          zrem                                                   redis Keyspace Notifications                       key                redis               redis  2 8      redis pub sub         Redis              fire forget                                                                                                                                                                             Redis             Redis                                                                                                   Redis                           redis          AMQP RabbitMQ                                             RabbitMQ                Time Live TTL   RabbitMQ    Queue Message   x message tt                      dead letter RabbitMQ                                                                TTL                          TTL                           TTL     dead letter Dead Letter Exchanges DLX   RabbitMQ Queue    x dead letter exchange  x dead letter routing key                 dead letter               x dead letter exchange   dead letter   dead letter       exchange x dead letter routing key   routing key       dead letter             TTL                     basic reject basic nack   requeue false   DLX                     publish    Exchange                                                   RabbitMQ                                                                                                                                                 https   www cnblogs com rjzheng p 8972725 html https   chai2010 cn advanced go programming book ch6 cloud ch6 03 delay job html https   www jianshu com p a8c1458998aa",
        "objectID": "post/分布式延时任务方案",
        "date": "2019-10-16T17:02:02.000Z",
        "tags": [
            "分布式",
            "延时任务"
        ],
        "categories": [
            "架构"
        ]
    },
    {
        "title": "分布式ID生成:leaf算法浅析",
        "uri": "post/分布式ID生成-leaf算法浅析",
        "content": "Leaf segment Leaf segment                             ID                       proxy server           segment step                                                     biztag        biz tag ID                                                  biztag                                                                                                                  Field   Type   Null   Key   Default   Extra                                                                                                   biz_tag   varchar 128    NO   PRI         max_id   bigint 20    NO     1       step   int 11    NO     NULL       desc   varchar 256    YES     NULL       updatetime   timestamp   NO     CURRENTTIMESTAMP   update CURRENT_TIMESTAMP                                                                                                        biztag       maxid   biz_tag       ID       step                ID                step         1000      1000                               1    1 step            test tag    Leaf    1  3000                       step 1000                                     3001 4000         biz tag     max_id  3000    4000      SQL      Begin UPDATE table SET maxid maxid step biz_tag xxx SELECT tag  maxid  step table biztag xxx Commit                 Leaf                              ID        8byte 64                         Leaf            DB       Leaf                 max_id              ID             ID                         TP999                 hang       I O  tg999            DB               buffer           Leaf segment               Leaf                                ID           DB                       DB                   DB    DB                          DB            DB                             DB                  DB                                                                              TP999                 buffer    Leaf            segment        10                                                                segment             biz tag             segment            QPS 600  10        DB   Leaf      10 20                                                                            Leaf                       Leaf    DB          10               10      1                                        DB             ID      Leaf    Step     QPS Q      L        T   Q   T   L    L           Q    T        Leaf        T         L   Q      T             Leaf                      T     step            nextStep  T 30min nextStep   step   2                                                                                         Leaf   DB                ID            DB     Leaf segment           ID   ID             ID              12          id                                      snowflake        https   tech meituan com 2017 04 21 mt leaf html https   tech meituan com 2019 03 07 open source project leaf html",
        "objectID": "post/分布式ID生成-leaf算法浅析",
        "date": "2019-06-30T14:29:50.000Z",
        "tags": [
            "分布式"
        ],
        "categories": [
            "算法"
        ]
    },
    {
        "title": "分布式ID生成:snowflake算法浅析",
        "uri": "post/分布式ID生成-snowflake算法浅析",
        "content": "snowflake                             ID     id                    ID                       ID                   snowflake Twitter      ID          long  ID          41bit      10bit     ID 5 bit      5 bit   ID  12bit                          4096   ID               0  1             1             id                  0 41               41      2  41  1                         0             0    2  41  1   1             0        1      41      2  41  1                 2  41  1     1000   60   60   24   365    69   10          id        2  10    1024       5 datacenterId 5 workerId 5  bit             2  5  1   31      0 1 2 3     31 32          datecenterId workerId 12                   id  12  bit             2  12  1   4095      0 1 2 3     4094 4095                        4095 ID   SnowFlake           id                      id    datacenterId workerId      Golang      github https   github com bwmarrin snowflake            Package snowflake provides simple Twitter snowflake generator parser  package snowflake import    encoding base64   encoding binary   errors   fmt   strconv   sync   time    var      Epoch set twitter snowflake epoch Nov 04 2010 01 42 54 UTC milliseconds    may customize set different epoch application  Epoch int64   1288834974657    NodeBits holds number bits use Node    Remember  total 22 bits share Node Step NodeBits uint8   10    StepBits holds number bits use Step    Remember  total 22 bits share Node Step StepBits uint8   12    DEPRECATED  below four variables will removed future release  mu sync Mutex nodeMax int64    1     1 n nodeMax   return nil  errors New  Node number 0     strconv FormatInt n nodeMax  10     var curTime   time Now      add time Duration curTime sure use monotonic clock available n epoch   curTime Add time Unix Epoch 1000   Epoch 1000  1000000  Sub curTime   return  n  nil      Generate creates returns unique snowflake ID    help guarantee uniqueness      sure system keeping accurate system time      sure multiple nodes running node ID func  n  Node  Generate   ID   n mu Lock      time Since n epoch  Nanoseconds     1000000    n time   n step    n step   1    n stepMask n step    0     32   b   append b  encodeBase32Map f 32   f    32   b   append b  encodeBase32Map f   x  y    0  len b  1  x   58   b   append b  encodeBase58Map f 58   f    58   b   append b  encodeBase58Map f   x  y    0  len b  1  x   timeShift    Epoch      Node returns int64 snowflake ID node number    DEPRECATED  below function will removed future release  func  f ID  Node   int64   return int64 f    nodeMask    nodeShift      Step returns int64 snowflake step  or sequence  number    DEPRECATED  below function will removed future release  func  f ID  Step   int64   return int64 f    stepMask      MarshalJSON returns json byte array string snowflake ID  func  f ID  MarshalJSON      byte  error    buff    make   byte  0  22  buff   append buff       buff   strconv AppendInt buff  int64 f   10  buff   append buff       return buff  nil      UnmarshalJSON converts json byte array snowflake ID ID type  func  f  ID  UnmarshalJSON b   byte  error   len b  1011                 1 true 0 false   0011   1011    1000                     n bit               n nodeMax    1     1 4095             NodeBits            12                           12              n step    n step   1    n stepMask                         seqMask     1     1   current sf sequence    sf sequence   1    maskSequence sf sequence    0   sf elapsedTime   overtime    sf elapsedTime   current time Sleep sleepTime  overtime        return sf toID     leaf snowflake      Leaf snowflake      snowflake   bit       1 41 10 12      ID    workerID                           Leaf                    Zookeeper            snowflake    wokerID Leaf snowflake                Leaf snowflake     Zookeeper  leaf_forever                                         workerID zk       int  ID                                                   workerID           ZooKeeper       ZK                    workerID    ZooKeeper                                                      SLA                                            ID                                          ZooKeeper leaf_forever                 leafforever   self              leafforever    self                                                    leafforever   self                    Leaf                           leaftemporary               Leaf snowflake      IP Port     RPC                sum time  nodeSize   abs       sum time  nodeSize                                 leaf_temporary   self                                          3s           leaf_forever   self                            NTP                     NTP                        ERROR_CODE                                                                             timestamp   lastTimestamp    long offset   lastTimestamp   timestamp   offset",
        "objectID": "post/分布式ID生成-snowflake算法浅析",
        "date": "2019-06-27T19:31:40.000Z",
        "tags": [
            "分布式",
            "snowflake"
        ],
        "categories": [
            "算法"
        ]
    },
    {
        "title": "分布式ID生成方案简单总结",
        "uri": "post/分布式ID生成方案总结",
        "content": "ID                    ID              ID                                                               UUID UUID         Universally Unique Identifier             OSF          MAC            Namespace                         UUID  UUID Universally Unique Identifier        32 16                 8 4 4 4 12 36       550e8400 e29b 41d4 a716 446655440000           5     UUID    IETF   UUID   Universally Unique IDentifier  UUID  URN Namespace                                   UUID   16  128     36                          MAC    UUID        MAC                            ID                      DB       UUID        MySQL                  36      UUID        MySQL                InnoDB    UUID                               ID  MySQL          autoincrementincrement autoincrementoffset   ID           SQL  MySQL  ID   begin  REPLACE Tickets64  stub  VALUES   a    SELECT LASTINSERTID    commit                                           DBA      ID             ID                 DB  DB                                                                          ID           MySQL                                                     ID                                        MySQL                                                                    step 2 TicketServer1     1 1 3 5 7 9 11   TicketServer2     2 2 4 6 8 10     Flickr   2010               Ticket Servers  Distributed Unique Primary Keys Cheap                              TicketServer1 1     TicketServer2 2                  2  TicketServer1  auto increment increment   2 auto increment offset   1 TicketServer2  auto increment increment   2 auto increment offset   2        N          N          0 1 2 N 1                                                                                               1 2 3 4 5    1                                             14                  14         2              14               ID         7            2                                                                   100                                        ID                                                        ID                       Redis Redis                    incr   increby                    ID                                        ID                                  Redis                                     redis    KV       AOF RDB                   ID                     Redis                     5  Redis         Redis      1  2  3  4  5        5    Redis     ID    A 1  6  11  16  21 B 2  7  12  17  22 C 3  8  13  18  23 D 4  9  14  19  24 E 5  10  15  20  25                                       Redis                           Redis       0                                 Redis       Key     INCR       Zookeeper zookeeper     znode               32  64                                    Zookeeper                    snowflake snowflake Twitter      ID          long  ID          41bit      10bit     ID 5 bit      5 bit   ID  12bit                          4096   ID               0  1             1             id                  0 41               41      2  41  1                         0             0    2  41  1   1             0        1      41      2  41  1                 2  41  1     1000   60   60   24   365    69   10          id        2  10    1024       5 datacenterId 5 workerId 5  bit             2  5  1   31      0 1 2 3     31 32          datecenterId workerId 12                   id  12  bit             2  12  1   4095      0 1 2 3     4094 4095                        4095 ID   SnowFlake           id                      id    datacenterId workerId      MongoDB ObjectId MongoDB ObjectId  snowflake                                       MongoDB                                                        4                              5                                 ObjectId                                        4                                   ObjectId              3                                             ObjectId                              ObjectId                 ObjectId        PID     9                      ObjectId         3                             ObjectId                        2563 16 777 216     ObjectId        ID          2       Mysql   id    snowflake                                      ID               https   tech meituan com 2017 04 21 mt leaf html https   houbb github io 2018 09 05 distributed id",
        "objectID": "post/分布式ID生成方案总结",
        "date": "2019-06-29T16:59:28.000Z",
        "tags": [
            "分布式"
        ],
        "categories": [
            "架构"
        ]
    },
    {
        "title": "分糖果问题",
        "uri": "post/分糖果问题",
        "content": "LeetCode 135  Candy N children standing line  child assigned rating value  giving candies children subjected following requirements  child least one candy  Children higher rating candies neighbors  minimum candies give                                                                                                                                                                     ratings                  class Solution   public  int candy vector  ratings    int n ratings size    vector nums n 1        1         1                      ratings   ratings i  ratings i 1   A i  A i 1  1  for int i 1 iratings i 1   nums i  nums i 1  1    int sum nums n 1                      ratings   ratings i  ratings i 1  A i  0 i     if ratings i  ratings i 1     nums i  arr index   1     res      lbase    1  index      else  arr index    left  i       arr i     arr i   1     cands    base    else   cands      base      return new int     cands  base",
        "objectID": "post/分糖果问题",
        "date": "2017-06-24T20:25:50.000Z",
        "tags": [
            "Greedy"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "服务发布策略",
        "uri": "post/服务发布策略",
        "content": "dev                                                                               bug                 bug                                                                           web                                     DB Cache            cookie       vpn                                                                                               bug                 bug                                                                       bugocker                                                                  V2                                                                   AWS                           Canary                                                                                          Webjavascript                                                                                                         Web               Web     IP Cookie                                                                                                                     stable beta unstable channel                                                                                                                                                                                                                                                                                              IP                                                                           API               Gamma           Gamma                                                              nginx                             IDL            SET                API Container            API       nginx             API Container  api weigou qq com    API Container api paipai com    API Container  api yixun com    API Container api buy qq com                                      API                                                              API                nginx             API           API Container http   api paipai com v2 virbiz                                                                               SNS              QQ               set   set    1               QQ    10      10 set Set 1 Set 10              SET         QQ                  SET10                                                                                                                    SqlServer   MySQL                                      DB                                                                                                                                                                                                                    20                        1             2                      Canary                          LB                               V1     LB                  V2    LB                                                                               1            10      50      100                                                                                   10         2                        LB                   LB                                                                                 LB                                      Feature Flag Toggle Switch                         LB                                  DevOps                                                                               Apollo           FF4J                       SaaS       LaunchDarkly                                                                       ",
        "objectID": "post/服务发布策略",
        "date": "2020-03-03T17:57:28.000Z",
        "tags": [
            "软件工程"
        ],
        "categories": [
            "软件工程"
        ]
    },
    {
        "title": "字符串A编辑成字符串B",
        "uri": "post/符串A编辑成字符串B",
        "content": "LeetCode 115  Distinct Subsequences Given string S string T  count number distinct subsequences T S  subsequence string new string formed original string deleting  can none  characters without disturbing relative positions remaining characters   ie   ACE  subsequence  ABCDE   AEC  not   example  S    rabbbit   T    rabbit  Return 3            dpi     s i        t j          0                 0      dp0   1 dpi   0                          Si 1   T j 1    dp i   dpi 1   dpi 1         S i 1   T j 1                                                         Si   T i 1    dp i   dpi 1                             class Solution   public  int numDistinct string s  string t     s empty      t empty    s length     dp ls   1  vector lt   1  0    dp0   1   int   0  f v  max f v  f v cost  weight             v V  0      fv        f v   f v c i         f i 1      dp          i j      class Solution   public  int numDistinct const string  S  const string  T      dfs                 vector f T size     1   f 0    1   int   0    0    j          T f j   1     S i     T j    f j    0      return f T size          LeetCode 72  Edit Distance Given two words word1 word2  find minimum number steps required convert word1 word2   each operation counted 1 step   following 3 operations permitted word  a  Insert character  b  Delete character  c  Replace character      dpi         i             j               s1 i    s2 j                dpi   dpi 1  s1 i    s2 j                 s1  i           s2  j      dp         insert  dpi   dpi   1     DP i  j 1           i    j   replace  dpi   dpi   1   1     DP i 1  j 1            i      j delete  dpi   dpi   1   1     DP i 1  j             i    class Solution   public  int minDistance string word1  string word2    int m  word1 size    n  word2 size    int vector dp m 1 vector n 1    dp0 0           int i 1",
        "objectID": "post/符串A编辑成字符串B",
        "date": "2017-06-24T20:32:14.000Z",
        "tags": [
            "Hash",
            "背包DP",
            "String"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "父子进程的联系",
        "uri": "post/父子进程的联系",
        "content": "pc              fork                   fork       fork     0     fork               fork                                    real     effective      saved     UIDs     GIDs      environment                                   PC                             PC                                                                                                   close on exec          close on exec     fnctl           POSIX 1           exec                 UNIX        W  R  Stevens  1993                     3 13  8 9      signal      nice       nice  nice                                   scheduler class                                                 nice                       Global process prority                       ID Session ID                             session ID                                9 5                                 chroot                file mode creation mask  umask                                               Linux                                                                          close                      1         0                      fork       ID       ID     tmsutime tmsstime tmscutime  tmsustime   0                                                   fork I O        write          fork     write                   I O                                                 printf                                                                  fork   printf                                        I O                              printf                                                          fork",
        "objectID": "post/父子进程的联系",
        "date": "2017-06-25T14:22:23.000Z",
        "tags": null,
        "categories": [
            "Linux编程"
        ]
    },
    {
        "title": "复制含有随机指针节点的链表",
        "uri": "post/复制含有随机指针节点的链表",
        "content": "LeetCode 138  Copy List Random Pointer linked list given node contains additional random pointer point node list null  Return deep copy list                      next                  next                       hash_map          random                 O n         O n                                                         hash_map                                  O n        O 1       hash_map                                                                  Definition singly linked list random pointer  struct RandomListNode   int label  RandomListNode next  random  RandomListNode int x    label x   next NULL   random NULL           class Solution   public  RandomListNode copyRandomList RandomListNode head      head  return NULL  unordered_map mp               RandomListNode  new_head   new RandomListNode head  label      node1        node2        RandomListNode node1   head  node2   new_head                           next    node1 node2        hash_map         random          node1     node2       node1  next    NULL    mp node1    node2  node1   node1  next  node2  next   new RandomListNode node1  label   node2   node2  next                         mp node1    node2             random   node1   head  node2   new_head   node1  next    NULL    node2  random   mp node1  random   node1   node1  next  node2   node2  next           random       node2  random   mp node1  random   return new_head                Definition singly linked list random pointer  struct RandomListNode   int label  RandomListNode next  random  RandomListNode int x    label x   next NULL   random NULL           class Solution   public  RandomListNode copyRandomList RandomListNode head         l1          l2          RandomListNode new_head  l1   l2   head    NULL  return NULL             l1      l2   l1  l2 l2     l1   l1   head  l1    NULL  l1   l1  next  next    l2   new RandomListNode l1  label   l2  next   l1  next  l1  next   l2           l2 random   l1 random next     l2 random     new_head   head  next   l1   head  l1    NULL  l1   l1  next  next     l1  random    NULL  l1  next  random   l1  random  next                              l1 next        l2 next           l1   head  l1    NULL  l1   l1  next    l2   l1  next  l1  next   l2  next   l2  next    NULL  l2  next   l2  next  next    return new_head       LeetCode 133  Clone Graph Clone undirected graph  node graph contains label list its neighbors  OJ s undirected graph serialization  Nodes labeled uniquely  use   separator node    separator node label neighbor node  example  consider serialized graph  0 1 2 1 2 2 2   graph total three nodes  therefore contains three parts separated    First node labeled 0  Connect node 0 nodes 1 2  Second node labeled 1  Connect node 1 node 2  Third node labeled 2  Connect node 2 node 2  itself   thus forming self cycle  Visually  graph looks following  1         0     2      _                   node                                        label neighbors                   int    vector          node    label                                       node   neighbors                                          neighbor                                                                                                               HashMap                             HashMap          HashMap                                 Definition undirected graph  struct UndirectedGraphNode   int label  vector neighbors  UndirectedGraphNode int x    label x            class Solution   public  unordered_map hash            UndirectedGraphNode cloneGraph UndirectedGraphNode node      node  return node       if hash find node     hash end             hash node    new UndirectedGraphNode node    label          auto x   node    neighbors            hash node     neighbors  push_back  cloneGraph x         return hash node",
        "objectID": "post/复制含有随机指针节点的链表",
        "date": "2017-06-25T00:00:49.000Z",
        "tags": [
            "Linked List",
            "Graph"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "格雷码",
        "uri": "post/格雷码",
        "content": "LeetCode 89  Gray Code gray code binary numeral system two successive values differ one bit  Given non negative integer n representing total number bits code  print sequence gray code  gray code sequence begin 0  example  given n   2  return  0 1 3 2   Its gray code sequence is  00   0 01   1 11   3 10   2 Note  given n  gray code sequence not uniquely defined  example   0 2 3 1  valid gray code sequence according above definition  now  judge able judge based one instance gray code sequence  Sorry that                                               Gray Code                                                                   0        0  G     B      G N     B n  2  XOR B n                n          n 1       n                                    0            1 1     0         0111  4                 4           0  0 b3 b2 b1 b0  0 0 0   b3 0 0 1 1   b2 1 1 1 0   b1 0 0 1 1   b0 1             0101  class Solution   public  vector grayCode int n    vector v  for int   0    1   return v",
        "objectID": "post/格雷码",
        "date": "2017-06-24T23:58:27.000Z",
        "tags": [
            "Math"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "根据大小猜数",
        "uri": "post/根据大小猜数",
        "content": "LeetCode 374  Guess Number Higher Lower playing Guess Game  game follows  pick number 1 n  guess number picked  Every time guess wrong  I ll tell whether number higher lower  call pre defined API guess int num  returns 3 possible results   1  1  0    1   number lower  1   number higher  0   Congrats  it          API                               mid                  l  r         Forward declaration guess API      param num  guess     return  1 number lower  1 number higher  otherwise return 0 int guess int num   class Solution   public  int guessNumber int n    int low   1  high   n  while low  dp n 1 vector n 1 0           0 dfs dp 1 n   return dp1    private  int dfs vector   dp int l int r   if l  r  return 0  if dpl  return dpl          int res INT_MAX  for int x l x  dp n 1  vector n 1  0    for int   n 1    0  i      for int j   i 1  j",
        "objectID": "post/根据大小猜数",
        "date": "2017-06-24T22:11:42.000Z",
        "tags": [
            "区间DP",
            "Binary Search"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "根据数据范围选择解题方法",
        "uri": "post/根据数据范围选择解题方法",
        "content": "N",
        "objectID": "post/根据数据范围选择解题方法",
        "date": "2017-06-25T22:45:00.000Z",
        "tags": null,
        "categories": [
            "算法"
        ]
    },
    {
        "title": "跟我一起写 Makefile",
        "uri": "post/跟我一起写-Makefile",
        "content": "blog http   blog csdn net haoel Makefile    make           Makefile       make                               Makefile                         GNU make                  8 C    3           Makefile   make                                          C                      C                 C                                             C                 Makefile                  make        make                                                        Makefile         Makefile                Makefile     target       prerequisites     command         target             Object File                   Label                             prerequisites        target            command   make            Shell                     target              prerequisites             command          prerequisites            target       command               Makefile       Makefile             Makefile                                  Makefile             Makefile                                                             3      8 C                       Makefile             edit   main o kbd o command o display o   insert o search o files o utils o cc  o edit main o kbd o command o display o   insert o search o files o utils o main o   main c defs h cc  c main c kbd o   kbd c defs h command h cc  c kbd c command o   command c defs h command h cc  c command c display o   display c defs h buffer h cc  c display c insert o   insert c defs h buffer h cc  c insert c search o   search c defs h buffer h cc  c search c files o   files c defs h buffer h command h cc  c files c utils o   utils c defs h cc  c utils c clean   rm edit main o kbd o command o display o   insert o search o files o utils o                     Makefile                    Makefile   makefile                    make          edit                                  make clean          makefile       target        edit          o       prerequisites            c      h        o                 o          edit                                                                                             Tab         make                        make   targets   prerequisites          prerequisites       targets          target         make                       clean                      C    lable                make                                           make          lable                     makefile                                       make                       make       make            Makefile   makefile                          target               edit                         edit        edit         o            edit                         edit        edit     o        make            o                       o                      C   H          make     o          o     make             edit        make     make                                                               make                                make     make                                                               clean                                                   make         make clean                                                            file c                 file o                            file o            file o         edit     edit           edit                      command h     kdb o command o files o          edit         makefile                    edit     edit   main o kbd o command o display o   insert o search o files o utils o cc  o edit main o kbd o command o display o   insert o search o files o utils o         o                               o                                clean         makefile                    makefile                                       makefile      makefile          makefile               C                         objects  OBJECTS  objs  OBJS  obj     OBJ               obj         makefile          objects   main o kbd o command o display o   insert o search o files o utils o                 makefile     objects                      makefile           objects   main o kbd o command o display o   insert o search o files o utils o edit     objects  cc  o edit   objects  main o   main c defs h cc  c main c kbd o   kbd c defs h command h cc  c kbd c command o   command c defs h command h cc  c command c display o   display c defs h buffer h cc  c display c insert o   insert c defs h buffer h cc  c insert c search o   search c defs h buffer h cc  c search c files o   files c defs h buffer h command h cc  c files c utils o   utils c defs h cc  c utils c clean   rm edit   objects           o                  objects                                   make     GNU make                                          o                   make                 make      o             c             make    whatever o   whatever c    whatever o         cc  c whatever c               makefile                 makefile      objects   main o kbd o command o display o   insert o search o files o utils o edit     objects  cc  o edit   objects  main o   defs h kbd o   defs h command h command o   defs h command h display o   defs h buffer h insert o   defs h buffer h search o ",
        "objectID": "post/跟我一起写-Makefile",
        "date": "2017-06-25T05:42:14.000Z",
        "tags": null,
        "categories": [
            "Linux编程"
        ]
    },
    {
        "title": "更优雅的Go错误处理",
        "uri": "post/更优雅的Go错误处理",
        "content": "error    Go     C                   C        Go                       errno         error interface         error built in interface type conventional interface    representing error condition  nil value representing no error  type error interface   Error   string           Error                error                 func New text string  error   return  errorString text    type errorString struct   s string   func  e  errorString  Error   string   return e s                 New                            errors New      Go      Go              error interface             errors New   fmt Errorf errors New  your first error code   fmt Errorf  error value  d n   errcode                     error interface          unexported      errorString         error type        string   context           error                 Error                        errors New             error                         errors New   fmt Errorf         errorString     unexported                     type assertion type switch                          err String          context string            func openFile name string  error   file not exist   return errors New  file does not exist     no priviledge   return errors New  no priviledge     return nil   func main     err    openFile  example go   err Error       file does not exist       handle  file does not exist  error return   err Error       no priviledge       handle  no priviledge  error return                                        GOROOT src os error go                 var   ErrInvalid   errors New  invalid argument   ErrPermission   errors New  permission denied   ErrExist   errors New  file already exists   ErrNotExist   errors New  file does not exist          os   export            exported         os                            err    os XXX err    os ErrInvalid      handle invalid                    switch case  switch err    os XXX   case ErrInvalid     handle invalid case ErrPermission     handle no permission                                         export          Go error   nil  nil   C               const char  empty_str0       const char  empty_str1     0empty   const char  empty_str2   NULL    3                               emptystr0             emptystr0          empty_str1                          0   empty_str2            Go error   interface   error nil   C               error      http   golang org doc gofaq html nilerror     interface                                                            int  3             int  3                  nil  nil           nil        nil           nil                    int                int              int  nil                nil              nil                  func returnsError   error   var p  MyError   nil bad     p   ErrBad   return p    Will always return non nil error       p            nil     nil        empty_str0                    func main     err    returnsError    err    nil   panic nil         returnsError                     func main     err    returnsError    err   MyError     nil   panic nil            err    MyError      err       C              bool IsEmptyStr const char  str    return   str    str 0       0        Go              returnsError          returnsError  func returnsError   error   bad     return   MyError  err    return nil                                nil  switch err  type                 type MyError string func  e MyError  Error   string   return string e    func Foo   error   return MyError  foo error     func main     err    Foo   switch e    err  type    default  fmt Println  default   case error  fmt Println  found error    e  case MyError  fmt Println  found MyError    e    return              found MyError  foo error           found error  foo error       e       error              func main     err    Foo   switch e    err  type    default  fmt Println  default   case MyError  fmt Println  found MyError    e  case error  fmt Println  found error    e    return              found MyError  foo error        switch case     error type       error                           go                                                          func                                                                                                                                                                                            buf    make   byte  100  n  err    r Read buf          r Read                 error    io END     io EOF       r Read          buf   buf  n  err    io EOF   log Fatal  read failed    err                             Error                             func readfile path string  error   err    openfile path  err    nil   return fmt Errorf  cannot open file   v   err            func main     err    readfile   bashrc   strings Contains error Error     not found        handle error     error interface   Error                           Error                                 Error                                            API                           public                                                                                          error context             error                ex",
        "objectID": "post/更优雅的Go错误处理",
        "date": "2019-04-05T21:50:59.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "公式字符串求值",
        "uri": "post/公式字符串求值",
        "content": "LeetCode 150  Evaluate Reverse Polish Notation Evaluate value arithmetic expression Reverse Polish Notation  Valid operators             operand may integer expression  examples    2    1         3            2   1  3     9   4    13    5                 4    13   5      6                                        class Solution   public  int evalRPN vector  tokens    stack s   auto token   tokens      is_operator token             s push token     else              int y   stoi s top               s pop    int x   stoi s top               s pop     token 0          x    y  else  token 0          x    y  else  token 0         x   y  else x    y  s push to_string x               return stoi s top       private  bool is_operator const string  op    return op size      1    string         find op      1       LeetCode 224  Basic Calculator Implement basic calculator evaluate simple expression string  expression string may contain open   closing parentheses    plus   minus sign    non negative integers empty spaces   may assume given expression always valid  examples   1   1    2   2 1   2     3   1  4 5 2  3   6 8     23 Note  not use eval built in library function                                                                     class Solution   public  int calculate string s    stack nums  ops  int num   0         int rst   0             int sign   1                  1  1      char c   s             isdigit c               num   num   10   c    0     else   rst    sign   num                                           num   0   num    c         sign   1   c         sign    1   c           nums push rst                ops push sign                rst   0            sign   1     c           ops size                  rst   ops top     rst   nums top    ops pop    nums pop          rst    sign   num                                  return rst       LeetCode 227  Basic Calculator II Implement basic calculator evaluate simple expression string  expression string contains non negative integers             operators empty spaces   integer division truncate toward zero  may assume given expression always valid  examples   3 2 2    7   3 2     1   3 5   2     5 Note  not use eval built in library function                                                         2                   term         total                                                                              term  total          term                    total     term                                 term  class Solution   public  int calculate string s    istringstream in       s         long long total   0  term   0  n  char op   in    op             op           op                   total    term               term           term   term    op          1    1       term        else                    n   op          term         term    n  else term    n      return total                      str  str                                                               str                             4   3                                    3 4     3 4                                  str                        str          T              3   4 5  7               value str 0       value str 0      str               value str 0          value str 3          value str 3      str               value str 3          value str 0             value str 3                 4 5  9       value str 3                  6     valUe Str 0                value Str 3                 4 5      9                          6          7           value                                   2      res res 0               res 1            str                                                                                                           value str 0              3 9 7     4 5           value str 3        9                                                      1                        2                       3                      public static int getValue String str    return value str toCharArray    0  0     public static int   value char   str  int i    LinkedList que   new LinkedList    int pre   0  int   bra   null   i    0     str i  que  int num      que isEmpty      int cur   0  String top   que pollLast     top equals         top equals         que addLast top     else   cur   Integer valueOf que pollLast     num   top equals        cur num     cur   num       que addLast String valueOf num      public static int getNum LinkedList que    int res   0  boolean add   true  String cur   null  int num   0    que isEmpty      cur   que pollFirst     cur equals         add   true    else  cur equals         add   false    else   num   Integer valueOf cur   res    add   num     num       return res",
        "objectID": "post/公式字符串求值",
        "date": "2017-08-23T17:30:52.000Z",
        "tags": [
            "Stack",
            "String"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "构造函数与成员初始化列表详解",
        "uri": "post/构造函数与成员初始化列表详解",
        "content": "struct foo   string name   int id   foo string s  int i  name s   id i                                                                                  class type                                                                             Test1                             Test2        Test1            Test2              struct Test1   Test1               cout   t1 a     Test1  operator    const Test1  t1             cout   t1 a   return  this    int      struct Test2   Test1 test1   Test2 Test1  t1    test1   t1             Test1 t1   Test2 t2 t1                                Test1          Test2                      test1                    Test1        test1                                                                                              int  float                                                                                                                             Test2      struct Test2   Test1 test1   Test2 Test1  t1  test1 t1                                                Test2                    test1                                                                                                                                                                                                                                struct Test1   Test1 int a  i a    int      struct Test2   Test1 test1   Test2 Test1  t1    test1   t1                     Test2  Test1 test1               Test1               Test1                                        struct Test2   Test1 test1   Test2 Test1  t1  test1 t1                                                                   struct foo   int   int j   foo int x  i x   j i        ok      i     j            struct foo   int   int j   foo int x  j x   i j       i          i          j           i     i  j         i  i j      j          i                                                                                      class ABC   public  ABC int x  int y  int z   private   int a  int b  int c     class MyClass   public  MyClass    abc l 2 3    private  ABC abc          ABC                                        3 int         ABC     ABC    MyClass            abc                         ABC                                     class   protected  int n_     class B   public   public  B     n_ 0                                                      class   public  int data  A int a    data a         class B   public             public  B   int     A a                                                                           vptr                                          vptr                                                                        class Vertex   virtual public Point        class Vertex3d   public Point3d   public Vertex        class PVertex   public Vertex3d        Vertex          Point          Point3d Vertex  Vertex3d        Point                                class Vertex3d    Point              PVertex            Pointvtbl                                   vptr            vtbl",
        "objectID": "post/构造函数与成员初始化列表详解",
        "date": "2017-08-29T15:03:52.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "构造回文字符串",
        "uri": "post/构造回文字符串",
        "content": "str      str                           str                str  ABA  str                     ABA   str  AB      A      B   str              BAB        B      A   str               ABA                                                            str                      str                             str    N         N N     dp dpi        stri  j            str i  j               dp i                  stri  j          dp i 0          str i  j          str i  j                          stri  j                   dp i 0       str i  j   AA          str i  j                                dpi 1      str i  j   AB               stri  j         dp i 1       stri  j          str i  str j    dp i dpi 1      stri  j   A124521A   str i  j          str  i 1  j 1                    124521                     A    stri  j             str i   str j    str i  j                    str i  j 1                 str j    str i  j                  str i 1  j                 str i    str Lj                              dp i   min  dpi dp i 1    1   dpi     str i  j            str i  j                      dp            str                                 getDP    public static int getDP char   str    int dp   new intstr length   int j   1  j  1  i       str i     str j     dpi   dpi   1    else   dpi   Math min dpi   1  dpi    1        return dp            dp                 str                  dp0                                   res  res    dp0 str          res                   stri  j   str i  str j     str i  j            str i   str i 1  j 1           str J    res        str  i        str i l  j l    dp   res          stri  j   str i   str j    dp i  dpi 1       dpi     stri  j            str j   str i  j 1           str j      res        str j        str i  j 1    dp   res         dp i 1     str i  j            str i   str i 1  j           str i      res        str i      str i 1  j    dp   res                                   res                  public static String getPalindrome1 String str     str    null    str length   next temp size     1  0    next     size                            next next 0     1      int j    1  int   0   i   0    temp j     temp i   j   next j      j   i    j  next i    j       1       return sreverse substr 0  sreverse size     next temp size       s       LeetCode 336  Palindrome Pairs Given list unique words  find pairs distinct indices  i  j  given list  so concatenation two words  i e  words i    words j  palindrome  Example 1  Given words     bat    tab    cat   Return   0  1    1  0   palindromes   battab    tabbat   Example 2  Given words     abcd    dcba    lls    s    sssll   Return   0  1    1  0    3  2    2  4   palindromes   dcbaabcd    abcddcba    slls    llssssll                                                      hash                                                              aabbcc bbaa    bbaa hash            aabb          aabbcc        aabb    hash            cc                            hash                               aabb ccbbaa    aabb hash    bbaa           ccbbaa          bbaa   hash               cc                                      a                  0  1   1  0                                                 aabb bbaa                                               aabb           aabb                          aabb               bbaa                                                                                                                  class Solution   public  bool isPalin string  str                       int   0  int j   str size     1  while i   palindromePairs vector  words    unordered_map hash  vector  result  for int  0  i hash left   i    if hash count right    isPalin left    hash right   i   j 0  result push_back vector i  hash right         return result",
        "objectID": "post/构造回文字符串",
        "date": "2017-08-26T15:56:04.000Z",
        "tags": [
            "KMP",
            "Backtracking",
            "区间DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "构造数组的MaxTree",
        "uri": "post/构造数组的MaxTree",
        "content": "MaxTree MaxTree                            MaxTree                                                                                                                      O n                        A     n                                             1         3 1 4 2  4      2 0  1 2                                                                                   Pop                    3 1 2      3      1 3    pop 3  1         1           3    2 1  1   2 3  2         2           3                                    class MaxTree   public  vector buildMaxTree vector A  int n     n       vector res                    stack s                   index  int   0  A s top      int tmp   s top   s pop                                                   res tmp      1    A i    A res tmp     res tmp    i                A i       s empty     pos   s top      s push i   res push_back pos                    return res",
        "objectID": "post/构造数组的MaxTree",
        "date": "2017-08-16T18:26:35.000Z",
        "tags": [
            "单调栈"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "购买股票问题",
        "uri": "post/购买股票问题",
        "content": "LeetCode 121  Best Time Buy Sell Stock Say array ith element price given stock day i  permitted complete one transaction  ie  buy one sell one share stock   design algorithm find maximum profit  Example 1  Input   7  1  5  3  6  4  Output  5 max  difference   6 1   5  not 7 1   6  selling price needs larger buying price  Example 2  Input   7  6  4  3  1  Output  0 case  no transaction done  i e  max profit   0                                                                                class Solution   public  int maxProfit vector  prices    int m   prices size    if m    0  return 0  int curMin   prices 0   int ret   0  for int   1    prices    int total   0  if prices size    0  return total   int i 0  iprices i   total    prices i 1  prices i   return total       LeetCode 123  Best Time Buy Sell Stock III Say array i th element price given stock day i  Design algorithm find maximum profit  may complete two transactions  Note  may not engage multiple transactions time  ie  sell stock buy again                                       2             2                                               hold   sell                                  hold i    i            i        sell i    i                1 3 7 2 1 5              hold 1     1                                                                                       j     j       j    j 1       class Solution   public  int maxProfit vector  prices    int len   prices size    int hold 3    hold i    i        int sell 3    sell i    i          int i 0 i  prices    int len   prices size     lenlen 2   int ans   0   int i 1   prices    int buy INTMIN   sell 0   prevsell 0   prev_buy   int price   prices    prev_buy   buy  buy   max prev_sell   price  buy   prev_sell   sell  sell   max prev_buy   price  sell     return sell",
        "objectID": "post/购买股票问题",
        "date": "2017-06-24T20:26:45.000Z",
        "tags": [
            "DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "哈弗曼树详解",
        "uri": "post/哈弗曼树详解",
        "content": "if score11 B  10 C  00 D  011 E  010                                                 include  include  include  include  include using namespace std  char Table 26   struct Node   int freq  char val  Node   left  Node   right  Node   left NULL   right NULL    freq 0    val  0        class Cmp   public  bool operator    const Node   a  const Node   b  const   return a  freq   b  freq           freq               priority_queue   Cmp  myQueue  void BuildTree      int   0  0    Node   node   new Node    node  freq   Table i   node  val   char   i    A    myQueue push node        myQueue size   1    Node   f   myQueue top    myQueue pop    Node   s   myQueue top    myQueue pop    Node   tmp   new Node    tmp  freq   f  freq   s  freq  tmp  left   f  tmp  right   s  myQueue push tmp       struct PrintNode   int freq  char val  string code     vector vpn  bool cmp const PrintNode     const PrintNode   b    return a freq   b freq    void Print  Node   node   string res     node    NULL    return     node  val     0          0                             vpn        PrintNode pn  pn val   node  val  pn freq   node  freq  pn code   res  vpn push_back pn   return     Print node  left   res    0    Print node  right  res    1    delete node  left  delete node  right    int main     int N  memset Table   0   sizeof Table    cin    N   int   0    ch   ch     A     ch  include using namespace std  priority_queue greater  Q  int main     int n  while cin  n   if n  0  break  while Q empty    false   Q pop      for int i 1 i x  Q push x     int ans 0  while Q size   1   int a Q top    Q pop    int b Q top    Q pop    ans ans a b  Q push a b     cout  include  include  include using namespace std  char s 1005   int main    while scanf   s  s     EOF   int n   strlen s   sort s s   n           hash                priority_queue greater   heap  int cnt   0  for int   0 j i   n    j   i  while j   n    s j     s i      j  heap push j i     j     cnt              int ret   0  for int   0 i   cnt   1    i    cnt 1       int   heap top    heap pop    int B   heap top    heap pop    ret      B  heap push A   B     printf   d n  ret     return 0",
        "objectID": "post/哈弗曼树详解",
        "date": "2017-07-20T13:51:59.000Z",
        "categories": [
            "算法"
        ]
    },
    {
        "title": "哈希算法",
        "uri": "post/哈希算法",
        "content": "hash table          nameditem                         hashtable            dictionary                         stack queue                  16 bits            0 65535          array                array A   65536        0 65535      0   5 21                         i      A i          i      A i          i      A i    0                           array                                 32 bits  16 bits       array A       2 32 4GB                                          array                         1234       1 2 3 4          jjhou               1234                   7 bits         ASCII           jjhou           array                                              jjhou                                            array                  array                                                        hash function            x      TableSize array    X TableSize           0   TableSize 1             array        hash function                                                  array             collision                           linear probing       quadraticprobing     separatechaining                           array                  linear probing                   loading factor                      0 1          separatechaining         hash function                                                                                           array                                                     hashfimctiori                                                                    lazy deletion                            rehashing           hash table                                               1        2                                                                                                                   hash function            4    7      4  7               3                   8 9 0 1 2 3             3        4 5  6  7          4   5   6   7                                               hashing         primary clustering        quadratic probing                                                                     X       X                                                                                                             prime             0 5         0 5                                        2                                                                                                           good hash table primes                                                                                                   1                                                     i l i         i2            mod                                                       H       H                                   2       bitshift        mod                      array                                              rehashing                                                                         primary clustering           secondaryclustering       hash function                                                    double hashing                                                          separate chaining                        separatechaining                     list  hash function        list        list                       list                   list                            1 STL hash table",
        "objectID": "post/哈希算法",
        "date": "2017-09-03T06:13:55.000Z",
        "categories": [
            "算法"
        ]
    },
    {
        "title": "海量数据处理总结",
        "uri": "post/海量数据处理总结",
        "content": "http   blog csdn net vjulyv article details 7382693                   99                                                                                                                                                                                                                                                                 OK                                                                                                                                                     Bloom filter Hash bit map            trie                         hash                                                                                 cpu                                                            blog              Big Data Processing                              hash     hash                      Bloom filter Bitmap  Trie                       Hadoop Mapreduce             set map  hashtable hashmap hashset      set map multiset multimap  hashset hashmap hashmultiset hashmultimap                                 6                                 set map  hashtable hashmap hashset               hashmap hashset                          STL             vector list deque stack queue heap                 set     map                   multiset       multimap              RB tree         3        hashtable         hashtable        hashset       hashmap        hashmultiset         hashmultimap               set map multiset multimap     RB tree  hashset hashmap hashmultiset hashmultimap     hashtable                                   key       value      Key Value                             RB tree hashtable                                               MongoDB     document                    Key Value                       Key Value     Value           String Integer List       name     July    sex     male    age    23   set map multiset multimap set  map                        set map                 RB tree                                       set     map           value     key  set                  map       pair        value     key  pair                          multiset multimap          set map                                RB tree insertequal    insertunique    hashset hashmap hashmultiset hashmultimap hashset hashmap            hashtable        hashset set                             hashmap map                 value       key              map        hashset hashmap    hashtable                     hashtable            hashmultiset hashmultimap       multiset multimap              hashmultiset hashmultimap        hashtable  multiset multimap             RB tree                              rbtree PK hashtable 1 hash_set        insert    set  2  map hash_map                 3                         map           hash_map         int key  hash table rbtree 3 4   hash table               hash table           rbtree        rbtree  value            3                               key                1s rbtree     50w     hash table      200w                                                                   hashtable                    B B     B         B                                NoSQL     MongoDB     B                                 Hash     Hash_map               1                        IP                                                                hash     hash                                         hash                                    16                        hashmap                          hashmap ip value                                             IP                               IP                   IP 32       2 32 IP                1000          1000                     IP     hash_map  1000       IP                         IP             1000    IP           IP                       Hash                                       mod1000        IP hash                              IP       Hash IP                      1000                hash                           big                                                                                       hash        hash                                                                      2        300              10                                                1 255                                 1               3                                           10                1G          1                     Ip Top 10    1000 ip  1000            ip                   ip  hashmap                              top10                                   2         Query                   300  Query   Query255Byte                    300                           3M 1K 4 0 75G                                             HashTable                       hash         hash        So        TOP K            hashmap           hashmap                         Key Query   Value  Query     HashTable  hashmap Query Value        Query        Table             Value   1       Table                     O N         Hash                            Top K       N logK             log                      K      10            300  Query                           O N    N    O logK   N 1000 ",
        "objectID": "post/海量数据处理总结",
        "date": "2017-06-25T22:44:31.000Z",
        "tags": [
            "量数据"
        ],
        "categories": [
            "算法"
        ]
    },
    {
        "title": "汉明距离",
        "uri": "post/汉明距离",
        "content": "LeetCode 461  Hamming Distance Hamming distance two integers number positions corresponding bits different  Given two integers x y  calculate Hamming distance                        1  class Solution   public  int hammingDistance int x  int y    int dist   0  n   x   y   n  x y        n      dist  n    n   1   n  n 1     n            1   0   return dist       LeetCode 477  Total Hamming Distance Hamming distance two integers number positions corresponding bits different  job find total Hamming distance pairs given numbers             bit       bit     1   count  0                  bit             count  n count  n           class Solution   public  int totalHammingDistance vector  nums    int res   0   int i 0  i i    1    res    bitCount    nums size     bitCount        1          0        return res",
        "objectID": "post/汉明距离",
        "date": "2017-08-27T19:49:03.000Z",
        "tags": [
            "Bit Manipulation"
        ],
        "categories": [
            "解题报告 "
        ]
    },
    {
        "title": "汉诺塔问题分析",
        "uri": "post/汉诺塔问题分析",
        "content": "",
        "objectID": "post/汉诺塔问题分析",
        "date": "2017-08-16T16:39:46.000Z",
        "tags": [
            "Stack",
            "Design"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "合并有序链表/数组",
        "uri": "post/合并有序链表:数组",
        "content": "LeetCode 88  Merge Sorted Array Given two sorted integer arrays nums1 nums2  merge nums2 nums1 one sorted array  Note  may assume nums1 enough space  size greater equal m   n  hold additional elements nums2  number elements initialized nums1 nums2 m n respectively                                                                               class Solution   public  void merge vector  nums1  int m  vector  nums2  int n    int   m   1  j   n   1  tar   m   n   1    nums2  nums1   j    0        nums2     nums1 tar       i    0    nums1 i    nums2 j     nums1 i      nums2 j            LeetCode 21  Merge Two Sorted Lists Merge two sorted linked lists return new list  new list made splicing together nodes first two lists         merge                                  Definition singly linked list  struct ListNode   int val  ListNode  next  ListNode int x    val x   next NULL           class Solution   public  ListNode mergeTwoLists ListNode l1  ListNode  l2     l1    NULL  return l2   l2    NULL  return l1  ListNode  ret   NULL   l1  val val    ret   l1  ret  next   mergeTwoLists l1  next  l2     else   ret   l2  ret  next   mergeTwoLists l1  l2  next     return ret               class Solution   public  ListNode mergeTwoLists ListNode l1  ListNode  l2    ListNode dummy INT_MIN           ListNode  tail    dummy   l1    l2     l1  val val    tail  next   l1  l1   l1  next    else   tail  next   l2  l2   l2  next    tail   tail  next    tail  next   l1   l1   l2              tail  return dummy  next                 LeetCode 23  Merge k Sorted Lists Merge k sorted linked lists return one sorted list  Analyze describe its complexity                                     Definition singly linked list  struct ListNode   int val  ListNode  next  ListNode int x    val x   next NULL           class Solution   public  struct cmp   bool operator    ListNode a ListNode b            return a  val   b  val       ListNode  mergeKLists vector  lists    priority_queue cmp  queue                                    for int i 0 inext temp    prev temp          if temp  next  NULL                    queue push temp  next       return head",
        "objectID": "post/合并有序链表:数组",
        "date": "2017-06-25T02:23:16.000Z",
        "tags": [
            "Merge",
            "Array",
            "Linked List",
            "STL"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "红黑树详解",
        "uri": "post/红黑树详解",
        "content": "http   www cnblogs com skywang12345 p 3245399 html http   blog csdn net vjulyv article details 6105630                                                          O lgn                                                                                                                           AVL         AVL                                                                                                                                                                                                                            Red    Black                                          NIL                                                                                   3             NIL null         5                                                                             O lgn             Java    TreeSet TreeMap C   STL  set map   Linux                            enum RBTColor RED  BLACK   template class RBTNode  public  RBTColor color        T key             RBTNode  left         RBTNode  right         RBTNode  parent         RBTNode T value  RBTColor c  RBTNode p  RBTNode l  RBTNode  r   key value  color c  parent   left l  right r                                                                                                                                                                                                    x                  x       px px     x y                   lx y x ry         ly ry lx ly      template void RBTree  leftRotate RBTNode   root  RBTNode  x         x     y RBTNode  y   x  right        y          x            y          x      y         x  right   y  left   y  left    NULL  y  left  parent   x        x         y     y  parent   x  parent   x  parent    NULL    root   y         x            y        else    x  parent  left    x  x  parent  left   y        x            y   x          else x  parent  right   y        x            y   x                  x      y      y  left   x        x          y  x  parent   y                  y                  y       py py     y x                   x ry lx y         lx rx rx ry    template void RBTree  rightRotate RBTNode   root  RBTNode  y         x           RBTNode  x   y  left        x          y             x              y      x         y  left   x  right   x  right    NULL  x  right  parent   y        y         x     x  parent   y  parent   y  parent    NULL    root   x         y            x        else    y    y  parent  right  y  parent  right   x        y            x   y          else y  parent  left   x      y            x   x                  y      x      x  right   y        y          x  y  parent   xz                                                                                                                                               5                                                                                                            3    Case          Caseather            S Son         F                   S F                                                                                                      S                       S             F              S                              S                01     F                     S                F                    2             4                            3                                                                4                                                             S Original Son         B Brother         U Uncle        F Father       G Grand Father   S F                ",
        "objectID": "post/红黑树详解",
        "date": "2017-06-25T22:44:42.000Z",
        "tags": [
            "黑树"
        ],
        "categories": [
            "算法"
        ]
    },
    {
        "title": "猴子补丁:monkey",
        "uri": "post/猴子补丁:monkey",
        "content": "GoStub          GoStub          GoStub     interface   GoMock                              GoStub           OO                       UT                GoStub                            GoStub                      func Exec cmd string  args    string   string  error               Exec                GoStub     Exec          Exec               var Exec   func cmd string  args    string   string  error                                Golang                                 GoStub                               package adapter var Stat   os Stat var Marshal   json Marshal var UnMarshal   json Unmarshal               Monkey                         GoStub      Monkey     monkey patch                                                     Python                         Go       github com bouk monkey                                                                   patch                                               AOP                            package main func a   int   return 1   func main     print a             Hopper                                                 main main      0x2010   0x2026                                  0x202a       main a 0x2000       0x1       0x202f   0x2037       runtime printint                Go                       package main import    fmt   unsafe    func a   int   return 1   func main     f    fmt Printf  0x x n    uintptr  unsafe Pointer  f        11  a    f        f      a     unsafe      f           C                       a            0x2000                             0x102c38                      11           main a f                   main a f  0x102c38       0x2000     main a       f                                   package main import    fmt   unsafe    func a   int   return 1   func main     f    fmt Printf  0x x n    uintptr  unsafe Pointer  f                    0x2000               Go                                type funcval struct   fn uintptr    variable size  fn specific data                            f         package main func a   int   return 1   func main     f    f                    main a f      rdx     rdx          rbx                   rdx                                                                                                       Go                              2  package main func a   int   return 1   func b   int   return 2   func main     replace a  b  print a          replace         a      b                                       b    rdx         rdx    mov rdx  main b f   48 C7 C2             jmp  rdx    FF 22                                                                    func assembleJump f func   int    byte   funcVal     uintptr  unsafe Pointer  f   return   byte  0x48  0xC7  0xC2  byte funcval    0   byte funcval    8   byte funcval    16   byte funcval    24      MOV rdx  funcVal 0xFF  0x22     JMP  rdx           a      b                      package main import    syscall   unsafe    func a   int   return 1   func b   int   return 2   func rawMemoryAccess b uintptr    byte   return    0xFF byte  unsafe Pointer b         func assembleJump f func   int    byte   funcVal     uintptr  unsafe Pointer  f   return   byte  0x48  0xC7  0xC2  byte funcVal    0   byte funcVal    8   byte funcVal    16   byte funcVal    24      MOV rdx  funcVal 0xFF  0x22     JMP  rdx      func replace orig  replacement func   int    bytes    assembleJump replacement  functionLocation     uintptr  unsafe Pointer  orig   window    rawMemoryAccess functionLocation  copy window  bytes    func main     replace a  b  print a                        segementation fault                                    mprotect                                           2  package main import    syscall   unsafe    func a   int   return 1   func b   int   return 2   func getPage p uintptr    byte   return    0xFFFFFF byte  unsafe Pointer p    uintptr syscall Getpagesize   1      syscall Getpagesize      func rawMemoryAccess b uintptr    byte   return    0xFF byte  unsafe Pointer b         func assembleJump f func   int    byte   funcVal     uintptr  unsafe Pointer  f   return   byte  0x48  0xC7  0xC2  byte funcVal    0   byte funcVal    8   byte funcVal    16   byte funcVal    24      MOV rdx  funcVal 0xFF  0x22     JMP rdx     func replace orig  replacement func   int    bytes    assembleJump replacement  functionLocation     uintptr  unsafe Pointer  orig   window    rawMemoryAccess functionLocation  page    getPage functionLocation  syscall Mprotect page  syscall PROTREAD syscall PROTWRITE syscall PROT_EXEC  copy window  bytes    func main     replace a  b  print a           Monkey                                                                                                Exec infra                          infra os encap exec go func Exec cmd string  args    string   string  error    cmdpath  err    exec LookPath cmd  err    nil   fmt Errorf  exec LookPath err   v  cmd   s   err  cmd  return     infra ErrExecLookPathFailed   var output   byte output  err   exec Command cmdpath  args     CombinedOutput   err    nil   fmt Errorf  exec Command CombinedOutput err   v  cmd   s   err  cmd  ret",
        "objectID": "post/猴子补丁:monkey",
        "date": "2020-01-25T23:36:00.000Z",
        "tags": [
            "Go",
            "monkey"
        ],
        "categories": [
            "Go测试"
        ]
    },
    {
        "title": "后台模式详解",
        "uri": "post/后台模式详解",
        "content": "jobs jos        Linux                                                                                                                                                                                                                                       test4 sh    1  3231           shell                 Linux           ID PID  Linux                   PID                           1  Done   test4 sh                  Done                ctrl z     bg   ctrl z                               bg                                     bg  jobnumber                          CTRL z                               fg                   bg                                                                                                                           ctrl   z  bg                                                            ctrl z                xxx ceph2  var www html doc  sudo node server             xxx ceph2  var www html doc  sudo node server  sudo  password xxx           ctrl z                                                       bug   fg fg                                       bg                                                                telnet ssh        Linux                                                                                                           1                                           hangup         Unix                 modem           logout   modem      hang up          modem               hangup                                 logout               HUP hangup                                       HUP                                 1  nohup nohup                   nohup               hangup             nohup        NOHUP 1  User Commands NOHUP 1  NAME nohup   run command immune hangups  output non tty SYNOPSIS nohup COMMAND  ARG     nohup OPTION DESCRIPTION Run COMMAND  ignoring hangup signals    help display help exit   version output version information exit    nohup                        nohup                      nohup out                                    filename 2  1               nohup     root pvcent107     nohup ping www ibm com    1  3059 nohup  appending output  nohup out   root pvcent107     ps  ef  grep 3059 root 3059 984 0 21 06 pts 3 00 00 00 ping www ibm com root 3067 984 0 21 06 pts 3 00 00 00 grep 3059  root pvcent107     root pvcent107     nohup ping www ibm com    1  3059 nohup  appending output  nohup out   root pvcent107     ps  ef  grep 3059 root 3059 984 0 21 06 pts 3 00 00 00 ping www ibm com root 3067 984 0 21 06 pts 3 00 00 00 grep 3059  root pvcent107    2  setsid nohup         HUP                                           HUP                      HUP        setsid                      setsid        SETSID 8  Linux Programmer s Manual SETSID 8  NAME setsid   run program new session SYNOPSIS setsid program   arg       DESCRIPTION setsid runs program new session     setsid                          setsid     setsid     root pvcent107     setsid ping www ibm com  root pvcent107     ps  ef  grep www ibm com root 31094 1 0 07 28   00 00 00 ping www ibm com root 31102 29217 0 07 29 pts 4 00 00 00 grep www ibm com  root pvcent107                    ID PID  31094      ID PPID  1    init    ID             ID      nohup      ID      3  subshell          subshell                                     shell                                                                                    jobs                     HUP         subshell     root pvcent107      ping www ibm com     root pvcent107     ps  ef  grep www ibm com root 16270 1 0 14 13 pts 4 00 00 00 ping www ibm com root 16278 15362 0 14 13 pts 4 00 00 00 grep www ibm com  root pvcent107                      ID PPID  1 init     PID             ID                              HUP           2                    nohup    setsid       HUP                                        HUP                    nohup    setsid                  disown                  disown        disown   ar    h   jobspec      Without options  jobspec removed table active jobs   h option given  jobspec not removed table  marked so SIGHUP not sent job shell receives SIGHUP  no jobspec present  neither  a nor  r option supplied  current job used  no jobspec supplied   a option means remove mark jobs   r option without jobspec argument restricts operation running jobs  return value 0 unless jobspec does not specify valid job   disown  h jobspec        HUP     disown  ah           HUP     disown  rh            HUP                disown                            jobs            ps  ef                                                                             jobs                                                    CTRL z   Ctrl      z     CTRL z              Suspend          jobs             bg jobspec                                             disown   1                                disown    root pvcent107 build   cp  r testLargeFile largeFile    1  4825  root pvcent107 build   jobs  1   Running cp  i  r testLargeFile largeFile    root pvcent107 build   disown  h  1  root pvcent107 build   ps  ef  grep largeFile root 4825 968 1 09 46 pts 4 00 00 00 cp  i",
        "objectID": "post/后台模式详解",
        "date": "2018-11-15T18:43:54.000Z",
        "tags": [
            "Shell"
        ],
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "滑动窗口",
        "uri": "post/滑动窗口",
        "content": "LeetCode 209  Minimum Size Subarray Sum Given array n positive integers positive integer s  find minimal length contiguous subarray sum   s  isn t one  return 0 instead  example  given array  2 3 1 2 4 3  s   7  subarray  4 3  minimal length problem constraint                                          s                         class Solution   public  int minSubArrayLen int s  vector  nums    int n   nums size    start   0  sum   0  minlen   INT_MAX   int   0    s    minlen   min minlen    start   1   sum    nums start         return minlen    INT_MAX   0   minlen       LeetCode 239  Sliding Window Maximum Given array nums  sliding window size k moving left array right  k numbers window  time sliding window moves right one position  example  Given nums    1 3  1  3 5 3 6 7   k   3  Window position Max                        1 3  1   3 5 3 6 7 3 1  3  1  3  5 3 6 7 3 1 3   1  3 5  3 6 7 5 1 3  1   3 5 3  6 7 5 1 3  1  3  5 3 6  7 6 1 3  1  3 5  3 6 7  7 Therefore  return max sliding window  3 3 5 5 6 7   Note  may assume k always valid  ie  1   k   input array s size non empty array                                k                              i k 1                                                                           deque  class Solution         public  vector maxSlidingWindow vector  nums  int k    deque dq  vector ans   int i 0  i k 1  ans push_back nums dq front                               return ans       LeetCode 424  Longest Repeating Character Replacement Given string consists uppercase English letters  replace letter string letter k times  Find length longest substring containing repeating letters performing above operations  Note  string s length k will not exceed 104  Example 1  Input  s    ABAB   k   2 Output  4 Explanation  Replace two  A s two  B s vice versa  Example 2  Input  s    AABABBA   k   1 Output  4 Explanation  Replace one  A  middle  B  form  AABBBBA   substring  BBBB  longest repeating letters  4                                                               start end                                              26                                                         end  start                                            k                                                  end                                                        start                                                       class Solution   public  int characterReplacement string s  int k    int len   s length    int count 26    0   int start   0  maxCount   0  maxLength   0   int end   0  end k    count s start     A      start      maxLength   max maxLength  end   start   1     return maxLength       LeetCode 480  Sliding Window Median Median middle value ordered integer list  size list even  no middle value  So median mean two middle value  Examples   2 3 4    median 3  2 3   median  2   3    2   2 5 Given array nums  sliding window size k moving left array right  k numbers window  time sliding window moves right one position  job output median array window original array  example  Given nums    1 3  1  3 5 3 6 7   k   3  Window position Median                        1 3  1   3 5 3 6 7 1 1  3  1  3  5 3 6 7  1 1 3   1  3 5  3 6 7  1 1 3  1   3 5 3  6 7 3 1 3  1  3  5 3 6  7 5 1 3  1  3 5  3 6 7  6 Therefore  return median sliding window  1  1  1 3 5 6   Note  may assume k always valid  ie  1   k   input array s size non empty array              multiset                                  class Solution   public  vector medianSlidingWindow vector  nums  int k    multiset window nums begin    nums begin     k          auto mid   next window begin    k   2    mltiset        vector medians   int i k    i      medians push_back  double mid    prev mid  1   k 2     2           i    nums size          return medians        num i        window insert nums i            nums i  map 128 0   for auto c  t  map c          int counter t size    begin 0  end 0  d INT_MAX  head 0  while end0  counter            t    counter      end map                map               0  while counter  0                                  if end begin findSubstring string S  vector  L    vector ans  int n   S size    cnt   L size     n dict   int   0  tdict          int j   i  j dict str                               string str1   S substr left  wl          tdict str1            tdict str1  qmin   new LinkedList    LinkedList qmax   new LinkedList    int   0  int j   0  int res   0   i   arr j     qmin pollLast      qmin addLast j     qmax isEmpty      arr qmax peekLast    num    break    j                    i        qmin peekFirst      i      qmin pollFirst       qmax peekFirst      i    qmax pollFirst      res    j   i  i      return res",
        "objectID": "post/滑动窗口",
        "date": "2017-06-25T02:21:40.000Z",
        "tags": [
            "DFS",
            "滑动窗口"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "划分数组/链表",
        "uri": "post/划分数组:链表",
        "content": "LeetCode 75  Sort Colors Given array n objects colored red  white blue  sort so objects color adjacent  colors order red  white blue  Here  will use integers 0  1  2 represent color red  white  blue respectively  Note  not suppose use library s sort function problem                              3                                                                                                                             val 1  0 l   val  l 1 k   val  r n 1   val                                                val                val               k     k                 val    k          1         l k                         1         r      r                  1         k                    l              k         class Solution   public  void sortColors vector  nums    int l   0  k   1 val 1  int r   nums size   1   k 1  swap nums k   nums r      else k                               arr   arr                                       arr  1 2 2 2 3 3 4 5 6 6 7 7 8 8 8 9       arr  1 2 3 4 5 6 7 8 9           public static void leftUnique int   arr     arr    null    arr length nums 2  nums 2  nums 2             nums 0  nums 2    nums    int n   nums size    int mid   n 2         nth_element nums begin    nums begin     mid  nums end            threeWayPartition nums  nums mid    vector res n               int largeStart   n 1          int smallStart    n 2    mid    mid 1            int   0   nums  int val    int   0  j   0  int k   nums size   1   j val  swap nums j   nums k      else j                    O 1                                                                                                                                      1  1  2  2  2  3                              1  3  5  0  2  4                                                                                                                                                 2 i 1   len 1   class Solution   public  void wiggleSort vector  nums    int n   nums size    auto midptr   nums begin     n   2  nth_element nums begin    midptr  nums end     int mid    midptr   define A i  nums  1 2  i      n 1         int   0  j   0  k   n   1   j mid  swap A i     A j      else  A j  4  3  2  5  2 x   3  return 1  2  2  4  3  5            partition                  2       partition     Definition singly linked list  struct ListNode   int val  ListNode  next  ListNode int x    val x   next NULL           class Solution   public  ListNode partition ListNode head  int x    ListNode node1 0   node2 0   ListNode p1    node1  p2    node2               head     head  val next   head  else p2   p2  next   head  head   head  next    p2  next   NULL  p1  next   node2 next  return node1 next                                                           O n          O 1            0 1                                                                    small      equal       big             7  9  1  8  5  2  5 pivot 5       small equal big      small  1  2  null equal  5  5  null big  7  9  8  null  small equal big                        null                                         public static Node listPartition2 Node head  int pivot    Node sH   null     small head Node sT   null     small tail Node eH   null     equal head Node eT   null     equal tail Node bH   null     big head Node bT   null     big tail Node next   null     save next node                  head    null    next   head next  head next   null   head value 2  3  4  5  NULL  return 1  3  5  2  4  NULL  Note  relative order inside even odd groups remain input  first node considered odd  second node even so                    odd         head     odd even         evenhead     even     Definition singly linked list  struct ListNode   int val  ListNode  next  ListNode int x    val x   next NULL           class Solution    Given 1  2  3  4  5  NULL public  ListNode  oddEvenList ListNode  head     head    NULL  return NULL  ListNode odd   head  even   head  next   evenHead   even   even    NULL    even  next    NULL    odd  next   even  next   1 3 odd   odd  next         even  next   odd  next   2 4 even   even  next           odd  next   evenHead                return head",
        "objectID": "post/划分数组:链表",
        "date": "2017-06-24T20:31:14.000Z",
        "tags": [
            "Linked List",
            "Quick Sort",
            "Array",
            "Two Pointers"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "画匠问题",
        "uri": "post/画匠问题",
        "content": "arr                                  num",
        "objectID": "post/画匠问题",
        "date": "2017-09-03T21:43:56.000Z",
        "tags": [
            "DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "环境变量的使用",
        "uri": "post/环境变量的使用",
        "content": "bash shell          environment variable         shell                                                 shell                                   bash shell                                     shell         shell       Linux      bash                                                             env printenv                    printenv        env      printenv HOME  home Christine     env HOME env  HOME  No file directory        echo                                               echo  HOME  home Christine    echo                                                                                                      Linux                                                                              Linux                      set                                                 env printenv   set                                            env printenv          env     printenv                                           bash shell       shell           shell                                        echo  my_variable   my_variable Hello     echo  my_variable Hello            myvariable             myvariable                                                 my_variable Hello World  bash  World  command not found     my_variable  Hello World      echo  my_variable Hello World           bash shell                                                                                                           bash shell                 my_variable    Hello World   bash  my_variable  command not found                 shell                         shell    shell                                                                                           export                    my_variable  I Global now      export my_variable     echo  my_variable Global     bash     echo  my_variable Global     exit exit     echo  my_variable Global               myvariable  bash        shell     shell            myvariable                 export                  shell              shell        shell      export     shell                     unset          unset                      echo  my_variable Global     unset my_variable     echo  my_variable                                                                                          printenv                                                                                  shell           bash shell                          Linux                   bash shell     Unix Bourne shell       Unix Bourne shell                 Bourne      bash shell             6 2                             set                                      PATH        shell                shell                PATH                                       PATH                  shell                  PATH                                  PATH             PATH                       PATH                       echo  PATH  usr local sbin  usr local bin  usr sbin  usr bin   sbin  bin  usr games  usr local games     PATH  PATH  home christine Scripts     echo  PATH  usr local sbin  usr local bin  usr sbin  usr bin  sbin  bin  usr  games  usr local games  home christine Scripts     myprog factorial 5 120         PATH                                     shell                      PATH                        PATH        PATH  PATH       cd  home christine Old_Scripts     myprog2 factorial 6 720    PATH                                    1                            length    var        var 12345678901234567890   echo    var  20 length                   shell                     shell  echo  SHELL      echo  0       echo  SHELL  bin bash   echo  0 bash           UID                                                UID  ne 0    echo Non root user  Please run root  else echo  Root user  fi root   uid 0    Bash      usemame01iostnaine",
        "objectID": "post/环境变量的使用",
        "date": "2017-08-07T18:27:36.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "缓冲区溢出(Buffer Overflow)",
        "uri": "post/缓冲区溢出-Buffer-Overflow",
        "content": "LIFO                      PUSH POP PUSH               POP                                ESP EBP EIP CPU ESP                EBP                 CPU EIP        CPU           CPU           EIP                                                                       procedure     function                      jump                                                                                                                                                                                                                      IP                              FP                    SP   FP     FP  SP                       prolog                               epilog    Intel ENTER LEAVE   Motorola LINK  UNLINK                                       buffer             data      buffer                                                                                                                           ebp                                                                                                                                         4                                                               data                                                                                                  example1 c  void function int a  int b  int c    char buffer1 5   char buffer2 10     void main     function 1 2 3              function                gcc  S                   gcc  S  o example1 s example1 c                  function           pushl  3 pushl  2 pushl  1 call function          function               function      call       IP                IP       RET                         pushl  ebp movl  esp  ebp subl  20  esp     EBP            SP   EBP                      FP  SFP      SP                                             4     32     5         8    2           10          12    3                SP   20              function                             buffer1            sfp ret                                    Shell Code                                                                                                     shellcode                                                                              bar   foo        main                  strcpy         strcpy               buf                    ret         bar          bar      include  include void foo const char  input    char buf 10   printf  My stack looks like  n p n p n p n p n p n p n p n n    strcpy buf  input   printf  buf    s n   buf   printf  Now stack looks like  n p n p n p n p n p n p n p n n      void bar void    printf  Augh  I ve hacked  n      int main int argc  char  argv      printf  Address foo    p n   foo   printf  Address bar    p n   bar    argc    2    printf  Please supply string argument  n    return  1    foo argv 1    printf  Exit  n    return 0     GCC              Buffer Overflow Protect    gcc  g  fno stack protector test c  o test            gdb                    gdb                  gdb  r Starting program   media Personal MyProject C StackOver test abc Address foo   0x80483d4     foo    Address bar   0x8048419     bar    Breakpoint 1  main  argc 2  argv 0xbfe5ab24  test c 24 24 foo argv 1         foo        ebp   gdb  info registers ebp ebp 0xbfe5aa88 0xbfe5aa88   ebp  0xbfe5aa88  gdb  n Breakpoint 2  foo  input 0xbfe5c652  abc   test c 4 4    gdb  n 6 printf  My stack looks like  n p n p n p n p n p n p n p n n         foo       ebp   gdb  info registers ebp ebp 0xbfe5aa68 0xbfe5aa68   ebp    0xbfe5aa68            0xbfe5aa68         gdb  x  0xbfe5aa68 0xbfe5aa68  0xbfe5aa88       0xbfe5aa68           ebp                 push  ebp     ebp                    gdb  n stack looks like  0xb7ee04e0 0x8048616 0xbfe5aa74 0xbfe5aa74 0xb7edfff4 0xbfe5aa88                       0xbfe5aa88                 ebp            sfp  0x8048499     0xbfe5aa88  sfp    0x8048499    ret                7 strcpy buf  input       0x8048499         gdb  x i 0x8048499 0x8048499   movl  0x8048653   esp         main              foo               main assemble   gdb  disassemble main Dump assembler code function main  0x0804842d   lea 0x4  esp   ecx 0x08048431    0xfffffff0  esp 0x08048434   pushl  0x4  ecx  0x08048437   push  ebp            0x08048494   call 0x80483d4 0x08048499   movl  0x8048653   esp            0x080484a0   call 0x8048340                      0x08048499   bar     0x8048419       bar         0x8048419                    Perl Python       Python    import os arg    ABCDEFGHIJKLMN      x19 x84 x04 x08  cmd      test     arg os system cmd       08 04 84 19                python hack py Address foo   0x80483d4 Address bar   0x8048419   bar      stack looks like  0xb7fc24e0 0x8048616 0xbf832484 0xbf832484 0xb7fc1ff4 0xbf832498 0x8048499   strcpy       0x8048499 buf   ABCDEFGHIJKLMN stack looks like  0xbf83246e 0x8048616 0x42412484 0x46454443 0x4a494847 0x4e4d4c4b 0x8048419                   bar     0x8048419 Augh  I ve hacked       bar                                                                                                         heap1 c             include  include  include int main int argc  char  argv      char  input   malloc 20  ",
        "objectID": "post/缓冲区溢出-Buffer-Overflow",
        "date": "2017-06-24T11:44:54.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "换钱",
        "uri": "post/换钱",
        "content": "LeetCode 322  Coin Change given coins different denominations total amount money amount  Write function compute fewest number coins need amount  amount money cannot made combination coins  return  1  Example 1  coins    1  2  5   amount   11 return 3  11   5   5   1  Example 2  coins    2   amount   3 return  1  Note  may assume infinite number kind coin             class Solution   public  int coinChange vector  coins  int amount    int Max   amount   1         dp amount    Min  dp diff   1  dp amount    vector dp amount   1  Max   dp 0    0   dp      dp 0       coins           int j   0  j amount    1   dp amount               arr  arr                              aim           aim              01  DP   arr    N       N    aim 1       dp dpi            arr0  i                      j               dp i             dpi l  j arr i  0  j      leftup   max   j   arr i     0    dp j   arr i      max    leftup   dp j   arr i     1    dp j    Math min leftup  dp j        return dp aim     max   dp aim     1                   arr arr                                                  aim                                dpi dpi l dpi   public static int coins5 int   arr  int aim     arr    null    arr length    0    aim   0   dp j   arr i     0      return dp aim",
        "objectID": "post/换钱",
        "date": "2017-06-24T16:11:15.000Z",
        "tags": [
            "DP",
            "背包DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "回调函数及其实现",
        "uri": "post/回调函数及其实现",
        "content": "shell   shake                                                           int float string                                            A                  A                     A                                A             API        SetTimer                                                     C     C        C                                    C               functor                                                    C                                     C                        this    C      this                    C                 C                             this            CALL BACK                      this                                          this                         this                                                                                                               class Test   public  static void callBackFun void        typedef void   FPtr  void           void Fun FPtr ptr          ptr      void main void    Fun Test  callBackFun                                               C                                                                                                    pThis this                                   class A     static void a A            void b              void A  a A   pThis    pThis  b                                                                                                                this               class A     static void a             void b            static   pThis               A  pThis NULL  A  A           this    pThis          pThis          pThis this    void A  a      pThis  NULL  return  pThis  b",
        "objectID": "post/回调函数及其实现",
        "date": "2017-06-23T15:42:30.000Z",
        "tags": [
            "回调函数"
        ],
        "categories": [
            "C++"
        ]
    },
    {
        "title": "基本的Shell命令(一)",
        "uri": "post/基本的Shell命令(一)",
        "content": "Linux                cd shell           cd            cd destination cd         destination                   cd                     destination                                                                    ls    F                                                                                              a     R   ls                                                         l                                      ls  l                                                      time atime                             d                              inode       ls     i                          ls                                                                                                        ls                                  ls                                                                                                                                                     a   i                                        touch          touch                                         touch             touch                                              a         cp                    cp source destination  source destination         cp                   destination                                    cp                    i     shell                                                        Documents                                                                                                             cp    R                                 cp  R Scripts  Mod_Scripts    cp  R       ModScripts         cp  R         Scripts                     ModScripts                   Mod_Scripts         Scripts             cp                        ln     s                                    sldatafile  94     datafile 1092        sldatafile      datafile                                             inode         inode                                                                                                                                     ln                               inode                                       Linux            moving  mv                                      fall   fzll  inode               mv             mv          mv fzll Pictures           mv     fzll  home christine     home christine Pirctures                    inode             mv                    Linux     deleting      removing  bash shell         rm rm                 i                   bash shell                               rm            i        rm                                  f                   Linux         cp                              Linux          mkdir     mkdir    p                                                rmdir              NewDir          myfile    rmdir          rmdir    i                    rmdir                               rm      r                                                             rm      r    R           R                   shell                                                r    f   rm    rm  rf                                                              file                                                                            Linux  3                cat cat                      n                                b                      T    cat                                          more   more                             rev rev                                                  tac tac                                    tac    cat      more           man              bash                                                      q     less less      more                        more                             less",
        "objectID": "post/基本的Shell命令(一)",
        "date": "2017-08-06T22:25:51.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "基本进程状态和PV操作浅析",
        "uri": "post/基本进程状态和PV操作浅析",
        "content": "1            CPU            CPU                                 2           CPU                                                  3                                                                                       I O                                                                                                                                                                                                                                                                                                                                      PV                                      Saphore                                                s        1   S 0  S                2   S 0            3   S",
        "objectID": "post/基本进程状态和PV操作浅析",
        "date": "2017-08-01T17:18:05.000Z",
        "categories": [
            "OS"
        ]
    },
    {
        "title": "基于docker搭建rocketmq环境",
        "uri": "post/基于docker搭建rocketmq环境",
        "content": "docker               docker       rocketmq      broker   nameserver                     docker compose  rocketmq                   web             mq                    rocketmq console           docker                 rocketmq docker           docker hub              rocketmqinc rocketmq       mq      broker conf        opt rocketmq conf        brokerClusterName   DefaultCluster brokerName   broker a brokerId   0 deleteWhen   04 fileReservedTime   48 brokerRole   ASYNC_MASTER flushDiskType   ASYNC_FLUSH        IP                  localhost  brokerIP1 10 10 101 80           opt rocketmq logs  opt rocketmq store      docker compose yml          version   3 5  services  namesrv  image  rocketmqinc rocketmq container_name  rmqnamesrv ports  9876 9876 volumes    logs  home rocketmq logs   store  home rocketmq store command  sh mqnamesrv broker  image  rocketmqinc rocketmq container_name  rmqbroker ports  10909 10909 10911 10911 10912 10912 volumes    logs  home rocketmq logs   store  home rocketmq store   conf broker conf  opt rocketmq 4 4 0 conf broker conf  command  sh mqbroker  n namesrv 9876 command  sh mqbroker  n namesrv 9876  c    conf broker conf depends_on  namesrv environment  JAVA_HOME  usr lib jvm jre console  image  styletang rocketmq console ng container_name  rocketmq console ng ports  8087 8080 depends_on  namesrv environment  JAVA_OPTS   Dlogging level root info  Drocketmq namesrv addr rmqnamesrv 9876 Dcom rocketmq sendMessageWithVIPChannel false                 rocketmq broker   rokcetmq console      rokcetmq nameserver         nameserver ip    docker compose         docker                        ip     nameserver     rmqnamesrv            docker compose                 ip 8087    mq                  rocketmq                            Caused by  org apache rocketmq remoting exception RemotingTooMuchRequestException  sendDefaultImpl call timeout         brokerip            mq            broker          192 168 128 3 10911   docker    IP          IP       IP         IP     broker conf    brokerIP1                         nameserver ip           mq                   nameserver                    127 0 0 1 9876      mq       docker            127 0 0 1 9876                            docker              JAVA_OPTS   Dlogging level root info  Drocketmq namesrv addr rmqnamesrv 9876",
        "objectID": "post/基于docker搭建rocketmq环境",
        "date": "2020-04-19T23:52:04.000Z",
        "tags": [
            "rocketmq"
        ],
        "categories": [
            "rocketmq"
        ]
    },
    {
        "title": "计算数组的小和",
        "uri": "post/计算数组的小和",
        "content": "O NlogN          O N                                      public static int getSmallSum int   arr     arr    null    arr length    0    return 0    return func arr  0  arr length   1     public static int func int   s  int l  int r     l    r    return 0    int mid    l   r    2  return func s  l  mid    func s  mid   1  r    merge s  l  mid  r     public static int merge int   s  int left  int mid  int right    int   h   new int right   left   1   int hi   0  int   left  int j   mid   1  int smallSum   0   i mid   s j    s i      int k   0  k    h length  k      s left      h k     return smallSum",
        "objectID": "post/计算数组的小和",
        "date": "2017-09-01T22:07:01.000Z",
        "tags": [
            "Merge Sort"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "将正方形矩阵转动90度",
        "uri": "post/将正方形矩阵转动90度",
        "content": "LeetCode 48  Rotate Image given n x n 2D matrix representing image  Rotate image 90 degrees  clockwise   Follow up  in place               90                       90              class Solution   public  void rotate vector    matrix    for int i 0 n matrix size   i",
        "objectID": "post/将正方形矩阵转动90度",
        "date": "2017-06-24T22:08:46.000Z",
        "tags": [
            "Array"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "脚本对命令行选项的处理方法",
        "uri": "post/脚本对命令行选项的处理方法",
        "content": "case      12                  cat test15 sh    bin bash extracting command line options parameters echo    n   1    case   1   a  echo  Found  a option      b  echo  Found  b option      c  echo  Found  c option        echo   1 not option     esac shift done       test15 sh  a  b  c  d Found  a option Found  b option Found  c option  d not option   case                            case                                    getopt        getopt                                                     getopt                                                 getopt optstring parameters optstring                                               optstring                                              getopt         optstring             getopt             getopt ab cd  a  b test1  cd test2 test3  a  b test1  c  d    test2 test3   optstring            a b c d            b     b            getopt                   a  b test1  cd test2 test3        optstring              cd                                        optstring           getopt                                q    getopt  q ab cd  a  b test1  cde test2 test3                 getopt                                   getopt                            set        set                            set                             getopt       getopt       set    getopt                               set      getopt  q ab cd                       getopt         getopt                   test18 sh  ac getopt                                                          getopts  getopt                           getopts         shell                                                         0                              getopts         getopts optstring variable optstring    getopt                  optstring                                     optstring         getopts                 variable   getopts                         OPTARG             OPTIND            getopts                                             getopts           cat test19 sh    bin bash simple demonstration getopts command echo getopts  ab c opt case   opt  a  echo  Found  a option     b  echo  Found  b option  value  OPTARG    c  echo  Found  c option        echo  Unknown option   opt    esac done       test19 sh  ab test1  c Found  a option Found  b option  value test1 Found  c option   while     getopts                                  opt            case          getopts                        case           getopts                                  test19 sh  b  test1 test2   a                                      test19 sh  abtest1 Found  a option Found  b option  value test1   getopts      b        test1       getopts                                 test19 sh  d Unknown option      optstring                      getopts                        getopts           OPTIND         getopts           shift   OPTIND           cat test20 sh    bin bash Processing options   parameters getopts echo getopts  ab cd opt case   opt  a  echo  Found  a option     b  echo  Found  b option  value  OPTARG     c  echo  Found  c option     d  echo  Found  d option        echo  Unknown option   opt     esac done shift     OPTIND   1   echo count 1 param      echo  Parameter  count   param  count     count   1   done       test20 sh  a  b test1  d test2 test3 test4 Found  a option Found  b option  value test1 Found  d option Parameter 1  test2 Parameter 2  test3 Parameter 3  test4             shell                                                Linux                       shell     6",
        "objectID": "post/脚本对命令行选项的处理方法",
        "date": "2017-08-10T10:42:41.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "阶乘相关问题",
        "uri": "post/阶乘相关问题",
        "content": "LeetCode 172  Factorial Trailing Zeroes Given integer n  return number trailing zeroes n   Note  solution logarithmic time complexity                      0    5 2       2 5   pair           5    2    2 5   pair    5       n   2       5       15     3 5      5  10  15       n 5       25     6 5  5 5     5  10  15  20  25      1 5  25  55      5         n 5      n 5 5  n 5 5 5  n 5 5 5 5     n 5 5 5    5    0  class Solution   public  int trailingZeroes int n    return n    0   0   n   5   trailingZeroes n   5             N        1              M         M          1                 0     1  1     1 0    2  2     1 1    1000000000      1 999999987              1                  2               2     1               N      2      Z             Z   N 2   N 4   N 8    N 2 i   i       2 i N   public static int rightOne1 int num     num     1  res    num    return res",
        "objectID": "post/阶乘相关问题",
        "date": "2017-09-02T16:20:21.000Z",
        "tags": [
            "Math"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "结构体字节对齐详解",
        "uri": "post/结构体字节对齐详解",
        "content": "http   www cnblogs com longlybits articles 2385343 html             sizeof                                                                                                                                                                                                                                 int                                                 2            win32      C         1                                                                                                                             2                                                                                                                         3                                                                                    sizeof                    test1      typedef struct node    S   sizeof S  1  sizeof S  0   C    1     C  0    test2 typedef struct node1   int a  char b  short c   S1   sizeof S1  8        node1         int  4       4                             int          4    char        short   4      8   test3 typedef struct node2   char a  int b  short c   S2   siezof S3  12        int  4       4                    char                 4            int          4      short              4      12    test4          typedef struct node3   int a  short b  static int c   S3   sizeof S3  8                                               C                   C                                          int          4      short             4      c                siezof         c           test5           typedef struct node4   bool a  S1 s1  short b   S4   sizeof S4  16    s1 8    s1        int  4    bool  1    short 2      4                    bool          4           s1            8           short         4   test6 typedef struct node5   bool a  S1 s1  double b  int c   S5   sizeof S5  32    s1 8    s1        int  4    double 8      8                      bool          8             s1           8            double        8        int                8   test7             pragmapack x              C                                    pragma pack n  C      n             pragma pack                         2   int      4  int    2 4    2                                 8     long double                                  long double                    8     10 12                attribute  aligned n                n                     n               attribute_  packed                                              pragma pack 4           typedef struct node5   bool a  S1 s1  double b  int c   S5   sizeof S5  24      4      S5        double  8      4                            a          4            s1            4            s1            4            b             4            b             4             c            4              sizeof                     1                                                                                           t     t                               t                            pragma pack n            n                                                                                                                                                                   0 1                                C                                                                                                                                                      struct                                                                                              struct bs   int a 8  int b 2  int c 6   data    data bs              a 8    b 2    c 6                       sizeof  C99  int unsigned int bool                                                                  1                           sizeof                              2                           sizeof                                    3                               VC6        Dev C          4                           5                                                                                            struct bs   unsigned a 4  unsigned b 5              unsigned c 4                                   0      unsigned  0 struct bs   unsigned a 4  unsigned  0                        unsigned b 4              unsigned c 4                                                                             struct k   int a 1  int  2         2               int b 3  int c 2            include  include using namespace std  struct   int a 5  int b 3     int main void    char str 100     0134324324afsadfsdlfjlsdjfl   struct d  memcpy  d  str  sizeof A    cout   d a   endl  cout   d b   endl  return 0     32 x86            16 1       32           a b      int   4           A     4                 A       a   5   b   3     a b       A                           0123  ascii         3210    00110100 00110011 00110001 00110000     4   3   1   0    d a d b  d       00110000                 d a   10000  d b   001 d a         10000   d a                             16     11111111111111111111111111110000  d b         001   d b                            1     00000000000000000000000000000001",
        "objectID": "post/结构体字节对齐详解",
        "date": "2017-06-23T15:00:13.000Z",
        "tags": null,
        "categories": [
            "C++"
        ]
    },
    {
        "title": "密码检查器",
        "uri": "post/解题报告",
        "content": "LeetCode 420  Strong Password Checker password considered strong below conditions met  least 6 characters 20 characters  contain least one lowercase letter  least one uppercase letter  least one digit  NOT contain three repeating characters row    aaa   weak    aa a   strong  assuming conditions met   Write function strongPasswordChecker s   takes string s input  return MINIMUM change required s strong password  s already strong  return 0  Insertion  deletion replace one character considered one change                               6      20                                     3                   aaa           aa a             strongPasswordChecker s       s                        s          0                                          1 s length   20           1    s length   20                                                       len           a len 3          0 1 2   b                  len 3   c    a   b                       len 3    d    c             1         len 3    0      1     len 3    1      2     len 3    2      3                       d                                       class Solution   public  int strongPasswordChecker string s    int deleteTarget   max 0   int s length     20   addTarget   max 0  6    int s length     int toDelete   0  toAdd   0  toReplace   0  needUpper   1  needLower   1  needDigit   1               int l   0  r   0  r   lenCnts 3      record repetitions  length   3     0  1 2  int l   0  r   0  len  r 2    lenCntslen   3         care repetions length    3 l   r         Use deletions minimize replacements  following below orders   1  Try delete one letter repetitions  length   3     0  deletion decreases replacement 1  2  Try delete two letters repetitions  length   3     1  deletion decreases repalcement 1  3  Try delete multiple three letters repetions  length   3     2  deletion  of three letters  decreases repalcements 1     int   0  numLetters  dec  second   deleteTarget   toDelete    numLetters   toDelete    dec   numLetters     dec number repetitions we ll delete it  second    dec     update number repetitions left    letters deleted  fits group  length   3     2  it  first   numLetters   2    lenCnts2    dec         record number replacements needed    note len length repetition  need  len   3  number replacements toReplace     it  second      it  first    3       int dec    deleteTarget   toDelete    3     try delete multiple three letters possible toReplace    dec  toDelete    dec   3  return deleteTarget   max toReplace  needUpper   needLower   needDigit",
        "objectID": "post/解题报告",
        "date": "2017-06-24T15:32:59.000Z",
        "tags": [
            "Sliding Window",
            "String",
            "Greedy"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "解析\"export\"",
        "uri": "post/解析\"export\"",
        "content": "extern                                             C         export               extern int n  extern struct Point p  extern class a  export template class Stack s  export template void f  T  t                                                                                                                                                                           extern                                               export                                                             out h            out         template void  const T  t      out cpp            out        include            include  include  out h  export template void  const T  t   std  cerr   t     user cpp                                include  out h       out      VS      export",
        "objectID": "post/解析\"export\"",
        "date": "2017-09-04T21:41:58.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "解析“const”",
        "uri": "post/解析“const”",
        "content": "const                     const                                            int a 3  const int b a               const       const               const     const                           const             const      const int  ra a  a 5      ra 4              a    const     const         a              const       a               const int a 10  int  ra a       const       const                                                                                                                                       const int ca   1  int  rca   ca                        int i 42  const int  r1 i      const int  r2 42      r2 const   const int  r3 r1 2      r3 const   int  r4 32       32         int r 32  int  r4 i                                                                                                           double dval   23  const int  ri   dval            int tmp   dval     double    int const int  ri   tmp                     int  pa    a  int   rd   pa                                             const int   1  int   ra    a         ra        a                     a     const int   const  rc    a       rc        int                 include using namespace std  int main    int a1 3     non const data const int a2 a1     const data int   a3    a1     non const data non const pointer const int   a4    a1     const data non const pointer int   const a5    a1     non const data const pointer int const   const a6    a1     const data const pointer const int   const a7    a1     const data const pointer return 0    const           const                                             const                void StringCopy char strDestination  const char strSource                                                        const          void Func1 int x    void Func1 const int x                                const                    void Func A a    void Func const  a            A              a                                                                                  const                                     void Func int x       void Func const int  x                                                                                   const                                   const                const char   GetString void           const char str   GetString        char str   GetString                                                    const                   int GetInt void    const int GetInt void                                                                    const         const                         const                                class Stack   public  void Push int elem   int Pop void   int GetCount void  const     const      private  int m_num  int m_data 100      int Stack  GetCount void  const      mnum                  mnum Pop                 const    return m_num    const                     this       const          void foo             void foo T pThis   void foo    const      void foo const T pThis             const         this        const const     const                      char get    const        char get                        cs get     cs non const      foo     cs const      foo  const  class Screen   public  char get int x int y   char get int x int y  const     const Screen cs  Screen cc2  char ch   cs get 0  0        const     ch   cs2 get 0  0         const           get  const  const cs  get               foo    non const obj  foo  const              non const      const    const      non const          const   const     const           const this           const                  const          const        const                              const      const      const       const        const     const              const Student  obj getAge     const      const       const_cast constObj  getAge       constObj                      const      const      const      const      const          const            const         const        const         const          const          const                      const       const        this   const_cast        const             const        mutable        const       class Test   public  Test     num 0      Test     int Get Test  t  const   t foo 5   return num    int Get Test  p  const   p  foo 10   return num    void foo int n    num   n    private  int num     void main     Test t  cout this              temp  test1         int main    foo f  f test2    return 0      const       const      const non const                non const    const              const       const        const_cast this          const                class TextBlock  public        const char  operator const         return text position     char  operator   return constcast        const char             constcast const_cast  this  position        this       this          const        private  char text maxtextlen      const    const           const                                                                                                              const                     const                                               bug         http   blog csdn net lihao21 article",
        "objectID": "post/解析“const”",
        "date": "2017-06-23T20:08:52.000Z",
        "tags": [
            "键字"
        ],
        "categories": [
            "C++"
        ]
    },
    {
        "title": "解析“explicit”",
        "uri": "post/解析“explicit”",
        "content": "http   blog csdn net fengbingchun article details 51168728 C       explicit                                                                       implicit                                                                                                                         explicit                                                      explicit                                                        explicit                                                                                 explicit                       explicit             explicit  explicit                                                                               explicit                   explicit             explicit   explicit hpp   ifndef FBCMESSYTESTEXPLICITHPP  define FBCMESSYTESTEXPLICITHPP    reference Bjarne Stroustrup sample class String  public  explicit String int n      String const char  p         void test_explicit     endif    FBCMESSYTESTEXPLICITHPP explicit cpp   include static void test1     String s1    a              char  String   String s2 10           explicit String int n   String s3   String 10           explicit String int n               String s4    Brian               String const char  p               String s5  Fawlty              String const char  p     static void f String      static String g     f 10              int  String   f  Arthur                  f String  Arthur     return 10          void test_explicit     test1    g",
        "objectID": "post/解析“explicit”",
        "date": "2017-09-04T21:53:36.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "解析“extern”",
        "uri": "post/解析“extern”",
        "content": "extern                                                           extern            extern           C          extern  C  void fun int a  int b           fun        C               C    C                fun              fun aBcintint                           C            extern   C                     extern int g_Int                                                                     B                    A                  A                 B                            A               extern                                                                                                 A cpp B cpp     C         A cpp int i  void main         B cpp int i             A cpp            i  B             i     A B                                                            A     B     i      B     A     i                                                                                                                           obj                                                                                                 A              B                          A cpp void main       100        B             B cpp int i                                                                                                                                                                   extern      extern                                                                                 extern       A cpp extern int i  void main       100        B             B cpp int i             extern                    c                                h   extern     extern long a   pA   ra                  a pA ra   extern                                a pA ra                                            char a 6                      extern char  a                                           T          T    extern char  a                                                extern char a        extern               extern   static       extern                              static                                  static                extern                  extern          extern         extern     static                      static extern                 extern static              static                              static                   static                                                     static        1  test1 h   ifndef TEST1H  define TEST1H static char g_str      123456   void fun1     endif  2  test1 cpp   include  test1 h  void fun1     cout   g_str   endl     3  test2 cpp  include  test1 h  void fun2     cout   g_str   endl                        test1 obj               123456         test2 obj                                                                                                                                   test1 test2  g_str              static                                                                                                                   123456                                                                               1  test1 cpp   include  test1 h  void fun1     g_str 0      a    cout   g_str   endl     2  test2 cpp  include  test1 h  void fun2     cout   g_str   endl     3  void main     fun1       a23456 fun2       123456                           g_str                                                              static             static                                                      extern        test1 h         ifndef TEST1H  define TEST1H extern char gstr             gstr void fun1     endif  test1 cpp   include  test1 h  char gstr      123456            gstr void fun1     cout   g_str   endl       test1                       test2      g_str                 include  test1 h  void fun2     cout   g_str   endl     test1 test2                      ultraEdit  test1 obj          123456              test2 obj         g_str                     test2 obj                                                                       test1 h   extern char g_str      123456               extern    test1 cpp  gstr               test1 test2                       gstr            test1 cpp       test1 h       gstr  test2 cpp    test1 h        gstr           test1 test2     g_str        g_str     test1 h        test2     include  test1 h        extern char g_str    void fun2     cout   g_str   endl              g_str                                                     test2 cpp    include  test1 h    test1 h                      extern                                                                      extern  const C   const          static                       const   extern                        extern const char g_str                  const char g_str      123456      const        static      extern              extern        const                      const char  g_str    123456    const char g_str     123465            const     char     gstr   gstr                                           char  g_str  const                const char  const g_str  123456   extern                         extern                 extern                                 extern                                               exter",
        "objectID": "post/解析“extern”",
        "date": "2017-06-23T17:43:54.000Z",
        "tags": [
            "键字"
        ],
        "categories": [
            "C++"
        ]
    },
    {
        "title": "解析“inline”",
        "uri": "post/解析“inline”",
        "content": "inline     inline                              C              inline            inline                                                                                                                                                               inline                                         inline                                                                                                                                                                                                                                                                                                                                                          inline                    C                                                                                                                                            inline              class ClassName         INT GetWidth   return m_lPicWidth                          inline                      inline     class Account   public  Account double initialbalance    balance   initialbalance       1   double GetBalance            double Deposit  double Amount    double Withdraw  double Amount    private  double balance     inline double Account  GetBalance     return balance              inline    inline double Account  Deposit  double Amount     return   balance    Amount      inline double Account  Withdraw  double Amount     return   balance    Amount         inline                                      1000        inline          inline                                                                                       CPP                         SomeInline h   ifndef SOMEINLINE_H  define SOMEINLINE_H inline Type Example void                  include SomeInlie cpp                  endif   SomeInline cpp   include SomeInline h  Type Example void                                                        CPP           inline define                                                                       inline",
        "objectID": "post/解析“inline”",
        "date": "2017-06-24T10:34:27.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "解析“mutable",
        "uri": "post/解析“mutable”",
        "content": "C    mutable      const         mutable                      const                                          const               const                                 mutalbe                                        const                                                               mutable       const                                 mutable         mutable                       mutable                const             mutable                  mutable            class ClxTest   public  void Output   const     void ClxTest  Output   const   cout    Output test     endl    void OutputTest const ClxTest  lx    lx Output       ClxTest     Output                      const     OutputTest               lx Output                                    const                                                    const    Output                                         Output const             mutable        mutalbe                               class ClxTest   public  ClxTest     ClxTest    void Output   const  int GetOutputTimes   const  private  mutable int m_iTimes     ClxTest  ClxTest     m_iTimes   0    ClxTest   ClxTest      void ClxTest  Output   const   cout    Output test     endl  m_iTimes      int ClxTest  GetOutputTimes   const   return m_iTimes    void OutputTest const ClxTest  lx    cout   lx GetOutputTimes     endl  lx Output    cout   lx GetOutputTimes     endl       m_iTimes mutable           const      const",
        "objectID": "post/解析“mutable”",
        "date": "2017-06-24T09:58:38.000Z",
        "tags": [
            "键字"
        ],
        "categories": [
            "C++"
        ]
    },
    {
        "title": "解析“static”",
        "uri": "post/解析“static”",
        "content": "static                                        extern          static                                 Static                                  0                                                                                          private                                          C                                                                         static                                                                                                                                                                        private            1                                                                             2                                                                               3                                               static                               0   4                              5                   public protected private                      1                                       2         this            this     3",
        "objectID": "post/解析“static”",
        "date": "2017-09-01T13:38:13.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "解析“volatile”",
        "uri": "post/解析“volatile”",
        "content": "volatile   volatile                                                                                                                  int volatile vInt        volatile                                                               volatile   volatile             Volatile                                                         volatile                                    volatile                                                            C C   Volatile              Volatile                                                                                 volatile                                     volatile                                                       C C   Volatile                               Volatile flag        Thread1                          Thread2         flag     flag      volatile                                                if  flag    true    if  false    true    flag   Thread1     Thread2             if         if        if        flag    true     Thread1  something                             other things       flag     volatile                C C   Volatile                              volatile                                                              C C   Volatile                                       flag   true     Thread1  something          flag    true         Thread1  something                                                flag    true  flag   true        something               C C   Volatile                      C C   Volatile                                Volatile               A B   volatile     gcc O2                A B                          B   0           A   B   1                    C C                                                 gcc   A B          foo                          A   1 B   0                    Volatile                          B    volatile               B      A     Volatile  B                                 C C   Volatile     Volatile                                              flag    true    something                    volatile                    Volatile      A B        volatile                   A B                                   A       B       C C   Volatile                          volatile                                  volatile                    volatile                  volatile                      C  11                                  volatile   volatile       volatile int   10  volatile          int square volatile int  ptr    return ptr  ptr      ptr             ptr                       const       const               volatile                        volatile   volatile char  vpch                        volatile   char volatile pchv     http   hedengcheng com  p 725",
        "objectID": "post/解析“volatile”",
        "date": "2017-06-24T09:53:31.000Z",
        "tags": [
            "键字"
        ],
        "categories": [
            "C++"
        ]
    },
    {
        "title": "解析shutdown()和close()",
        "uri": "post/解析shutdown-和close",
        "content": "TCP          close shutdown                                      5           socket                                                                                          so_linger               socket         ESTABLISH     socket                                               close           shutdown                      close shutdown              close shutdown                  unistd h     define _NRclose 3 SYSCALL NRclose  sysclose   define _NRshutdown 48 SYSCALL NRshutdown  sysshutdown   sysclose sysshutdown           tcpclose tcpshutdown                  sysshutdown                 sysclose                         fput              socket                     close              close                      fput    void fastcall fput struct file  file     atomicdecandtest  file  fcount              0       socket __fput file        socket     fcount  0            TCP   tcpclose                                                                                                                                        TCP          clone                  clone       clone                               TCP     clone           copyfiles           socket           flag        CLONEFILES                                                          1   file     f_count   1     static int copyfiles unsigned long cloneflags  struct task_struct   tsk     cloneflags   CLONEFILES    goto out          newf   dup_fd oldf   error   out  return error       dup_fd    static struct filesstruct  dupfd struct files_struct oldf  int errorp     i   open_files     0  i      struct file f   old_fds     f    get_file f               get_file           define getfile x  atomicinc   x   f_count                   socket           close  socket                  0     tcp_close                               close                                    socket      close            shutdown                                        shutdown                       close      close  shutdown                    TCP                                                                  3                                             shutdown      shutdown                         close    TCP                                                                                  TCP                                                                                           RST                  close                                         SO_LINGER                                 socket       listen         close                            TCP                                 TCP                       3                                                  1 2      3                      close                    close     keepalive    keepalive                                          ESTABLISH   TCP   tcpkeepalivetime            2                                                  FIN                    RST                     close               ESTABLISH         so_linger                       close                       close                                                     ACK                                              RST                                                                   FIN                                          angle                                                              FIN                   angle                                   FIN                 so_linger              so_linger                                   FIN                   close                 close                               RST                                 so_linger         close                   ACK                close                                                     llinger         close                 solinger                      close                 solinger                         RST                            2        FIN   nagle                   llinger                                             solinger               close                                         FIN  CLOSEWAIT         close  FIN           ACK        ACK  FIN_WAIT2          FIN    close         close                 SOLINGER         0    close    RST         TIMEWAIT       TCP           SO_LINGER shutdown               shutdown         shutdown           3                                                                                                                                 RST    close       shutdown                     RST        shutdown                                                                   shutdown                                read                                                close       FIN                       close shutdown                 5        http   blog csdn net russell_tao article details 13092727",
        "objectID": "post/解析shutdown-和close",
        "date": "2017-06-25T14:21:49.000Z",
        "tags": null,
        "categories": [
            "Linux编程"
        ]
    },
    {
        "title": "尽量以 const, enum, inline 替换 #define",
        "uri": "post/尽量以-const-enum-inline-替换-define",
        "content": "const define enum define                   define ExpressionName Var1 Var2    Var1   Var2     Var1   Var2                            C              C                                                                          C                                                                              C                                                                 C                                                                    this            inline                                                     inline            inline                                                                                                                                                               inline",
        "objectID": "post/尽量以-const-enum-inline-替换-define",
        "date": "2017-08-30T16:14:14.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "进程间通信方式(IPC)总结",
        "uri": "post/进程间通信方式(IPC)总结",
        "content": "UNIX              PIPE        FIFO       Signal  System V             Semaphore        Message Queue         Shared Memory               RPC  Remote Procedure Call        Socket                  TCP IP                     PIPE                                                                                                                        FIFO                                       Signal                                        Semaphore                                                                                                      Message Queue                                                                              Shared Memory                                                            IPC                                                                    Socket",
        "objectID": "post/进程间通信方式(IPC)总结",
        "date": "2017-09-09T21:59:17.000Z",
        "categories": [
            "Linux编程"
        ]
    },
    {
        "title": "静态链接和动态链接区别浅析",
        "uri": "post/静态链接和动态链接区别浅析",
        "content": "compile time               object file          library              executable file                                                  static libaray         libxxx a                                    runtime                dynamic link library                 libxxx so         soo                   gcc     o         gcc  c file1 c file2 c ar cr libxxx a file1 o file2 o                                                                                                                                                                                           Position Independent Code  PIC     gcc           fPIC       gcc  fPIC  c file1 c gcc  fPIC  c file2 c gcc  shared libxxx so file1 o file2 o                       gcc  o main main o libxxx a libxxx so       gcc  o main main o  L   lxxxx gcc file1 o file2 o  Lpath  lxxx  o program       path     libxxx so              libxxx a                                     UNIX         LDLIBRARYPATH              path         csh      setenv LDLIBRARYPATH your full path to dll              ldd             ldd program                                fPIC                                                                               Lpath    path           L            Ipaht    path           ltest                               lib      so       lLDLIBRARYPATH                               root          etc ld so conf         sbin ldconfig               root           LDLIBRARYPATH                                                    I  include              L            l        ldd                   so                LDLIBRARYPATH   etc ld so conf                                                          ARM                     ARM                               ARM   linux                 PC               static                  ARM   linux              http   blog chinaunix net uid 24532607 id 3082314 html",
        "objectID": "post/静态链接和动态链接区别浅析",
        "date": "2017-07-27T20:39:57.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "镜像二叉树",
        "uri": "post/镜像二叉树",
        "content": "LeetCode 226  Invert Binary Tree Invert binary tree  4     2 7         1 3 6 9 4     7 2         9 6 3 1                                    Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  TreeNode  invertTree TreeNode  root     root    invertTree root  left   invertTree root  right   swap root  left  root  right     return root                     BFS    stack        class Solution   public  TreeNode  invertTree TreeNode  root    stack stk  stk push root            stk empty      TreeNode  p   stk top    stk pop     p    stk push p  left   stk push p  right   swap p  left  p  right       return root       LeetCode 101  Symmetric Tree Given binary tree  check whether mirror itself  ie  symmetric around its center   example  binary tree  1 2 2 3 4 4 3  symmetric  1     2 2         3 4 4 3 following  1 2 2 null 3 null 3  not  1     2 2     3 3 Note  Bonus points solve recursively iteratively                                       class Solution   public  bool isSymmetric TreeNode  root    if root  0  return true  return isSameTree root  left  root  right     bool isSameTree TreeNode  left  TreeNode  right    if left  0  right  0  return true  if  left  0   right  0   left  val  right  val  return false                    return isSameTree left  left  right  right   isSameTree left  right  right  left                  2     BFS                                   BFS                Definition binary tree struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution       BFS public  bool isSymmetric TreeNode  root    TreeNode left  right    root  return true  queue q1  q2          q1 push root  left   q2 push root  right     q1 empty       q2 empty     left   q1 front    q1 pop    right   q2 front    q2 pop     NULL    left    NULL    right  continue   NULL    left    NULL    right  left  val    right  val         return false  q1 push left  left   q1 push left  right   q2 push right  right   q2 push right  left     return true",
        "objectID": "post/镜像二叉树",
        "date": "2017-06-25T02:23:02.000Z",
        "tags": [
            "Tree",
            "DFS"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "矩阵快速幂解析",
        "uri": "post/矩阵快速幂解析",
        "content": "Implement pow x  n                   n   n  2 31           long long         0x80000000 10000000000000000000000000000000        INTMIN                 INTMIN INT_MAX     1      INT         class Solution   public  double myPow double x  int n    long long m n    if m  1       n   1   n    2147483648    2 31   return ans                                                                                                                                      2 1     x   y         3                                                x y   t    x   y        x   t                      y   t                                                                                                                       F n    F n 1    2F n 2    n 4  F 1      F 2    b  F n  2147493647   a b n                                                                   F n  F n 1         F n  F n 1                                                              a b  n a n C n 1 a  n 1 b C n 2 a  n 2 b 2     C n n 1 ab  n 1  b n   n 1  4   n 4   4n 3   6n 2   4n   n 0 F n 1    F n    2F n 1     n 1  4 F n 1    F n    2F n 1    n 4   4n 3   6n 2   4n   n 0                   1        F n             F n 1          A               1                       F n 1    F n    2F n 1    n 4   4n 3   6n 2   4n   n 0    F n           n           F n 1   n 4 n 3 n 2 n  n 0        F n             F n 1      F n 1        n 1           F n    n 1 4  n 1 3  n 1 2  n 1    n 1 0       F n 1                  F n  F n 1                A     A   7 7                    A                   2                                                    3              A             B2 B3 B4 B5               B2     B3  B3     B4  B4     B5    B2   A 2   B4  B2   A 3   B5  B2   A 4   B6              B2   A n 2   Bn fn            n k       A i    n A i          1e9 7  A i    i k   F i  F i    F i 1    F i 2                    i 1  k   C k k      k   C k  k 1       k 1              C k  0      0      u n 1 k     n 1    k   F n 1   v n 1  k     n 1    k   F n   u n 1  k     n 1  k   F n 1     n 1  k   F n     n 1  k   F n 1      1 k  C k  i    n i   F n      1 k  C k i    n i   F n 1      1 k  C k i    u n  i      1 k  C k i    v n  i   v n 1  k     n 1  k   F n      1 k  C k  i    n i   F n      1 k  C k  i    u n  i   s n    s n 1    u n  k    include  include  include using namespace std  typedef long long LL  const int mod 1e9 7  int len  LL n k  LL c45  struct matrix  LL m100   mc  matrix multi matrix a matrix b          matrix ans  for int i 0 i0   if n 1  ans multi ans t         t multi t t   n   1    return ans    int main     c0 1  c1 c1 1  for int i 2 i n  k   memset mc m 0 sizeof mc m           len 2 k 3            mc m0 1  for int j 0 j",
        "objectID": "post/矩阵快速幂解析",
        "date": "2017-08-02T12:48:59.000Z",
        "categories": [
            "算法"
        ]
    },
    {
        "title": "绝不在构造和析构过程中调用virtual函数",
        "uri": "post/绝不在构造和析构过程中调用virtual函数",
        "content": "class                                                         auditlog                               class Transaction   public  Transaction    virtual void logTransaction   const   0    Transaction  Transaction     logTransaction      class BuyTransaction  public Transaction   public  virtual void logTransaction   const     class SellTransaction  public Transaction   public  virtual void logTransaction   const                         BuyTransaction b         BuyTransaction           Transaction                derived class    base class    derived class               Transaction           virtual  logTransaction                   logTransaction Transaction       BuyTransaction                   BuyTransaction     base class    virtual        derived classes                   base                   base class     virtual    virtual      base class          derived class      base class        derived class                   virtual     derived classes      derived class         local                    C                            derived class   base class           base class   derived class                 derived class             derived class              C              base class            base class    C         virtual   dynamic_casts                     Transaction                    logTransaction            class Transaction  logTransaction    non virtual     derived class           Transaction                    non virtual logTransaction             virtual   base classes                   derived classes             base class                       BuyTransaction    private static    createLogString                 member initialization list    base class                  base class                       static                 BuyTransaction                                             base class          virtual       derived classes",
        "objectID": "post/绝不在构造和析构过程中调用virtual函数",
        "date": "2017-08-30T23:31:05.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "开关灯",
        "uri": "post/开关灯",
        "content": "LeetCode 319  Bulb Switcher n bulbs initially off  first turn bulbs  Then  turn off every second bulb  third round  toggle every third bulb  turning it s off turning off it s on   ith round  toggle every bulb  nth round  toggle last bulb  Find bulbs n rounds  Example  Given n   3  first  three bulbs  off  off  off   first round  three bulbs  on  on  on   second round  three bulbs  on  off  on   third round  three bulbs  on  off  off   So return 1  one bulb on              switch                      1      1       switch       2      2       switch      n          switch                 switch                switch                                             i        i        i  switch                 j j 1 2 3   n     i    j     switch           i           j 12     12     1   12   2   6   3   4       Switch            12                36                 6    i 6         Switch                                        class Solution   public  int bulbSwitch int n    return sqrt n",
        "objectID": "post/开关灯",
        "date": "2017-06-24T16:11:28.000Z",
        "tags": [
            "Math"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "开源Json库性能分析",
        "uri": "post/开源Json库性能分析",
        "content": "Json      Json                                            Go                                                  json                                                                                      ffjson go  u github com pquerna ffjson                                    ffjson                                                            ffjson              ffjson    file go       json        go         ffjson                         go             GOPATH bin        GOPATH bin     PATH                             ffjson                     ffjson  skip type Foo struct   Bar string      ffjson  nodecoder type Foo struct   Bar string   easyjson go  u github com mailru easyjson     easyjson      ffjson                                           easyjson                           key      key                          easyjson  all           all            easyjson json           easyjson json type struct   Bar string   jsoniter go  u github com json iterator go                    easyjson   ffjson            100                                             2018 1 28          taowen                     struct decoder       unsafe Pointer     interface                                import  encoding json      import  github com json iterator go  var json   jsoniter ConfigCompatibleWithStandardLibrary              codec json go  u github com ugorji go codec               json                                jsonparser go  u github com buger jsonparser             json               json                                          json                                                      json                  https   github com hatlonely hellogolang blob master internal json jsonbenchmarktest go        Macbook                                      BenchmarkMarshalStdJson 4 1000000 1097 ns op BenchmarkMarshalJsonIterator 4 2000000 781 ns op BenchmarkMarshalFfjson 4 2000000 941 ns op BenchmarkMarshalEasyjson 4 3000000 513 ns op BenchmarkMarshalCodecJson 4 1000000 1074 ns op BenchmarkMarshalCodecJsonWithBufio 4 1000000 2161 ns op BenchmarkUnMarshalStdJson 4 500000 2512 ns op BenchmarkUnMarshalJsonIterator 4 2000000 591 ns op BenchmarkUnMarshalFfjson 4 1000000 1127 ns op BenchmarkUnMarshalEasyjson 4 2000000 608 ns op BenchmarkUnMarshalCodecJson 4 20000 122694 ns op BenchmarkUnMarshalCodecJsonWithBufio 4 500000 3417 ns op BenchmarkUnMarshalJsonparser 4 2000000 877 ns op golangjsonperformance              easyjson                         1         3  jsoniter          easyjson            100       ffjson                   1  codecjson                  jsonparser                                           jsoniter              easyjson jsoniter package main import    fmt   reflect   unsafe   github com json iterator go    type StructOfTag struct   field1 string json  field 1  field2 string json     field3 int json   string    func str2byte s string    byte   x       2 uintptr  unsafe Pointer  s   h     3 uintptr x 0   x 1   x 1   return    byte  unsafe Pointer  h     func byte2str b   byte  string   return  string  unsafe Pointer  b     func b2s b   byte  string   return  string  unsafe Pointer  b        s2b converts string byte slice without memory allocation        Note may break string and or slice header will change    future go versions  func s2b s string    byte   sh      reflect StringHeader  unsafe Pointer  s   bh    reflect SliceHeader  Data  sh Data  Len  sh Len  Cap  sh Len    return    byte  unsafe Pointer  bh     func main     struct_    StructOfTag     jsoniter Unmarshal   byte   field 1    hello    field2        field3    100      struct_  jsoniter Unmarshal s2b   field 1    hello    field2        field3    100      struct_  fmt Println struct_        https   www jianshu com p 40d5556842f1 https   www jianshu com p 31757e530144 https   blog csdn net hatlonely article details 79187676",
        "objectID": "post/开源Json库性能分析",
        "date": "2018-11-23T16:01:54.000Z",
        "tags": [
            "Json"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "拷贝构造函数详解",
        "uri": "post/拷贝构造函数详解",
        "content": "int   100  int b   a                                                        include using namespace std  class CExample   private  int a  public         CExample int b      b          void Show      cout using namespace std  class CExample   private  int a  public         CExample int b      b            CExample const CExample  C      C a           void Show      cout using namespace std  class Rect   public  Rect     count       Rect     count      static int getCount     return count    private  int width  int height  static int count     int Rect  count 0  int main     Rect rect1  cout using namespace std  class Rect   public  Rect     count      Rect const Rect  r    width r width  height r height  count       Rect     count      static int getCount     return count    private  int width  int height  static int count     int Rect  count 0  int main     Rect rect1  cout  include using namespace std  class Rect   public  Rect     p new int 100      Rect     assert p  NULL   delete p    private  int width  int height  int  p     int main     Rect rect1  Rect rect2 rect1   return 0                                                                         rect1                                          rect1  rect2                           rect1 p   rect2 p                                                                                            p          p                                                                                                                                                                                     include  include using namespace std  class Rect   public  Rect     p new int 100     Rect const Rect  r    width r width  height r height  p new int 100   p  r p      Rect     assert p  NULL   delete p    private  int width  int height  int  p     int main     Rect rect1  Rect rect2 rect1   return 0                                rect1 p rect2 p                                                                                                                 4                                      class                            class                                         class              class                                                                         3                                vptr                             vptr    4                                               const      Sample  Sample a                                                  Sample                                                                                                                                                                                                                                                               C                                          Sample  Sample  p                                                               Sample a  Sample b a            Sample a  Sample b  a                                                                                                                         X                const X volatile X                                                                 const             const                                                                                                                                                                       class CExample   private  int a  public         CExample int b      b  cout using namespace std  class Person   public  Person     cout   Default Constructor",
        "objectID": "post/拷贝构造函数详解",
        "date": "2017-06-24T11:00:59.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "可重入函数与不可重入函数的区别",
        "uri": "post/可重入函数与不可重入函数的区别",
        "content": "static          malloc    free          I O                                                              OS                                                        static          purecode                                                                              CPU                               P V              void swap2 int  x  int  y    int tmp  tmp  x  x y   y tmp                                                                                                                 int Exam   0  unsigned int example  int para     unsigned int temp  Exam   para          temp   Square_Exam     return temp      Exam  int        Squre_Exam  Exam                                                                                                 Exam        para            temp   Square_Exam          temp                      int Exam   0  unsigned int example  int para     unsigned int temp               1     Exam   para  temp   Square_Exam                     return temp                                                                                                                                                                               cpu                               buffer                                                                             1             2    malloc free   3      I O     4          malloc free                         malloc             malloc                                   malloc                  malloc                                                                           io                                                                        static int sum   0  int cout_pear int  package int n    int i  for i   0    n  i    sum      package         1  return sum                     sum                                                 1                  sum                               sum            1           sum                                                                                                            1                            2                   disinterrupt                                                   3                  4                OSENTERKERNAL",
        "objectID": "post/可重入函数与不可重入函数的区别",
        "date": "2017-06-25T16:48:59.000Z",
        "tags": null,
        "categories": [
            "Linux编程 "
        ]
    },
    {
        "title": "课程安排",
        "uri": "post/课程安排",
        "content": "LeetCode 207  Course Schedule total n courses take  labeled 0 n   1  courses may prerequisites  example course 0 first course 1  expressed pair   0 1  Given total number courses list prerequisite pairs  possible finish courses  example  2    1 0   total 2 courses take  course 1 finished course 0  So possible  2    1 0   0 1   total 2 courses take  course 1 finished course 0  course 0 finished course 1  So impossible  Note  input prerequisites graph represented list edges  not adjacency matrices  Read graph represented  may assume no duplicate edges input prerequisites                                                        BFS                                    0                            BFS                                    BFS       indegrees               0                               false             indegree    1                      1        n                false      true  class Solution   public  bool canFinish int numCourses  vector   prerequisites    vector  graph   make_graph numCourses  prerequisites   vector degrees   compute_indegree graph    int   0    make_graph int numCourses  vector   prerequisites    vector  graph numCourses           auto pre   prerequisites  graph pre second  insert pre first   return graph    vector compute_indegree vector   graph           vector degrees graph size    0    auto neighbors   graph   int neigh   neighbors  degrees neigh     return degrees           DFS                         BFS                  visit                                                                    DFS                     false         true                    class Solution   public  bool canFinish int numCourses  vector   prerequisites    vector  graph   make_graph numCourses  prerequisites          vector onpath numCourses  false   visited numCourses  false                     int   0    make_graph int numCourses  vector   prerequisites    vector  graph numCourses      set vector       auto pre   prerequisites  graph pre second  insert pre first   return graph    bool dfs_cycle vector   graph  int node  vector  onpath  vector  visited      dfs             dfs                visited node   return false       dfs   onpath node    visited node    true   int neigh   graph node    nopath    dfs          onpath neigh     dfs_cycle graph  neigh  onpath  visited   return true           dfs              return onpath node    false            onpath false   false      LeetCode 210  Course Schedule II total n courses take  labeled 0 n   1  courses may prerequisites  example course 0 first course 1  expressed pair   0 1  Given total number courses list prerequisite pairs  return ordering courses finish courses  may multiple correct orders  just need return one them  impossible finish courses  return empty array  example  2    1 0   total 2 courses take  course 1 finished course 0  So correct course order  0 1  4    1 0   2 0   3 1   3 2   total 4 courses take  course 3 finished courses 1 2  courses 1 2 taken finished course 0  So one correct course order  0 1 2 3   correct ordering is 0 2 1 3   Note  input prerequisites graph represented list edges  not adjacency matrices  Read graph represented  may assume no duplicate edges input prerequisites          Leetcode 207 Course Schedule                                                                                              bfs dfs                      class Solution   public  vector findOrder int numCourses  vector   prerequisites    vector  graph   make_graph numCourses  prerequisites          vector degrees   compute_indegree graph         queue zeros           int   0  toposort   int   0    make_graph int numCourses  vector   prerequisites    vector  graph numCourses    auto pre   prerequisites  graph pre second  insert pre first   return graph    vector compute_indegree vector   graph    vector degrees graph size    0    auto neighbors   graph   int neigh   neighbors  degrees neigh     return degrees          DFS class Solution   public  vector findOrder int numCourses  vector   prerequisites    vector  graph   make_graph numCourses  prerequisites   vector toposort  vector onpath numCourses  false   visited numCourses  false    int   0    make_graph int numCourses  vector   prerequisites    vector  graph numCourses    auto pre   prerequisites  graph pre second  insert pre first   return graph    bool dfs vector   graph  int node  vector  onpath  vector  visited  vector  toposort     visited node   return false  onpath node    visited node    true   int neigh   graph node    onpath neigh     dfs graph  neigh  onpath  visited  toposort   return true  toposort push_back node   return onpath node    false",
        "objectID": "post/课程安排",
        "date": "2017-06-24T19:51:39.000Z",
        "tags": [
            "DFS",
            "BFS",
            "拓扑排序"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "空间配置器Allocator",
        "uri": "post/空间配置器Allocator",
        "content": "Allocator            C                   class Foo     Foo  pf   new Foo                 delete pf                 new                operator new         Foo  Foo          delete              Foo   Foo            operator delete              STL allocator                      alloc allocate            alloc  deallocate               construct               destroy            construct         P      value                           destroy                                                            first last            first  last                                           SGI                         malloc     free    realloc    C                            C  new handler              C  new handler            operator new         C   new handler                                               operator new           std  bacLalloc                                 new handier         SGI                    128 bytes                   128bytes        memorypool                         free list                    free list                       free list         SGI                          8          30 bytes       32 bytes     16 free list          8  16  24  32  40  48  56  64  72  80  88  96  104  112 120  128 bytes       free list         union obj   union obj   freeli stlink  char client data 1      client sees this                      lists                                                              obj    union    union             obj                   obj          obj                                                            allocate                 128 bytes            128 bytes      free list    free list                                  8         refill       free list            free list free list                       free list    chunk_alloc       chunk_alloc                         20      free list          20                        20                                            malloc    heap                                                                          chunk alloc 32 20     malloc     40 32 bytes      1     19    free list    20               chunkalloc 64 20     freelist 7                         32 20  64 10 64 bytes      10       1       9   free list 7                     chunkalloc 96  20      free  list 11                                malloc    40 n      96 byte     1     19   freelist 11     20 n                                 malloc     chunk_alloc                                                             malloc            out of memory        new handier                                    bad_alloc          deallocate   deallocate                 128 bytes            128 bytes      free list",
        "objectID": "post/空间配置器Allocator",
        "date": "2017-09-02T19:55:36.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "空结构体struct{}解析",
        "uri": "post/空结构体struct-解析",
        "content": "type Q struct            0 var s struct   fmt Println unsafe Sizeof s      prints 0                             1 var s struct   fmt Println unsafe Alignof s           0                                            type S struct   struct   B struct     var s S fmt Println unsafe Sizeof s      prints 0               Go                                                                             var x  1000000000 struct   fmt Println unsafe Sizeof x      prints 0                                                var x   make   struct    1000000000  fmt Println unsafe Sizeof x      prints 12 playground                            var x   make   struct    100  var y   x  50  fmt Println len y   cap y      prints 50 100                        type struct      A   b    A   fmt Println  a     b     prints true            Golang               runtime zerobase    var zerobase uintptr   Go1 6                true    false         Pointer values comparable  Two pointer values equal point variable value nil  Pointers distinct zero size variables may may not equal                                                        hashset                        hashset    var itemExists   struct     type Set struct   items map interface   struct     func New    Set   return  Set items  make map interface   struct       func  set  Set  Add item interface      set items item    itemExists   func  set  Set  Remove item interface      delete set items  item    func  set  Set  Contains item interface    bool   _  contains    set items item    contains   return false   return true         hashset              func BenchmarkIntSet b  testing B    var B   NewIntSet 3  B Set 10  Set 11     0    b N  i     B Exists 1      B Exists 11      B Exists 1000000          func BenchmarkMap b  testing B    var B   make map int int8  3  B 10    1 B 11    1    0    b N  i     _  exists    B 1   exists     _  exists    B 11   exists     _  exists    B 1000000   exists         BenchmarkIntSet 2 50000000 35 3 ns op 0 B op 0 allocs op BenchmarkMap 2 30000000 41 2 ns op 0 B op 0 allocs op                                                                                1 6 GB                           Channel    channel                    chan struct   func main    done  make chan struct    c  make chan string  go func    s",
        "objectID": "post/空结构体struct-解析",
        "date": "2018-12-12T17:41:14.000Z",
        "categories": [
            "Go"
        ]
    },
    {
        "title": "空类产生几个默认成员函数?",
        "uri": "post/空类产生几个默认成员函数?",
        "content": "1                                                      6                                                  this                                                                                         operator         include using namespace std  class Empty_one      class Empty_two     class Empty_three   virtual void fun     0     class Emptyfour   public Emptytwo  public Empty_three      int main     cout",
        "objectID": "post/空类产生几个默认成员函数?",
        "date": "2017-06-24T10:46:36.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "跨编译单元的初始化次序问题浅析",
        "uri": "post/跨编译单元的初始化次序问题浅析",
        "content": "non local static                     non local static                       C               non local static                                FileSystem class                    local      class                              global namespace               class FileSystem             public      std   size_t numDisks    const                    extern FileSystem tfs                 tfs    the file system   FileSystem                 trivial             theFileSystem                                   class             directories        class   theFileSystem    class Directory              public  Directory  params           Directory  Directory  params     std  size t disks   tfs numDisks         tfs                     Directory             Directory tempDir   params                                       tfs tempDir          tenpDir              tfs  tfs tempDir                                       non local static         tfs  tenpDir                      C                non local static                                                                      non localstatic             implicit template instantiations                                                                                                      non local static                         static          reference                                    non local static   local static                 C         local static                                                  reference  local static          non local static                     reference                          non local static                           non local static                 tfs tempDir                                                tfs   tempDir      tfs tempDir                 static    references      static            reference returning                    local static                        inlining                                    static                                non const static       local non local                                               single threaded startup portion        reference returning                     raceconditions          reference returning                                                  A     B        A             B                                                                                                                non member              member initializationlists                                       non local static",
        "objectID": "post/跨编译单元的初始化次序问题浅析",
        "date": "2017-08-30T21:14:15.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "括号匹配",
        "uri": "post/括号匹配",
        "content": "str                      public static boolean isValid String str     str    null    str equals        return false    char   chas   str toCharArray    int status   0   int   0  a   int i 0  f s size    0   int ret   0   int   s size     2     0    i    int match     f i   1    1   i 1                case             s i            match   0    chas pre            dp i    dp i   1    2    pre   0   dp pre   1    0       res   Math max res  dp i      return res    LeetCode 22  Generate Parentheses Given n pairs parentheses  write function generate combinations well formed parentheses  example  given n   3  solution set is                                                                                dfs   dfs                                                                                   class Solution   public  vector generateParenthesis int n    vector result   n   0  generate n      0  0  result   return result       l             r            void generate int n  string s  int l  int r  vector  result     l    n                         result push_back s append n   r         return     l   r  generate n  s        l  r   1  result                     generate n  s        l   1  r  result                 LeetCode 301  Remove Invalid Parentheses Remove minimum number invalid parentheses order input string valid  Return possible results  Note  input string may contain letters parentheses      Examples                                      a              a          a                                                                                                                 dfs                                                                                                                          class Solution   public  void DFS string s  char ch  int last                  for int   0  cnt   0  removeInvalidParentheses string s    DFS s       0   return ans    private  vector ans",
        "objectID": "post/括号匹配",
        "date": "2017-06-24T22:12:01.000Z",
        "tags": [
            "Stack",
            "DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "乐观锁与悲观锁解析",
        "uri": "post/乐观锁与悲观锁解析",
        "content": "",
        "objectID": "post/乐观锁与悲观锁解析",
        "date": "2019-09-23T21:21:58.000Z",
        "categories": [
            "架构"
        ]
    },
    {
        "title": "类函数与this指针",
        "uri": "post/类函数与this指针",
        "content": "this                                                                          this                                      this             print                           this                                          14       print           data                           new    MyClass      T    10000000  MyClass",
        "objectID": "post/类函数与this指针",
        "date": "2017-09-05T16:57:43.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "类内特殊成员变量的初始化",
        "uri": "post/类内特殊成员变量的初始化",
        "content": "a    b    c    d          e                                                              static                            static                                 class                        static                                                                                        include using namespace std  class BClass   public  BClass     i 1   ci 2   ri i                                                                                         private  int i            const int ci            int  ri            static int si              static int si2   100     error                        static const int csi                static const int csi2   100                  Integral type   1  static const double csd              non Integral type    static const double csd2   99 9     error                                         static int BClass  si   0                Integral type  const int BClass  csi   1                  Integral type  const double BClass  csd   99 9                  non Integral type                                                     const int BClass  csi2  int main     BClass b  return 0",
        "objectID": "post/类内特殊成员变量的初始化",
        "date": "2017-06-23T17:21:01.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "理解CAP和ACID的一致性",
        "uri": "post/理解CAP和ACID的一致性",
        "content": "ACID CAP     C   Consistent             C                                                                                ACID       ACID         ACID                                                                                                                    Preserving Invariant                         100           500       5                         A B      5   C D      10   B E    15             500                 ACID C              CAP                                                                                                                                                                                                                                                                                                                                              vector clock                                            2 3             2 3                                                                 ACID                                                                                                                         ACID       ACID C CAP C",
        "objectID": "post/理解CAP和ACID的一致性",
        "date": "2019-09-20T19:50:25.000Z",
        "tags": [
            "分布式"
        ],
        "categories": [
            "架构"
        ]
    },
    {
        "title": "利用构造函数和析构函数防止泄漏资源",
        "uri": "post/利用构造函数和析构函数避免泄漏资源",
        "content": "class ALA   public  virtual void processAdoption                   dataSource                                       pa              readALA                              void processAdoptions istream  dataSource     dataSource    ALA  pa   readALA dataSource   pa  processAdoption    delete pa                pa  processAdoption                 processAdoptions                 processAdoptions          processAdoptions        pa  processAdoption                   pa               pa  processAdoption            processAdoptions                   void processAdoptions istream  dataSource     dataSource    ALA  pa   readALA dataSource   try   pa  processAdoption      catch                   delete pa  throw      delete pa             try   catch                                                                delete                      processAdoptions                                                                               shared_ptr      raw    processAdoptions       void processAdoptions istream  dataSource     dataSource    shared_ptr pa readALA dataSource    pa  processAdoption              processAdoptions             processAdoptions     pa        shared_ptr         raw ALA               delete                      auto_ptr                                shared_ptr             c template class auto_ptr   public  auto_ptr T  p   0   ptr p      auto_ptr     delete ptr    private  T  ptr                       BookEntry       BookEntry  BookEntry const string  name  const string  address  const string  imageFileName  Const string  audioClipFileName    theName name   theAddress address   theImage 0   theAudioClip 0     imageFileName          theImage   new Image imageFileName      audioClipFileName          theAudioClip   new AudioClip audioClipFileName              BookEntry                                audioClipFileName          theAudioClip   new AudioClip audioClipFileName                  operator new    AudioClip               AudioClip                          BookEntry                      BookEntry               theAudioClip                          BookEntry                   theImage           BookEntry           C                fully contructed objects                                        BookEntry  b              void testBookEntryClass     BookEntry b  Addison Wesley Publishing Company    One Jacob Way  Reading  MA 01867                b              b                                           delete        c void testBookEntryClass     BookEntry  pb   0  try   pb   new BookEntry  Addison Wesley Publishing Company    One Jacob Way  Reading  MA 01867          catch         delete pb  throw    delete pb            BookEntry        Image                    new                pb           BookEntry             pb            catch                                         C                                                                                   BookEntry              BookEntry  BookEntry const string  name  const string  address  const string  imageFileName  const string  audioClipFileName    theName name   theAddress address   theImage 0   theAudioClip 0    try        try block        imageFileName          theImage   new Image imageFileName      audioClipFileName          theAudioClip   new AudioClip audioClipFileName       catch         delete theImage  delete theAudioClip  throw          BookEntry                                                     BookEntry               theName  theAddress   thePhones                                                                                                                                       theImage   theAudioClip          class BookEntry   public      private      Image   const theImage  AudioClip   const theAudioClip          BookEntry                                     const                                BookEntry  BookEntry const string  name  const string  address  const string  imageFileName  const string  audioClipFileName    theName name   theAddress address   theImage imageFileName         new Image imageFileName    0   theAudioClip audioClipFileName        new AudioClip audioClipFileName    0                              theAudioClip              theImage                             try  catch            try   catch                                theImage   theAudioClip              if then else           theImage   theAudioClip raw           shared_ptr          BookEntry                                               theImage   theAudioClip       BookEntry  BookEntry const string  name  const string  address  const string  imageFileName  const string  audioClipFileName    theName name   theAddress address   theImage imageFileName         new Image imageFileName   0   theAudioClip audioClipFileName        new AudioClip audioClipFileName   0                theAudioClip       theImage                                theImage   theAudioClip        BookEntry        BookEntry                                       BookEntry                     shared_ptr                                                                const        const",
        "objectID": "post/利用构造函数和析构函数避免泄漏资源",
        "date": "2017-09-01T14:40:41.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "利用位运算计算数的绝对值",
        "uri": "post/利用位运算计算数的绝对值",
        "content": "",
        "objectID": "post/利用位运算计算数的绝对值",
        "date": "2017-09-05T12:53:07.000Z",
        "tags": [
            "Bit Manipulation"
        ],
        "categories": [
            "解题报告 "
        ]
    },
    {
        "title": "利用linux的mtrace命令定位内存泄露(Memory Leak)",
        "uri": "post/利用linux的mtrace命令定位内存泄露-Memory-Leak",
        "content": "Linux                                    malloc       free                    linux                                 mtrace           include  include  include  include int main    setenv  MALLOC_TRACE    output   1   mtrace    char   text     char     malloc  sizeof char    100   memset text   0  100   memcpy text  hello world   12   printf   s n  text   return 0                                  include            setenv  MALLOC_TRACE    output   1  output              mtrace     mtrace                       gcc  g    gcc mtracetest c  g  o mtracetest                          output                               mtrace output            0x000000000129a010 Free 3 alloc d 0x7f62844d89ba 0x000000000129a100 Free 4 alloc d 0x7f6284583a1d 0x000000000129a120 Free 5 alloc d 0x7f62845d20ec Memory not freed                    Address Size Caller 0x000000000129a5a0 0x64  home dianping peter mtrace mtrace_test c 12                  Memory not freed caller         malloc                          g      Caller                             mtrace         malloc free        malloc     free                malloc free              mtrace             New                       http   blog csdn net sunnydogzhou article details 6532436",
        "objectID": "post/利用linux的mtrace命令定位内存泄露-Memory-Leak",
        "date": "2017-06-25T14:19:16.000Z",
        "tags": null,
        "categories": [
            "Linux编程"
        ]
    },
    {
        "title": "利用read获取用户输入",
        "uri": "post/利用read获取用户输入",
        "content": "bash shell      read          read                                 read                 read            cat test21 sh    bin bash testing read command echo  n  Enter name    read name echo  Hello  name  welcome program          test21 sh Enter name  Rich Blum Hello Rich Blum  welcome program                 echo      n                                                            read      p         read          read  p  Please enter age    age                                                               read  p  Enter name    first last     read                read                      REPLY        read                                                     t            t     read                  read                        read                   if then   while                          read  t 5  p  Please enter name    name echo  Hello  name  welcome script  else echo echo  Sorry  slow    fi                read                                                 n    1       read                          read                        read  n1  p  Do want continue  Y N     answer                                                                            s       read                              read                              read     Linux                read                            read                                  read               cat                read   while                cat test   read line echo  Line  count   line  count     count   1  done while       read            read",
        "objectID": "post/利用read获取用户输入",
        "date": "2017-08-10T10:53:44.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "链表有环和相交问题",
        "uri": "post/链表有环和相交问题",
        "content": "LeetCode 141  Linked List Cycle Given linked list  determine cycle it  Follow up  solve without using extra space      FLOYD                                           Floyd                                                                                                                                                                                                       Definition singly linked list  struct ListNode   int val  ListNode  next  ListNode int x    val x   next NULL           class Solution   public  bool hasCycle ListNode  head                     ListNode slow   head  fast   head   fast    fast  next                             slow   slow  next  fast   fast  next  next   slow    fast  return true    return false       LeetCode 142  Linked List Cycle II Given linked list  return node cycle begins  no cycle  return null  Note  not modify linked list  Follow up  solve without using extra space  1                            M  2           H      E  2 1  L1 H E     2 2  L2  E       M      2 3  C       2 4  n                          L1 L2 C                    L1   L2          L1   L2   n C             2        2  L1 L2    L1   L2   n C    L1   L2   n C    L1    n   1  C    C   L2               n 1 c                     H E       M      E                                                   E          Definition singly linked list  struct ListNode   int val  ListNode  next  ListNode int x    val x   next NULL           class Solution   public  ListNode detectCycle ListNode head    ListNode slow   head  fast   head   fast    fast  next    slow   slow  next  fast   fast  next  next   slow    fast    fast   head           fast    slow    fast   fast  next  slow   slow  next    return slow      return nullptr       LeetCode 160  Intersection Two Linked Lists     Write program find node intersection two singly linked lists begins  example  following two linked lists  A  a1   a2   c1   c2   c3   B  b1   b2   b3 begin intersect node c1  Notes  two linked lists no intersection all  return null  linked lists retain original structure function returns  may assume no cycles anywhere entire linked structure  code preferably run O n  time use O 1  memory                                          null                                                             1                          1     lenl       1         end1    2                          2     len2       2         end2    endl  end2             null     end  end2              4                1      1   lenl len2      2      2   len2 lenl                                                      1   100   2   30        3     1   2             1  70      1   2                                                        pA pB       A B                        pA            B         pB            A        pA     pB    pA pB               A      B                       Definition singly linked list  struct ListNode   int val  ListNode  next  ListNode int x    val x   next NULL           class Solution   public  ListNode getIntersectionNode ListNode headA  ListNode  headB    ListNode  p1   headA  ListNode  p2   headB   p1    NULL    p2    NULL  return NULL   p1    NULL    p2    NULL    p1    p2    p1   p1  next  p2   p2  next   p1    p2  return p1   p1    NULL  p1   headB   p2    NULL  p2   headA    return p1                                                        null                                     1          loop1   2          loop2               loopl loop2                                1     loop1      2     loop2                                           null               loop1 1oop2                          loop1  loop2               2 5                                          3     1 loopl     loop1                      loop1     loop1       loop2              2 5              null      loopl      loop2              2 6           loopl loop2           loop1     1      loop2    2             loop1 loop2     public static Node bothLoop Node head1  Node loop1  Node head2  Node loop2    Node cur1   null  Node cur2   null   loop1    loop2    cur1   head1  cur2   head2  int n   0   cur1    loop1    n    cur1   cur1 next     cur2    loop2    n    cur2   cur2 next    cur1   n   0   head1   head2  cur2   cur1    head1   head2   head1  n   Math abs n    n    0    n    cur1   cur1 next     cur1    cur2    cur1   cur1 next  cur2   cur2 next    return cur1    else   cur1   loop1 next   cur1    loop1     cur1    loop2    return loop1    cur1   cur1 next    return null",
        "objectID": "post/链表有环和相交问题",
        "date": "2017-06-25T02:24:38.000Z",
        "tags": [
            "Linked List",
            "Two Pointers"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "两个排序数组中的查找问题",
        "uri": "post/两个排序数组中的查找问题",
        "content": "LeetCode 4  Median Two Sorted Arrays two sorted arrays nums1 nums2 size m n respectively  Find median two sorted arrays  overall run time complexity O log  m n    Example 1  nums1    1  3  nums2    2  median 2 0 Example 2  nums1    1  2  nums2    3  4  median  2   3  2   2 5      STL   inplace_merge                                 class Solution   public  double findMedianSortedArrays vector  nums1  vector  nums2    int n nums1 size    for int i 0 i arr1  vector arr2     arr1 size   arr2 L2     arr2 L2    arr1 L1                   K                arr1 arr2                 k      arr1    N arr2    M         O log min M N            O 1           public static int findKthNum int   arr1  int   arr2  int kth     arr1    null    arr2    null    throw new RuntimeException  Your arr invalid        kth arr1 length   arr2 length    throw new RuntimeException  K invalid       int   longs   arr1 length    arr2 length   arr1   arr2  int   shorts   arr1 length l     shorts kth   l   1     longs l   1     return shorts kth   l   1      longs kth   s   1     shorts s   1     return longs kth   s   1     return getUpMedian shorts  kth   l  s   1  longs  kth   s  l   1      longs kth   s   1     shorts s   1     return longs kth   s   1     return getUpMedian shorts  0  s   1  longs  kth   s  kth   1     public static int getUpMedian int   a1  int s1  int e1  int   a2  int s2  int e2    int mid1   0  int mid2   0  int offset   0   s1 a2 mid2     e1   mid1  s2   mid2   offset    else  a1 mid1  positionSet   new HashSet    int   res   new int topK   int resIndex   0   resIndex    topK    HeapNode head   popHead heap  heapSize     res resIndex      head value  headR   head row  headC   head col  uR   headR   1  uC   headC   headR    0     isContains uR  uC  positionSet     heapInsert heap  heapSize    uR  uC  a1 uR    a2 uC    addPositionToSet uR  uC  positionSet     lR   headR  lC   headC   1   headC    0     isContains lR  lC  positionSet     heapInsert heap  heapSize    lR  lC  a1 lR    a2 lC    addPositionToSet lR  lC  positionSet       return res    public static HeapNode popHead HeapNode   heap  int heapSize    HeapNode res   heap 0   swap heap  0  heapSize   1   heap   heapSize    null  heapify heap  0  heapSize   return res    public static void heapify HeapNode   heap  int index  int heapSize    int left   index   2   1  int right   index   2   2  int largest   index   left heap index  value    largest   left     right heap largest  value    largest   right     largest    index    swap heap  largest  index     else   break    index   largest  left   index   2   1  right   index   2   2      public static void heapInsert HeapNode   heap  int index  int row  int col  int value    heap index    new HeapNode row  col  value   int parent    index   1    2   index    0     heap index  value   heap parent  value    swap heap  parent  index   index   parent  parent    index   1    2    else   break        public static void swap HeapNode   heap  int index1  int index2    HeapNode tmp   heap index1   heap index1    heap index2   heap index2    tmp    public static boolean isContains int row  int col  HashSet set    return set contains String valueOf row    _    col      public static void addPositionToSet int row  int col  HashSet set    set add String valueOf row    _    col",
        "objectID": "post/两个排序数组中的查找问题",
        "date": "2017-09-03T18:26:54.000Z",
        "tags": [
            "Binary Search",
            "heap"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "两个数组的相交数字",
        "uri": "post/两个数组的相交数字",
        "content": "LeetCode 349  Intersection Two Arrays Given two arrays  write function compute intersection  Example  Given nums1    1  2  2  1   nums2    2  2   return  2   Note  element result unique  result order                      unordered_set   hash    class Solution   public  vector intersection vector  nums1  vector  nums2    unordered_set m nums1 begin    nums1 end        nums1     vector res   auto   nums2     nums2         m count a     res push_back a   m erase a                  return res       LeetCode 350  Intersection Two Arrays II Given two arrays  write function compute intersection  Example  Given nums1    1  2  2  1   nums2    2  2   return  2  2   Note  element result appear times shows arrays  result order  Follow up  given array already sorted  optimize algorithm  nums1 s size small compared nums2 s size  algorithm better  elements nums2 stored disk  memory limited cannot load elements memory once                      unordered_map   hash               class Solution   public  vector intersect vector  nums1  vector  nums2    unordered_map dict   map              set    vector res  for int   0  i  0  res push_back nums2 i    return res",
        "objectID": "post/两个数组的相交数字",
        "date": "2017-06-24T15:31:24.000Z",
        "tags": [
            "Array",
            "Hash"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "列出1小时内占用CPU最多的10个进程",
        "uri": "post/列出1小时内占用CPU最多的10个进程",
        "content": "",
        "objectID": "post/列出1小时内占用CPU最多的10个进程",
        "date": "2017-09-09T20:40:33.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "路径数组变为统计数组",
        "uri": "post/路径数组变为统计数组",
        "content": "paths   N          O N          0 1       public static void pathsToDistans int   paths    int cap   0   int   0     paths length  i       paths i     i    cap   i    else  paths i     1    int curI   paths i   paths i     1  int preI   i   paths curI     curI     paths curI     1    int nextI   paths curI   paths curI    preI  preI   curI  curI   nextI    else   break      int value   paths curI     curI   0   paths curI    paths preI      1    int lastPreI   paths preI   paths preI      value  curI   preI  preI   lastPreI    paths preI      value      paths cap    0    public static void distansToNums int   disArr     int   0     disArr length  i      int index   disArr i    index  1    disArr index     break    else   int nextIndex   disArr index   disArr index    1  index   nextIndex          disArr 0    1",
        "objectID": "post/路径数组变为统计数组",
        "date": "2017-09-03T16:08:55.000Z",
        "tags": [
            "Array"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "路径问题",
        "uri": "post/路径问题",
        "content": "LeetCode 62  Unique Paths robot located top left corner m x n grid  marked  Start  diagram below   robot move either down right point time  robot trying reach bottom right corner grid  marked  Finish  diagram below   possible unique paths there           i j           i 1 j      i j 1                  pathi   pathi 1 pathi         i 1 j 1                      DP        class Solution   public          int       int uniquePaths int m  int n    vector v n  1        dp                 for int i 1     obstacleGrid    const int m   obstacleGrid size     m  const int n   obstacleGrid 0  size     n   obstacleGrid0    obstacleGridm 1  return 0        vector f n  0       dp    0               f 0    1   int   0     grid    int m   grid size           int n   grid 0  size          vector cur m  grid0          int   1     grid    auto m   grid size    n   grid 0  size     int   1  RIGHT    DOWN    DOWN  Notes  knight s health no upper bound  room contain threats power ups  even first room knight enters bottom right room princess imprisoned                                HP  1                                                                                                  dp                         dp              HP    DP     HP         dp            HP  0                                          1    HP 1        2     HP                                                                                                            DP                                               di     i j              hp       di min di 1 di  dungeoni i i i 1    j j j 1         i j    di    dungeon    int n dungeon size   m dungeon 0  size    vector dp n 1 INT_MAX    dp    MAX dp n 1  1  for int j m 1 j  0 j     for int i n 1 i  0 i     dpi  min dp i  dp i 1   dungeon i  dp i  max 1 dp i        return dp 0        120  Triangle Given triangle  find minimum path sum top bottom  step may move adjacent numbers row below  example  given following triangle    2    3 4    6 5 7    4 1 8 3    minimum path sum top bottom 11  i e   2   3   5   1   11   Note  Bonus point able using O n  extra space  n total number rows triangle                                                              DP   S0               DP                                  Si         i  j                         Si   min Si 1   Si 1   Si class Solution   public  int minimumTotal vector    triangle         DP       int   triangle size     2     0    i           DP  int j   0  j    matrix  vector   record  int x  int y  int lastVal     dfs            x   matrix size      y    matrix 0  size    return 0           matrixx   lastVal       recordx    0  return recordx                  int left   dfs matrix  record  x   1  y  matrixx    1  int right   dfs matrix  record  x   1  y  matrixx    1  int top   dfs matrix  record  x  y   1  matrixx    1  int bottom   dfs matrix  record  x  y   1  matrixx    1  recordx   max left  max right  max top  bottom     return recordx    return 0    public  int longestIncreasingPath vector   matrix     matrix size      0  return 0  vector temp matrix 0  size    0   vector  record matrix size    temp      dp     int longest   0   int   0    matrix size      i           int j   0  j   matrix 0  size      j  longest   max longest  dfs matrix  record  i  j   1    return longest",
        "objectID": "post/路径问题",
        "date": "2017-06-24T22:08:03.000Z",
        "tags": [
            "Graph",
            "DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "乱序字符串",
        "uri": "post/乱序字符串",
        "content": "LeetCode 87  Scramble String Given string s1  may represent binary tree partitioning two non empty substrings recursively  Below one possible representation s1    great   great     gr eat         g r e     t scramble string  may choose non leaf node swap its two children  example  choose node  gr  swap its two children  produces scrambled string  rgeat   rgeat     rg eat         r g e     t say  rgeat  scrambled string  great   Similarly  continue swap children nodes  eat   at   produces scrambled string  rgtae   rgtae     rg tae         r g ta e     t say  rgtae  scrambled string  great   Given two strings s1 s2 length  determine s2 scrambled string s1                                                                                                                                                                                                    0                          i       i    1 s size   1          s substr 0 i  s substr i s size   i                                                                                                                                                                     s1 s2          s1 s2                                                                                   class Solution   public  bool isScramble string s1  string s2    unordered_map dp  return DFS dp  s1  s2     private  bool DFS unordered_map  dp  string s1  string s2    if dp count s1 s2   return dp s1 s2   bool res   false  if s1  s2  return res dp s1 s2  true  int len   s1 size    int count 26     0             s1 s2   sort        for int i 0      f N 1 vector   N vector N     fill_n  f0 0    N   1    N   N  false    int   0    N  i        dp        1              int j   0  j   N  j    f1 j    s1 i     s2 j    int n   1  n",
        "objectID": "post/乱序字符串",
        "date": "2017-06-24T20:29:19.000Z",
        "tags": [
            "DP",
            "DFS"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "猫狗队列",
        "uri": "post/猫狗队列",
        "content": "public class Pet   private String type   public Pet String type    this type   type     public String getPetType     return this type       public class Dog extends Pet  public Dog     super  dog         public class Cat extends Pet  public Cat     super  cat                                   add   cat  dog                   pollAll                                    pollDog       dog                            pollCat       cat                            isEmpty            dog cat             isDogEmpty           dog              isCatEmpty           cat                                                          PetEnterQueue   public class PetEnterQueue   private Pet pet   private long count   public PetEnterQueue Pet pet  long count    this pet   pet   this count   count     public Pet getPet     return this pet     public long getCount     return this count     public String getEnterPetType     return this pet getPetType         PetEnterQueue      pet         count                      PetEnterQueue                                                   dog      dogQ        cat      catQ              dog             PetEnterQueue          dogQ      cat             PetEnterQueue          catQ          DogCatQueue  add        dog       dogQ                 DogCatQueue    pollDog         cat       catQ                 DogCatQueue  pollCat                  dogQ        dog              catQ         cat                                            DogCatQueue  pollAll    public class DogCatQueue   private Queue dogQ   private Queue catQ   public long count   public DogCatQueue     this dogQ   new LinkedList     this catQ   new LinkedList     this count   0     public void add Pet pet    if pet getPetType   equals  dog      this dogQ add new PetEnterQueue pet  this count         else if pet getPetType   equals  cat      this catQ add new PetEnterQueue pet  this count         else throw new RuntimeException  err  not dog cat       public Pet pollAll     if  this dogQ isEmpty       this catQ isEmpty      if this dogQ peek   getCount     this catQ peek   getCount      return this dogQ poll   getPet       else return this catQ poll   getPet       else if  this dogQ isEmpty      return this pollDog      else if  this catQ isEmpty      return this pollCat       else   throw new RuntimeException  err  quque empty         public Dog pollDog     if  this isDogQueueEmpty      return  Dog  this dogQ poll   getPet       else throw new RuntimeException  Dog queue empty       public Cat pollCat     if  this isCatQueueEmpty      return  Cat  this catQ poll   getPet       else throw new RuntimeException  Cat queue empty       public boolean isEmpty     return this dogQ isEmpty    this catQ isEmpty       public boolean isDogQueueEmpty     return this dogQ isEmpty       public boolean isCatQueueEmpty     return this catQ isEmpty",
        "objectID": "post/猫狗队列",
        "date": "2017-08-16T17:33:03.000Z",
        "tags": [
            "Design",
            "Queue"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "梅森旋转算法与伪随机数",
        "uri": "post/梅森旋转算法与伪随机数",
        "content": "C     C  11        random               Python    random C  11                                          C  11   random    std  mt19937                                       std  mt19937    MT   Mersenne Twister                             19937                2  19937 1                         period                                                                                                                      tempering                                         Python           Python           mt19937                      coding  utf 8 class MersenneTwister  __n   624 __m   397 __a   0x9908b0df __b   0x9d2c5680 __c   0xefc60000 __kInitOperand   0x6c078965 __kMaxBits   0xffffffff __kUpperBits   0x80000000 __kLowerBits   0x7fffffff def init self  seed   0   self register    0    self n self __state   0 self __register 0    seed range 1  self __n   prev   self __register i   1  temp   self __kInitOperand    prev    prev    30     self register i    temp   self kMaxBits def __twister self   range self __n   y    self register i    self kUpperBits       self register  i   1    self n    self __kLowerBits  self register i    self register  i   self m    self n     y    1  y   2  self register i     self a return None def __temper self   self __state    0  self __twister   y   self register self state  y   y    y    11  y   y    y   18  self state    self state   1    self __n return y def call self   return self __temper   def load_register self  register   self __state   0 self __register   register name     main   mt   MersenneTwister 0  tank   set   kLen   100 range kLen   t   mt   tank add t  print t  print len tank     kLen                                                                      temper                              temper                                             register state                __n                                                     __temper                       def rightshiftxor value  shift   result   value result     result    shift  return result             8          3          value  1101 0010 shifted  0001 1010   010     3  result  1100 1000        result     shift    value     shift            result                          value     shift           1111 1111   3   0001 1000     result          value     2   shift          1101 0000            value       def inverserightshift_xor value  shift   i  result   0  0   shift    i   shift  part   value   part_mask value    part    shift result    part    1 return result                       __temper          class TemperInverser  __b   0x9d2c5680 __c   0xefc60000 __kMaxBits   0xffffffff def _inverserightshiftxor self  value  shift   i  result   0  0   shift    i   shift  part   value   part_mask value    part    shift result    part    1 return result def _inverseleftshiftxor self  value  shift  mask   i  result   0  0   shift    32   shift      i   shift  part   value   part_mask value     part   shift    mask result    part    1 return result def _inversetemper self  tempered   value   tempered value   self _inverserightshiftxor value  18  value   self inverseleftshift_xor value  15  self c  value   self inverseleftshift_xor value  7  self b  value   self _inverserightshiftxor value  11  return value def call self  tempered   return self _inversetemper tempered        __temper                                             class MersenneTwisterCracker  __n   624 def init self  mt_obj   inverser   TemperInverser   register    inverser mtobj    range self _n   self __mt   MersenneTwister 0  self _mt loadregister register  def call self   return self __mt   name     main   mt   MersenneTwister 0  range 100   mt   mtc   MersenneTwisterCracker mt  range 100   assert mt      mtc        Python                 mtc         mt                                                                                                                                                                                                                                                                          sha256                                                                   Discuz              https   liam page 2018 01 12 Mersenne twister",
        "objectID": "post/梅森旋转算法与伪随机数",
        "date": "2019-10-09T18:26:14.000Z",
        "tags": [
            "梅森",
            "随机数"
        ],
        "categories": [
            "算法"
        ]
    },
    {
        "title": "面向对象三大基本特性,五大基本原则",
        "uri": "post/面向对象三大基本特性-五大基本原则",
        "content": "http   www cnblogs com alex09 articles 4380115 html                                                                                                                                                                                                                                                                                                                                                                                                                        Inheritance       Composition                                                                                                                                                                                                                        SRP Single Responsibility Principle                                                                                                                                                 if else                                                                          OCP Open Close Principle                                                                                                                                                           DLL                                                                    the Liskov Substitution Principle LSP                                                                                                                                                                                                                                  the Dependency Inversion Principle DIP                                                              DIP                                           B  A      B     A         B       A          B          A          B                        B     A        A   B                the Interface Segregation Principle ISP",
        "objectID": "post/面向对象三大基本特性-五大基本原则",
        "date": "2017-06-25T16:38:30.000Z",
        "tags": null,
        "categories": [
            "OOP"
        ]
    },
    {
        "title": "命令行参数和特殊参数",
        "uri": "post/命令行参数和特殊参数",
        "content": "shell                                                addem 10 30      bash shell           positional parameter                           shell                       0      1         2                    9                    shell                                                                                                 9                          9                           10                                        0    shell                0                               0         basename                name   basename  0                                                                           shift                                 3       2     2      1      1              0                                       shift                       shift n   shift",
        "objectID": "post/命令行参数和特殊参数",
        "date": "2017-08-09T22:23:24.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "模拟除法",
        "uri": "post/模拟除法",
        "content": "LeetCode 166  Fraction Recurring Decimal Given two integers representing numerator denominator fraction  return fraction string format  fractional part repeating  enclose repeating part parentheses  example  Given numerator   1  denominator   2  return  0 5   Given numerator   2  denominator   1  return  2   Given numerator   2  denominator   3  return  0  6            INT_MIN  1             int  long long int INT_MIN          64         INT      2147483648   2147483647   2147483648                    2147483648                  2147483648   long long                                                                r                               class Solution   public  string fractionToDecimal int numerator  int denominator    if numerator  0  return  0       0      string result  if numerator map  while r   if map count r    result insert map r  1                   result          result   break    map r  result size                          r  10  result  to_string r d      result r r d    return result       LeetCode 29  Divide Two Integers Divide two integers without using multiplication  division mod operator  overflow  return MAX_INT                                 int  2147483648 2147483647  8Bytes abs  2147483648        2147483648         int     long long                         dividend    INT_MIN    divisor     1   class Solution   public  int divide int dividend  int divisor      divisor     dividend    INT_MIN    divisor     1            return INT_MAX  int sign     dividend   dvs                                      long long temp   dvs  multiple   1   dvd     temp   1                    temp",
        "objectID": "post/模拟除法",
        "date": "2017-06-25T02:27:26.000Z",
        "tags": [
            "Math"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "模拟数组/字符串/链表的相加与相乘",
        "uri": "post/模拟数组:字符串:链表的相加与相乘",
        "content": "LeetCode 2  Add Two Numbers given two non empty linked lists representing two non negative integers  digits stored reverse order nodes contain single digit  Add two numbers return linked list  may assume two numbers not contain leading zero  except number 0 itself  Input   2    4    3     5    6    4  Output  7    0    8                                                                                   Definition singly linked list  struct ListNode   int val  ListNode  next  ListNode int x    val x   next NULL           class Solution   public  ListNode addTwoNumbers ListNode l1  ListNode  l2    int carry   0         ListNode  tail   new ListNode 0          ListNode  ptr   tail  while l1    NULL    l2    NULL             int val1   0  if l1    NULL   val1   l1  val  l1   l1  next    int val2   0  if l2    NULL   val2   l2  val  l2   l2  next    int tmp   val1   val2   carry  ptr  next   new ListNode tmp   10         carry   tmp   10  ptr   ptr  next    if carry    1                            ptr  next   new ListNode 1     return tail  next       445  Add Two Numbers II given two non empty linked lists representing two non negative integers  significant digit comes first nodes contain single digit  Add two numbers return linked list  may assume two numbers not contain leading zero  except number 0 itself  Follow up  cannot modify input lists  words  reversing lists not allowed  Example  Input   7    2    4    3     5    6    4  Output  7    8    0    7                                                                                      sum                 Definition singly linked list  struct ListNode   int val  ListNode  next  ListNode int x    val x   next NULL           class Solution   public  ListNode  addTwoNumbers ListNode  l1  ListNode  l2    stack st1 st2  int sum 0  ListNode  p NULL                ListNode  x  while l1   st1 push l1  val   l1 l1  next    while l2   st2 push l2  val   l2 l2  next    while  st1 empty     st2 empty     if  st1 empty     sum  st1 top    st1 pop      if  st2 empty     sum  st2 top    st2 pop      x new ListNode sum 10   x  next p                p x  sum  10     carry     if sum  0   x new ListNode sum 10   x  next p  p x    return p                                                                9  3  7      7  3  9   6  3      3  6                                                                   ca                           1    1           1                                           public static Node addLists2 Node head1  Node head2    head1   reverseList head1   head2   reverseList head2   int ca   0  int n1   0  int n2   0  int n   0  Node c1   head1  Node c2   head2  Node node   null  Node pre   null   c1    null    c2    null    n1   c1    null   c1 value   0  n2   c2    null   c2 value   0  n   n1   n2   ca  pre   node  node   new Node n   10   node next   pre  ca   n   10  c1   c1    null   c1 next   null  c2   c2    null   c2 next   null     ca    1    pre   node  node   new Node 1   node next   pre    reverseList head1   reverseList head2   return node    public static Node reverseList Node head    Node pre   null  Node next   null   head    null    next   head next  head next   pre  pre   head  head   next    return pre    66  Plus One Given non negative integer represented non empty array digits  plus one integer  may assume integer not contain leading zero  except number 0 itself  digits stored significant digit head list               1              class Solution   public  vector plusOne vector  digits    int c   1              1 for int   digits size     1     0     i             int   digits i    c  digits i      10  c     10    if c    1                        1 digits insert digits begin    1   return digits       415  Add Strings Given two non negative integers num1 num2 represented string  return sum num1 num2  Note  length num1 num2  0    j  0    carry     carry  0      long sum   0  if i    0  sum     num1 i     0   i     if j    0  sum     num2 j     0   j     sum    carry  carry   sum   10   sum                carry sum   sum   10  res   res   to_string sum                       reverse res begin    res end            return res       67  Add Binary Given two binary strings  return sum  also binary string   example     11  b    1  Return  100                              class Solution   public  string addBinary string a  string b    string s       int c   0    a size     1  j   b size     1          while i    0    j    0    c    1    c       0   a i        0    0         c    j    0   b j        0    0  s   char c   2    0     s   c           c    2   c        return s       371  Sum Two Integers Calculate sum two integers b  not allowed use operator      Example  Given   1 b   2  return 3  Credits  Special thanks  fujiaozhu adding problem creating test cases                            carry  1           b            a                         class Solution   public  int getSum int a  int b    while b    int carry     b                  b  b   carry   1             return a                11 5         11  1011  5  0101         1                 0001           ",
        "objectID": "post/模拟数组:字符串:链表的相加与相乘",
        "date": "2017-06-25T02:28:43.000Z",
        "tags": [
            "Array",
            "String",
            "Bit Manipulation",
            "Linked List"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "内存泄漏和内存溢出",
        "uri": "post/内存泄漏和内存溢出",
        "content": "memory                            out memory        integer      long                     memory leak                                                                  memory leak      out memory                                                                new               delete                                                                 malloc realloc new                              free delete                                                   4                                                                                                                                                   Singleton                            Singleton",
        "objectID": "post/内存泄漏和内存溢出",
        "date": "2017-06-24T13:21:42.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "欧拉函数浅析",
        "uri": "post/欧拉函数浅析",
        "content": "N   N          N                N  N          1                  p    p  p 1        p q   pq  pq 1        N       N P1 q1P2 q2    Pn qn    N  N 1 1 P1  1 1 P2     1 1 Pn     N 2   N        N        d  N  d N       2      O sqrt n                              int euler int n       euler n  int res n a n  for int i 2 ii1  res res a a 1   return res                                          2                        1   1   1             2            2    2       3            3    3       4            5    5               n              true  n    n                    int countPrimes int n     n num n   1  true           num 0    false  int res   0  limit   sqrt n    int   2",
        "objectID": "post/欧拉函数浅析",
        "date": "2017-08-02T18:54:51.000Z",
        "categories": [
            "算法"
        ]
    },
    {
        "title": "排成一条线的博弈问题",
        "uri": "post/排成一条线的博弈问题",
        "content": "LintCode Coins Line II   n                              1   2                                                                    dp   dp i    i end           values        n values      dp n      0                values         i   n 1    dp n 1       values n 1                              i n 2  dp n 2       values n 2  values n 1                          i n 3  dp n 3       values n 3  values n 2                                                                              i                                          values i                  values i 1         values i 1    values i 2  a           values i 1        i 2 end                     dp i 2  b          values i 1    values i 2        i 3 end                     dp i 3                           dp i 2  dp i 3                                   values i    min dp i 2   dp i 3           values i    values i   1                  values i 2         values i 2    values i 3  a           values i 2        i 3 end                     dp i 3  b          values i 2    values i 3        i 4 end                     dp i 4                           dp i 3  dp i 4                                   values i    values i   1    min dp i 3   dp i 4               dp i    max values i    min dp i 2   dp i 3    values i    values i   1    min dp i 3   dp i 4            dp 0                                                                   class Solution   public       param values  vector integers  return  boolean equals true first player will win    bool firstWillWin vector  values     values size   dp n   1  0   dp n   1    values n   1   dp n   2    values n   2    values n   1   dp n   3    values n   3    values n   2    int   n   4     0    i    dp i    max values i    min dp i   2   dp i   3    values i    values i   1    min dp i   3   dp i   4        int d   values    sum    d    return sum   dp 0    nums    this  nums   nums  int len   nums size    dp resize len  vector len    return func 0  len 1     0    private  vector nums  vector  dp  int func int begin  int end    dpbegin    begin    end   nums begin    max nums begin    func begin 1  end   nums end    func begin  end 1     return dpbegin            DP                                                                                                                                class Solution   public  bool PredictTheWinner vector  nums    int n   nums size    vector  dp n  vector n  0     int i 0  i 0                                     f i j      arr i  j                                    s i j      arr i  j                                   f i j            i  j   arr Lj                            arri   i  j                  arr i      arr j       arr i         arr i 1  j             arr i 1  j                           s i 1 j                             max arr i  s i 1 j  arr j  s i j 1         s i j            i  j   arr i  j                             0    i  j     s                     arr i      arr j        arr i         arr i 1  j                 arr j         arr i  j 1                                          min f i 1 j   f i j 1    public static int win1 int   arr     arr    null    arr length    0    return 0    return Math max f arr  0  arr length   1   s arr  0  arr length   1      public static int f int   arr  int i  int j     i    j    return arr i     return Math max arr i    s arr    1  j   arr j    s arr  i  j   1      public static int s int   arr  int i  int j     i    j    return 0    return Math min f arr    1  j   f arr  i  j   1                       N     f s      f i j   s i 1 j  s i j 1        s i j      ov i                   O 2 N          O N                 arr   N        N N   f s fi    f i j      si    s i j                        public static int win2 int   arr     arr    null    arr length    0    return 0    int f   new intarr length  int s   new intarr length   int j   0  j   0  i      fi   Math max arri    s i   1  arrj    s i   si   Math min fi   1  fi       return Math max f0  s0        win2      f s   O N 2                0 1         win2         O N 2          O N 2",
        "objectID": "post/排成一条线的博弈问题",
        "date": "2017-08-23T21:07:22.000Z",
        "tags": [
            "Math",
            "博弈DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "排列",
        "uri": "post/排列",
        "content": "LeetCode 46  Permutations Given collection distinct numbers  return possible permutations  example   1 2 3  following permutations     1 2 3    1 3 2    2 1 3    2 3 1    3 1 2    3 2 1               STL  next_permutation                                                                                                                                                                  dfs           dfs               class Solution   public  vector   permute vector  num    vector   ret  Helper ret  num  0   return ret    void Helper vector    ret  vector num  int pos           dfs  pos if pos    num size   1          ret push_back num   else   for int   pos    permute vector  num    vector   result  sort num begin    num end                             result push_back num     while next_permutation num begin    num end      return result       LeetCode 47  Permutations II Given collection numbers contain duplicates  return possible unique permutations  example   1 1 2  following unique permutations     1 1 2    1 2 1    2 1 1             dfs                          class Solution   public  vector   permuteUnique vector  num    vector   ret  Helper ret  num  0   return ret    void Helper vector    ret  vector num  int pos    if pos    num size   1    ret push_back num   else   sort num begin   pos  num end        dfs  pos                for int   pos   num     num size     0    i   num i      k   num i    nums    next_permutation  nums begin    nums end           LeetCode 60  Permutation Sequence set  1 2 3   n  contains total n  unique permutations  listing labeling permutations order  following sequence  ie  n   3    123   132   213   231   312   321  Given n k  return kth permutation sequence  Note  Given n will 1 9 inclusive                                      n 1        n       n                      n 2         k 0    int temp k data i     tmp                  for j 1 j",
        "objectID": "post/排列",
        "date": "2017-06-24T23:59:06.000Z",
        "tags": [
            "STL",
            "Backtracking"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "排列组合的解法总结",
        "uri": "post/排列组合的解法总结",
        "content": "",
        "objectID": "post/排列组合的解法总结",
        "date": "2017-08-31T21:48:38.000Z",
        "categories": [
            "杂谈"
        ]
    },
    {
        "title": "判断变形字符串",
        "uri": "post/判断变形字符串",
        "content": "LeetCode 383  Ransom Note Given arbitrary ransom note string string containing letters magazines  write function will return true ransom note constructed magazines   otherwise  will return false  letter magazine string used once ransom note  Note  may assume strings contain lowercase letters  canConstruct  a    b      false canConstruct  aa    ab      false canConstruct  aa    aab      true       ransomNote                      magazine        magazine      Hash        1     ransomeNote        1       0           class Solution   public  bool canConstruct string ransomNote  string magazine    vector vec 26  0    int   0  findAnagrams string s  string p    vector hash1 256   hash2 256   for auto ch  p  hash1 ch                 int lenp   p size    lens   s size    vector ans  for int   0    lenp  hash2 s i lenp            lenp       if hash1    hash2  ans push_back i lenp 1              vector         return ans       LeetCode 49  Group Anagrams Given array strings  group anagrams together  example  given    eat    tea    tan    ate    nat    bat    Return      ate    eat   tea      nat   tan      bat                            map  set                            map         set            map       class Solution   public  vector  groupAnagrams vector  strs    unordered_map  mp   map                 string s   strs             string t   s  sort t begin    t end              mp t  insert s      hash     vector  anagrams   auto m   mp           vector anagram m second begin    m second end     anagrams push_back anagram     return anagrams                                                   class Solution   public  vector  groupAnagrams vector  strs    unordered_map  mp   string s   strs    string t   strSort s   mp t  insert s     vector  anagrams   auto m   mp    vector anagram m second begin    m second end     anagrams push_back anagram     return anagrams    private  string strSort string  s                      int count 26     0   n   s length     int   0    n  i    count s i     a                   int p   0  string t n   a              n  a                    int j   0  j   26  j              int   0    count j   i    t p       j  return t",
        "objectID": "post/判断变形字符串",
        "date": "2017-06-24T22:08:38.000Z",
        "tags": [
            "Hash",
            "STL",
            "Two Pointers",
            "String"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "判断点是否在图形内部",
        "uri": "post/判断点是否在图形内部",
        "content": "double           4       x1 y1        x2 y2        x3 y3        x4 y4         4               x y     x y                        x      y             x y                  islnside    public static boolean isInside double x1  double y1  double x4  double y4  double x  double y     x   x4    return false     y    y1    return false     y   0    double tmpx   x2  double tmpy   y2  x2   x3  y2   y3  x3   tmpx  y3   tmpy     crossProduct x2   x1  y2   y1  x   x1  y   y1    0    return false     crossProduct x3   x2  y3   y2  x   x2  y   y2    0    return false     crossProduct x1   x3  y1   y3  x   x3  y   y3    0    return false    return true    public static double crossProduct double x1  double y1  double x2  double y2    return x1   y2   x2   y1",
        "objectID": "post/判断点是否在图形内部",
        "date": "2017-09-02T16:48:56.000Z",
        "tags": [
            "ath"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "判断二叉树的类型",
        "uri": "post/判断二叉树的类型",
        "content": "LeetCode 110  Balanced Binary Tree Given binary tree  determine height balanced  problem  height balanced binary tree defined binary tree depth two subtrees every node differ 1     dfs                                     Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  bool isBalanced  TreeNode  root    return balancedHeight  root     0         1                int balancedHeight  TreeNode  root     root    nullptr  return 0            int left   balancedHeight  root  left   int right   balancedHeight  root  right    left 1  return  1        return max left  right    1                    LeetCode 98  Validate Binary Search Tree Given binary tree  determine valid binary search tree  BST   Assume BST defined follows  left subtree node contains nodes keys less node s key  right subtree node contains nodes keys greater node s key  left right subtrees binary search trees      BST   BST                                   dfs                                                                      dfs         Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  bool isValidBST TreeNode  root    return isValidBST root  NULL  NULL     bool isValidBST TreeNode  root  TreeNode  minNode  TreeNode  maxNode    if  root  return true             if minNode    root  val val    maxNode    root  val    maxNode  val  return false  return isValidBST root  left  minNode  root     isValidBST root  right  root  maxNode                                                                     Morris             O N           O 1          Morris                                          false                             Morris                        isBST    public static class Node   public int value  public Node left  public Node right  public Node int data    this value   data      public static boolean isBST Node head     head    null    return true    boolean res   true  Node pre   null  Node cur1   head  Node cur2   null   cur1    null    cur2   cur1 left   cur2    null     cur2 right    null    cur2 right    cur1    cur2   cur2 right     cur2 right    null    cur2 right   cur1  cur1   cur1 left  continue    else   cur2 right   null       pre    null    pre value   cur1 value    res   false    pre   cur1  cur1   cur1 right    return res                                                                                                            false                                    false            false        true                          isCBT    public static boolean isCBT Node head     head    null    return true    Queue queue   new LinkedList    boolean leaf   false  Node l   null  Node r   null  queue offer head     queue isEmpty      head   queue poll    l   head left  r   head right    leaf     l    null    r    null       l    null    r    null     return false     l    null    queue offer l      r    null    queue offer r     else   leaf   true      return true",
        "objectID": "post/判断二叉树的类型",
        "date": "2017-08-19T22:07:36.000Z",
        "tags": [
            "BST"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "判断回文串",
        "uri": "post/判断回文串",
        "content": "LeetCode 9  Palindrome Number Determine whether integer palindrome  without extra space  hints  negative integers palindromes   ie   1  thinking converting integer string  note restriction using extra space  try reversing integer  However  solved problem  Reverse Integer   know reversed integer overflow  handle case                    O 1                sum          sum x        x      sum 10  x  x      sum  x class Solution   public  bool isPalindrome int x    if xsum    sum   sum 10 x 10  x   x 10    return  x  sum    x  sum 10        LeetCode 125  Valid Palindrome Given string  determine palindrome  considering alphanumeric characters ignoring cases  example   A man  plan  canal  Panama  palindrome   race car  not palindrome                                       isalpha                   0 isalnum                      0 isdigit      0 9              0 class Solution   public  bool isPalindrome string s     int   0  j   s size     1  next  return true                 ListNode slow   head  fast   head   fast  next    fast  next  next    slow   slow  next  fast   fast  next  next    ListNode   pre NULL  ListNode   cur slow  next  ListNode   tmp NULL  while cur    tmp cur  next  cur  next pre  pre cur  cur tmp     pre             head  val    pre  val  return false  pre   pre  next  head   head  next    return true",
        "objectID": "post/判断回文串",
        "date": "2017-06-25T02:27:37.000Z",
        "tags": [
            "Two Pointers",
            "Linked List"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "判断星期几:基姆拉尔森计算公式",
        "uri": "post/判断星期几:基姆拉尔森计算公式",
        "content": "xxxx xx xx              int y      int m      int d      int w           0 1 1                  w    d 1    7              1                         365  365 7 1                                               1        1  w    d 1   y    7              2                                           w   1           y 4   y 100   y 400        1 2 w    d 1 y    y 1  4  y 1  100  y 1  400    7         3                28    28 7 0         w                 31   28 3       2  w      1  28       3              28             3           12               12          1        0                                   7                                 1   3   0   0     2   0   3   3     3   3   3   3     4   2   6   6     5   3   8   1     6   2   11   4     7   3   13   6     8   3   16   2     9   2   19   5     10   3   21   0     11   2   24   3     12       26   5               e      0 3 3 6 1 4 6 2 5 0 3 5       w    d 1 y   e m 1     y 1  4  y 1  100  y 1  400    7      4                     2           w    d 1   y   e m 1     y 1  4    y 1  100    y 1  400   if m 2     y 4  0    y 100  0    y 400  0     y  0    w  w    7                         W   d 2m 3 m 1  5 y y 4 y 100 y 400 1  7",
        "objectID": "post/判断星期几:基姆拉尔森计算公式",
        "date": "2019-12-05T18:14:56.000Z",
        "tags": null,
        "categories": [
            "算法"
        ]
    },
    {
        "title": "判断t1树是否包含t2树全部的拓扑结构",
        "uri": "post/判断t1树是否包含t2树全部的拓扑结构",
        "content": "LeetCode 100 Same Tree Given two binary trees  write function check equal not  Two binary trees considered equal structurally identical nodes value       DFS                                  Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  bool isSameTree TreeNode p  TreeNode q     p    NULL    q    NULL  return  p    q   return  p  val    q  val    isSameTree p  left  q  left     isSameTree p  right  q  right           t1     t2                             tl t2   tl     12                tl           t2                             tl      t2                 tl        t2                    t1    2 t2    2     t1  t2     t1    4 t2    4   tl  t2       t1    8 t2    8     t2  t2    2  t1   t1    2   t1  t2     t1    5 t2    5   t2         true                        false   t1               t2         t1       t1             t2                t1     N t2     M           O  N M   public static class Node   public int value  public Node left  public Node right  public Node int data    this value   data      public static boolean contains Node t1  Node t2     t2    null    return true     t1    null    return false    return check t1  t2     contains t1 left  t2     contains t1 right  t2     public static boolean check Node h  Node t2     t2    null    return true     h    null    h value    t2 value    return false    return check h left  t2 left     check h right  t2 right       t1      t2                                 t1 t2   tl     t2                            0 N M         t1  t2                       t1            1 2 4   8     5 9       3 6     7          t1Str t2          2 4   8     5 9           t2Str        t2Str   t1Str         KMP              public static class Node   public int value  public Node left  public Node right  public Node int data    this value   data      public static boolean isSubtree Node t1  Node t2    String t1Str   serialByPre t1   String t2Str   serialByPre t2   return getIndexOf t1Str  t2Str      1    public static String serialByPre Node head     head    null    return         String res   head value        res    serialByPre head left   res    serialByPre head right   return res       KMP public static int getIndexOf String s  String m     s    null    m    null    m length   0    cn   nextArr cn     else   nextArr pos      0      return nextArr",
        "objectID": "post/判断t1树是否包含t2树全部的拓扑结构",
        "date": "2017-06-25T02:22:50.000Z",
        "tags": [
            "Tree",
            "DFS"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "配置sql.DB获得更好的性能",
        "uri": "post/配置sql-DB获得更好的性能",
        "content": "SetMaxOpenConns   SetMaxIdleConns   SetConnmaxLifetime        sql DB                              sql db       open idle                          SQL                 open                idle          sql db                                    Go                                         go                 SetMaxOpenConns                               setMaxOpenConns                                db  err    sql Open  postgres    postgres   user pass localhost db   err    nil   log Fatal err                    5              0                 db SetMaxOpenConns 5               5           5                                          5                           MaxOpenConns                         1 2 5 10          PostgreSQL         insert         gist            BenchmarkMaxOpenConns1 8 500 3129633 ns op 478 B op 10 allocs op BenchmarkMaxOpenConns2 8 1000 2181641 ns op 470 B op 10 allocs op BenchmarkMaxOpenConns5 8 2000 859654 ns op 493 B op 10 allocs op BenchmarkMaxOpenConns10 8 2000 545394 ns op 510 B op 10 allocs op BenchmarkMaxOpenConnsUnlimited 8 2000 531030 ns op 479 B op 9 allocs op PASS                                   SQL DB           MaxOpenConns                                                     3129633 ns op   1            531030 ns op    6                                                       SetMaxIdleConns       sql DB           2           SetMaxIdleConns                         db  err    sql Open  postgres    postgres   user pass localhost db   err    nil   log Fatal err                  5           0              db SetMaxIdleConns 5                                                                                1 2 5 10                 BenchmarkMaxIdleConnsNone 8 300 4567245 ns op 58174 B op 625 allocs op BenchmarkMaxIdleConns1 8 2000 568765 ns op 2596 B op 32 allocs op BenchmarkMaxIdleConns2 8 2000 529359 ns op 596 B op 11 allocs op BenchmarkMaxIdleConns5 8 2000 506207 ns op 451 B op 9 allocs op BenchmarkMaxIdleConns10 8 2000 501639 ns op 450 B op 9 allocs op PASS  MaxIdleConns   none                                                                                            8             20                                                                                                                                                             MySQL wait_timeout       8                             sql DB                           Go                    MaxIdleConns                                                                                                        MaxIdleConns         MaxOpenConns Go            MaxIdleConns StackOverflow                   MaxOpenConns                                                                         SetConnMaxLifetime             SetConnMaxLifetime                          SQL                                                                        db  err    sql Open  postgres    postgres   user pass localhost db   err    nil   log Fatal err                              0                             db SetConnMaxLifetime time Hour                        1                                                                                                                                   1         1                                        ConnMaxLifetime                                     ConnMaxLifetime   100ms 200ms 500ms 1000ms unlimited              unlimited open connections 2 idle connections                                              BenchmarkConnMaxLifetime100 8 2000 637902 ns op 2770 B op 34 allocs op BenchmarkConnMaxLifetime200 8 2000 576053 ns op 1612 B op 21 allocs op BenchmarkConnMaxLifetime500 8 2000 558297 ns op 913 B op 14 allocs op BenchmarkConnMaxLifetime1000 8 2000 543601 ns op 740 B op 12 allocs op BenchmarkConnMaxLifetimeUnlimited 8 3000 532789 ns op 412 B op 9 allocs op PASS                   100         unlimited                                  ConnMaxLifetime     Go  MySql         bad connection                                                           DB SetConnMaxLifetime time Second                                                           postgresql conf          5        100   max_connections   5    unlimited open connections            BenchmarkMaxOpenConnsUnlimited 8     FAIL  BenchmarkMaxOpenConnsUnlimited 8 main_test go 14  pq  sorry  clients already main_test go 14  pq  sorry  clients already main_test go 14  pq  sorry  clients already FAIL     5                  PQ       sorry  clients already                              sql DB                5                  db  err    sql Open  postgres    postgres   user pass localhost db   err    nil   log Fatal err        open idle      3 db SetMaxOpenConns 2  db SetMaxIdleConns 1      sql DB           3                                                                                                                       Web                      500 Internal Server Error        HTTP                        https   colobu com 2019 05 27 configuring sql DB for better performance",
        "objectID": "post/配置sql-DB获得更好的性能",
        "date": "2019-07-04T14:44:14.000Z",
        "tags": [
            "Go",
            "Mysql"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "拼接字符串产生字典顺序最小的字符串",
        "uri": "post/拼接字符串产生字典顺序最小的字符串",
        "content": "LeetCode 179  Largest Number Given list non negative integers  arrange form largest number  example  given  3  30  34  5  9   largest formed number 9534330  Note  result may large  so need return string instead integer                                        2                           s1            s1               0 0          0       class Solution   public  string largestNumber vector  num    vector arr                         string         for auto i num  arr pushback tostring i    sort begin arr   end arr     return s1 s2 s2 s1        lambda    string res  for auto s arr  res  s  while res 0    0     res length   1       0 res erase 0 1   return res",
        "objectID": "post/拼接字符串产生字典顺序最小的字符串",
        "date": "2017-08-26T23:22:11.000Z",
        "tags": [
            "reedy"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "前向声明",
        "uri": "post/前向声明",
        "content": "class foo      foo                  forward declaration        foo         foo       foo           incomplete type      foo                                                           foo                                                            c                      include               c                     c                                         include                              c               class string  class Sample   private  string  s             string              include                               class string  class Sample   private  string  s             string              include                                class string  class foo  class Sample   public  foo foo_test foo     private  string  s  foo  f                 foo                             c                                                 C                                                                    A B A    B      B     A      class   int i  B b    class B   int i  A  a                                                   class   int i  B b    class B   int i  a                                                                        class A h  include  B h  class   int i  B b      class B h  include  A h  class B   int i   a                         A h          B                                                 class                 cpp              class A h  include  B h  class   int i  B b      class B h class A  class B   int i   a      B cpp    B cpp                      a       include  A h  B  B",
        "objectID": "post/前向声明",
        "date": "2017-06-23T17:37:17.000Z",
        "tags": null,
        "categories": [
            "C++"
        ]
    },
    {
        "title": "前置运算符和后置运算符的区别",
        "uri": "post/前置运算符和后置运算符的区别",
        "content": "a    a   a                       a     a                     a                                                        1                 1                                                                                                                                                                                                                  i              i                i                                                                                                  a        a     a                                                                                                                                             a             a          a   a            1              a     a                    a     1                 1  i     5  2    i   5   1          2         i          i                    i         i   5",
        "objectID": "post/前置运算符和后置运算符的区别",
        "date": "2017-09-04T18:23:48.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "浅谈数据库并发控制",
        "uri": "post/浅谈数据库并发控制",
        "content": "MVCC               MVCC                                                                                               serializable          serializability                                                                                                                                                                                                                                                                                                                   T                                       T                  T                                                    exclusive locks   X       share locks   S               T     A  X      T     A            A          T  A                T  A             A              T     A  S     T   A     A         A S      X    T  A  S                A   T  A  S      A                         T     R        X                       COMMIT        ROLLBACK                      T                                     T     R        S         S                                                                T     R        S                                                                                                                                                                                                            TwoPhase Locking   2PL                                     2PL                                                                                                                                                                                                                                                                                                                                                                                                                                     T1     R   T2     R   T2   T3     R  T1    R             T3    T2       T4     R  T3    R            T4     T2                                                                                                                 T1     R1 T2     R2   T1     R2  T2     R2   T1  T2  R2      T2     R1  T1    R1 T2     T1  R1          T1   T2  T2    T1    T1 T2                                                                                                                                                                                                                                                         2PL                                                                                                                                                             Wait die Scheme                 A         B       A       B        A B   A       A    roll back                                                                                                                                                           Wound wait Scheme                 A         B         A       B        A B    A       B    roll back                                                                                                                                                                                                                                                                                                                                                                  G  T U   T                    U                    T1  T2   T1 T2          T1  T2                                                                                                                                                                                                                Victim                                                                                                                                                                                                Starvationptimistic Concurrency Control                                                                                                                                                                                                                                                                                           ",
        "objectID": "post/浅谈数据库并发控制",
        "date": "2017-06-25T16:48:51.000Z",
        "tags": null,
        "categories": [
            "架构"
        ]
    },
    {
        "title": "嵌入式SQL入门",
        "uri": "post/嵌入式SQL入门",
        "content": "SQL         SQL  SQL                        C C    Java                   SQL                                                   SQL                                                                SQL          SQL           SQL              C          EXEC SQL    SQL             SQL             SQL                                                                                          SQL                               SQL     SQL Communication Area SQLCA         SQL              host variable      SQL                           cursor     SQL    SQL                                                     SQL          SQL                           SQL          EXEC SQL INCLUDE SQLCA     SQL         SQLCODE         SQL                    SQL           SQLCODE       SQL               SQLCODE        SUCCESS    SQL        SQLCODE                               SQL                        SQL                                                              SQL           SQL                                           indicator variable                                                                                       SQL  BEGIN DECLARE SECTION END DECLARE SECTION                  SQL                                            SQL                              SQL         SQL                                                         SQL                     SQL                                                 SQL                                                                    SQL                                                                        1                  SQL    EXEC SQL CONNECT targetAS connection name      target                                           SQL        DEFAULT  Connection name                                                                                                                                              SQL     EXEC SQL SET CONNECTION connection name DEFAULT   2                                                           SQL     EXEC SQL DISCONNECT  connection      connection EXEC SQL CONNECT                SQL        SQL                                           SELECT    CURRENT          1          SELECT                     INTO                                       EXEC SQL SELECT Sno Sname Ssex Sage Sdept   Hsno   Hname   Hsex   Hage   Hdept Student Sno  givensno                   givensno              SELECT             1  INTO   WHERE   HAVING                    2                             NULL          INTO                                                                                                 NULL   3                                            SQL            2  CURRENT            CURRENT                 UPDATE SET    WHERE           SET                                 SC                stdno          couno                                gradeid  1   gradeid            EXEC SQL INSERT SC Sno Cno Grade  VALUES  stdno  couno  gr  gradeid     stdno  couno  gr            SQL          SQL             SELECT   CURRENT   UPDATE   DELETE     1            SELECT         SELECT                                                                       1        DECLARE     SELECT        EXEC SQL DECLARE CURSOR FOR SELECT                                    SELECT     2        OPEN            EXEC SQL OPEN                SELECT                                              3               EXEC SQL FETCH               SELECT                     FETCH                                                     FETCH                    4        CLOSE                         EXEC SQL CLOSE                                                     CURRENT     UPDATE   DELETE    UPDATE   DELETE                                  SELECT                                   CURRENT   UPDATE DELETE          UPDATE    DELETE         CURRENT                                           SELECT    UNION ORDER BY       SELECT                       CURRENT    UPDATE   DELETE                                   SQL                                EXEC SQL BEGIN DECLARE SECTION            char deptname 20   char HSno 9   char HSname 20   char hsscxp   int HSage  intNEWAGE  EXEC SQL END DECLARE SECTION            long SQLCODE  EXEC SQL INCLUDE SQLCODE     SQL     int main void   C           int count 0  char yn     yn  yes no  printf  Please choose department name CS MA IS      scanf   s  deptname        deptname    EXEC SQL CONNECT TEST localhost 54321 USER  SYSTEM   MANAGER         TEST  EXEC SQL DECLARE SX CURSOR      SX  SELECT Sno Sname Ssex Sage  SX       Student SDept  deptname  EXEC SQL OPEN SX       SX             for                          EXEC SQL FETCH SX  HSno  HSname  HSsex  HSage                    if SQLCA SQLCODE  0     SQLCODE   0           break     SQLCA                if count    0                   printf M n  10s   20s   10s   10s n  SnoM   Sname   Ssex   Sage    printf    10s   20s   10s   10d n   HSno  HSname  HSsex  HSage            printf MUPDATE AGE y n  M                     getchar    do  scanf   c   yn    while yn   N    yn   n    yn   Y    yn   y     yn   y   yn   Y                printf  TINPUT NEW AGE     scanf   d",
        "objectID": "post/嵌入式SQL入门",
        "date": "2017-08-16T10:48:58.000Z",
        "categories": [
            "MySQL"
        ]
    },
    {
        "title": "求两个数组的交集",
        "uri": "post/求两个数组的交集",
        "content": "A B   i j              A i   B j                              A i   B j         B       A  int comNum int a   int m int b   int n int  p      m n       a b    int i 0 j 0 cnt 0  while ib j   j    else i      return cnt                                                   int ComNum_Binary int a   int lenA int b   int lenB int  comlst    int i j k 0  for i   0  b mid    l   mid  1  else   comlst k      a i   break        return k                        hash       hash                               hash               unordered_map     map                          unordered_set",
        "objectID": "post/求两个数组的交集",
        "date": "2017-06-25T22:45:21.000Z",
        "tags": [
            "Array",
            "Hash"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "求幂与开方",
        "uri": "post/求幂与开方",
        "content": "LeetCode 50  Pow x  n  Implement pow x  n                   n   n  2 31           long long         0x80000000 10000000000000000000000000000000        INTMIN                 INTMIN INT_MAX     1      INT         class Solution   public  double myPow double x  int n    long long m n    if m  1       n   1   n    2147483648    2 31   return ans                             1                 0x80000000 10000000000000000000000000000000  1 0x7FFFFFFF     0x00000000         0x80000000          2147483648         2147483648       2147483648 2147483648                LeetCode 372  Super Pow task calculate ab mod 1337 positive integer b extremely large positive integer given form array  Example1    2  b    3   Result  8 Example2    2  b    1 0  Result  1024                     a x  a  x 10   10   a  x 10         class Solution   public  int myPow int x  int m          int ans 1  while m                     if m 1  ans ans x 1337                1   x x x x 1337     x           m   1    return ans    int superPow int a  vector  b    if b empty    return 1    a 1337  int lastBit   b back      b     b pop_back            return  myPow superPow a  b   10    myPow a  lastBit   1337           LeetCode 69  Sqrt x  Implement int sqrt int x   Compute return square root x       x                                                 leetcode test case x 2147395599   mid mid          mid    int       long long      int      2147483648  2147483648  class Solution   public  int mySqrt int x    if x x  r    r   x r    2  return r                       class Solution   public  int mySqrt int x                            assert x    0    x    0    x    1    return x    float tmp   x  float xhalf   0 5f tmp  int    int  tmp    0x5f375a86    i    1             tmp    float  i  tmp   tmp 1 5f   xhalftmp tmp   tmp   tmp 1 5f   xhalftmp tmp   tmp   tmp 1 5f   xhalftmp tmp   int ret   1   tmp   ret ret   x    return ret   1    return ret       LeetCode 367  Valid Perfect Square Given positive integer num  write function returns True num perfect square else False  Note  not use built in library function sqrt  Example 1  Input  16  Returns  True  Example 2  Input  14  Returns  False                               mid val   long long        class Solution   public  bool isPerfectSquare int num    if num num  right   mid 1  else left   mid 1    return false                             1   1 4   1   3 9   1   3   5 16   1   3   5   7 25   1   3   5   7   9 36   1   3   5   7   9   11    1 3    2n 1     2n 1   1 n 2   n n                       class Solution   public  bool isPerfectSquare int num    int   1   num   0    num    i     2    return num    0",
        "objectID": "post/求幂与开方",
        "date": "2017-06-25T02:25:15.000Z",
        "tags": [
            "Binary Sort",
            "Math"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "求某个数是否为2/3/4的幂",
        "uri": "post/求某个数是否为2:3:4的幂",
        "content": "LeetCode 231  Power Two Given integer  write function determine power two     2    n        1      n  n 1    0              class Solution   public  bool isPowerOfTwo int n    if n 1010101010101010101010101010101 class Solution    4 0 1 1        public  bool isPowerOfFour int num    return num   0     num    num   1      0   num 0x55555555  num       LeetCode 326  Power Three Given integer  write function determine power three           log     double log  double    e      double log10  double                       log2 N  log10 N  log10 2  log    log10     log      e           243                e            3 e    3 10                        log10     log     class Solution   public  bool isPowerOfThree int n    return fmod log10 n  log10 3   1   0",
        "objectID": "post/求某个数是否为2:3:4的幂",
        "date": "2017-06-25T02:25:24.000Z",
        "tags": [
            "Bit Manipulation"
        ],
        "categories": [
            " 解题报告"
        ]
    },
    {
        "title": "求重叠矩形的面积",
        "uri": "post/求重叠矩形的面积",
        "content": "LeetCode 223  Rectangle Area Find total area covered two rectilinear rectangles 2D plane  rectangle defined its bottom left corner top right corner shown figure                     overlapping           class Solution   public  int computeArea int A  int B  int C  int D  int E  int F  int G  int H    int left   max A E   right   max min C G   left   int bottom   max B F   top   max min D H   bottom   return  C A  D B     right left  top bottom     G E   H F",
        "objectID": "post/求重叠矩形的面积",
        "date": "2017-06-24T19:51:32.000Z",
        "tags": [
            "Math"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "区别sizeof()和strlen()",
        "uri": "post/区别sizeof-和strlen",
        "content": "strlen                                                                         0              sizeof C                                                                                          0                              0                            sizeof               1 strlen                                    char q    abc   char p    a n   sizeof q   4 sizeof p   3 strlen q   3 strlen p   2       char a    abc 0   char b      12 03456   cout   strlen a          sizeof a    endl    3 5 cout   strlen b          sizeof b    endl    5 6         a strlen          0       3  sizeof                 0                0     5     b                             0     0   3  0           8                 3                      x                           b          12 56    5           000     0      b   12 056    strlen   2 sizeof   6     0                        0  char s    12 00056   printf   d n d n  strlen s  sizeof s      2 6",
        "objectID": "post/区别sizeof-和strlen",
        "date": "2017-06-23T15:23:18.000Z",
        "tags": null,
        "categories": [
            "C++"
        ]
    },
    {
        "title": "区间查询问题",
        "uri": "post/区间查询问题",
        "content": "LeetCode 303  Range Sum Query   Immutable Given integer array nums  find sum elements indices j  i   j   inclusive  Example  Given nums     2  0  3   5  2   1  sumRange 0  2     1 sumRange 2  5      1 sumRange 0  5      3 Note  may assume array does not change  calls sumRange function                                                    class NumArray        public  NumArray vector nums    accu push_back 0             nums      int num   nums         accu push_back accu back     num     int sumRange int i  int j    return accu j   1    accu i    accu         private  vector accu        NumArray object will instantiated called such     NumArray numArray nums      numArray sumRange 0  1      numArray sumRange 1  2   LeetCode 304  Range Sum Query 2D   Immutable Given 2D matrix matrix  find sum elements inside rectangle defined its upper left corner  row1  col1  lower right corner  row2  col2   above rectangle  with red border  defined  row1  col1     2  1   row2  col2     4  3   contains sum   8  Example  Given matrix      3  0  1  4  2    5  6  3  2  1    1  2  0  1  5    4  1  0  1  7    1  0  3  0  5    sumRegion 2  1  4  3     8 sumRegion 1  1  2  2     11 sumRegion 1  2  2  4     12 Note  may assume matrix does not change  calls sumRegion function  may assume row1   row2 col1   col2      acci       0  0   i  j                acci   acci   acci 1   acci 1   matrixi 1 DP                    0   0    DP     class NumMatrix   private  vector  acc  public  NumMatrix vector  matrix     matrix empty    return  int n   matrix size    m   matrix 0  size     n   m   acc resize n   1  vector m   1     int   0  9 update 1  2  sumRange 0  2     8 Note  array modifiable update function  may assume number calls update sumRange function distributed evenly                       class NumArray   public  vector sums  vector nums  int lowbit int x       return x   x     void change int i  int vals   while i0   sum  sums n   n  lowbit n     return sum    NumArray const vector  nums              vector const this  nums   nums  sums resize nums size   1   for int i 0 i countSmaller vector  nums    vector ret  clone   nums  int len  nums size    unordered_map reflect  array resize len   1   sort clone begin    clone end                                           n         map       1 n                         n 1                  int   0    0     i                               clone i    query reflect nums i     1               i 1        add reflect nums i    1                 1   return clone    private  vector array  inline int lowbit int pos      x     1     return pos    pos    void add int pos  int val         int i pos i0 i  lowbit i     ret    array i     return ret       LeetCode 327  Count Range Sum Given integer array nums  return number range sums lie  lower  upper  inclusive  Range sum S i  j  defined sum elements nums indices j  i   j   inclusive  Note  naive algorithm O n2  trivial  better that  Example  Given nums     2  5   1   lower    2  upper   2  Return 3  three ranges    0  0    2  2    0  2  respective sums are   2   1  2                   lower   sum j    sum i   1    upper     lower   sum i   1    sum j    upper   sum i   1                             i        lower   sum i   1   upper   sum i   1                Fenwick Tree        O n log n  typedef long long LL  class FenwickTree   vector sum_array  int n  inline int lowbit int x    return x    x    public  FenwickTree int n   n n   sum_array n   1  0     void add int x  int val     x 0    res    sum_array x   x    lowbit x     return res       class Solution   public  int countRangeSum vector  nums  int lower  int upper     nums size      0  return 0  vector sum_array  nums size     3 0   LL sum   0   int   0  index  sort sumarray begin    sumarray end     auto end   unique sumarray begin    sumarray end     auto   sum_array begin     int   1     end i   it      index  it    i    FenwickTree tree index size     int ans   0   int   nums size     1     0  i      tree add index sum  1   sum    nums i   ans    tree sum index upper   sum     tree sum index lower   sum  1      return ans          STL   class Solution   public  int countRangeSum vector  nums  int lower  int upper    long long sum 0 ret 0  multiset accum  0   for auto x nums   sum  x  auto start accum lowerbound sum upper  end accum upperbound sum lower   while start  end  ret   start    accum insert sum     return ret                                       sum  sum i                   sum 0  0          j         sum j  sum i 1       0  nums length         sum j             i i  lower     n      sum n    sum i    upper       n m       i       lower  upper                                      class Solution   public  int mergeSort vector  sum  int lower  int upper  int low  int high    if high low   nums  int lower  int upper    int len   nums size    vector sum len   1  0   for int  0  2 nums j   need return number important reverse pairs given array  Example1  Input   1 3 2 3 1   Output  2  Example2  Input   2 4 3 5 1   Output  3  Note  length given array will not exceed 50 000  numbers input array range 32 bit i",
        "objectID": "post/区间查询问题",
        "date": "2017-06-24T16:11:52.000Z",
        "tags": [
            "Binary Indexed Tree",
            "DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "区间问题",
        "uri": "post/区间问题",
        "content": "LeetCode 228  Summary Ranges Given sorted integer array without duplicates  return summary its ranges  example  given  0 1 2 4 5 7   return   0  2   4  5   7                                       class Solution   public  vector summaryRanges vector  nums    vector result  if  nums size    return result  int low   nums 0   high   nums 0            for int   1      to_string high    low   high   nums i      low       result pushback low    high   tostring low    tostring low           tostring high               return result       LeetCode 56  Merge Intervals Given collection intervals  merge overlapping intervals  example  Given  1 3   2 6   8 10   15 18   return  1 6   8 10   15 18                                                                                                 Definition interval  struct Interval   int start  int end  Interval     start 0   end 0     Interval int s  int e    start s   end e           class Solution   public  bool comp const Interval  a  const Interval  b              return  a start merge vector  intervals    vector res   intervals empty    return res  sort intervals begin    intervals end    comp   res push_back intervals 0     int   1    intervals i  start          res back   end   max res back   end  intervals i  end     else   res push_back intervals i        return res       LeetCode 57  Insert Interval Given set non overlapping intervals  insert new interval intervals  merge necessary   may assume intervals initially sorted according start times  Example 1  Given intervals  1 3   6 9   insert merge  2 5   1 5   6 9   Example 2  Given  1 2   3 5   6 7   8 10   12 16   insert merge  4 9   1 2    3 10   12 16   new interval  4 9  overlaps  3 5   6 7   8 10                                                 l  1 r n                               0 l                               r n 1     Definition interval  struct Interval   int start  int end  Interval     start 0   end 0     Interval int s  int e    start s   end e           class Solution   public  vector insert vector  intervals  Interval newInterval    int n   intervals size                   int l    1  r   n                l 1                     l 1    l 0    intervals r   1  start   newInterval end  r                                 r   0  newInterval end   max newInterval end  intervals r   1  end    l   timeSeries  int duration    int result   0  oldEnd    1   int   0  oldEnd    result    min duration  newEnd   oldEnd   oldEnd   newEnd      return result       LeetCode 436  Find Right Interval Given set intervals  interval i  check exists interval j whose start point bigger equal end point interval i  called j  right  i  interval i  need store minimum interval j s index  means interval j minimum start point build  right  relationship interval i  interval j doesn t exist  store  1 interval i  Finally  need output stored value interval array  Note  may assume interval s end point always bigger its start point  may assume none intervals start point  Example 1  Input     1 2    Output    1  Explanation  one interval collection  so outputs  1  Example 2  Input     3 4    2 3    1 2    Output    1  0  1  Explanation  no satisfied  right  interval  3 4    2 3   interval  3 4  minimum  right  start point   1 2   interval  2 3  minimum  right  start point  Example 3  Input     1 4    2 3    3 4    Output    1  2   1   Explanation  no satisfied  right  interval  1 4   3 4    2 3   interval  3 4  minimum  right  start point                                                                                                                                                  map             Definition interval  struct Interval   int start  int end  Interval     start 0   end 0     Interval int s  int e    start s   end e           class Solution   public  vector findRightInterval vector  intervals    map hash     map         vector res  int n   intervals size     int   0  second                return res       LeetCode 352  Data Stream Disjoint Intervals Given data stream input non negative integers a1  a2     an     summarize numbers seen so far list disjoint intervals  example  suppose integers data stream 1  3  7  2  6     summary will be   1  1   1  1    3  3   1  1    3  3    7  7   1  3    7  7   1  3    6  7  Follow up  lots merges number disjoint intervals small compared data stream s size                                       vector                      O n                                  set                 O log n                 set     vector     if it    st begin         it   end 1 end 1    val  it            it    it                it 1      Definition interval  struct Interval   int start  int end  Interval     start 0   end 0     Interval int s  int e    start s   end e           class SummaryRanges   public     Initialize data structure here    void addNum int val    auto   st lower_bound Interval val  val                       int start   val  end   val                       end 1              if it    st begin         it   end 1   it  start    val 1 end        it   it   val     start   min start  it  start              end   max",
        "objectID": "post/区间问题",
        "date": "2017-06-24T22:07:55.000Z",
        "tags": [
            "Binary Search",
            "STL",
            "Heap"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "去掉字符串中连续出现k个0的子串",
        "uri": "post/去掉字符串中连续出现k个0的子串",
        "content": "str       str       yt  0        k      0                                    Str           0               0                       count         0         start        0             count 0  start  1        str      i      cha      cha          cha    0   start start   1     start     start   1              0        start i       0  i       start    1                0       start    count      cha          0          count    k                   0    start                         0     k           count 0  start  l          0        cha     0         str     0                    A                              count    A                 k  0   public static String removeKZeros String str  int k     str    null    k   1    return str    char   chas   str toCharArray    int count   0  start    1   int   0     chas length  i       chas i      0     count    start   start     1     start    else    count    k     count      0  chas start      0    count   0  start    1       count    k     count      0  chas start      0    return String valueOf chas",
        "objectID": "post/去掉字符串中连续出现k个0的子串",
        "date": "2017-08-24T15:36:11.000Z",
        "tags": [
            "String"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "认识布隆过滤器",
        "uri": "post/认识布隆过滤器",
        "content": "http   blog csdn net vjulyv article details 6685894    Bloom Filter Bloom Filter                                     K Hash                Bit array   K        1                   1                          0                1                            Bloom Filter                                                       false positive     Bloom Filter                                Bloom Filter                                       Bloom Filter                   Bloom Filter     m            0      S  x1  x2   xn     n       Bloom Filter  k           Hash Function                   1   m             x  i          hi x      1 1 i k                1                              k 3                              1        y             y  k          hi y      1 1 i k         y             y            y1            y1       0    y2                false positive                  Bloom Filter                           false positive rate                                 kn nlg 1 E  lge     nlg 1 E 1 44  lg   2                    0 01    m    n 13    k   8       m n      m bit     n                                       bit      bloom filter               Bloom filter                k k               1             Counting bloom filter CBF               counter              Spectral Bloom Filter SBF                SBF  counter                          1   A B        50  URL   URL  64        4G     A B     URL        n                        4G 2 32   40  8   340  n 50        0 01        650  bit        340                           urlip             ip           2            100             URL    64B                       URL                                                    30GB",
        "objectID": "post/认识布隆过滤器",
        "date": "2017-06-25T22:44:09.000Z",
        "tags": [
            "量数据"
        ],
        "categories": [
            "算法"
        ]
    },
    {
        "title": "日常编程技巧",
        "uri": "post/日常编程技巧",
        "content": "vector  vector     f N 1 vector   N vector N                    1    2          vector   N vector N        int   p3             p3   new int   hight           for    0   next   cur  next                                            cur   prev  next    floor    floor x          x          floor 10 5     10 floor  10 5      11   ceil    ceil x       x          ceil 10 5     11 ceil  10 5     10 floor           floor  10 5      11  ceil           ceil  10 5      10       tostring     C  11                 C  11         std  tostring   std  stoi stol stoll          string int long   long long    to_string            string to_string  int val   string to_string  long val   string to_string  long long val   string to_string  unsigned val   string to_string  unsigned long val   string to_string  unsigned long long val   string to_string  float val   string to_string  double val   string to_string  long double val    int     string                                  template bool includes inputIterator1 first1  inputIterator1 last1  inputIterator2 first2  inputIterator2 last2   template bool includes inputIterator1 first1  inputIterator1 last1  inputIterator2 first2  inputIterator2 last2  Comp cmp                     Comp                           std  set         set_differrence                                                                                                                        Comp                                           1       2      template outputIterator result   set_difference inputIterator1 first1  inputIterator1 last1  inputIterator2 first2  inputIterator2 last2  outputIterator first   template outputIterator result   set_difference inputIterator1 first1  inputIterator1 last1  inputIterator2 first2  inputIterator2 last2  outputIterator first  Comp cmp      set       set_intersection                                                                                                        set_difference                 set  setsymmetricdifference                             2          1                             set_difference                         set_union                                                                      set_difference  pre_permutation                                                template bool pre_permutation Iterator first  Iterator last   template bool pre_permutation Iterator first  Iterator last  Comp cmp   int main     vector p  p push_back 2   p push_back 2   p push_back 1   p push_back  1   p push_back 0     copy p begin    p end    ostream_iterator cout         cout end 1    val  it              it    it                it 1       0b           0x            0      fmod                         0       NaN                   0",
        "objectID": "post/日常编程技巧",
        "date": "2017-06-24T14:34:25.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "容器的盛水量",
        "uri": "post/容器的盛水量",
        "content": "LeetCode 11  Container Water Given n non negative integers a1  a2     an  represents point coordinate  i  ai   n vertical lines drawn two endpoints line  i  ai   i  0   Find two lines  together x axis forms container  container contains water  Note  may not slant container n least 2                                                                                                                                                                                                              4 3 7 2 9 7     4 7                       4               3  3 4      3 7                        7 7 4                       7 7                                    class Solution   public  int maxArea vector  height    int start   0  int end   height size     1  int result   INT_MIN   start   height    int res   0  l   0  r   height size     1  while l    heightMap    if heightMap size    0  return 0  priority_queue  vector   greater   que                      int row   heightMap size    col   heightMap 0  size    vector  visited row  vector col  0    int ans   0  Max   INT_MIN  for int   0    dir  1  0     1  0    0  1    0   1    while  que empty      auto val   que top    que pop    int height   val first  x   val second col  y   val second col  Max   max Max  height   for auto d  dir      4      int x2   x   d 0   y2   y   d 1   if x2  row    x2 col    visitedx2  continue  visitedx2   1  if heightMapx2   Max  ans    Max   heightMapx2  que push make_pair heightMapx2  x2 col y2        return ans",
        "objectID": "post/容器的盛水量",
        "date": "2017-06-24T23:57:56.000Z",
        "tags": [
            "Two Pointers",
            "BFS"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "如何查看linux版本",
        "uri": "post/如何查看linux版本",
        "content": "Linux                                 Linux                              Linux        Linux     distribution              Ubuntu 16 04 Fedora 24 CentOS 7           Linux                  etc   release      etc              release                          Linux                    ls        etc  release     ls  l  etc   release  rw r  r   1 root root 467 4  15 2015  etc os release  rw r  r   1 root root 40 4  15 2015  etc redhat release lrwxrwxrwx 1 root root 14 10  20 2015  etc sl release    redhat release lrwxrwxrwx 1 root root 14 10  20 2015  etc system release    redhat release         redhat           Linux                    cat  etc redhat release Scientific Linux release 7 1  Nitrogen  os release             cat  etc os release NAME  Scientific Linux  VERSION  7 1  Nitrogen   ID  rhel  ID_LIKE  fedora  VERSION_ID  7 1  PRETTY_NAME  Scientific Linux 7 1  Nitrogen   ANSI_COLOR  0 31  CPENAME  cpe  o redhat enterpriselinux 7 1 GA  HOME_URL  http   www scientificlinux org    BUGREPORTURL  scientific linux devel listserv fnal gov  REDHATBUGZILLAPRODUCT  Scientific Linux 7  REDHATBUGZILLAPRODUCT_VERSION 7 1 REDHATSUPPORTPRODUCT  Scientific Linux  REDHATSUPPORTPRODUCT_VERSION 7 1              Linux     Scientific Linux release 7 1      Ubuntu Linux 16 04      cat  etc lsb release DISTRIB_ID Ubuntu DISTRIB_RELEASE 16 04 DISTRIB_CODENAME xenial DISTRIB_DESCRIPTION  Ubuntu 16 04 LTS  cat  etc os release NAME  Ubuntu  VERSION  16 04 LTS  Xenial Xerus   ID ubuntu ID_LIKE debian PRETTY_NAME  Ubuntu 16 04 LTS  VERSION_ID  16 04  HOME_URL  http   www ubuntu com   SUPPORT_URL  http   help ubuntu com   BUGREPORTURL  http   bugs launchpad net ubuntu      lsb_release      lsb_release         Linux                   Linux                        lsb_release  a No LSB modules available  Distributor ID  Ubuntu Description  Ubuntu 16 04 LTS Release  16 04 Codename  xenial    Scientific Linux              lsb_release  a bash  lsb_release              Linux      Linux                    Linux                                    Linux 4 4 0 24 generic      Linux               uname      uname         Linux            uname  a Linux my server 3 10 0 229 el7 x8664  1 SMP Mon Mar 9 16 14 50 CDT 2015 x8664 x8664 x8664 GNU Linux    Ubuntu Linux 16 04      uname  a Linux ubuntu pc 4 4 0 24 generic  43 Ubuntu SMP Wed Jun 8 19 27 37 UTC 2016 x8664 x8664 x86_64 GNU Linux     proc version    proc version         Linux          cat  proc version Linux version 3 10 0 229 el7 x86_64  mockbuild sl7 uefisign fnal gov   gcc version 4 8 3 20140911  Red Hat 4 8 3 9   GCC     1 SMP Mon Mar 9 16  14 50 CDT 2015    Ubuntu Linux 16 04      cat  proc version Linux version 4 4 0 24 generic  buildd lgw01 12   gcc version 5 3 1 201",
        "objectID": "post/如何查看linux版本",
        "date": "2018-11-20T18:12:41.000Z",
        "tags": [
            "Linux"
        ],
        "categories": [
            "Linux"
        ]
    },
    {
        "title": "如何打印自身代码",
        "uri": "post/如何打印自身代码",
        "content": "self     self                self      include char  recurse   include  cchar  recurse  c s c  cint main   printf recurse 10 34 recurse 34 10 10    c   int main   printf recurse 10 34 recurse 34 10 10                  string    include  cchar recurse  c s c  cint main   printf recurse 10 34 recurse 34 10 10     c           printf           recurse          c       c      main    printf        10                      c   printf     34            s      recurse       string                c s      string                        c    34        c 10         c 10",
        "objectID": "post/如何打印自身代码",
        "date": "2017-06-23T16:06:03.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "如何发送事务消息",
        "uri": "post/如何发送事务消息",
        "content": "RocketMQ                                      A            B       A     B                    A                          RocketMQ                 TransactionMQProducer                   B                     A                                 B               commit  rollback             RocketMQ           RocketMQ                                                                            RocketMQ       Commit  Rollback    RocketMQ   Commit                               Rollback                                    4            RocketMQ                                                     Producer               Producer    Group    Producer                     Commit Roolback    RocketMQ             4                              RocketMQ                   RocketMQ                       4                      Catch                RocketMQ 4 x                      Class                                                  ExecuteLocalTransaction        3          LocalTransactionState ROLLBACKMESSAGE  LocalTransactionState COMMIT MESSAGE        TransactionMQProducer      DefaultMQProducer           Producer        DefaultMQProducer                        TransactionCheckListener     5 MQ           LocalTransactionState ROLLBACKMESSAGE  LocalTransactionState COMMITMESSAGE  package main import    context   fmt   os   strconv   sync   sync atomic   time   github com apache rocketmq client go v2   github com apache rocketmq client go v2 primitive   github com apache rocketmq client go v2 producer    type DemoListener struct   localTrans  sync Map transactionIndex int32   func NewDemoListener    DemoListener   return  DemoListener  localTrans  new sync Map       func  dl DemoListener  ExecuteLocalTransaction msg primitive Message  primitive LocalTransactionState   nextIndex    atomic AddInt32  dl transactionIndex  1  fmt Printf  nextIndex   v transactionID   v n   nextIndex  msg TransactionId  status    nextIndex   3 dl localTrans Store msg TransactionId  primitive LocalTransactionState status 1   fmt Printf  dl   return primitive UnknowState   func  dl DemoListener  CheckLocalTransaction msg primitive MessageExt  primitive LocalTransactionState   fmt Printf   v msg transactionID    v n   time Now    msg TransactionId  v  existed    dl localTrans Load msg TransactionId   existed   fmt Printf  unknow msg   v  return Commit   msg  return primitive CommitMessageState   state    v  primitive LocalTransactionState  switch state   case 1  fmt Printf  checkLocalTransaction COMMIT_MESSAGE   v n   msg  return primitive CommitMessageState case 2  fmt Printf  checkLocalTransaction ROLLBACK_MESSAGE   v n   msg  return primitive RollbackMessageState case 3  fmt Printf  checkLocalTransaction unknow   v n   msg  return primitive UnknowState default  fmt Printf  checkLocalTransaction default COMMIT_MESSAGE   v n   msg  return primitive CommitMessageState     func main     p  _    rocketmq NewTransactionProducer  NewDemoListener    producer WithNameServer   string  127 0 0 1 9876     producer WithRetry 1     err    p Start   err    nil   fmt Printf  start producer error   s n   err Error    os Exit 1       0    10  i     res  err    p SendMessageInTransaction context Background    primitive NewMessage  TopicTest5     byte  Hello RocketMQ again   strconv Itoa i     err    nil   fmt Printf  send message error   s n   err    else   fmt Printf  send message success  result  s n   res String        time Sleep 5   time Minute  err   p Shutdown   err    nil   fmt Printf  shutdown producer error   s   err Error",
        "objectID": "post/如何发送事务消息",
        "date": "2020-04-21T17:37:34.000Z",
        "tags": [
            "rocketmq"
        ],
        "categories": [
            "rocketmq"
        ]
    },
    {
        "title": "如何防止CSRF攻击",
        "uri": "post/如何防止CSRF攻击",
        "content": "CSRF   CSRF        XSS CSRF                  CSRF                                           Gmail                                                    998                                                                                                            Gmail                                  hacker hackermail com                                                                                                              650                                                                                                      document forms 0  submit                Gmail    post           Create Filter               hacker hackermail com             Gmail                      Cookie  Gmail                                                                                                         Gmail                                                                                               2007 Gmail CSRF    https   www davidairey com google Gmail security hijack            Gmail      Gmail            CSRF CSRF Cross site request forgery                                                                                                         CSRF                a com          Cookie              b com  b com   a com         a com act xx         a com Cookie  a com                                          a com          act xx                             a com                      GET   CSRF GET   CSRF            HTTP                      img            http   bank example withdraw account xiaoming amount 10000 for hacker    HTTP   bank example                      POST   CSRF      CSRF                       document forms 0  submit                               POST    POST        GET                                                                POST         CSRF      CSRF                                                                                                                            A                       PHP            CSRF                                                                                                                                URL     CORS Form                                    CSRF                                                                                       CSRF                                      CSRF                  CSRF       CSRF              CSRF        Cookie                                                Samesite Cookie                  CSRF Token   Cookie                            CSRF                                                                  HTTP                 Header           Origin Header Referer Header    Header                                               Header                 Origin Header           CSRF          Header    Origin                 path query     Origin         Origin                 Origin              IE11      IE 11      CORS     Origin   Referer                   IE 11                             MDN Same originpolicy IEExceptions 302      302     Origin              Origin                   302                    URL         Origin             Referer Header         HTTP    HTTP        Referer     HTTP           Ajax      script      Referer                  Referer                        Referer    Origin                          Referer             HTTP                   Referer                                 Referer                                                                     Referer  2014  W3C Web          Referrer Policy            Referer                                              Referer       Referrer Policy     Referer   No Referrer No Referrer When Downgrade Origin Only Origin When Cross origin   Unsafe URL            never default always                                                                                                                                     No Referrer   no Referrer       No Referrer When Downgrade   no Referrer when downgrade   default     Origin    same strict  origin   origin     Origin When Cross Origin    strict  origin when crossorigin         Unsafe URL   unsafe url   always               Referrer Policy      same origin               Referer referer  Host  Path         Referer    aaa com  bbb com        Referer    Referrer Policy         CSP         meta   a    referrerpolicy                                       Referer                                 Referer          Referer         IE6 7   window location href url           Referer  IE6 7   window open     Referer  HTTPS     HTTP        Referer       Flash             Referer                           Origin Referer              Origin Referer                          CSRF Token                          Header                                                                                                           CSRF                                                           CSRF                         Header        Accept  text html Method                CSRF                    GET                                     https   example com addComment comment XXX dest orderId               CSRF                    GET        ",
        "objectID": "post/如何防止CSRF攻击",
        "date": "2019-12-11T10:50:46.000Z",
        "tags": [
            "CSRF"
        ],
        "categories": [
            "网络"
        ]
    },
    {
        "title": "如何防止XSS攻击",
        "uri": "post/如何防止XSS攻击",
        "content": "XSS                                        XSS       RD             RD                                                                                                                               XSS          XSS                                                                     URL                                                                              http   xxx search keyword   alert  XSS                                                     XSS                                      http   xxx search keyword   alert  XSS                  keyword      alert  XSS        HTML                HTML  alert  XSS                    alert  XSS             alert  XSS                        div            input   value         alert                                                                                                                   escapeHTML                                                              amp         gt           quot            x27            x2F                                           quot  gt  lt script gt alert   x27 XSS  x27    lt   x2F script gt                                                                                                                                                                                        HTML         XSS                                HTML    JavaScript API                                                                                                                                      Bug                    http   xxx  redirect_to javascript alert  XSS                                 XSS                                         URL   http   xxx  redirect_to javascript alert  XSS                                                   XSS                                           href                                  javascript                       XSS                           URL    javascript      xss   getParameter  redirect_to   startsWith  javascript       xss               else              URL       javascript                      http   xxx  redirect_to jAvascRipt alert  XSS                                     URL       javascript                                                                   http   xxx  redirect_to  20javascript alert  XSS    20javascript alert  XSS      URL       javascript alert  XSS                                                                                        javascript         scheme   allowSchemes     http    https    valid   isValid getParameter  redirect_to    allowSchemes    valid               else                                 HTML                         var initData      JSON         escapeHTML            JSON                           JSON           JSON     U 2028   U 2029             JavaScript                     JSON                script                        HTML                                         escapeEmbedJSON          JSON                                                           U 2028    u2028     U 2029    u2029     var initData                      HTML                                                 XSS                                                              XSS             HTML               script              JavaScript                                                                           href src         javascript            onload onerror onclick                  style             background image url  javascript                             style             expression        CSS                                                       HTML                                                   XSS                      XSS             XSS Cross Site Scripting           XSS                                                                  Cookie SessionID                 CSS                   X      XSS  XSS                                                                                                                                                                                                                       UGC              URL                                       UGC             URL    POST    Referer              Cookie              XSS            XSS               DOM                                                                                          XSS           HTML         XSS   URL   HTML     DOM   XSS              URL      JavaScript                                            XSS     XSS                                                             HTML                                                                                                                                       XSS     XSS                  URL                       URL               URL         HTML                                                                                                XSS      XSS          XSS                 XSS         URL        XSS         URL                                  URL                          POST             XSS                                          DOM   XSS DOM   XSS                  URL                       URL                     JavaScr",
        "objectID": "post/如何防止XSS攻击",
        "date": "2019-12-11T10:50:53.000Z",
        "tags": [
            "XSS"
        ],
        "categories": [
            "网络"
        ]
    },
    {
        "title": "如何建立和理解非常复杂的声明",
        "uri": "post/如何建立和理解非常复杂的声明",
        "content": "",
        "objectID": "post/如何建立和理解非常复杂的声明",
        "date": "2017-09-05T15:57:45.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "如何较为直观地打印二叉树",
        "uri": "post/如何较为直观地打印二叉树",
        "content": "head             32                                                                        90                     H     3 5   H1H                                            v                                              3 5   v3v   v6v   v7v         H1H   v3v   MA                                                                      3 5  A5A   A2A   A4A          v3v   H1H    A2A                                                1   2                     43323232   78787237                                                                    2147483648       11          H   v   a         13                                         17         17             32                                                  17                     8          v               v8v      3       v8v     7        7         17       66          v               v66v      4       v66v     6       7         17                                                                                    I      I 17                                                                    V                                  H                          17                                   public static class Node   public int value  public Node left  public Node right  public Node int data    this value   data      public static void printTree Node head    System out println  Binary Tree     printInOrder head  0   H   17   System out println      public static void printInOrder Node head  int height  String to  int len     head    null    return    printInOrder head right  height   1   v   len           String val     head value   to         int lenM   val length    int lenL    len   lenM    2  int lenR   len   lenM   lenL  val   getSpace lenL    val   getSpace lenR   System out println getSpace height   len    val   printInOrder head left  height   1       len             public static String getSpace int num    String space        StringBuffer buf   new StringBuffer       int   0    num  i      buf append space     return buf toString",
        "objectID": "post/如何较为直观地打印二叉树",
        "date": "2017-08-18T14:16:02.000Z",
        "tags": [
            "Tree"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "如何仅用递归函数和栈操作逆序一个栈",
        "uri": "post/如何仅用递归函数和栈操作逆序一个栈",
        "content": "1 2 3 4 5            5 4 3 2 1                 1 2 3 4 5                                                                     1 2 3 4 5            2 3 4 5 1     1                                                                                       stack            int getAndRemoveLastElement stack stack    int result   stack pop     stack empty      return result    else   int last   getAndRemoveLastElement stack   stack push result                          return last                   void reverse Stack stack     stack isEmpty      return    int   getAndRemoveLastElement stack   reverse stack   stack push i",
        "objectID": "post/如何仅用递归函数和栈操作逆序一个栈",
        "date": "2017-08-16T17:05:28.000Z",
        "tags": [
            "Stack",
            "递归"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "如何判断一段程序是由C编译还是由C++编译",
        "uri": "post/如何判断一段程序是由C编译还是由C-编译",
        "content": "cpp     Cplusplus           c         STDC      STDC_                   ANSIC     C                          include  ifdef_cplusplus  define USING_C 0  else  define USING_C 1  endif  include int main     if USING_C  printf  C n    else printf  C   n    return 0        C C                c  ifdef_cplusplus extern  C     endif          ifdef_cplusplus    endif        _cplusplus cpp                       cpp                        cpp        extern  C",
        "objectID": "post/如何判断一段程序是由C编译还是由C-编译",
        "date": "2017-09-05T16:13:32.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "如何判断一个变量是有符号数还是无符号数",
        "uri": "post/如何判断一个变量是有符号数还是无符号数",
        "content": "A             1       0           c  include int main     unsigned   10    A  1 0  printf       n    else printf       n    return 0",
        "objectID": "post/如何判断一个变量是有符号数还是无符号数",
        "date": "2017-09-05T10:57:25.000Z",
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": " 如何判断map容器的key是否存在 ",
        "uri": "post/如何判断map容器的key是否存在",
        "content": "key                map           map operator               data_type  operator   valuetype v k  datatype     iterator   insert v  first  return it   second                              second            map find     map       find       logn       bool i ist const String  keyName    return   mRegistryMap find keyName     mRegistryMap end",
        "objectID": "post/如何判断map容器的key是否存在",
        "date": "2017-07-27T16:01:24.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "如何提高Consumer的处理能力",
        "uri": "post/如何提高Consumer的处理能力",
        "content": "Consumer                                                                 Consumer                   ConsumerGroup   Clustering          Consumer                              Consumer       Consumer        Consumer      Topic Read Queue      Consumer                  Consumer                   Consumer                    consumeThreadMin consume ThreadMax                                                         update        update10           update1                                    Consumer consumeMessageBatchMaxSize        1      N                  N                      Consumer                                                        Consumer    Producer              Consumer            Consumer                 Consumer                   Consumer                                ConsumerGroup       Consumer                                 Consumer  RocketMQ              Consumer        Consumer Broker                                 DefaultMQPushConsumer DefaultMQPushConsumer                             DefaultMQPushConsumer            doRebalance         ConsumerGroup     DefaultMQPush Consumer    Consumer     doRebalance                         AllocateMessageQueueAveragely         Topic Message Queue     ConsumerGroup  Consumer                 MessageQueue  Topic    MessageQueue      Consumer    Message Queue Consumer                       AllocateMessageQueueAveragely         Topic     Message Queue   3  Consumer   2       Consumer    Topic                      Consumer   4       Consumer         3 Consumer   Topic           Message Queue                         Topic Message Queue    16  package main import    context   fmt   os   time   github com apache rocketmq client go v2   github com apache rocketmq client go v2 consumer   github com apache rocketmq client go v2 primitive    func main     c  _    rocketmq NewPushConsumer  consumer WithGroupName  testGroup    consumer WithNameServer   string  127 0 0 1 9876     consumer WithStrategy consumer AllocateByAveragely     err    c Subscribe  TopicTest   consumer MessageSelector    func ctx context Context  msgs     primitive MessageExt   consumer ConsumeResult  error    fmt Printf  subscribe callback   v  n   msgs  return consumer ConsumeSuccess  nil    err    nil   fmt Println err Error         Note  start subscribe err   c Start   err    nil   fmt Println err Error    os Exit  1    time Sleep time Hour  err   c Shutdown   err    nil   fmt Printf  shutdown Consumer error   s   err Error        DefaultMQPullConsumer PullConsumer       MessageQueue      MessageQueue          Offset",
        "objectID": "post/如何提高Consumer的处理能力",
        "date": "2020-04-22T23:43:30.000Z",
        "tags": [
            "rocketmq"
        ],
        "categories": [
            "rocketmq"
        ]
    },
    {
        "title": "如何提高Producer的发送速度",
        "uri": "post/如何提高Producer的发送速度",
        "content": "Oneway     Oneway                        Socket                                                      Producer         Producer            Producer               RocketMQ                       DirectMem                               CommitLog  RocketMQ   HDD  SSD                                package main import    context   fmt   os   strconv   github com apache rocketmq client go v2   github com apache rocketmq client go v2 primitive   github com apache rocketmq client go v2 producer    func main     p  _    rocketmq NewProducer  producer WithNameServer   string  127 0 0 1 9876     producer WithRetry 2     err    p Start   err    nil   fmt Printf  start producer error   s   err Error    os Exit 1    var msgs    primitive Message    0    10  i     msgs   append msgs  primitive NewMessage  test     byte  Hello RocketMQ Go Client  num    strconv Itoa i       res  err    p SendSync context Background    msgs     err    nil   fmt Printf  send message error   s n   err    else   fmt Printf  send message success  result  s n   res String      err   p Shutdown   err    nil   fmt Printf  shutdown producer error   s   err Error",
        "objectID": "post/如何提高Producer的发送速度",
        "date": "2020-04-23T00:30:13.000Z",
        "tags": [
            "rocketmq"
        ],
        "categories": [
            "rocketmq"
        ]
    },
    {
        "title": "如何优雅地比较两个未知结构的JSON",
        "uri": "post/如何优雅地比较两个未知结构的JSON",
        "content": "json             json       id  1   name   testjson01    isadmin  true      isadmin  true   name   testjson01    id  1             json                       golang      DeepEqual            json         func LoadJson path string  dist interface     err error    var content   byte content  err   ioutil ReadFile path   err    nil   err   json Unmarshal content  dist    return err                  json     json                  map string interface      json         func main     var   json1 map string interface   json2 map string interface     err    service LoadJson    etc json json01 json    json1   err    nil   fmt Println err    err    service LoadJson    etc json json02 json    json2   err    nil   fmt Println err    fmt Println reflect DeepEqual json1  json2                      true            json                                                            json                                                                    json    json     map       value    3   json json      json            json                           json                           jsonArray json       jsonArray                 jsonArray json                                                                            json   json1 json2        json1       json2                                  golang   value  type         value  type     switch case         switch   value                                                                   DeepEqual                json2     json1                                  DeepEqual                                         json                          type JsonDiff struct   HasDiff bool Result string   func marshal j interface    string   value  _    json Marshal j  return string value        json func jsonDiffDict json1  json2 map string interface    depth int  diff  JsonDiff    blank    strings Repeat       2    depth   1    longBlank    strings Repeat       2    depth    diff Result   diff Result     n    blank           json1 key  value    range json1   quotedKey    fmt Sprintf     s     key      json2  json1   key _  ok    json2 key   ok   switch value  type      json1 value    json case map string interface        json2 value      _  ok2    json2 key   map string interface      ok2   diff HasDiff   true diff Result   diff Result     n     blank   quotedKey          marshal value        diff Result   diff Result     n     blank   quotedKey          marshal json2 key     else       json2 value      diff Result   diff Result     n    longBlank   quotedKey              json jsonDiffDict value  map string interface     json2 key   map string interface     depth 1  diff      json1 value    jsonarray case   interface    diff Result   diff Result     n    longBlank   quotedKey        _  ok2    json2 key     interface      ok2       json2 value      diff HasDiff   true diff Result   diff Result     n     blank   quotedKey          marshal value        diff Result   diff Result     n     blank   quotedKey          marshal json2 key     else       json2 value      jsonDiffList value    interface     json2 key     interface     depth 1  diff      json1 value        default           DeepEqual  interface     reflect DeepEqual value  json2 key     diff HasDiff   true diff Result   diff Result     n     blank   quotedKey          marshal value        diff Result   diff Result     n     blank   quotedKey          marshal json2 key     else   diff Result   diff Result     n    longBlank   quotedKey          marshal value        else       json2   json1   key diff HasDiff   true diff Result   diff Result     n     blank   quotedKey          marshal value    diff Result   diff Result             json2        json2 json1    key  value    range json2       json1   json2   key _  ok    json1 key    ok   diff HasDiff   true diff Result   diff Result     n     blank          key                 marshal value            diff Result   diff Result     n    blank             jsonList func jsonDiffList json1  json2   interface    depth int  diff  JsonDiff    blank    strings Repeat       2    depth   1    longBlank    strings Repeat       2    depth    diff Result   diff Result     n    blank       size    len json1  size   len json2    size   len json2       0   0                                    package service import    encoding json   fmt   io ioutil   reflect   strings    type JsonDiff struct   HasDiff bool Result string   func JsonCompare left  right map string interface    n int   string  bool    diff     JsonDiff HasDiff  false  Result      jsonDiffDict left  right  1  diff  diff HasDiff   n len json2    size   len json2       0    0    index2    0   index1   0   begin   index1   else index2    0   begin   index2   index1   strings LastIndex diff    n    index2   strings LastIndex diff    n    index1    0    index2    0   index1   0   end   index1   else index2    0   end   index2   pre    diff 0 begin  post    diff end      0 l    begin   0   i   l   strings LastIndex pre 0 l     n     r    0 j    0 j   0   j   t    strings Index post r      n   t    0   r   r   t   1     r   0   r   len post    return pre l 1     diff b",
        "objectID": "post/如何优雅地比较两个未知结构的JSON",
        "date": "2019-08-27T10:53:46.000Z",
        "categories": [
            "Go"
        ]
    },
    {
        "title": "如何优雅地关闭Go channel",
        "uri": "post/如何优雅地关闭Go-channel",
        "content": "golang channel       reddit HN                          Go channel               channel                   channel               channel   panic    closer        channel             channel               channel   panic     sender         channel            channel                                               channel                channel                       channel        package main import  fmt  type T int func IsClosed ch closed   false  return     channel ch                   ch",
        "objectID": "post/如何优雅地关闭Go-channel",
        "date": "2018-11-29T15:41:26.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "如何优雅地控制goroutine",
        "uri": "post/如何优雅地控制goroutine",
        "content": "goroutine           goroutine            go    goroutine               go                       go                          var ch chan int func work       do something delta  i",
        "objectID": "post/如何优雅地控制goroutine",
        "date": "2018-12-14T18:17:38.000Z",
        "categories": [
            "Go"
        ]
    },
    {
        "title": "如何运行exec.Command时输出详细错误信息",
        "uri": "post/如何运行exec-Command时输出详细错误信息",
        "content": "cmd    exec Command  find          maxdepth    1     exec    wc     c               var bytes Buffer cmd Stdout    out err    cmd Run   err    nil   fmt Println err  return   fmt Println  Result      out String             exit status 1        StderrCommand              cmd    exec Command  find          maxdepth    1     exec    wc     c               var bytes Buffer var stderr bytes Buffer cmd Stdout    out cmd Stderr    stderr err    cmd Run   err    nil   fmt Println fmt Sprint err           stderr String    return   fmt Println  Result      out String                        exit status 1  find   exec  no terminating",
        "objectID": "post/如何运行exec-Command时输出详细错误信息",
        "date": "2018-11-23T15:37:53.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "如何在同一程序中混合使用C++和C",
        "uri": "post/如何在同一程序中混合使用C-和C",
        "content": "C        C         C                                                        int   double                                                            C    C                              C       C                     C                          C                             C                             operator                                                                          C                          drawline            xyzzy        drawLine          obj        xyzzy       drawLine    C                     C                  void drawLine int x1  int y1  int x2  int y2              drawLine                                   drawLine a  b  c  d      call unmangled function name obj         xyzzy a  b  c  d      call mangled function mame     drawLine     C    obj                            drawLine       drawLine                obj                                xyzzy                                    C                                                        drawLine   C           drawLine    obj                                           C    extern  C        declare function called drawLine  don t mangle    its name extern  C  void drawLine int x1  int y1  int x2  int y2           extern  C             extern  Pascal   extern FORTRAN         C            extern  C             C                         C                                         extern  C      function assembler   don t mangle its name extern  C  void twiddleBits unsigned char bits          C        extern  C       C                             C                                                       following C   function designed use outside    C   not its name mangled extern  C  void simulate int iterations                              extern  C              extern  C                          extern  C       disable name mangling    following functions void drawLine int x1  int y1  int x2  int y2   void twiddleBits unsigned char bits   void simulate int iterations              extern  C              C    C              C           extern  C     C                C          __cplusplus                ifdef __cplusplus extern  C     endif void drawLine int x1  int y1  int x2  int y2   void twiddleBits unsigned char bits   void simulate int iterations        ifdef __cplusplus    endif                                                                                                                      obj                                                                statics                       C        main                                                             main                             C    C                 main                                                     main               main                  main                      main                                       main                                   int main int argc  char  argv      performStaticInitialization        performStaticDestruction                              performStaticInitialization     performStaticDestruction                          obj                         C                           main     C                                                       C           C    main             C   main                  C   C                   C                               C    main                        C        C    main      realMain       C      main     realMain    extern  C     implement int realMain int argc  char  argv     int main int argc  char  argv      return realMain argc  argv           C    main                                                                                                                                                                   C       new   delete C      malloc        free    new         delete    malloc        free             free    new         delete    malloc                               new   delete   malloc   free                            C    C             C       C                  C                                            C         C               C    C                                                                     int char                 C     struct        C                                                  C    C                C                                                 C                                                                                                   C                     C    C                     C     C                 C",
        "objectID": "post/如何在同一程序中混合使用C-和C",
        "date": "2017-09-01T13:45:29.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "如何在Go中使用JWT",
        "uri": "post/如何在Go中使用JWT",
        "content": "jwt go   jwt           jwt       pkg  util    jwt go         package util import    time   github com dgrijalva jwt go    var jwtSecret    dong_tech            payload            dgrijalva jwt go jwt StandardClaims        payload           type Claims struct      token           token           jwt StandardClaims UserID int json  user_id  Password string json  password  Username string json  username  FullName string json  full_name  Permissions   string json  permissions         type Claims interface   Valid   error            func  c Claims  Valid    err error    c VerifyExpiresAt time Now   Unix    true     false   return errors New  token expired      c VerifyIssuer AppIss  true    return errors New  token s issuer wrong     c User Id 0   return true   return false    routers  api    auth go         package api import    log   net http   github com gin gonic gin   github com astaxie beego validation   gin blog pkg e   gin blog pkg util   gin blog models    type auth struct   Username string valid  Required  MaxSize 50   Password string valid  Required  MaxSize 50     func GetAuth c  gin Context    username    c Query  username   password    c Query  password   valid    validation Validation      auth Username  username  Password  password  ok  _    valid Valid  a  data    make map string interface    code    e INVALID_PARAMS ok   isExist    models CheckAuth username  password  isExist   token  err    util GenerateToken username  password  err    nil   code   e ERRORAUTHTOKEN   else   data  token     token code   e SUCCESS     else   code   e ERROR_AUTH     else   _  err    range valid Errors   log Println err Key  err Message      c JSON http StatusOK  gin H   code    code   msg    e GetMsg code    data    data           routers    router go              token      package routers import    github com gin gonic gin   gin blog routers api   gin blog routers api v1   gin blog pkg setting    func InitRouter    gin Engine   r    gin New   r Use gin Logger    r Use gin Recovery    gin SetMode setting RunMode  r GET   auth   api GetAuth  apiv1    r Group   api v1           return r         Gin             Gin           routers    router go                       package routers import    github com gin gonic gin   gin blog routers api   gin blog routers api v1   gin blog pkg setting   gin blog middleware jwt    func InitRouter    gin Engine   r    gin New   r Use gin Logger    r Use gin Recovery    gin SetMode setting RunMode  r GET   auth   api GetAuth  apiv1    r Group   api v1   apiv1 Use jwt JWT            return r           gin blog      conf       app ini     main go     middleware       jwt       jwt go     models       article go       auth go       models go       tag go     pkg       e         code go         msg go       setting         setting go       util       jwt go       pagination go     routers       api         auth go         v1         article go         tag go       router go     runtime        JWT                       http   127 0 0 1 8000 api v1 articles http   127 0 0 1 8000 api v1 articles token 23131             code   400   data   null   msg                 code   20001   data   null   msg    Token              http   127 0 0 1 8000 auth username test password test123456   token    code   200   data      token    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9 eyJ1c2VybmFtZSI6InRlc3QiLCJwYXNzd29yZCI6InRlc3QxMjM0NTYiLCJleHAiOjE1MTg3MjQ2OTMsImlzcyI6Imdpbi1ibG9nIn0 KSBY6TeavV_30kfmP7HWLRYKP5TPEDgHtABe9HCsic4      msg    ok        token URL          API    http   127 0 0 1 8000 api v1 articles token eyJhbGci               code   200   data      lists        id   2   created_on   1518700920   modified_on   0   tag_id   1   tag      id   1   created_on   1518684200   modified_on   0   name    tag1    created_by        modified_by        state   0     content    test content    created_by    test created    modified_by        state   0       total   1     msg    ok              jwt go Gin          gin jwt gin jwt                                        jwt New        jwt GinJWTMiddleware       jwt GinJWTMiddleware          TokenLookup token         token     header Authorization  SigningAlgorithm          HS256 Timeout token         time Hour MaxRefresh token      TimeFunc                       time Now TokenHeadName token             Bearer IdentityKey      key      identity Realm                       gin jwt CookieName Cookie       jwt privKey    pubKey    Authenticator                                PayloadFunc               IdentityHandler               Authorizator                     API                   Unauthorized               LoginResponse                                 code   http StatusOK   token   token   expire   expire Format time RFC3339    RefreshResponse     token                          code   http StatusOK   token   token   expire   expire Format time RFC3339                                package main import    log   net http   os   time   github com appleboy gin jwt v2   github com gin gonic gin    type login struct   Username string form  username  json  username  binding  required  Passwo",
        "objectID": "post/如何在Go中使用JWT",
        "date": "2019-12-08T15:39:17.000Z",
        "tags": [
            "Go",
            "JWT"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "软件质量特性",
        "uri": "post/软件质量特性",
        "content": "",
        "objectID": "post/软件质量特性",
        "date": "2017-06-25T19:39:10.000Z",
        "tags": null,
        "categories": [
            "软件工程 "
        ]
    },
    {
        "title": "软连接的创建修改与删除",
        "uri": "post/软连接的创建修改与删除",
        "content": "ln  s                              test    var www test     ln  s  var www test test    var test    var www test     ln  s  var www test  var test                          rm      rm  rf                    rm  rf                              test rm  rf test       ln  snf                                                    ln  s  var www test  var test          ln  snf  var www test1  var test",
        "objectID": "post/软连接的创建修改与删除",
        "date": "2018-11-20T17:55:16.000Z",
        "tags": [
            "Shell"
        ],
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "筛选素数",
        "uri": "post/筛选素数",
        "content": "LeetCode 204  Count Primes Description  Count number prime numbers less non negative number  n  class Solution                public  int countPrimes int n     n num n   1  true           num 0    false  int res   0  limit   sqrt n    int   2",
        "objectID": "post/筛选素数",
        "date": "2017-06-24T19:52:07.000Z",
        "tags": [
            "Math",
            "素数筛法"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "删除数组/链表的元素",
        "uri": "post/删除数组:链表的元素",
        "content": "LeetCode 27  Remove Element Given array value  remove instances value place return new length  not allocate extra space array  place constant memory  order elements changed  doesn t matter leave beyond new length  Example  Given input array nums    3 2 2 3   val   3 function return length   2  first two elements nums 2                                          class Solution   public  int removeElement vector  nums  int val    int   0   k   0   i 2    6    3    4    5    6  val   6 Return  1    2    3    4    5                          pre                        Definition singly linked list  struct ListNode   int val  ListNode  next  ListNode int x    val x   next NULL           class Solution   public  ListNode  removeElements ListNode  head  int val    ListNode  newhead   new ListNode  1                                                 newhead  next   head  ListNode  pre   newhead  ListNode  cur   head  while cur    NULL    if cur  val    val    cur   cur  next           pre  next   cur        else   pre   cur  cur   cur  next      return newhead  next       LeetCode 237  Delete Node Linked List Write function delete node  except tail  singly linked list  given access node  Supposed linked list 1    2    3    4 given third node value 3  linked list become 1    2    4 calling function                                                                                                          next             delete                                                                                      Definition singly linked list  struct ListNode   int val  ListNode  next  ListNode int x    val x   next NULL           class Solution   public  void deleteNode ListNode  node    node  val   node  next  val  ListNode  tmp   node  next                     node  next   tmp  next  delete tmp                                                                                3                                3           2 next  null                 2             3                3         null            2 next      null     3             null                   2 next    mill       2                         node      node            node                                                                                                                              2         3",
        "objectID": "post/删除数组:链表的元素",
        "date": "2017-06-25T02:24:59.000Z",
        "tags": [
            "Linked List",
            "Array"
        ],
        "categories": [
            "解题报告 "
        ]
    },
    {
        "title": "删除无序单链表中值重复出现的点",
        "uri": "post/删除无序单链表中值重复出现的点",
        "content": "head                  1  2  3  3  4  4  2  1  1  null             l  2  3  4  null                  1        N        O N    2         0 1                  O N          O N                                                                            cur      cur                 cur              cur                         pre   cur        pre next cur next        cur             pre cur                  public static void removeRep1 Node head     head    null    return    HashSet set   new HashSet    Node pre   head  Node cur   head next  set add head value    cur    null     set contains cur value     pre next   cur next    else   set add cur value   pre   cur    cur   cur next                           O n          O 1         1  2  3  3  4  4  2  1  1  null             1         1               1   2  3  3  4  4  2  null              2         2               1   2  3  3  4  4  null              3         3               1   2  3  4  4  null              4         4               1   2  3  4  null         public static void removeRep2 Node head    Node cur   head  Node pre   null  Node next   null   cur    null    pre   cur  next   cur next   next    null     cur value    next value    pre next   next next    else   pre   next    next   next next    cur   cur next",
        "objectID": "post/删除无序单链表中值重复出现的点",
        "date": "2017-08-17T14:18:44.000Z",
        "tags": [
            "Linked List"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "删除有序数组/链表的重复值",
        "uri": "post/删除有序数组:链表的重复值",
        "content": "LeetCode 26  Remove Duplicates Sorted Array Given sorted array  remove duplicates place element appear once return new length  not allocate extra space array  place constant memory  example  Given input array nums    1 1 2   function return length   2  first two elements nums 1 2 respectively  doesn t matter leave beyond new length       unique     STL     class Solution   public  int removeDuplicates vector  nums    return distance nums begin    unique nums begin    nums end           LeetCode 80  Remove Duplicates Sorted Array II Follow  Remove Duplicates   duplicates allowed twice  example  Given sorted array nums    1 1 1 2 2 3   function return length   5  first five elements nums 1  1  2  2 3  doesn t matter leave beyond new length             2                          i j  0 i           j          class Solution   public  int removeDuplicates vector  nums    int   0   int j   nums   i nums i 2      2     j i 2  nums i      j  return i       LeetCode 83  Remove Duplicates Sorted List Given sorted linked list  delete duplicates element appear once  example  Given 1  1  2  return 1  2  Given 1  1  2  3  3  return 1  2  3           prev      Definition singly linked list  struct ListNode   int val  ListNode  next  ListNode int x    val x   next NULL           class Solution   public  ListNode  deleteDuplicates ListNode  head     head    nullptr  return nullptr   ListNode prev   head  cur   head  next  cur  cur   cur  next     prev  val    cur  val    prev  next   cur  next  delete cur    else   prev   cur      return head       LeetCode 82  Remove Duplicates Sorted List II Given sorted linked list  delete nodes duplicate numbers  leaving distinct numbers original list  example  Given 1  2  3  3  4  4  5  return 1  2  5  Given 1  1  1  2  3  return 2  3                                   Definition singly linked list  struct ListNode   int val  ListNode  next  ListNode int x    val x   next NULL           class Solution   public  ListNode deleteDuplicates ListNode head      head     head  next  return head  ListNode  p   head  next         head  val    p  val     p    head  val    p  val                    ListNode  tmp   p  p   p  next  delete tmp    delete head         return deleteDuplicates p     else   head  next   deleteDuplicates head  next   return head         LeetCode 316  Remove Duplicate Letters Given string contains lowercase letters  remove duplicate letters so every letter appear once once  sure result smallest lexicographical order among possible results  Example  Given  bcabc  Return  abc  Given  cbacdcbc  Return  acdb                                           2                                         visit                                      p                                                                   class Solution   public  string removeDuplicateLetters string s    string res     int m1 256   0           int visited 256   0                  for auto p s  m1 p                   for auto p s      m1 p            if visited p   continue                          while m1 res back     p",
        "objectID": "post/删除有序数组:链表的重复值",
        "date": "2017-06-24T23:58:39.000Z",
        "tags": [
            "Array",
            "DFS",
            "单调栈",
            "Two Pointers",
            "Linked List"
        ],
        "categories": [
            "解题报告 "
        ]
    },
    {
        "title": "设计缓存结构",
        "uri": "post/设计缓存结构",
        "content": "LeetCode 146  LRU Cache Design implement data structure Least Recently Used  LRU  cache  support following operations  put  get key    value  will always positive  key key exists cache  otherwise return  1  put key  value    Set insert value key not already present  When cache reached its capacity  invalidate least recently used item inserting new item  Follow up  operations O 1  time complexity  Example  LRUCache cache   new LRUCache  2    capacity       cache put 1  1   cache put 2  2   cache get 1      returns 1 cache put 3  3      evicts key 2 cache get 2      returns  1  not found  cache put 4  4      evicts key 1 cache get 1      returns  1  not found  cache get 3      returns 3 cache get 4      returns 4     LRU              Least Recently Used                          cache                  cache                                      cache         cache        list       cache   get put                                              hash               unordered_map   list      key     remove                           list                           list         erase                                              list             map            update               list          map    key value                 map          pair                             O 1                              class LRUCache  public  LRUCache int capacity    capacity_ capacity    int get int key                key            1  if map_ count key   0  return  1                                                           list    iterator it  map_ key   int value   it  second           list_ erase it    list pushfront  pair key value          map map key    list begin     return value    void put int key  int value    if map_ count key   0           list    iterator it  map_ key            list_ erase it    list pushfront pair key value         map map key    list begin       else           if  map size      capacity     map erase  list back   first     back                      list popback      list pushfront pair key value    map key    list begin        private  unorderedmap    iterator   map  list   list_  int capacity_         LRUCache object will instantiated called such  LRUCache obj   new LRUCache capacity   int param_1   obj get key   obj put key value      LeetCode 460  LFU Cache Design implement data structure Least Frequently Used  LFU  cache  support following operations  put  get key    value  will always positive  key key exists cache  otherwise return  1  put key  value    Set insert value key not already present  When cache reaches its capacity  invalidate least frequently used item inserting new item  purpose problem  when tie  i e   two keys frequency   least recently used key evicted  Follow up  operations O 1  time complexity  Example  LFUCache cache   new LFUCache  2    capacity       cache put 1  1   cache put 2  2   cache get 1      returns 1 cache put 3  3      evicts key 2 cache get 2      returns  1  not found  cache get 3      returns 3  cache put 4  4      evicts key 1  cache get 1      returns  1  not found  cache get 3      returns 3 cache get 4      returns 4     LFU              Least Frequently Used                         LFU LRU        LRU              LFU                         3        set 2 2  set 1 1  get 2  get 1  get 2  set 3 3  set 4 4     set 4 4    LFU       3 3   LRU     1 1                3           map  m                  map  iterator  mIter               map  fm                              head     FreqNode1      FreqNode2               FreqNodeN       KeyNodeA KeyNodeE KeyNodeG       KeyNodeB KeyNodeF KeyNodeH     KeyNodeC KeyNodeI   KeyNodeD         3     size         int minfreq         minfreq set        1  get         int cap       class LFUCache   public  LFUCache int capacity    cap capacity  size 0    int get int key    if m count key   0  return  1  fm m key  second  erase mIter key       key fm      m key  second          fm m key  second  push_back key                 mIter key    fm m key  second  end       key              if fm minfreq  size    0                             minfreq    return m key  first    void put int key  int value    if cap  m   key pair map  iterator  mIter   key list location map  fm   freq list",
        "objectID": "post/设计缓存结构",
        "date": "2017-06-24T19:50:14.000Z",
        "tags": [
            "Design",
            "Linked List"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "设计一个有getMin功能的栈",
        "uri": "post/设计一个有getMin功能的栈",
        "content": "LeetCode 155  Min Stack Design stack supports push  pop  top  retrieving minimum element constant time  push x    Push element x onto stack  pop     Removes element top stack  top     top element  getMin     Retrieve minimum element stack  Example  MinStack minStack   new MinStack    minStack push  2   minStack push 0   minStack push  3   minStack getMin        Returns  3  minStack pop    minStack top        Returns 0  minStack getMin        Returns  2      1      stack        1 stack      stack push pop      1 stack    min         min     stack  pop  push    min_stack        2  2 stack                 min    minstack push          min            pop       pop   minstack top       pop   min_stack top     min stack  pop  class MinStack   private  stack s1  stack s2  public  void push int x    s1 push x    s2 empty      x",
        "objectID": "post/设计一个有getMin功能的栈",
        "date": "2017-06-25T02:21:54.000Z",
        "tags": [
            "Stack",
            "Design"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "设计有setAll功能的哈希表",
        "uri": "post/设计有setAll功能的哈希表",
        "content": "put get containsKey               O 1        setAll           value                 setAll         put get containsKey setAll            O 1                                                                      setAll            setAII                          setAll        setAll         setAll                setAII                            public static class MyValue   private V value  private long time  public MyValue V value  long time    this value   value  this time   time    public V getValue     return this value    public long getTime     return this time      public static class MyHashMap   private HashMap  baseMap  private long time  private MyValue setAll  public MyHashMap     this baseMap   new HashMap     this time   0  this setAll   new MyValue null   1     public boolean containsKey K key    return this baseMap containsKey key     public void put K key  V value    this baseMap put key  new MyValue value  this time        public void setAll V value    this setAll   new MyValue value  this time       public V get K key     this containsKey key      this baseMap get key  getTime     this setAll getTime      return this baseMap get key  getValue      else   return this setAll getValue        else   return null",
        "objectID": "post/设计有setAll功能的哈希表",
        "date": "2017-09-03T14:09:29.000Z",
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "设计RandomPool结构",
        "uri": "post/设计RandomPool结构",
        "content": "LeetCode 380  Insert Delete GetRandom O 1  Design data structure supports following operations average O 1  time  insert val   Inserts item val set not already present  remove val   Removes item val set present  getRandom  Returns random element current set elements  element probability returned  Example     Init empty set  RandomizedSet randomSet   new RandomizedSet       Inserts 1 set  Returns true 1 inserted successfully  randomSet insert 1      Returns false 2 does not exist set  randomSet remove 2      Inserts 2 set  returns true  Set contains  1 2   randomSet insert 2      getRandom return either 1 2 randomly  randomSet getRandom       Removes 1 set  returns true  Set contains  2   randomSet remove 1      2 already set  so return false  randomSet insert 2      2 number set  getRandom always return 2  randomSet getRandom                                                                          set                              O 1                                                                                                                                                                          class RandomizedSet   public     Initialize data structure here    RandomizedSet         Inserts value set  Returns true set not already contain specified element    bool insert int val     m count val   return false                              false nums push_back val                     m val    nums size     1                return true       Removes value set  Returns true set contained specified element    bool remove int val      m count val   return false                        false  int last   nums back    m last    m val          last     nums m val     last   last       nums pop_back        last      m erase val    val        return true       random element set    int getRandom     return nums rand     nums size       private  vector nums  unordered_map m         RandomizedSet object will instantiated called such  RandomizedSet obj   new RandomizedSet    bool param_1   obj insert val   bool param_2   obj remove val   int param_3   obj getRandom       LeetCode 381  Insert Delete GetRandom O 1    Duplicates allowed Design data structure supports following operations average O 1  time  Note  Duplicate elements allowed  insert val   Inserts item val collection  remove val   Removes item val collection present  getRandom  Returns random element current collection elements  probability element returned linearly related number value collection contains  Example     Init empty collection  RandomizedCollection collection   new RandomizedCollection       Inserts 1 collection  Returns true collection not contain 1  collection insert 1      Inserts 1 collection  Returns false collection contained 1  Collection contains  1 1   collection insert 1      Inserts 2 collection  returns true  Collection contains  1 1 2   collection insert 2      getRandom return 1 probability 2 3  returns 2 probability 1 3  collection getRandom       Removes 1 collection  returns true  Collection contains  1 2   collection remove 1      getRandom return 1 2 equally likely  collection getRandom                                                   vector         remove       nums            vector                                            nums                                                                                                        class RandomizedCollection   public     Initialize data structure here    RandomizedCollection         Inserts value collection  Returns true collection not already contain specified element    bool insert int val    m val  push nums size      nums size                   m val        nums push_back val       nums    val return m val  size      1             m val        val                Removes value collection  Returns true collection contained specified element    bool remove int val     m val  empty    return false               val         false  int idx   m val  top                        m val  pop            nums size     1    idx                           int t   nums back        nums     nums idx    t                    m t  pop                    m t  push idx                   nums pop_back           return true       random element collection    int getRandom     return nums rand     nums size       private  vector nums  unordered_map  m         RandomizedCollection object will instantiated called such  RandomizedCollection obj   new RandomizedCollection    bool param_1   obj insert val   bool param_2   obj remove val   int param_3   obj getRandom",
        "objectID": "post/设计RandomPool结构",
        "date": "2017-06-24T19:50:58.000Z",
        "tags": [
            "Design",
            "Hash"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "设计Twitter",
        "uri": "post/设计Twitter",
        "content": "LeetCode 355  Design Twitter Design simplified version Twitter users post tweets  follow unfollow user able 10 recent tweets user s news feed  design support following methods  postTweet userId  tweetId   Compose new tweet  getNewsFeed userId   Retrieve 10 recent tweet ids user s news feed  item news feed posted users user followed user herself  Tweets ordered recent least recent  follow followerId  followeeId   Follower follows followee  unfollow followerId  followeeId   Follower unfollows followee  Example  Twitter twitter   new Twitter       User 1 posts new tweet  id   5   twitter postTweet 1  5      User 1 s news feed return list 1 tweet id     5   twitter getNewsFeed 1      User 1 follows user 2  twitter follow 1  2      User 2 posts new tweet  id   6   twitter postTweet 2  6      User 1 s news feed return list 2 tweet ids     6  5      Tweet id 6 precede tweet id 5 posted tweet id 5  twitter getNewsFeed 1      User 1 unfollows user 2  twitter unfollow 1  2      User 1 s news feed return list 1 tweet id     5      user 1 no longer following user 2  twitter getNewsFeed 1            tweet    tweet                             Hash Table        tweet             tweet   vector                       unorderedset               list   list                  unorderedset    tweetId     tweet         tweet           tweet                                                                 10 tweet                     tweet     10 tweet         tweet    10 tweet                           10 tweet      10 tweet      tweetId     tweet         tweet           tweet       class Twitter   unordered_map   tweet  unordered_map  flwee  int timestamp                public     Initialize data structure here    Twitter     timestamp 0        Compose new tweet    void postTweet int userId  int tweetId       tweet tweet userId  pushback makepair timestamp    tweetId         Retrieve 10 recent tweet ids user s news feed  item news feed posted users user followed user herself  Tweets ordered recent least recent    vector getNewsFeed int userId    priority_queue  nwsfd  vector ret  for int cnt   0 cnt param_2   obj getNewsFeed userId   obj follow followerId followeeId   obj unfollow followerId followeeId",
        "objectID": "post/设计Twitter",
        "date": "2017-06-24T16:09:40.000Z",
        "tags": [
            "Heap",
            "Design"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "设置用户ID位，保存设置用户ID，有效用户ID，实际用户ID",
        "uri": "post/设置用户ID位，保存设置用户ID，有效用户ID，实际用户ID",
        "content": "ID RUID                                         uid     ID EUID                                                      ID           OK                               A    A       ID     ID         A                                  Linux            ID                             A         A                      ID                                  ID                                 ID                             ID                   ID SUID       ID         ID                       ID          ID                  ID     ID       ID        ID                    etc shadow                root debian    ls  l  etc shadow  rw r      1 root shadow 8013 Sep 8 14 58  etc shadow                            passwd                                                           ID     ID      UID                  etc shadow          passwd                                          ID        passwd           ID       OK        root debian    ls  l  usr bin passwd  rwsr xr x 1 root root 43280 Feb 16 2011  usr bin passwd        s                ID                      ID               passwd        ID                        passwd    shell fork               ID      ID   exec     usr bin passwd             exec   usr bin passwd SUID             ID         ID     root            root          etc shadow                      exec             EUID     ID               root             ID                                      ID                         setuid                          setuid           ID                                        Linux   setuid               ID          ID       ID        ID         ID         ID       ID       ID            ID                    ID                                                        ID         ID                                               root                                                ID            ID               ID     ID                          ID                       man   AUP          linux                                man       ID man     ID  man           man     exec   usr bin man       ID           ID    usr bin man        man       man       ID            man            ID      ID        ID     ID   man     man           ID   man exec     man                      man             ID man                          man                man        man                     ID man         ID        ID   setuid getuid                        ID        ID     ID        ID setuid           ID   man   man         ID                                     man                            ID    man            ID                    setuid geteuid                 ID         ID        ID   man  uid  man                ID                man                    ID   man      http   blog csdn net demiaowu article details 39370355",
        "objectID": "post/设置用户ID位，保存设置用户ID，有效用户ID，实际用户ID",
        "date": "2017-06-25T14:23:56.000Z",
        "tags": null,
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "深入理解HTTP协议",
        "uri": "post/深入理解HTTP协议",
        "content": "HTTP Hyper Text Transfer Protocol                          HTTP 1 1  HTTP   HyperText Transfer Protocol             WWW                                                                                                  HTTP                                 HTTP           HTTP       TCP           TLS SSL                   HTTPS          HTTP     80 HTTPS     443     HTTP                                                                      HTTP                                             HTTP                  MIME typehost   Host         Intenet             url             HTTP 1 1                 400       Referer   Referer           uri                              cache                               uri     uri   Referer              uri                  User Agent   User Agent                  Cache Control   Cache Control                            Cache Control                                 no cache no store max age max stale min fresh only if cached           public private no cache no store no transform must revalidate proxy revalidate max age  Date   Date                    rfc822      Date Mon 31Dec200104 25 57GMT Date                                  HTTP 1 0 HTTP 1 1           HTTP 1 0            TCP          HTTP 1 1               TCP                       TCP               http1 1 request reponse          connection    header     client server                 http1 1  client server                client  http1 1                  header   connection   close   server            response        connection   close   request  response header      close connection           tcp                   client               tcp     Host  HTTP1 1 Request         Host   HTTP1 0        Eg   pub WWW TheProject html HTTP 1 1 Host  www w3 org   HTTP1 0        TCP          IP     IP       host             100  Continue                 request  body    request header    server  server     request body        request body      Request      Expect  100 continue Server        100  Continue                request body    HTTP1 1        HTTP 1 1     101 203 205                       HTTP1 0  HTTP1 1          date time stamp  Sun  06 Nov 1994 08 49 37 GMT   RFC 822  updated RFC 1123 Sunday  06 Nov 94 08 49 37 GMT   RFC 850  obsoleted RFC 1036 Sun Nov 6 08 49 37 1994   ANSI C s asctime   format      HTTP1 0         asctime   date time stamp  HTTP1 1      RFC 1123        date time stamp       HTTP1 1          OPTIONS  PUT  DELETE  TRACE   CONNECT                                                 URI                        Eg1   index html HTTP 1 1 Eg2  POST http   192 168 2 217 8080 index jsp HTTP 1 1 HTTP         hello htm HTTP 1 1 Accept    Accept Language  zh cn Accept Encoding  gzip  deflate If Modified Since  Wed  17 Oct 2007 02 15 55 GMT If None Match  W  158 1192587355000  User Agent  Mozilla 4 0  compatible  MSIE 6 0  Windows NT 5 1  SV1  Host  192 168 2 162 8080 Connection  Keep Alive      GET POST PUT DELETE                     GET    FORM          Method       GET  POST        GET      HTTP                        GET POST PUT DELETE  HEAD    GET HEAD            GET HEAD HTTP                    GET HEAD HTTP                                                    GET                                 select                                                                    GET     PUT                              update                                       PUT             POST   PUT                                         insert                           POST     DELETE                             delete                            GET POST        PUT DELETE  GET POST          HTTP        HTTP                         URL     HTTP           herders                                                                                              GET      http   weibo com signup signup php inviteCode 2388493434 Host  weibo com Accept  text html application xhtml xml application xml q 0 9 image webp   q 0 8 POST      POST  inventory check cgi HTTP 1 1 Host  www joes hardware com Content Type  text plain Content length  18 item bandsaw 2647       GET            URL       URL               URL         ASCII      uniclde        ASCII             POST   POST            HTTP           item bandsaw              GET               POST                HTTP       URL                             GET            URL             GET           URL         POST     URL                     ",
        "objectID": "post/深入理解HTTP协议",
        "date": "2017-06-25T20:08:31.000Z",
        "tags": [
            "TTP"
        ],
        "categories": [
            "网络"
        ]
    },
    {
        "title": "深入Golang之unsafe",
        "uri": "post/深入Golang之unsafe",
        "content": "Pointer uintptr unsafe Pointer Golang              Pointer                uintptr Golang                uintptr      int   unsafe Pointer       Pointer uintptr       unsafe Pointer               C                           unsafe Pointer         unsafe Pointer              GC    uintptr                    GC   uintptr       uintptr            Golang                                     uintptr            unsafe Pointer                  unsafe Pointer  unsafe Pointer               uintptr     unsafe Pointer  unsafe Pointer     uintptr       unsafe Pointer                                                   func main     var int64   3 var b float64   float64 a  fmt Println  a     0xc42000e248 fmt Println  b     0xc42000e250                    a   float64 a  Golang    cannot use float64 a   type float64  type int64 assignment    unsafe Pointer  T1   T2          T2  unsafe Pointer  t1   func main     var n int64   3 var pn    n    n    var pf     float64  unsafe Pointer pn        Pointer  n     float fmt Println  pf     2 5e 323  pf   3 5 fmt Println n     4615063718147915776 fmt Println pf     0xc42007a050 fmt Println pn     0xc42007a050                      Golang                          uintptr            Golang                uintptr         func main         4 int 0  1  2  3  p1    unsafe Pointer  a 1      index 1    p3    unsafe Pointer uintptr p1    2   unsafe Sizeof a 0         index 3     int  p3    4         fmt Println a        0 1 2 4                                                                                             type Person struct   name string age int   func main        Person  Jasper   27  pa    unsafe Pointer  a  aname     string  unsafe Pointer uintptr pa    unsafe Offsetof a name       pname     string  unsafe Pointer uintptr pa            aage      int  unsafe Pointer uintptr pa    unsafe Offsetof a age     aname    Jasper2   aage   28 fmt Println a      Jasper2 28                                                           Pointer uintptr                  string   byte                   string    byte                     string   byte                                      unsafe                func string2byte s string    byte   sh      reflect StringHeader  unsafe Pointer  s   bh    reflect SliceHeader  Data  sh Data  Len  sh Len  Cap  sh Len    return    byte  unsafe Pointer  bh     func byte2string b   byte  string  bh      reflect SliceHeader  unsafe Pointer  b   sh    reflect StringHeader  Data  bh Data  Len  bh Len    return  string  unsafe Pointer  sh                        struct string  uint8  str  int len    struct   uint8  uint8  array  int len  int cap                                                                      Golang        package                            unsafe      package p import    fmt    type V struct   int32 j int64   func  this V  PrintI     fmt Printf  i  d n   this i    func  this V  PrintJ     fmt Printf  j  d n   this j       mian         i j    package main import    p   unsafe    func main     var v  p V   new p V  var int32    int32  unsafe Pointer v    i   int32 1  var j int64    int64  unsafe Pointer uintptr unsafe Pointer v    unsafe Sizeof int32 0      j   int64 2  v PrintI   v PrintJ           uintptr                                                           reflect  Value         Pointer UnsafeAddr          uintptr   unsafe Pointer                          unsafe                         Pointer                   p      int  unsafe Pointer reflect ValueOf new int   Pointer                                                                                             unsafe",
        "objectID": "post/深入Golang之unsafe",
        "date": "2018-11-27T19:58:06.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "神奇的2006-01-02 15:04:05",
        "uri": "post/神奇的2006-01-02-15-04-05",
        "content": "Golang                         2006 01 02 15 04 05                                                                                                                                                package main import    fmt   time    func main     timeString    time Now   Format  2006 01 02 15 04 05   fmt Println timeString  fmt Println time Now   Format  2017 09 07 18 05 32              2017 09 07 18 06 43 7097 09 08 98 43 67                     format                                                                                 format parse  layout       2006 01 02 15 04 05                          Jan 2  2006 3 04pm  MST    2006 Jan 02                                                                 06  1 2   3 4 5            7   Monday   1 7                                                                                                         1                  4                                  2006 01 02 15 04 05                                 yyyy MM dd HH mm ss                                     go time       GOROOT src time format go                const   _   iota stdLongMonth   iota   stdNeedDate     January  stdMonth     Jan  stdNumMonth     1  stdZeroMonth     01  stdLongWeekDay     Monday  stdWeekDay     Mon  stdDay     2  stdUnderDay     _2  stdZeroDay     02  stdHour   iota   stdNeedClock     15  stdHour12     3  stdZeroHour12     03  stdMinute     4  stdZeroMinute     04  stdSecond     5  stdZeroSecond     05  stdLongYear   iota   stdNeedDate     2006  stdYear     06  stdPM   iota   stdNeedClock     PM  stdpm     pm  stdTZ   iota     MST  stdISO8601TZ     Z0700     prints Z UTC stdISO8601SecondsTZ     Z070000  stdISO8601ShortTZ     Z07  stdISO8601ColonTZ     Z07 00     prints Z UTC stdISO8601ColonSecondsTZ     Z07 00 00  stdNumTZ      0700     always numeric stdNumSecondsTz      070000  stdNumShortTZ      07     always numeric stdNumColonTZ      07 00     always numeric stdNumColonSecondsTZ      07 00 00  stdFracSecond0      0     00         trailing zeros included stdFracSecond9      9     99        trailing zeros omitted                                                                                            2017 09 07 18 05 32              2017 09 07 18 05 32         7097 09 08 98 43 67                  GO         func nextStdChunk layout string   prefix string  std int  suffix string       0    i 3    layout i i 3      Jan    len layout     i 7    layout i i 7      January    return layout 0 i   stdLongMonth  layout i 7      startsWithLowerCase layout i 3      return layout 0 i   stdMonth  layout i 3       case  M      Monday  Mon  MST len layout     i 3   layout i i 3      Mon    len layout     i 6    layout i i 6      Monday    return layout 0 i   stdLongWeekDay  layout i 6      startsWithLowerCase layout i 3      return layout 0 i   stdWeekDay  layout i 3       layout i i 3      MST    return layout 0 i   stdTZ  layout i 3       case  0      01  02  03  04  05  06 len layout     i 2     1    i 2    layout i 1      5    return layout 0 i   stdHour  layout i 2     return layout 0 i   stdNumMonth  layout i 1   case  2      2006  2 len layout     i 4    layout i i 4      2006    return layout 0 i   stdLongYear  layout i 4     return layout 0 i   stdDay  layout i 1   case        2  _2006 len layout     i 2    layout i 1      2      2006 really literal   followed stdLongYear len layout     i 5    layout i 1 i 5      2006    return layout 0   i 1   stdLongYear  layout i 5     return layout 0 i   stdUnderDay  layout i 2     case  3   return layout 0 i   stdHour12  layout i 1   case  4   return layout 0 i   stdMinute  layout i 1   case  5   return layout 0 i   stdSecond  layout i 1   case  P      PM len layout     i 2    layout i 1      M    return layout 0 i   stdPM  layout i 2     case  p      pm len layout     i 2    layout i 1      m    return layout 0 i   stdpm  layout i 2     case          070000   07 00 00   0700   07 00   07 len layout     i 7    layout i i 7       070000    return layout 0 i   stdNumSecondsTz  layout i 7     len layout     i 9    layout i i 9       07 00 00    return layout 0 i   stdNumColonSecondsTZ  layout i 9     len layout     i 5    layout i i 5       0700    return layout 0 i   stdNumTZ  layout i 5     len layout     i 6    layout i i 6       07 00    return layout 0 i   stdNumColonTZ  layout i 6     len layout     i 3    layout i i 3       07    return layout 0 i   stdNumShortTZ  layout i 3     case  Z      Z070000  Z07 00 00  Z0700  Z07 00  len layout     i 7    layout i i 7      Z070000    return layout 0 i   stdISO8601SecondsTZ  layout i 7     len layout     i 9    layout i i 9      Z07 00 00    return layout 0 i   stdISO8601ColonSecondsTZ  layout i 9     len layout     i 5    layout i i 5      Z0700    return layout 0 i   stdISO8601TZ  layout i 5     len layout     i 6    layout i i 6      Z07 00    return layout 0 i   stdISO8601ColonTZ  layout i 6     len layout     i 3    layout i i 3      Z07    return layout 0 i   stdISO8601ShortTZ  layout i 3     case          000  999   repeated digits fractional seconds  i 1   len layout      layout i 1      0     layout i 1      ",
        "objectID": "post/神奇的2006-01-02-15-04-05",
        "date": "2019-02-13T16:58:24.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "生产者的同步异步模式",
        "uri": "post/生产者的同异步模式",
        "content": "DefaultMQProducer              DefaultMQProducer                                 DefaultMQProducer      GroupName NameServer                  Message     Producer    package main import    context   fmt   os   strconv   github com apache rocketmq client go v2   github com apache rocketmq client go v2 primitive   github com apache rocketmq client go v2 producer       Package main implements simple producer send message  func main     p  _    rocketmq NewProducer  producer WithNameServer   string  127 0 0 1 9876     producer WithRetry 2     err    p Start   err    nil   fmt Printf  start producer error   s   err Error    os Exit 1    topic     test     0    10  i     msg     primitive Message  Topic  topic  Body    byte  Hello RocketMQ Go Client      strconv Itoa i      res  err    p SendSync context Background    msg  err    nil   fmt Printf  send message error   s n   err    else   fmt Printf  send message success  result  s n   res String        err   p Shutdown   err    nil   fmt Printf  shutdown producer error   s   err Error              package main import    context   fmt   os   sync   github com apache rocketmq client go v2   github com apache rocketmq client go v2 primitive   github com apache rocketmq client go v2 producer       Package main implements async producer send message  func main     p  _    rocketmq NewProducer  producer WithNameServer   string  127 0 0 1 9876     producer WithRetry 2   err    p Start   err    nil   fmt Printf  start producer error   s   err Error    os Exit 1    var wg sync WaitGroup    0    10  i     wg Add 1  err    p SendAsync context Background    func ctx context Context  result  primitive SendResult  e error    e    nil   fmt Printf  receive message error   s n   err    else   fmt Printf  send message success  result  s n   result String      wg Done      primitive NewMessage  test     byte  Hello RocketMQ Go Client      err    nil   fmt Printf  send message error   s n   err      wg Wait   err   p Shutdown   err    nil   fmt Printf  shutdown producer error   s   err Error                                        2                            FLUSHDISK TIMEOUT FLUSHSLAVETIMEOUT SLAVE NOT AVAILABLE SENDOK                              FLUSH DISKTIMEOUT                   Broker         SYNCFLUSH          FLUSHSLAVETIMEOUT            Broker    SYNC_MASTER                   SLAVENOTAVAILABLE            FLUSHSLAVETIMEOUT              Broker    SYNC_MASTER           Slave Broker  SENDOK                                          Slave      Slave                                                           SENDOK    TAG package main import    context   fmt   os   github com apache rocketmq client go v2   github com apache rocketmq client go v2 primitive   github com apache rocketmq client go v2 producer    func main     p  _    rocketmq NewProducer  producer WithNameServer   string  127 0 0 1 9876     producer WithRetry 2     err    p Start   err    nil   fmt Printf  start producer error   s   err Error    os Exit 1    tags      string  TagA    TagB    TagC      0    3  i     tag    tags i 3  msg    primitive NewMessage  test     byte  Hello RocketMQ Go Client     msg WithTag tag  res  err    p SendSync context Background    msg  err    nil   fmt Printf  send message error   s n   err    else   fmt Printf  send message success  result  s n   res String        err   p Shutdown   err    nil   fmt Printf  shutdown producer error   s   err Error          MessageQueue   Topic    MessageQueue     Producer        Producer      MessageQueue     Consumer                          MessageQueue                     MessageQueue    Consumer                         MessageQueue                  MessageQueue          producer WithQueueSelector",
        "objectID": "post/生产者的同异步模式",
        "date": "2020-04-21T00:25:16.000Z",
        "tags": [
            "rocketmq"
        ],
        "categories": [
            "rocketmq"
        ]
    },
    {
        "title": "实现位运算求两个数的平均值",
        "uri": "post/实现位运算求两个数的平均值",
        "content": "",
        "objectID": "post/实现位运算求两个数的平均值",
        "date": "2017-09-05T12:46:38.000Z",
        "tags": [
            "Bit Manipulation"
        ],
        "categories": [
            "解题报告 "
        ]
    },
    {
        "title": "使用互斥锁、条件变量实现读写锁 ",
        "uri": "post/使用互斥锁、条件变量实现读写锁",
        "content": "mutex                                                                                    trylock         typedef struct   pthreadmutext rw_mutex                 pthreadcondt rw_condreaders               pthreadcondt rw_condwriters               int rw_waitreaders               int rw_waitwriters               int rw_refcount                 1          pthreadrwlockt    0          0            int pthreadrwlockrdlock pthreadrwlockt  rw           int result              pthreadmutexlock  rw  rw_mutex                                                         while rw  rwrefcountrwwaitwriters 0    rw  rw_waitreaders    result pthreadcondwait  rw  rwcondreaders  rw  rwmutex            rw  rw_waitreaders    if result  0  break    if result  0  rw  rw_refcount                    pthreadmutexunlock  rw  rw_mutex   return  result     int pthreadrwlockwrlock pthreadrwlockt  rw           int result              pthreadmutexlock  rw  rw_mutex                while rw  rw_refcount  0    rw  rw_waitwriters    result pthreadcondwait  rw  rwcondwriters  rw  rwmutex            rw  rw_waitwriters    if result  0  break    if result  0  rw  rw_refcount  1            pthreadmutexunlock  rw  rw_mutex   return  result     int pthreadrwlockunlock pthreadrwlockt  rw                int result  pthreadmutexlock  rw  rw_mutex   if rw  refcount 0  rw  refcount    else if rw  refcount   1  rw  refcount 0  else printf  rw  refcount  d n  rw  refcount                                         if rw  rw_waitwriters 0         if rw  rw_waitwriters 0  rw  refcount  0  if rw  refcount  0  result pthreadcondsignal  rw  rw_condwriters     else if rw  rw_waitreaders 0  result pthreadcondsignal  rw  rw_condreaders   pthreadmutexunlock rw  rw_mutex   return result        if rw  rw_waitwriters 0  rw  refcount  0                                                                                          if rw  rw_waitwriters 0  rw  refcount  0                                                                       else if",
        "objectID": "post/使用互斥锁、条件变量实现读写锁",
        "date": "2017-07-20T17:16:29.000Z",
        "categories": [
            "Linux编程"
        ]
    },
    {
        "title": "使用模式构建",
        "uri": "post/使用模式构建",
        "content": "MongoDB                  MongoDB             schema                                                                                                                 MongoDB         schema     MongoDB               MongoDB                                                                MongoDB                   Schema Design Patterns                                            patterns       schema            building blocks                           MongoDB                                                                                                                                                                                         The Polymorphic Pattern                                                                                                                                                                                                                                                                                                                                                                                                     join                                                                                          Martina Navratilova                                                                                                                                                                                                                                                                                                                                                     SQL                 Metlife         MongoDB                                                                           360                                     MongoDB                                                                                                                                                                                                                                                                        Attribute Pattern        The Attribute Pattern      MongoDB                                                                                                                                                                                                                                                                                                                                                                 title   Star Wars   director   George Lucas       release_US  ISODate  1977 05 20T01 00 00 01 00    release_France  ISODate  1977 10 19T01 00 00 01 00    release_Italy  ISODate  1977 10 20T01 00 00 01 00    release_UK  ISODate  1977 12 27T01 00 00 01 00                                                       release_US  1   release_France  1   release_Italy  1                                                           title   Star Wars   director   George Lucas     releases      location   USA   date  ISODate  1977 05 20T01 00 00 01 00        location   France   date  ISODate  1977 10 19T01 00 00 01 00        location   Italy   date  ISODate  1977 10 20T01 00 00 01 00        location   UK   date  ISODate  1977 12 27T01 00 00 01 00                                                releases location   1   releases date   1                                                                                        non deterministic naming               qualifiers                                      specs       k   volume   v   500   u   ml       k   volume   v   12   u   ounces                   k   v           u                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Bucket Pattern       The Bucket Pattern            IOT                                                                                                                                                                                                            sensor_id  12345  timestamp  ISODate  2019 01 31T10 00 00 000Z    temperature  40     sensor_id  12345  timestamp  ISODate  2019 01 31T10 01 00 000Z    temperature  40     sensor_id  12345  timestamp  ISODate  2019 01 31T10 02 00 000Z    temperature  41                                                      sensor_id timestamp                                                                                                                                                                                 sensor_id  12345  start_date  ISODate  2019 01 31T10 00 00 000Z    end_date  ISODate  2019 01 31T10 59 59 000Z    measurements      timestamp  ISODate  2019 01 31T10 00 00 000Z    temperature  40      timestamp  ISODate  2019 01 31T10 01 00 000Z    temperature  40        timestamp  ISODate  2019 01 31T10 42 00 000Z    temperature  42      transaction_count  42  sum_temperature  2413                             ",
        "objectID": "post/使用模式构建",
        "date": "2020-03-28T15:33:58.000Z",
        "tags": [
            "MongoDB"
        ],
        "categories": [
            "MongoDB"
        ]
    },
    {
        "title": "使用goconvey简化BDD单元测试",
        "uri": "post/使用goconvey简化BDD单元测试",
        "content": "GoConvey   GoConvey     Golang                                     Web       Golang               GoConvey                              GoConvey                                         GoConvey                                               StringSliceEqual                         false           nil      nil    false                               false      true                   func StringSliceEqual a  b   string  bool   len a     len b    return false    a    nil      b    nil    return false   i  v    range   v    b i    return false     return true                  nil      nil    false               a    nil      b    nil    return false          a b    string     string nil                0                                  import    testing     github com smartystreets goconvey convey    func TestStringSliceEqual t  testing T    Convey  TestStringSliceEqual return true when    nil    b    nil   t  func          string  hello    goconvey   b      string  hello    goconvey   So StringSliceEqual a  b   ShouldBeTrue         GoConvey    Golang              go test  v                GOPATH src infra alg      go test  v               RUN TestStringSliceEqual TestStringSliceEqual return true when    nil    b    nil   1 total assertion     PASS  TestStringSliceEqual  0 00s  PASS ok infra alg 0 006s                   import goconvey                               Convey So        convey                              Test             testing T           Convey               string                          testing T                                  Convey                So                                                    ShouldBeTrue                    ShouldEqual                         import    testing     github com smartystreets goconvey convey    func TestStringSliceEqual t  testing T    Convey  TestStringSliceEqual return true when    nil    b    nil   t  func          string  hello    goconvey   b      string  hello    goconvey   So StringSliceEqual a  b   ShouldBeFalse                    RUN TestStringSliceEqual TestStringSliceEqual return true when    nil    b    nil   Failures   Users zhangxiaolong Desktop D go workspace src infra alg slice_test go Line 45  Expected  false Actual  true 1 total assertion     FAIL  TestStringSliceEqual  0 00s  FAIL exit status 1 FAIL infra alg 0 006s      3       import    testing     github com smartystreets goconvey convey    func TestStringSliceEqual t  testing T    Convey  TestStringSliceEqual return true when    nil    b    nil   t  func          string  hello    goconvey   b      string  hello    goconvey   So StringSliceEqual a  b   ShouldBeTrue     Convey  TestStringSliceEqual return true when    nil    b    nil   t  func     So StringSliceEqual nil  nil   ShouldBeTrue     Convey  TestStringSliceEqual return false when    nil    b    nil   t  func          string nil  b      string   So StringSliceEqual a  b   ShouldBeFalse     Convey  TestStringSliceEqual return false when    nil    b    nil   t  func          string  hello    world   b      string  hello    goconvey   So StringSliceEqual a  b   ShouldBeFalse                       Convey                                     Convey                    RUN TestStringSliceEqual TestStringSliceEqual return true when    nil    b    nil   1 total assertion TestStringSliceEqual return true when    nil    b    nil   2 total assertions TestStringSliceEqual return false when    nil    b    nil   3 total assertions TestStringSliceEqual return false when    nil    b    nil   4 total assertions     PASS  TestStringSliceEqual  0 00s  PASS ok infra alg 0 006s Convey      Convey                                   Convey     testing T     t                           import    testing     github com smartystreets goconvey convey    func TestStringSliceEqual t  testing T    Convey  TestStringSliceEqual   t  func     Convey  should return true when    nil    b    nil   func          string  hello    goconvey   b      string  hello    goconvey   So StringSliceEqual a  b   ShouldBeTrue     Convey  should return true when    nil    b    nil   func     So StringSliceEqual nil  nil   ShouldBeTrue     Convey  should return false when    nil    b    nil   func          string nil  b      string   So StringSliceEqual a  b   ShouldBeFalse     Convey  should return false when    nil    b    nil   func          string  hello    world   b      string  hello    goconvey   So StringSliceEqual a  b   ShouldBeFalse                       RUN TestStringSliceEqual TestStringSliceEqual return true when    nil    b    nil   return true when    nil    b    nil   return false when    nil    b    nil   return false when    nil    b    nil   4 total assertions     PASS  TestStringSliceEqual  0 00s  PASS ok infra alg 0 006s    Convey          Convey                                               Web    GoConvey                         Web                 GoConvey  Web                    goconvey   GOPATH bin goconvey                   Web                                                                                    Skip                       GoConvey   Convey So Skip    Sk",
        "objectID": "post/使用goconvey简化BDD单元测试",
        "date": "2020-01-05T22:11:30.000Z",
        "tags": [
            "Go",
            "goconvey"
        ],
        "categories": [
            "Go测试"
        ]
    },
    {
        "title": "使用testify简化TDD测试",
        "uri": "post/使用testify简化TDD测试",
        "content": "testify       Easy assertions Mocking Testing suite interfaces functions assert  assert                   Go                                                         package yours import    testing   github com stretchr testify assert    func TestSomething t  testing T       assert equality assert Equal t  123  123   they equal      assert inequality assert NotEqual t  123  456   they not equal      assert nil  good errors  assert Nil t  object     assert not nil  good when expect something  assert NotNil t  object       know object isn t nil  safe    further assertions without causing errors assert Equal t   Something   object Value              testing T                  go test                       bool                                                   package yours import    testing   github com stretchr testify assert    func TestSomething t  testing T    assert    assert New t     assert equality assert Equal 123  123   they equal      assert inequality assert NotEqual 123  456   they not equal      assert nil  good errors  assert Nil object     assert not nil  good when expect something  assert NotNil object       know object isn t nil  safe    further assertions without causing errors assert Equal  Something   object Value      require require    assert                  require        case    assert      case    case                         t FailNow  FailNow              runtime Goexit       goroutine                                                goroutine   FailNow                goroutine   FailNow    FailNow      goroutine           assert  package main import    testing   github com stretchr testify assert    func TestCase1 t  testing T    name     Bob  age    10 assert Equal t   bob   name  assert Equal t  20  age          go test     FAIL  TestCase1  0 00s  assertions go 254  Error Trace  main_test go 13 Error  Not equal  expected   bob  actual    Bob  Test  TestCase1 assertions go 254  Error Trace  main_test go 14 Error  Not equal  expected  20 actual   10 Test  TestCase1 FAIL exit status 1 FAIL testUT 0 009s             assert       assert Equal             require  package main import    testing   github com stretchr testify require    func TestCase1 t  testing T    name     Bob  age    10 require Equal t   bob   name  require Equal t  20  age          go test     FAIL  TestCase1  0 00s  assertions go 254  Error Trace  main_test go 12 Error  Not equal  expected   bob  actual    Bob  Test  TestCase1 FAIL exit status 1 FAIL testUT 0 007s              require          require Equal            require Equal         mock testify                                                                                                                                                                                                        testify                       mocks                                                ChargeCustomer               Message Service       SMS                    package main import    fmt       MessageService            type MessageService interface   SendChargeNotification int  error      SMSService   MessageService     type SMSService struct      MyService    MessageService       type MyService struct   messageService MessageService      SendChargeNotification    SMS                              func  sms SMSService  SendChargeNotification value int  error   fmt Println  Sending Production Charge Notification   return nil      ChargeCustomer                                                   func  a MyService  ChargeCustomer value int  error   a messageService SendChargeNotification value  fmt Printf  Charging Customer value  d n   value  return nil          Production     func main     fmt Println  Hello World   smsService    SMSService   myService    MyService smsService  myService ChargeCustomer 100                                          struct     smsServiceMock          SMSService     mock Mock                     SendChargeNotification                        nil             TestChargeCustomer                    smsServiceMock     SendChargeNotification             package main import    fmt   testing   github com stretchr testify mock       smsServiceMock type smsServiceMock struct   mock Mock            smsService    func  m  smsServiceMock  SendChargeNotification value int  bool   fmt Println  Mocked charge notification function   fmt Printf  Value passed in   d n   value                            args    m Called value                               SMS Service Notification       return args Bool 0             MessageService                               func  m  smsServiceMock  DummyFunc     fmt Println  Dummy        TestChargeCustomer                       SMSService mock func TestChargeCustomer t  testing T    smsService    new smsServiceMock              100     SendChargeNotification                                 true smsService On  SendChargeNotification   100  Return true                     myService    MyService smsService            myService ChargeCustomer 100             myService ChargeCustomer          SendChargeNotification    smsService AssertExpectations t         ",
        "objectID": "post/使用testify简化TDD测试",
        "date": "2020-01-05T16:43:26.000Z",
        "tags": [
            "Go",
            "testify"
        ],
        "categories": [
            "Go测试"
        ]
    },
    {
        "title": "事务的隔离机制解析",
        "uri": "post/事务的隔离机制解析",
        "content": "T1 T2          T2        T1        T1                       T1        T2        T1                                T1          T2           T1                        b   T1  B 100     T2      B         B 200      T1          B B  200               T1                       T2           T1                             T1                      T2         T1                                       phantom row                      T1                T2        T1             T1           T2                   T2                          11 2 c  T1 C    200  T2  C 200  T1               C    100   T2   C 200                                                                         Read Uncommitted                                                        Read Committed                                                                                                                 nonrepeatable read        Repeatable Read                                                      Phantom Read                                                                     Phantom Rows  InnoDB           MVCC               Serializable                                                                                                                                                             1              SQL                      metadata    sql                           2 MySQL                  InnoDB            SQL                                      sql",
        "objectID": "post/事务的隔离机制解析",
        "date": "2019-09-23T20:49:41.000Z",
        "categories": [
            "架构"
        ]
    },
    {
        "title": "视图详解",
        "uri": "post/视图详解",
        "content": "SQL   CREATE VIEW              CREATE VIEW            WITH CHECK OPTION               SELECT         ORDER BY   DISTINCT                CHECK OPTION       UPDATE INSERT DELETE                                                                                                    SELECT                                                                                                                                                         CREATE VIEW IS_Student SELECT Sno Sname Sage Student Sdept  IS  CHECK OPTION          IS_Student            SELECT                       CREATE VIEW                           SELECT                                     IS_Student       CHECK OPTION                                     Sdept  IS                                                              IS_Student                                                      1                      CREATE VIEW IS_S1 Sno Sname Grade  SELECT Student Sno Sname Grade Student SC Sdept  IS  Student Sno SC Sno SC Cno  1       IS_S1         Student  SC     Sno                                                                                        1       90           CREATE VIEW S2 SELECT Sno Sname Grade IS S1 Grade  90       ISS2       ISS1                                                                                                                                                                         CREATE VIEW BT_S Sno Sname Sbirth  SELECT Sno Sname 2014 Sage Student      BT_S                                         GROUP BY                                           CREATE VIEW S_G Sno Gavg  SELECT Sno AVG Grade  SC GROUP Sno    AS   SELECT                          CREATE VIEW         SG          SG                      DROP VIEW  CASCADE                                                            DROP VIEW          BTS   ISS1  DROP VIEW BT_S         DROP VIEW IS_S1                 ISS1        ISS2                                 DROP VIEW IS_S1 CASCADE                                                                                                                                                                view resolution                     20      SELECT Sno Sage IS_Student Sage",
        "objectID": "post/视图详解",
        "date": "2017-08-15T13:44:26.000Z",
        "categories": [
            "MySQL"
        ]
    },
    {
        "title": "守护进程详解",
        "uri": "post/守护进程详解",
        "content": "fork     if pid   0  exit 0               init                 setsid               chdir              umask 0           for int   0    65535    i  close i",
        "objectID": "post/守护进程详解",
        "date": "2017-09-10T22:36:38.000Z",
        "tags": null
    },
    {
        "title": "输入输出重定向",
        "uri": "post/输入输出重定向",
        "content": "Linux                         Linux       file descriptor                                                                  bash shell             0 1 2   STDIN STDIN       shell                      shell STDIN                                                 STDERR shell     STDERR             STDERR       shell        shell shell                                    STDERR       STDOUT                                                             STDERR     STDOUT                        STDERR        2                                                        ls  al badfile 2  test4                                                     shell                                                                                                 ls  al test test2 test3 badtest 2  test6 1  test7                                                                                STDERR STDOUT                 bash shell                                 STDOUT STDERR                                                                                                                STDERR                           STDERR                                     echo  This error message    2        STDERR                      STDOUT           Linux  STDERR  STDOUT                  STDERR        STDERR               test8 2  test9 normal output   cat test9 error                               echo                  exec    shell                     exec 1 testout exec        shell  STDOUT                 STDOUT                                      STDOUT STDERR       STDIN            exec      STDIN    Linux         exec 0test13out echo  and stored file    3      exec        3               echo                   STDOUT             3   echo                                                                          exec                exec 3  test13out          test13out                                                             STDOUT                                  STDOUT                     exec 3  1 exec 1 test14out exec 1  3            3         1         STDOUT               3                 exec   STDOUT       shell       STDOUT                        3    STDOUT                               3               STDOUT           STDOUT                      STDOUT          3                      STDOUT                                                                     STDIN                              STDIN            exec 6 testfile read line  3   cat testfile first line  second line  third line      test16 Read  first line    cat testfile first line  test line ine  third line          exec        3     testfile                            read                     STDOUT        echo                                                    testfile                        testfile                                                         read                                    echo                                                                                  exec 3               3                                         shell                                               shell                                                  lsof       Linux                                       Linux            Linux                              Linux     Fedora  lsof     usr sbin                                  usr sbin lsof                   Linux                                                               lsof          p  d          ID PID                              PID             shell       PID   a                   AND       usr sbin lsof  a  p     d 0 1 2 lsof       7      STDIN STDOUT STDERR              STDIN STDOUT STDERR                               3               STDIN      STDOUT                                                          16                      shell                                                          STDERR        null        null                    shell   null                       Linux   null         dev null                          ls  al    dev null                                        dev null          dev null                                               cat  dev null   testfile   testfile                                                                                                              tee      tee          T       STDIN                STDOUT     tee            tee filename   tee      STDIN                           date   tee testfile                   a      date   tee  a testfile                                                                                            shell             log                           bin baah cat log txt LOG PILE HEADER test log file Functions System statistics EOF  cat  log txt    EOF              stdin   log_txt             cat log txt LOG FILE HBADBR test log file Function  System statistics       shell   0       1       2                         1     2  1                          file                           file         grep da   1  2 rm  f   find    name core      dev null                                 file n  m                                       file                n  m  ",
        "objectID": "post/输入输出重定向",
        "date": "2017-08-10T14:08:15.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "树的叶子节点",
        "uri": "post/树的叶子节点",
        "content": "LeetCode 404  Sum Left Leaves Find sum left leaves given binary tree  Example  3     9 20     15 7 two left leaves binary tree  values 9 15 respectively  Return 24                      1          2              Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  int sumOfLeftLeaves TreeNode  root  bool isLeft   false    if  root  return 0   isLeft    root  left     root  right   return root  val  return sumOfLeftLeaves root  left  true    sumOfLeftLeaves root  right  false",
        "objectID": "post/树的叶子节点",
        "date": "2017-06-24T15:38:08.000Z",
        "tags": [
            "Tree",
            "DFS"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "数独",
        "uri": "post/数独",
        "content": "LeetCode 36  Valid Sudoku Sudoku board partially filled  empty cells filled character                                                  map                  3            class Solution   public  bool isValidSudoku vector    board        9 9 9  for int   0  m1    check i_th row unorderedmap m2    check ith column unorderedmap m3    check ith subgrid for int j   0  j    board     int   0     board  int x  int y    int i  j   i   0    9  i          y    i    x    boardi    boardx  return false   j   0  j   9  j          x    j    y    boardx    boardx  return false       x y         9     i   3    x   3     3    x   3   1   i            j   3    y   3   j   3    y   3   1   j             i    x    j    y     boardi    boardx  return false  return true",
        "objectID": "post/数独",
        "date": "2017-06-24T22:11:15.000Z",
        "tags": [
            "Backtracking"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "数据结构:deque、stack、queue",
        "uri": "post/数据结构-deque、stack、queue",
        "content": "deque    vector             deque                                                     vector                                         deque vector         deque                            deque       capacity                                            deque              reserve       deque   RamdonAccessIterator                     vector                                      vector  deque   deque                 deque        vector    vector      STL sort        deque      deque                      deque                             deque        deque                                                                               deque       map       STL map            map                         node                                  deque        STL               0     512bytes         deque                              operators   operator                                                                                                deque                 deque             m          start  finish                                                         map       map                     map  deque                                                deque  deque ideq 20 9          32bytes      20             9                                       for int i 0",
        "objectID": "post/数据结构-deque、stack、queue",
        "date": "2017-09-02T21:03:59.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "数据结构:list、forward_list",
        "uri": "post/数据结构-list、forward-list",
        "content": "list       vector        list                                         list                                         list            list   list                     STL list    node     template struct list node   typedef void  void_pointer  voidpointer prev       void        listnode voidpointer next  T data                   list                                                   pUsh_back         list           insert    void push_back const T  x    insert end    x     list     list     vector                                  list          list                                 list                                                                                STLlist        doublelinked list                    list    Bidirectional Iterators  list             insert       splice         list       forward_list forward_list        forward_list list                   ForwardIterator             Bidirectionallterator    forward_list                                               forward_list list                   insert     erase     splice                                                            STL                                       forward_list                                        forwardlist                    insert   erase                forward list   list          forward list      insert after     erase _after                     forward list   push back        push _front",
        "objectID": "post/数据结构-list、forward-list",
        "date": "2017-09-02T21:04:17.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "数据结构:set、multiset、map、multimap",
        "uri": "post/数据结构-set、multiset、map、multimap",
        "content": "set et                        set     map           m m     set                 set                     set      set           set            set              set         set        set iterators   constant iterators  set   list                       insert        erase                                                    RB tree                           STLset  RB tree         set           RB tree             set           RB tree         multiset multiset        set                                    RB tree  insertegual     insertunique    map map                        map       pair        value     key  pair                     map                      map      map                           map        map            map          map                       map         map           map iterators     constant iterators       mutable iterators  map   list                       insert         erase                                                     RB tree                           STL map  RB tree        map           RB tree             map           RB tree         multimap multimap        map                                    RB tree  insertegual     insertunique",
        "objectID": "post/数据结构-set、multiset、map、multimap",
        "date": "2017-09-03T05:21:28.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "数据结构:unordered_map、unordered_set",
        "uri": "post/数据结构-unordered-map、unordered-set",
        "content": "hashtable      bucket    linked list     STL list slist          hashtable node   buckets      vector                    separate chaining                STL                 28                                hash table vector linked list                                                 50          STL   53   buckets vector    53 buckets   buckets         hash table       0         6    53 55 2 108 59 63   hashtable   5 26       hashtable     hast table              buckets vector                                                        list         next                      list          bucket           list           hashtable           operator      hashtable              reverse iterator   unordered_set unorderedset  hashtable        unorderedset         hashtable            unordered_set           hashtable           set                       RB tree  hash table               RB tree        hashtable             set           unorderedset   set     map              set                     unorderedset        unordered_set       set      unordered_map unorderedmap  hashtable        unorderedmap         hashtable            unordered_map           hashtable           map                           RB tree  hashtable               RB tree        hashtable             map           unordered_map    map                             unorderedmap       unorderedmap       map",
        "objectID": "post/数据结构-unordered-map、unordered-set",
        "date": "2017-09-03T05:21:46.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "数据结构:vector、priority_queue",
        "uri": "post/数据结构-vector、priority-queue",
        "content": "vector    vector             array                         array                                                                                      vector                                     vector                                                     array           vector              vector                           start finish                             endofstorage                     template class T  class Alloc   alloc  class vector       protected  iterator start               iterator finish               iterator endofstorage                                    vector                                     capacity             vector                                       vector            push_baCk         vector                                            finish  vector                                                                                                                                                  vector                    vector                                vector     vector                                  vector                vector              operator   operator    operator    operator   operator   operator  operator   operator             vector                       vector               vector    Random Access Iterators  priority_queue    priority_queue                                                                         priorityqueue     max heap   max heap     priority queue                      max heap                                                array         array  0                                   array i           array 2i          array 2i i          i 2                                             array   heap                               heap  array              heap            vector  array        priority_queue      priorityqueue                  queue                       priorityqueue",
        "objectID": "post/数据结构-vector、priority-queue",
        "date": "2017-09-02T21:03:25.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "数据库的规范化",
        "uri": "post/数据库的规范化",
        "content": "primary key                       prime attribute                       nonprime attribute       non key attribute                                     all key       R       X  R    X             X R    foreign key                                                             1NF                             1NF 1NF     R                                  2NF                             2NF    6 4      S L C Sno  Sdept  Sloc Cno  Grade    Sloe                       S L C    Sno  Cno                 Sdept Sloc              S L C  Sno  Sdept Sloc Cno Grade     2NF                      S L C           SC Sno  Cno  Grade   S L Sno  Sdept  Sloc       SC    Sno Cno      S L   Sno                       3NF                      2    3NF      3NF     2NF      S L Sno  Sdept  Sloe                3NF  BCNF                         BCNF              BCNF                                                                                    STJ S  T  J   S     T     J                                                               S J   S T        STJ 3NF                        STJ  BCNF     T       T                                                                                       T   C    B                                                                                                                                                                                                                                   Teaching                                       C                                   T                  B          T      C  4NF 4NF                                4NF                                 4NF    BCNF",
        "objectID": "post/数据库的规范化",
        "date": "2017-08-15T15:59:45.000Z",
        "categories": [
            "MySQL"
        ]
    },
    {
        "title": "数据库完整性浅析",
        "uri": "post/数据库完整性浅析",
        "content": "integrity           correctness      compat  ability                                                                                                                                                                                                                                                      CREATE TABLE  PRIMARY KEY                                                                               Student   Sno        CREATE TABLE Student  Sno CHAR 9  PRIMARY KEY            Sname CHAR 20  NOT NULL  Ssex CHAR 2   Sage SMALLINT  Sdept CHAR 20        CREATE TABLE Student  Sno CHAR 9   Sname CHAR 20  NOT NULL  Ssex CHAR 2   Sage SMALLINT  Sdept CHAR 20   PRIMARY KEY  Sno                SC   Sno Cno         CREATE TABLE SC  Sno CHAR 9  NOT NULL  Cno CHAR 4  NOT NULL  Grade SMALLINT  PRIMARY KEY  Sno Cno                          PRIMARY KEY                                                                                                                                          CREATE TABLE  FOREIGN KEY             REFERENCES                       SC                       Sno  Cno      Sno Cno      Student     Course      CREATE TABLE SC  Sno CHAR 9  NOT NULL  Cno CHAR 4  NOT NULL  Grade SMALLINT  PRIMARY KEY  Sno  Cno   FOREIGN KEY  Sno  REFERENCES Student Sno   FOREIGN KEY  Cno  REFERENCES Course Cno                                                                                                                                                       1     NOACTION                            2     CASCADE                                                      3                                                                                                                                                                                                                                  1              CREATE TABLE                                            NOT NULL        UNIQUE                   CHECK      1            SC     Sno Cno Grade          CREATE TABLE SC  Sno CHAR 9  NOT NULL  Cno CHAR 4  NOT NULL  Grade SMALLINT NOT NULL      2              DEPT       Dname          Deptno      CREATE TABLE DEPT  Deptno NUMERIC 2   Dname CHAR 9  UNIQUE NOT NULL      Dname              Location CHAR IO   PRIMARY KEY  Deptoo   3  CHECK                Student  Ssex           CREATE TABLE Student  Sno CHAR 9  PRIMARY KEY  Sname CHAR 8  NOT NULL  Ssex CHAR 2  CHECK  Ssex             Sage SMALLINT  Sdept CHAR 20     2                                                                                     1                            CREATE TABLE      CHECK                                                                              Ms     CREATE TABLE Student  Sno CHAR 9   Sname CHAR 8  NOT NULL  Ssex CHAR 2   Sage SMALLINT Sdept CHAR 20   PRIMARY KEY  Sno   CHECK  Ssex     Sname NOT  Ms               Sname Ssex              2                                                                                       SQL  CREATETABLE               CONSTRAINT                                     1            CONSTRAINT                     WHERE                      60       CREATE ASSERTION ASSESCCNUM1 CHECK  60  ALL   SELECT count                    count   SC       group by SQL    GROUP cno     2            DROP ASSERTION",
        "objectID": "post/数据库完整性浅析",
        "date": "2017-08-15T15:55:24.000Z",
        "categories": [
            "MySQL"
        ]
    },
    {
        "title": "math库数值处理函数总结",
        "uri": "post/数值处理函数总结",
        "content": "ceil   double ceil  double x   float ceil  float x   long double ceil  long double x   double ceil  T x      additional overloads integral types            x         include    printf     include    ceil    int main      printf    ceil 2 3   1f n   ceil 2 3     printf    ceil 3 8   1f n   ceil 3 8     printf    ceil  2 3   1f n   ceil  2 3     printf    ceil  3 8   1f n   ceil  3 8     return 0        floor double floor  double x   float floor  float x   long double floor  long double x   double floor  T x      additional overloads integral types            x        include    printf     include    floor    int main      printf    floor 2 3   1lf n   floor  2 3     printf    floor 3 8   1lf n   floor  3 8     printf    floor  2 3   1lf n   floor   2 3     printf    floor  3 8   1lf n   floor   3 8     return 0       abs labs llabs fabs abs int abs   int n   long int abs   long int n   long long int abs  long long int n     n          include    printf     include    abs    int main      int n m  n abs 23   m abs  11   printf   n  d n  n   printf   m  d n  m   return 0    labs long int labs  long int n        include    printf     include    labs    int main      long int n m  n labs 65537L   m labs  100000L   printf   n  ld n  n   printf   m  ld n  m   return 0    llabs long long int llabs  long long int n        include    printf     include    llabs    int main      long long int n m  n llabs 31558149LL   m llabs  100000000LL   printf   n  lld n  n   printf   m  lld n  m   return 0    fabs double fabs  double x   float fabs  float x   long double fabs  long double x   double fabs  T x      additional overloads integral types      include    printf     include    fabs    int main      printf   The absolute value 3 1416  f n   fabs  3 1416     printf   The absolute value  10 6  f n   fabs   10 6     return 0    sqrt double sqrt  double x   float sqrt  float x   long double sqrt  long double x   double sqrt  T x      additional overloads integral types         x             sqrt example     include    printf     include    sqrt    int main      double param  result  param   1024 0  result   sqrt  param   printf   sqrt  f     f n   param  result    return 0",
        "objectID": "post/数值处理函数总结",
        "date": "2017-07-23T19:57:02.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "数字翻译",
        "uri": "post/数字翻译",
        "content": "LeetCode 12  Integer Roman Given integer  convert roman numeral  Input guaranteed within range 1 3999                                     class Solution   public  string intToRoman int num    string M           M    MM    MMM            string C           C    CC    CCC    CD    D    DC    DCC    DCCC    CM            string X           X    XX    XXX    XL    L    LX    LXX    LXXX    XC            string I           I    II    III    IV    V    VI    VII    VIII    IX            return M num 1000    C  num 1000  100    X  num 100  10    I num 10        LeetCode 13  Roman Integer Given roman numeral  convert integer  Input guaranteed within range 1 3999      IV   5   1     1    5   4 VI   5   1   5   1   6 I V     I V    I        V I     V I    V                                                                    class Solution   public  int romanToInt string s    unordered_map T        I    1       V    5       X    10       L    50       C    100       D    500       M    1000      int sum   T s back      int   s length     2     0    i                   T s i    One Hundred Twenty Three  12345     Twelve Thousand Three Hundred Forty Five  1234567     One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven             3          B M T H            20                   3     B M T H                               20                               0        class Solution   public  string digits 20          One    Two    Three    Four    Five    Six    Seven    Eight    Nine    Ten    Eleven    Twelve    Thirteen    Fourteen    Fifteen    Sixteen    Seventeen    Eighteen    Nineteen    string tens 10          Ten    Twenty    Thirty    Forty    Fifty    Sixty    Seventy    Eighty    Ninety    string int2string int n              n    1000000000    return int2string n   1000000000      Billion    int2string n   1000000000     else  n    1000000    return int2string n   1000000      Million    int2string n   1000000     else  n    1000    return int2string n   1000      Thousand    int2string n   1000     else  n    100    return int2string n   100      Hundred    int2string n   100     else  n    20    return       tens n   10    int2string n   10     else  n    1    return       digits n     else      0 return         string numberToWords int num     num    0    return  Zero     else   string ret   int2string num   return ret substr 1  ret length     1                                    32   mim   num                                                                             1 9                  num1To9    public static String num1To9 int num     num 9    return       String   names                                                    return names num   1       numlTo9          1 99                   16       116          1016                               10 19                                                                     num1To99   boolean   hasBai                 public static String num1To99 int num  boolean hasBai     num 99    return        num 999    return        num   10    res    num1To99 rest  true     else   res          num1To9 rest     return res         1 9999             num1To9999    public static String num1To9999 int num     num 9999    return        num   100    res    num1To999 rest     else   res          num1To99 rest  false     return res          1 99999999             num1To99999999    public static String num1To99999999 int num     num 99999999    return       int wan   num   10000  int rest   num   10000   wan    0    return num1To9999 rest     String res   num1To9999 wan          rest    0    return res    else    rest words     zero    two    four    six    eight    one    three    five    seven    nine    vector nums    0  2  4  6  8  1  3  5  7  9   vector distinct_char     z    w    u    x    g    o    r    f    v    i    vector counts 26  0   string result  for auto ch   s   counts ch  a             s             for int   0  2    B 3    C     26    Z 27    AA 28    AB           10      26             n 1   A    1       0  class Solution   public  string convertToTitle int n    string ret       while n    ret    char   n 1  26  A     ret  n    n 1  26    return ret       LeetCode 171  Excel Sheet Column Number Related question Excel Sheet Column Title Given column title appear Excel sheet  return its corresponding column number  example     1 B    2 C    3     Z    26 AA    27 AB    28                 1   A  1     0     class Solution   public  int titleToNumber string s    int ret   0  for int   0     4    return result",
        "objectID": "post/数字翻译",
        "date": "2017-06-24T22:12:10.000Z",
        "tags": [
            "Array",
            "Math",
            "String"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "数字字符串转成数字",
        "uri": "post/数字字符串转成数字",
        "content": "LeetCode 7  Reverse Integer Reverse digits integer  Example1  x   123  return 321 Example2  x    123  return  321 click show spoilers  Note  input assumed 32 bit signed integer  function return 0 when reversed integer overflows                 int         2147483647   2147483648                    0  class Solution   public  int reverse int x        x 0     long long res   0      while x    res   res 10   x 10       x    10        return  resINT_MAX    0   res       LeetCode 8  String Integer  atoi  Implement atoi convert string integer  Hint  Carefully consider possible input cases  want challenge  please not below ask yourself possible input cases  Notes  intended problem specified vaguely  ie  no given input specs   responsible gather input requirements front  Update  2015 02 10   signature C   function updated  function signature accepts const char   argument  please click reload button reset code definition                                                                          class Solution   public  int myAtoi string str    int num   0  int sign   1  const int n  str size    int   0   str i             9   break   num   INTMAX   10    num    INTMAX   10    str i     0     INT_MAX   10             return sign     1   INTMIN   INTMAX                 num   num   10   str i     0     return num   sign                                             str                      public static boolean isValid char   chas     chas 0             chas 0   9      return false     chas 0             chas length    1    chas 1      0      return false     chas 0      0     chas length   1    return false     int   1   9     return false      return true    public static int convert String str     str    null    str equals        return 0     not convert   char   chas   str toCharArray      isValid chas     return 0     not convert   boolean posi   chas 0           false   true  int minq   Integer MIN_VALUE   10  int minr   Integer MIN_VALUE   10  int res   0  int cur   0   int   posi   0   1  version2 return 1  version1 num2  return 1      else if num1 true    0 1      true   abc     false   1 a     false   2e10     true  Note  intended problem statement ambiguous  gather requirements front implementing one  Update  2015 02 10   signature C   function updated  function signature accepts const char   argument  please click reload button reset code definition            strtod   bool isNumber  char const  s    char  endptr  strtod  s   endptr    endptr    s  return false      endptr    endptr                   isspace   endptr   return false  return true                                                             1             2                 3                   4                       5       1  2  3  4    e    1  2  3  4                   1     2                      0             0             3 3    0                 0                1              1    1                              1                     2   2                                1            1           4                4                    5                                         2          4    3   0               4                      4           5    5           6   6   5                       7   7            7            6             7    7           8   7                   7    8           8   8          class Solution   public  bool isNumber string s             enum InputType  INVALID          SPACE          SIGN          DIGIT  DOT          EXPONENT           NUM_INPUTS           int transitionTable      1  0  3  1  2   1     next states state 0  1  8   1  1  4  5     next states state 1  1   1   1  4   1   1     next states state 2  1   1   1  1  2   1     next states state 3  1  8   1  4   1  5     next states state 4  1   1  6  7   1   1     next states state 5  1   1   1  7   1   1     next states state 6  1  8   1  7   1   1     next states state 7  1  8   1   1   1   1     next states state 8    int state   0    0   s i       0     InputType inputType   INVALID         isspace s i    inputType   SPACE  else  s i            s i          inputType   SIGN  else  isdigit s i    inputType   DIGIT  else  s i          inputType   DOT  else  s i      e     s i      E   inputType   EXPONENT  state   transitionTablestate         state     1        return false  else i      return state    1    state    4    state    7    state    8",
        "objectID": "post/数字字符串转成数字",
        "date": "2017-06-25T02:27:46.000Z",
        "tags": [
            "String"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "数组和关联数组",
        "uri": "post/数组和关联数组",
        "content": "mytest  one two three four five                                          echo  mytest one                                                                  echo   mytest 2   three                                                    echo   mytest     one two three four five                        echo    array_var     6                   mytest 2  seven     echo   mytest     one two seven four five       unset                                     unset mytest 2      echo   mytest     one two four five     echo   mytest 2     echo   mytest 3   four        unset         2                                            2                           unset                   unset mytest     echo   mytest                        shell             shell                         shell                           bash              BASH_VERSINFO                    gawk                                                                                                                                                                                           var index    element   var     index          element            gawk           capital  Illinois      Springfield  capital  Indiana      Indianapolis  capital  Ohio      Columbus                                                                                                        gawk             for            var array    statements     for              array           var        statements                                                          gawk  BEGIN    var  a     1   var  g     2   var  m     3   var  u     4    test var       print  Index   test     Value   var test          Index  u   Value  4 Index  m   Value  3 Index    Value  1 Index  g   Value  2                                                                                                                   delete array index",
        "objectID": "post/数组和关联数组",
        "date": "2017-09-08T12:14:36.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "数组和指针的区别",
        "uri": "post/数组和指针的区别",
        "content": "1             char a      hello                         a 0     X         char  p    world    p          p 0     X                          str3 str4                          str5 str6                         abc            str5 str6                                      str5  str6                        2              char  p    world  p     sizeof p                   P        C C                                  char a      hello world   char  p   a   32     sizeof a  12    sizeof p  4                                            void Func char a  100     cout",
        "objectID": "post/数组和指针的区别",
        "date": "2017-09-04T17:59:37.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "数组排序之后相邻数的最大差值",
        "uri": "post/数组排序之后相邻数的最大差值",
        "content": "LeetCode 164  Maximum Gap Given unsorted array  find maximum difference successive elements its sorted form  Try solve linear time space  Return 0 array contains less 2 elements  may assume elements array non negative integers fit 32 bit signed integer range                                                                        hash       O n        O n                                          O n                                                                        n    a b          gap       ceiling b a   n 1                       ceiling b a   n 1      gap                      ceiling b a   n 1                                   range 1                                                                         p          q  q min   p max                         class Solution   public  int maximumGap vector  nums    const int size_num   nums size     sizenum maxb sizenum  INTMIN   minb sizenum  INT_MAX                       int   0    size_num  i            int index    nums i    minV    range                  maxb index    max maxb index   nums i    minb index    min minb index   nums i      int maxg    int range  start   maxb 0                int   1    size_num  i       minb i     INTMAX  continue         maxg   max maxg  min_b i    start                        start   max_b i     return max_g",
        "objectID": "post/数组排序之后相邻数的最大差值",
        "date": "2017-06-24T19:52:29.000Z",
        "tags": [
            "Bucket Sort"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "数组中的位置查找",
        "uri": "post/数组中的位置查找",
        "content": "LeetCode 35  Search Insert Position Given sorted array target value  return index target found  not  return index inserted order  may assume no duplicates array  few examples   1 3 5 6   5   2  1 3 5 6   2   1  1 3 5 6   7   4  1 3 5 6   0   0                                                          STL lower_bound          class Solution   public  int searchInsert vector  nums  int target    return distance nums begin   lower_bound nums begin    nums end    target         LeetCode 34  Search Range Given array integers sorted ascending order  find starting ending position given target value  algorithm s runtime complexity order O log n   target not found array  return   1   1   example  Given  5  7  7  8  8  10  target value 8  return  3  4                        lowerbound upperbound 1                           nums l     target                     lower_bound       1  class Solution   public  vector searchRange vector  nums  int target    if nums size    0  return vector    1   1    int l   distance nums begin    lower_bound nums begin    nums end    target    int u   distance nums begin    upper_bound nums begin    nums end    target  1    l  nums size    nums l     target     not found return vector    1   1    else return vector   l  u         LeetCode 278  First Bad Version product manager currently leading team develop new product  Unfortunately  latest version product fails quality check  version developed based previous version  versions bad version bad  Suppose n versions  1  2     n  want find first bad one  causes following ones bad  given API bool isBadVersion version  will return whether version bad  Implement function find first bad version  minimize number calls API                                                  n    1 2   n                            API  bool isBadVersion version                                                     l r                   l r        mid               l r       l  mid      r                               r mid   r mid 1                   l",
        "objectID": "post/数组中的位置查找",
        "date": "2017-06-24T22:11:50.000Z",
        "tags": [
            "STL",
            "Binary Search"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "数组中和为定值的多元组",
        "uri": "post/数组中和为定值的多元组",
        "content": "LeetCode 1  Two Sum Given array integers  return indices two numbers add specific target  may assume input exactly one solution  may not use element twice  Example  Given nums    2  7  11  15   target   9  nums 0    nums 1    2   7   9  return  0  1        map  hash  hash                                           class Solution   public  vector twoSum vector  nums  int target    map m   int   0  twoSum vector  nums  int target    map m   int   0  k    right      else    left    0    arr left   1     arr left     System out println arr left          arr right      left    right          LeetCode 15  3Sum Given array S n integers  elements a  b  c S   b   c   0  Find unique triplets array gives sum zero  Note  solution set not contain duplicate triplets  example  given array S     1  0  1  2   1   4   solution set is      1  0  1     1   1  2                                               2Sum                     class Solution   public  vector  threeSum vector  nums    vector ans  if nums size    0  return ans  sort nums begin    nums end         int n   nums size    for int i 0 itemp  temp push_back nums i    temp push_back nums left    temp push_back nums right    ans push_back temp   while nums left   nums left 1   left            while nums right   nums right 1   right            left       1 left  i         else if  nums i  nums left  nums right  0   right    else left      while nums i   nums i 1   i      return ans       LeetCode 16  3Sum Closest Given array S n integers  find three integers S sum closest given number  target  Return sum three integers  may assume input exactly one solution  example  given array S     1 2 1  4   target   1  sum closest target 2    1   2   1   2                                                class Solution   public  int threeSumClosest vector  nums  int target    int closest   nums 0    nums 1    nums 2          int diff   abs closest   target   sort nums begin    nums end                  int   0  newDiff           diff   newDiff  closest   sum     sum   fourSum vector  num  int target    vector  res  int numlen   num size    if num size    tmpres  for int   0  tmp  tmp push_back num i    tmp push_back num j    tmp push_back num begin    tmp push_back num end    tmpres insert tmp   begin          j    begin    1  else if sum   fourSum vector  num  int target    vector  tmpres  int numlen   num size    if num size   tmp  tmp push_back num i    tmp push_back num j    tmp push_back num begin    tmp push_back num end    tmpres push_back tmp                               while num begin   num begin 1   begin            while num end   num end 1   end            begin     else if sum A 0    B 0    C 0    D 1    1     2      1    2   0  1  1  0  0     A 1    B 1    C 0    D 0    2     1      1    0   0    4                          map   hash       hash       class Solution   public  int fourSumCount vector  A  vector  B  vector  C  vector  D    int res   0  n   A size    unordered_map m1  m2   int   0    n    i     int j   0  j   n    j                     m1 A i    B j      m2 C i    D j         auto   m1  res    a second   m2  a first   return res",
        "objectID": "post/数组中和为定值的多元组",
        "date": "2017-06-25T02:28:52.000Z",
        "tags": [
            "Array"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "数组中两个字符串的最小距离",
        "uri": "post/数组中两个字符串的最小距离",
        "content": "strs         str1 str2    strs str1 str2         str1 str2 null    strs     1  strs   1   3   3   3   2   3   1   str1  l  str2  2     2  strs   CD    str1  CDn str2   ABn    1                strs    last1         str1       last2          str2         str1   i last2       str1        str2           str2   i lastl       str2        str1         min              public static int minDistance String   strs  String str1  String str2     str1    null    str2    null    return  1     str1 equals str2     return 0    int last1    1  int last2    1  int min   Integer MAX_VALUE   int   0     strs length  i       strs i  equals str1     min   Math min min  last2     1   min     last2   last1   i     strs i  equals str2     min   Math min min  last1     1   min     last1   last2   i      return min    Integer MAX_VALUE    1   min                                    0 1           strs                       strs    N              O N 2           O N 2                         O 1              HashMap  record  public Record String   strArr    record   new HashMap     HashMap indexMap   new HashMap     int   0     strArr length  i      String curStr   strArr i   update indexMap  curStr  i   indexMap put curStr  i       private void update HashMap indexMap  String str  int i      record containsKey str     record put str  new HashMap       HashMap strMap   record get str    Entry lastEntry   indexMap entrySet      String key   lastEntry getKey    int index   lastEntry getValue      key equals str     HashMap lastMap   record get key   int curMin     index   strMap containsKey key     int preMin   strMap get key    curMin   preMin    strMap put key  curMin   lastMap put str  curMin       else   strMap put key  curMin   lastMap put str  curMin",
        "objectID": "post/数组中两个字符串的最小距离",
        "date": "2017-08-26T14:12:18.000Z",
        "tags": [
            "String"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "数组中未出现的最小正整数",
        "uri": "post/数组中未出现的最小正整数",
        "content": "arr                     public static int missNum int   arr    int l   0  int r   arr length   l r    arr arr l    1     arr l     arr l    arr   r     else   swap arr  l  arr l    1       return l   1",
        "objectID": "post/数组中未出现的最小正整数",
        "date": "2017-09-02T11:57:54.000Z",
        "tags": [
            "Array"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "顺序消息的收发",
        "uri": "post/顺序消息的收发",
        "content": "3                                          Topic                                                         ID                      RocketMQ                   Topic                                                    Consumer   Consumer                     Consumer                                        Topic             Producer Consumer                     Topic                                                                                                           RocketMQ                                                         ID         Message Queue               Message Queue                             MessageQueueSelector           MessageQueue  producer WithQueueSelector producer NewManualQueueSelector           MessageListenerOrderly     Message Queue             package main import    context   fmt   os   time   github com apache rocketmq client go v2   github com apache rocketmq client go v2 consumer   github com apache rocketmq client go v2 primitive    func main     c  _    rocketmq NewPushConsumer  consumer WithGroupName  testGroup    consumer WithNameServer   string  127 0 0 1 9876     consumer WithConsumerModel consumer Clustering   consumer WithConsumeFromWhere consumer ConsumeFromFirstOffset   consumer WithConsumerOrder true     err    c Subscribe  TopicTest   consumer MessageSelector    func ctx context Context  msgs     primitive MessageExt   consumer ConsumeResult  error    orderlyCtx  _    primitive GetOrderlyCtx ctx  fmt Printf  orderly context   v n   orderlyCtx  fmt Printf  subscribe orderly callback   v  n   msgs  return consumer ConsumeSuccess  nil    err    nil   fmt Println err Error         Note  start subscribe err   c Start   err    nil   fmt Println err Error    os Exit  1    time Sleep time Hour  err   c Shutdown   err    nil   fmt Printf  Shutdown Consumer error   s   err Error        MessageListenerOrderly              MessageListenerOrderly        Consumer Queue                        Consumer Queue                   Consumer Queue             Consumer Queue",
        "objectID": "post/顺序消息的收发",
        "date": "2020-04-21T17:30:32.000Z",
        "tags": [
            "rocketmq"
        ],
        "categories": [
            "rocketmq"
        ]
    },
    {
        "title": "四种常见的POST提交数据方式",
        "uri": "post/四种常见的POST提交数据方式",
        "content": "HTTP      ASCII         TCP IP                HTTP                                     POST               entity body                                                       HTTP                                                php python         framework                               headers    Content Type                                     POST            Content Type                           application x www form urlencoded          POST                            enctype            application x www form urlencoded                                    POST http   www example com HTTP 1 1 Content Type  application x www form urlencoded charset utf 8 title test sub 5B 5D 1 sub 5B 5D 2 sub 5B 5D 3    Content Type      application x www form urlencoded            key1 val1 key2 val2         key   val      URL                            PHP     POST  title         title     POST  sub        sub              Ajax                   JQuery   QWrap   Ajax Content Type       application x www form urlencoded charset utf 8   multipart form data          POST                               enctype    multipart form data             POST http   www example com HTTP 1 1 Content Type multipart form data  boundary     WebKitFormBoundaryrGKCBY7qhFd3TrwA       WebKitFormBoundaryrGKCBY7qhFd3TrwA Content Disposition  form data  name  text  title       WebKitFormBoundaryrGKCBY7qhFd3TrwA Content Disposition  form data  name  file   filename  chrome png  Content Type  image png PNG     content chrome png           WebKitFormBoundaryrGKCBY7qhFd3TrwA                     boundary                       boundary          Content Type          multipart form data           boundary                                        boundary                                                                         boundary           multipart form data           rfc1867                                              POST                                                   enctype          application x www form urlencoded    enctype     text plain                   Web        WebApp      Ajax                                      application json application json    Content Type                                                    JSON        JSON             IE               JSON stringify            JSON        JSON           JSON                                                             JSON                   JSON       val            x www form urlencoded       Google   AngularJS    Ajax           JSON               var data     title   test    sub     1 2 3     http post url  data  success function result                      POST http   www example com HTTP 1 1 Content Type  application json charset utf 8   title   test   sub   1 2 3                             RESTful             Chrome          Firebug Fiddler           JSON                               php        POST                                   Content Type   application json     php   input            jsondecode        php                AngularJS          x www form urlencoded         text xml XML RPC XML Remote Procedure Call       HTTP        XML                   XML RPC         POST http   www example com HTTP 1 1 Content Type  text xml examples getStateName 41 XML RPC                                WordPress   XML RPC Api       ping      JavaScript                                 XML RPC             XML                JSON            https   imququ com post four ways to post data in http html",
        "objectID": "post/四种常见的POST提交数据方式",
        "date": "2018-11-16T11:14:41.000Z",
        "tags": [
            "HTTP"
        ],
        "categories": [
            "HTTP"
        ]
    },
    {
        "title": "随时找到数据流的中位数",
        "uri": "post/随时找到数据流的中位数",
        "content": "LeetCode 295  Find Median Data Stream Median middle value ordered integer list  size list even  no middle value  So median mean two middle value  Examples   2 3 4    median 3  2 3   median  2   3    2   2 5 Design data structure supports following two operations  void addNum int num    Add integer number data stream data structure  double findMedian     Return median elements so far  example  addNum 1  addNum 2  findMedian      1 5 addNum 3  findMedian      2                                                                                              p1            p2                       p1 p2                                                                                                                                                                                                                                                                                                                      addNum                                            p1 p2                                        p2 p1  0 5  class MedianFinder   public     initialize data structure here    priority_queue lo             priority_queue  greater  hi             MedianFinder       void addNum int num    lo push num              hi push lo top                       lo pop                          lo size   hi size      double  lo top      lo top     hi top      0 5           MedianFinder object will instantiated called such  MedianFinder obj   new MedianFinder    obj addNum num   double param_2   obj findMedian",
        "objectID": "post/随时找到数据流的中位数",
        "date": "2017-06-24T16:12:04.000Z",
        "tags": [
            "eap"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "索引和聚簇浅析",
        "uri": "post/索引和聚簇浅析",
        "content": "clustering     S     hash                                                                                               clusterkeyySQL                                                                MySQL       4     B Tree                    B     HASH     Memory             R Tree              MyISAM                               Full text             MyISAM                    1  B                                                                                   1                                                     2                                             3                                                                                                                                                            2  hash            hash                                                                    hash       1                    2                         hash",
        "objectID": "post/索引和聚簇浅析",
        "date": "2017-08-15T16:03:34.000Z",
        "categories": [
            "MySQL"
        ]
    },
    {
        "title": "特殊数",
        "uri": "post/特殊数",
        "content": "LeetCode 202  Happy Number Write algorithm determine number  happy   happy number number defined following process  Starting positive integer  replace number sum squares its digits  repeat process until number equals 1  where will stay   loops endlessly cycle does not include 1  numbers process ends 1 happy numbers  Example  19 happy number 1 2   9 2   82  8 2   2 2   68  6 2   8 2   100  1 2   0 2   0 2   1                              1   true        false     hash                                              1   class Solution   public  bool isHappy int n    unordered_map m  int sum   Helper n   while sum    1    if m sum     true        return false  m sum    true  sum   Helper sum     return true    int Helper int n      sum squares its digits int ret   0  while n    int digit   n 10  n    10  ret     digit digit     return ret                   2 6                                 class Solution   public  bool isHappy int n    while n 6   int next   0  while n  next   n 10   n 10   n  10   n   next    return n  1       LeetCode 258  Add Digits Given non negative integer num  repeatedly add its digits until result one digit  example  Given num   38  process like  3   8   11  1   1   2  2 one digit  return it  Follow up  without loop recursion O 1  runtime      class Solution   public  int addDigits int num    int result   num   true     result 1    num1 0    0     num2 size   1    num2 0    0   return false      0        long long _sum stoll num1  stoll num2              string sum tostring sum    if num  sum  return true                    if num size   0    j  0   int sum carry  i  0    n i     0     0     j  0   m j     0     0   res push_back sum 10  0    carry sum 10    if carry  res push_back carry  0    reverse res begin    res end     return res    LeetCode 279  Perfect Squares Given positive integer n  find least number perfect square numbers  for example  1  4  9  16     sum n  example  given n   12  return 3 12   4   4   4  given n   13  return 2 13   4   9           x          a       b b    x     b b         x              a          1   b b          class Solution   public  int numSquares int n     n dp n   1  INT_MAX   dp 0    0   int   1",
        "objectID": "post/特殊数",
        "date": "2017-06-24T19:51:48.000Z",
        "tags": [
            "DFS",
            "Math"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "替换字符串中连续出现的指定字符串",
        "uri": "post/替换字符串中连续出现的指定字符串",
        "content": "str from to  str   from        to          from           to                str  123abc  from  abc  to  4567     1234567   str  123   from  abc   to  456     123   str  123abcabc   from  abc   to  X     123X          str             str from             0           str  12abcabca4  from  abc      str    1   2  0 0 0 0 0 0  a   4                 match        from             match 0        str              str i     str i  from match    match from             str      from      i     M            0 M from           match 0   match  from           match        str          str i   from match          match 0    from           str                              0           0    to      12  to  a4     public static String replace String str  String from  String to     str    null       null    str equals        from equals        return str    char   chas   str toCharArray    char   chaf   from toCharArray    int match   0   int   0    chas length  i       chas i     chaf match        match    chaf length    clear chas  i  chaf length   match   0      else    chas i     chaf 0     i      match   0      String res       String cur        int   0    chas length  i       chas i     0    cur   cur   String valueOf chas i       chas i     0     i    0    chas i   1     0     res   res   cur   to  cur             cur equals        res   res   cur    return res",
        "objectID": "post/替换字符串中连续出现的指定字符串",
        "date": "2017-08-24T17:24:37.000Z",
        "tags": [
            "String"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "天际线扫描",
        "uri": "post/天际线扫描",
        "content": "LeetCode 218  Skyline Problem city s skyline outer contour silhouette formed buildings city when viewed distance  suppose given locations height buildings shown cityscape photo  Figure A   write program output skyline formed buildings collectively  Figure B   geometric information building represented triplet integers  Li  Ri  Hi   Li Ri x coordinates left right edge ith building  respectively  Hi its height  guaranteed 0   Li  Ri   INT_MAX  0 0  may assume buildings perfect rectangles grounded absolutely flat surface height 0  instance  dimensions buildings Figure recorded as     2 9 10    3 7 15    5 12 12    15 20 10    19 24 8      output list  key points   red dots Figure B  format    x1 y1    x2  y2    x3  y3       uniquely defines skyline  key point left endpoint horizontal line segment  Note last key point  rightmost building ends  merely used mark termination skyline  always zero height  Also  ground two adjacent buildings considered part skyline contour  instance  skyline Figure B represented as    2 10    3 15    7 12    12 0    15 10    20 8    24  0     Notes  number buildings input list guaranteed range  0  10000   input list already sorted ascending order left x position Li  output list sorted x position  no consecutive horizontal lines equal height output skyline  instance     2 3    4 5    7 5    11 5    12 7    not acceptable  three lines height 5 merged one final output such     2 3    4 5    12 7          skyline                                                pair        set        set                                            sort        x              x                                                                     multiset                                        multiset                                multiset                                                                        class Solution   public  vector  getSkyline vector   buildings    if buildings size    0  return     set  st  vector  ans  for auto val  buildings         st insert make_pair val 0    val 2     st insert make_pair val 1   val 2       multiset height 0                       0      set             set                int Max   0  for auto val  st    X                if val second   0  height insert  val second                     height  else height erase height find val second                   height           if   height rbegin       Max                 MAX                         ans pushback makepair val first   height rbegin      Max    height rbegin                      return ans",
        "objectID": "post/天际线扫描",
        "date": "2017-06-24T19:51:24.000Z",
        "tags": [
            "离散化",
            "扫描线"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "添加括号或运算符进行计算",
        "uri": "post/添加括号或运算符进行计算",
        "content": "LeetCode 494  Target Sum given list non negative integers  a1  a2     an  target  S  2 symbols      integer  choose one     its new symbol  Find ways assign symbols sum integers equal target S  Example 1  Input  nums  1  1  1  1  1   S 3  Output  5 Explanation   1 1 1 1 1   3  1 1 1 1 1   3  1 1 1 1 1   3  1 1 1 1 1   3  1 1 1 1 1   3 5 ways assign symbols sum nums target 3  Note  length given array positive will not exceed 20  sum elements given array will not exceed 1000  output answer guaranteed fitted 32 bit integer                    DP  di    i  a    j     di di 1 di 1                        j               ofs         0            0  0          d0 1        flag     0          x2       0  x2        01                                 class Solution   public  int findTargetSumWays vector  nums  int S     S   1000  return 0           1000 int ofs 2000   j   nums i    2000       2000 int d25   j   nums i    ofs     4000 memset d  0  sizeof d    bool flag     nums 0        d0   ofs    d0   ofs    1   int   1  diffWaysToCompute string input    vector ret  for int   0  left   diffWaysToCompute input substr 0  i             vector right   diffWaysToCompute input substr i 1             for int j   0  j   0  j    2     int k   j  k   1 2 3    123    232   8      23 2    2 32    105   5      1 0 5   10 5    00   0      0 0    0 0    0 0    3456237490   9191                                                                 class Solution   public  vector addOperators string num  int target    vector result  if num size      0  return result  help result      num  target  0  0  0   return result    void help vector  result  string path  string num  int target  int pos  long cur  long prev      path      num       target     pos      cur         prev                                     if pos    num size            if target    cur  result push_back path   return    for int   pos  pos  break                0      string sub_str   num substr pos    pos   1   long long subint   stoll substr          if pos    0                                   help result  path   substr  num  target    1  subint  sub_int     else           help result  path         substr  num  target    1  cur   subint  sub_int   help result  path         substr  num  target    1  cur   subint   sub_int   help result  path        sub_str  num  target    1  cur   prev   prev subint  prev   subint",
        "objectID": "post/添加括号或运算符进行计算",
        "date": "2017-06-24T20:28:04.000Z",
        "tags": [
            "DFS",
            "DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "跳跃游戏",
        "uri": "post/跳跃游戏",
        "content": "LeetCode 55  Jump Game Given array non negative integers  initially positioned first index array  element array represents maximum jump length position  Determine able reach last index  example     2 3 1 1 4   return true     3 2 1 0 4   return false           reach    x          max reach x nums x     x  nums    int   0   int reach   0   i    jump       i            cur  stones    unordered_map m  return helper stones  0  0  m     bool helper vector  stones  int pos  int jump  unordered_map  m    int n   stones size    key   pos   jump jump   1  return m key    false                                         helper stones  i  dist  m   return m key    true    return m key    false",
        "objectID": "post/跳跃游戏",
        "date": "2017-06-24T22:08:56.000Z",
        "tags": [
            "Greedy",
            "DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "通过绝对内存地址进行参数赋值与函数调用",
        "uri": "post/通过绝对内存地址进行参数赋值与函数调用",
        "content": "1              int x  int  p  printf   x n   x   p  int   0x0012ff60   p 3  printf   d n  x            12ff60 3         x          0x12ff60       8            0                                       x    2                c  include using namespace std  typedef void  FuncPtr     void p     printf  MOP n      int main     void   ptr     P    printf   x n  p   ptr    void        0x4110fD           ptr             void        0x4110fD       FuncPtr 0x4110fD     return 0                MOP 4110f0 MOP MOP MOP       ptr                     Mop                   4110f0        ptr     p        ptr   MOP                      p           MOP       typedef                                                                                                                     c  include int p int a int b    return   a b  a b     int main     int   ptr  int  int   ptr    int     int int  0x411159  int c   ptr 5 6   printf   d n   c   return 0              6",
        "objectID": "post/通过绝对内存地址进行参数赋值与函数调用",
        "date": "2017-09-05T15:15:29.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "通过增删数位创建新的数字",
        "uri": "post/通过增删数位创建新的数字",
        "content": "LeetCode 402  Remove K Digits Given non negative integer num represented string  remove k digits number so new number smallest possible  Note  length num less 10002 will   k  given num does not contain leading zero  Example 1  Input  num    1432219   k   3 Output   1219  Explanation  Remove three digits 4  3  2 form new number 1219 smallest  Example 2  Input  num    10200   k   1 Output   200  Explanation  Remove leading 1 number 200  Note output not contain leading zeroes  Example 3  Input  num    10   k   2 Output   0  Explanation  Remove digits number left nothing 0                                 k                       k                                                                               len k             len k               0       class Solution   public  string removeKdigits string num  int k    string ans   string         int n   k  len   num size    cnt   0   n          for auto val  num          while  ans empty      n   0    val maxNumber vector  nums1  vector  nums2  int k    int m   nums1 size    int n   nums2 size    vector result k    int   max 0   k   n   candidate   merge v1  v2  k                        greater candidate  0  result  0   result   candidate    return result    vector maxArray vector  nums  int k   int n   nums size    vector result k          stack j          int   0  k    result back   merge vector  nums1  vector  nums2  int k          k       k   m n     vector ans k   int   0  j   0   int r   0  r  nums1  int i  vector  nums2  int j      nums1     nums2      i nums2 j",
        "objectID": "post/通过增删数位创建新的数字",
        "date": "2017-06-24T23:59:18.000Z",
        "tags": [
            "单调栈"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "通过shell进行数学运算",
        "uri": "post/通过shell进行数学运算",
        "content": "expr   expr                           expr      shell                   expr                   expr 5   2 expr  syntax error                shell             expr         shell                                              expr         bash shell                       bash shell     Bourne shell       expr                             bash                                   operation                    shell      expr               shell    var4    var1     var2    var3   bash shell                                      let let                    let                   let result no1 no2 echo  result        let no1          let no1        let no  6 let no  6        let no no 6 let no no 6  bash   bc bash                                                  bash                                      C                          if then          shell      bc    bash       bash         quit            scale                                            scale       0  scale      bash                      4  bash                 q          bash                   bash             bc  q var1 10 var1   4 40 var2   var1   5 print var2 2 quit                  bash             print                       bc                      variable   echo  options  expression    bc      options                              expression       bc              shell           bash            bash          shell         cat test10    bin bash var1 100 var2 45 var3   echo  scale 4   var1    var2    bc  echo answer  var3                                                                                                 shell                   variable   bc   EOF options statements expressions EOF   EOF                                 bc",
        "objectID": "post/通过shell进行数学运算",
        "date": "2017-08-09T16:16:09.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "同构字符串",
        "uri": "post/同构字符串",
        "content": "LeetCode 205  Isomorphic Strings Given two strings s t  determine isomorphic  Two strings isomorphic characters s replaced t  occurrences character replaced character preserving order characters  No two characters may map character character may map itself  example  Given  egg    add   return true  Given  foo    bar   return false  Given  paper    title   return true  Note  may assume s t length                       hash    hash                         hash                                   1         0            class Solution   public  bool isIsomorphic string s  string t    int m1 256     0   m2 256     0   n   s size            int   0  p2i           map w2i            istringstream in str   int   0  n   pattern size     string word     word    i     i    n    p2i pattern i      w2i word       i   1   str pattern     i  n   i",
        "objectID": "post/同构字符串",
        "date": "2017-06-24T19:51:07.000Z",
        "tags": [
            "String",
            "Hash"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "统计和生成所有不同的二叉树",
        "uri": "post/统计和生成所有不同的二叉树",
        "content": "LeetCode 96  Unique Binary Search Trees Given n  structurally unique BST s  binary search trees  store values 1 n  example  Given n   3  total 5 unique BST s  1 3 3 2 1             3 2 1 1 3 2         2 1 2 3 G n     n             F i n  1 G n 1 0          n 1 int                0                    BST     f 0  1               1      BST      f 1  1  G 0  1  G 1  1  for int i 1 i generate int start  int end    List res   new LinkedList     start   end    res add null     Node head   null   int   start  lSubs   generate start    1   List rSubs   generate i   1  end    Node l   lSubs     Node r   rSubs    head left   l  head right   r  res add cloneTree head          return res    public static Node cloneTree Node head     head    null    return null    Node res   new Node head value   res left   cloneTree head left   res right   cloneTree head right   return res    LeetCode 95  Unique Binary Search Trees II Given integer n  generate structurally unique BST s  binary search trees  store values 1 n  example  Given n   3  program return 5 unique BST s shown below  1 3 3 2 1             3 2 1 1 3 2         2 1 2 3           BST  dfs   BST                 dfs                       Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  vector generateTree int from  int to    vector ret    ret                                  if to   0           for int i from  l   generateTree from  i 1          vector r   generateTree i 1  to   for int j 0  jleft   l j   h  right   r k   ret push_back h           return ret    vector generateTrees int n    if n  0         0       return  vector 0  return generateTree 1  n",
        "objectID": "post/统计和生成所有不同的二叉树",
        "date": "2017-06-24T20:29:00.000Z",
        "tags": [
            "Tree",
            "DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "网络常用协议",
        "uri": "post/网络常用协议",
        "content": "DNS      TCP UDP  DNS    UDP TCP  53 DNS      DNS                             IP    FTP        TCP     TCP  20 21            FTP        FTP                   FTP                                    Telnet        TCP    TCP 23    Telnet   TCP IP         Internet                                                       telnet                    telnet                                                         telnet                    Telnet        Web        HTTP         WWW  TCP    TCP  80 HTTP                                          http       TCP                    SMTP        TCP    TCP 25   SMTP Simple Mail Transfer Protocol                                               SMTP    TCP IP                                SMTP              E mail                      SMTP       SMTP                           SMTP                      SMTP      FTP                                           POP      TCP    TCP 110    POP  Internet                                                                                               POP3                                POP3     POP3                                                                                                                                                                       IMAP        POP3                  IMAP        TCP    TCP 143   IMAP  webmail                                                           IMAP POP                          IMAP                                                      IMAP                           IMAP                    POP                    IMAP         webmail                      TFTP          UDP    TCP  69 TFTP                                TFTP   FTP                                                                   FTP      SNMP          UDP  UDP  161 162          SNMP                         application layer protocol        database schema                                                                  IETF Internet Engineering Task Force    internet        SNMP         Internet                SNMP Internet               SNMP                                DHCP          UDP  DHCP 3      UDP67 UDP68    DHCP         DHCP Server DHCP Client      546     DHCPv6 Client     DHCPv4   DHCP failover               DHCP failover             DHCP Dynamic Host Configuration Protocol                        UDP                               IP                                 NFS          UDP  TCP    TCP 2049   NFS Network File System          FreeBSD                          TCP IP        NFS       NFS                 NFS                            UDP                     TCP           TCP        TCP                                            UDP         UDP                                                    SCTP         SCTP                           TCP UDP           IP      IP                                                                              ARP                ARP Address Resolution Protocol     IP           TCP IP               IP   ARP                                           IP           ARP                    ARP                                                ARP                                   ARP                   ARP                                     ARP   ARP         ARP   IP   MAC                          RARP   ARP NDP   IPv6           RARP                  RARP Reverse Address Resolution Protocol           RARP                   ARP           IP                                MAC        IP                 RARP               RARP          IP                     RARP         IP                                    ICMP          ICMP  Internet Control Message Protocol Internet         TCP IP             IP                                                                                      IGMP         Internet        IGMP   Internet Group Management Protocol                                    IGMP          IGMPv1 v2  v3  RIP        RIP                                               OSPF          OSPF                    autonomous system AS                                IGP                       Dijkstra            OSPF  OSPFv2 OSPFv3       OSPFv2  IPv4   OSPFv3  IPv6    RIP   OSPF         RIP",
        "objectID": "post/网络常用协议",
        "date": "2017-06-25T20:08:06.000Z",
        "tags": [
            "议"
        ],
        "categories": [
            "网络"
        ]
    },
    {
        "title": "网络地址转换NAT原理及应用",
        "uri": "post/网络地址转换NAT原理及应用",
        "content": "IP               IP      NIC          ISP                                                IP                                         IANA    3 IP      IP    10 0 0 0     10 255 255 255 172 16 0 0    172 16 255 255 192 168 0 0   192 168 255 255                      IP                                                           IP         IP                                   NAT NAT      Network Address Translation                    IETF Internet Engineering Task Force  Internet                      IP Internet Protocol      Internet                     IP          IP                     NAT                              NAT                                                                                     internet       NAT          Internet                IP                        IP                 Internet     NAT                                              NAT                                    IP                           NAT                 ISDN        NAT      Cisco                         IOS   NAT                        WEB Server     192 168 1 1       202 96 23 11     202 96 23 11            192 168 1 1                                  Windows 98 SE Windows 2000              NAT        NAT Static NAT      NAT Pooled NAT          NAPT Port Level NAT     NAT          Internet                                    Internet                                                            NAT             NAT               NAT        Internet              NAT                                    Internet      NAT                     NAT       IP     IP                                          IP      NAT     NAT    IP           IP           IP                           NAT                NAT        IP           IP                  NAT               IP                      IP   IP                      NAT      IP         NAT      NAT table                                   IP                   IP       IP          NAT table              NAPT         NAPT Network Address Port Translation                  IP                           IP     NAPT      NAT                       IP                NAT          NAPT                         SNAT DNAT   NAT Source NAT SNAT             NAT                                         SNAT       NAT Destination NAT DNAT             Destination NAT   SNAT                                       DNAT     NAT                                                                                                                                              IP                                                          NAT                                      NAT                                                               NAT                         NAT          HTTP           HTTP                                                                          NAT                        IP   NAT     IP    IP   IP   IP NAT   IP              NAT   2               IP           IP  202 20 65 5        IP         192 168 1 1        192 168 1 2        202 20 65 4   1 IP  Dst 202 20 65 4 Src 192 168 1 2   Gateway  IP   IP   NAT Gateway   IP          IP  Dst 202 20 65 4 Src 202 20 65 5           IP      IP   IP      NAT Gateway   IP Web Server     IP  Dst  202 20 65 5 Src 202 20 65 4      NAT Gateway     NAT Gateway  IP    IP          IP    IP  Des 192 168 1 2 Src 202 20 65 4                                                         NAT    Web Server                        IP    Internet                            NAT Gateway                                          NAT                                       connection track          NAT Gateway                                  NAT Gateway              Track Table                                                          NAT Gateway         IP   IP           Client A Client B    Web Server    NAT Gateway                                     NAT Gateway  Connection Track                                   Track Table                           SNAT DNAT                       Linux NAT   netfilter iptables   netfilter iptables IP                                                     netfilter          kernelspace                                              iptables                userspace                                   netfilter iptables NAT netfilter iptables            filter nat mangle  filter                 INPUT   OUTPUT   FORWARD    nat                PREROUTING   OUTPUT   POSTROUTING                         mangle                              PREROUTING   OUTPUT    filter                            Mangle                    Nat    NAT        iptables         NAT           iptables              NAT               nat                            SNAT        POSTROUTING     DNAT        PREROUTING                     OUTPUT           NAT     NAT                                                            NAT  Masqueraded                                            NAT                                    PREROUTING                                OUTPUT                         netfilter iptables      NAT     DNAT       PREROUTING              DNAT REDIRECT                         DNAT      ",
        "objectID": "post/网络地址转换NAT原理及应用",
        "date": "2017-06-25T20:01:42.000Z",
        "tags": null,
        "categories": [
            "网络"
        ]
    },
    {
        "title": "网络I/O模型",
        "uri": "post/网络I-O模型",
        "content": "I O                                    read                                                                                                        ACK  TCP           HTTP                       read                              write                   I O                                printf             read               accept           read          read                                                   read                                           printf                  read                   printf                                        printf      read                 read    I O                read             read                                                                I O                I O       I O                         read                                                                                                                                    I O                                                                                                            I O                                                                                read                                        I O                                                                                          I O                I O          I O                                   fd      I O fcntl fd  FSETFL  ONONBLOCK      I O                               I O       0                       0              1                  kernel           I O                               kernel                            I O                                                                                                                           socket       socket                 I O             Linux I O          select poll epoll              I O    select       int select  int maxfd  fdset readfds  fdset writefds  fd_set errorfds  struct timeval timeout   FDZERO int fd  fdset  fds         FDSET int fd  fdset  fds                FDISSET int fd  fdset  fds                  FDCLR int fd  fdset  fds                      maxfd             1   MAX_CONN   readfds           fd_set      writefds              writefds               timeout   timeval                         set_fd                     1024 2048                 poll       int poll struct pollfd  fds  unsigned int nfds  int timeout          struct pollfd  int fd           short events           short revents                   fds   pollfd          nfds pollfd               timeout                       pollfd                        epoll       int epoll_create int size        epoll   int epollctl int epfd  int op  int fd  struct epollevent  event             int epollwait int epfd  struct epollevent   events  int maxevents  int timeout          struct epoll_event  _uint32t events  epolldatat data     typedef union epoll_data  void  ptr  int fd  _uint32t u32  _uint64t u64   epolldatat      size               epfd epoll        op      EPOLLCTLADD EPOLLCTLFD EPOLLCTLDEL   fd      fd  events   epoll_event                maxevents     events     timeout      ms    0        1       select poll epoll            select        fdset         MAXCONN  O n  poll         pollfd               MAX_CONN  O n  epoll    O 1          select 1024 2048                  poll    epoll     fd    select      fd             poll      fd             epoll  epoll_ctl                        mmap             fd                select                                        epoll     I O      callback          socket    AIO    I O       I O       I O      I O    I O          I O                               I O                                                                               I O            I O                              I O          I O         I O                       I O                         I O    I O",
        "objectID": "post/网络I-O模型",
        "date": "2017-09-10T22:42:33.000Z",
        "categories": [
            "Linux编程"
        ]
    },
    {
        "title": "为什么把无穷大INF设置成0x3f3f3f3f?",
        "uri": "post/为什么把无穷大INF设置成0x3f3f3f3f",
        "content": "0x7fffffff          32 bit int                            min         0x7fffffff                      0x7fffffff                                                                    du  w u",
        "objectID": "post/为什么把无穷大INF设置成0x3f3f3f3f",
        "date": "2017-07-31T13:14:13.000Z",
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "为什么不要在单个sql.Tx中使用协程",
        "uri": "post/为什么不要在单个sql.Tx中使用协程",
        "content": "busy buffer                     busy buffer               busy buffer              Rows                           busy buffer                          database sql                               go sql driver mysql             exec           mysqlConn   db    CommandPacket          tx ExecContext    tx db execDC   ctxDriverExec    mc Exec Execer     mc writeCommandPacketStr mysqlConn     mysqlConn      buffer                   4          mysqlConn              buffer        buffer          ErrBusyBuffer       busy buffer       go sql driver mysql 1 4 0 packets go L419 func  mc  mysqlConn  writeCommandPacketStr command byte  arg string  error      Reset Packet Sequence mc sequence   0 pktLen    1   len arg  data    mc buf takeBuffer pktLen   4  data    nil      cannot buffer  Something wrong connection errLog Print ErrBusyBuffer  return errBadConnNoWrite      Add command byte data 4    command    Add arg copy data 5    arg     Send CMD packet return mc writePacket data          go sql driver mysql 1 4 0 buffer go L112    takeBuffer returns buffer requested size     possible  slice existing buffer returned     Otherwise bigger buffer made     one buffer  total  used time            buffer      func  b  buffer  takeBuffer length int    byte         buffer         nil        buffer  b length   0   return nil      test  cheap  general case first length 0      columns err    mc readUntilEOF    err    nil   return err      rows err    mc readUntilEOF    err    nil   return err     return mc discardResults        https   medium com impopper engineering go concurrency query in mysql transactions f6018c7b16b2",
        "objectID": "post/为什么不要在单个sql.Tx中使用协程",
        "date": "2019-07-04T16:03:49.000Z",
        "tags": [
            "Go",
            "Mysql"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "为什么Response.Body需要被关闭",
        "uri": "post/为什么Response.Body需要被关闭",
        "content": "Body io ReadCloser http Client Transport guarantee Body always non nil  even responses without body responses zero length body  caller s responsibility close Body  default HTTP client s Transport does not attempt reuse HTTP 1 0 HTTP 1 1 TCP connections   keep alive   unless Body read completion closed  http    Client     Transport                      0                     http      Transport       keep alive  http 1 0 http 1 1                         http           body                  http Client                http              http     Transport     Transport     persistConn        connection                  http   keep alive          http client    keep alive      connection              readLoop                  select for           alive    false  select   case rc ch",
        "objectID": "post/为什么Response.Body需要被关闭",
        "date": "2019-10-31T15:27:42.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "未排序数组中累加和为定值的最长子数组",
        "uri": "post/未排序数组中累加和为定值的最长子数组",
        "content": "arr                       k  arr               k             arr  1 2 1 1 1  k 3     3        1 1 1        3      public static int getMaxLength int   arr  int k     arr    null    arr length    0    k map   new HashMap    map put 0   1      important int len   0  int sum   0   int   0    num    res   mid  high   mid   1    else   low   mid   1      return res",
        "objectID": "post/未排序数组中累加和为定值的最长子数组",
        "date": "2017-08-28T16:50:52.000Z",
        "tags": [
            "Array",
            "滑动窗口"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "位图排序",
        "uri": "post/位图排序",
        "content": "Counting sort                             C    i         A    i             C  A                                                C                                     1                                                  100             100              0 100                                   C                A i              C A i      C                                                 C                        C i      A i            A                                                                A             C                                Bit map               0 7  5   4 7 2 5 3               Bit map               8         8 Bit 1Bytes        1Byte            Bit    0          5            4     4      1            Big ending Little ending         Big ending                                      7       1                                  1        Bit                                                                                  bit    0 1                                                          QQ      0      0  1000000000       10  QQ    QQ   1                QQ           QQ     char   x 1    8         char bit_map 10  8 1             0 10            char     int          C            char   1      1     C              100 8   12         96       0                      qq     int    bit_map        1        1     qq             n              n   n 10 7                 n                1MB                                1MB                     1MB     int 4byte  10 3 10 3 4 250 000               10 7 int                                                  10 7  10 7 8 1024 1024 1MB           bit   0                 i     bit i      1                bit j   1    int j   40      unsigned int                               40      unsign int   0 2 32 1 4294967295 5 10 9      hash  510 9 8 10 3 10 3   625MB      625M           0   40  unsign int                       1          i    bit i     1 1     0      STL  bitset  STL  bitset             http   www cnblogs com yjf512 archive 2010 11 04 1868899 html  http   www cnblogs com Trony archive 2012 09 01 2667064 html  http   www cnblogs com zhanghaiba p 3594559 html",
        "objectID": "post/位图排序",
        "date": "2017-06-25T22:45:30.000Z",
        "tags": [
            "量数据"
        ],
        "categories": [
            "算法"
        ]
    },
    {
        "title": "位运算求绝对值",
        "uri": "post/位运算求绝对值",
        "content": "1                                    1                       1                                                        int SignReversal int a    return  a   1                                           int      31      a    i  0     i   1    i        i  0            a 1         int my_abs int a    int      31  return    0       a   1                   0           1 0xFFFFFFFF            a i     i   i 0  1    i     0   1                        int my_abs int a    int      31  return   a   i    i",
        "objectID": "post/位运算求绝对值",
        "date": "2017-06-23T15:52:43.000Z",
        "tags": [
            "it Manipulation"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "文本排版",
        "uri": "post/文本排版",
        "content": "LeetCode 68  Text Justification Given array words length L  format text line exactly L characters fully  left right  justified  pack words greedy approach  is  pack words line  Pad extra spaces     when necessary so line exactly L characters  Extra spaces words distributed evenly possible  number spaces line not divide evenly words  empty slots left will assigned spaces slots right  last line text  left justified no extra space inserted words  example  words    This    is    an    example    of    text    justification    L  16  Return formatted lines as     This an    example text    justification                L                    k      l                                           class Solution   public  vector fullJustify vector  words  int L    vector res  for int   0  k  l    words size    tmp                        else tmp    string  L   l     k   1     j    L   l     k   1            L l      k 1       for            j                                                1           tmp    words i j 1                tmp    string L   tmp size                      res push_back tmp           return res",
        "objectID": "post/文本排版",
        "date": "2017-06-24T22:08:13.000Z",
        "tags": [
            "String"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "文件路径",
        "uri": "post/文件路径",
        "content": "LeetCode 71  Simplify Path Given absolute path file  Unix style   simplify it  example  path     home         home  path     a   b       c         c                                 sstream                                      vector             class Solution   public  string simplifyPath string path    string res  tmp  vector stk                stringstream ss path   while getline ss tmp                        tmp          tmp         continue   tmp             stk empty    stk pop_back    else  tmp          stk push_back tmp     for auto str   stk  res        str  return res empty           res     res          LeetCode 388  Longest Absolute File Path Suppose abstract file system string following manner  string  dir n tsubdir1 n tsubdir2 n t tfile ext  represents  dir subdir1 subdir2 file ext directory dir contains empty sub directory subdir1 sub directory subdir2 containing file file ext  string  dir n tsubdir1 n t tfile1 ext n t tsubsubdir1 n tsubdir2 n t tsubsubdir2 n t t tfile2 ext  represents  dir subdir1 file1 ext subsubdir1 subdir2 subsubdir2 file2 ext directory dir contains two sub directories subdir1 subdir2  subdir1 contains file file1 ext empty second level sub directory subsubdir1  subdir2 contains second level sub directory subsubdir2 containing file file2 ext  interested finding longest  number characters  absolute path file within file system  example  second example above  longest absolute path  dir subdir2 subsubdir2 file2 ext   its length 32  not including double quotes   Given string representing file system above format  return length longest absolute path file abstracted file system  no file system  return 0  Note  name file contains least   extension  name directory sub directory will not contain    Time complexity required  O n  n size input string  Notice a aa aaa file1 txt not longest file path  path aaaaaaaaaaaaaaaaaaaaa sth png                                  dir n tsubdir1 n tsubdir2 n t tfile ext      dir subdir1 subdir2 file ext   dir         subdir1         file ext   subdir2       dir n tsubdir1 n t tfile1 ext n t tsubsubdir1 n tsubdir2 n t tsubsubdir2 n t t tfile2 ext      dir subdir1 file1 ext subsubdir1 subdir2 subsubdir2 file2 ext    dir    2     subdir1   subdir2  subdir1        file1 ext            subsubdir1  subdir2           subsubdir2        file2 ext                                        dir subdir2 subsubdir2 file2 ext      32                                                              0                                           O n    n              aaaaaaaaaaaaaaaaaaaaa sth png    a aa aaa file1 txt                             getline   n            t       1                    rec               class Solution   public  int lengthLongestPath string input    vector rec                       int max_val   0  stringstream ss input   string cur  while getline ss  cur    n       t  n        int   0  while cur i       t    i      t         i 1      if i 1   rec size                      rec                               0 rec push_back 0   rec i     i   rec i 1    0    cur size   i 1                            t  cur          i   t               1            if cur find         1 maxval   max maxval  rec i  1                                              1    return max_val                                      tab                                                                                                                class Solution   public  int lengthLongestPath string input    input     n   int len   input size    ans   0  spaceCnt   0  curPathLen  0  dotFlag   0  stack   st  string curDir  extension  for int   0    len  i      if input i     n     if input i     t   curDir    input i   if dotFlag  extension    input i   if input i     t   spaceCnt    if input i        dotFlag   1  continue    while  st empty      spaceCnt",
        "objectID": "post/文件路径",
        "date": "2017-06-24T22:07:44.000Z",
        "tags": [
            "String",
            "Stack"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "文件权限解析",
        "uri": "post/文件权限解析",
        "content": "ls        Linux                                                                  3              3       r         w         x                                3          3                 rich                                   rich                         rich                   w                                umask                              sticky bit    3           umask     umask                                         3 rwx            3                                                               r            100         4    umask                         666                        777                  umask        etc profile         6             etc login defs      Ubuntu     umask     umask                    666   umask 022             644            777 umask                     umask  026  777       751                       chmod                            chmod options mode file mode                                                3                 3           chmod                              ugoa    rwxXstugo                      u     g    o     a                                                                                                       rwx                           chmod o r newfile options chmod             R                                                                    Linux               chown             chgrp               chown         chown options owner  group  file       UID           chown dan newfile chown                   chown dan shared newfile                         chown  rich newfile     Linux                               chown test  newfile chown               R                            h                           root                                                 chgrp                    chgrp shared newfile                                          Linux                       Linux      UID GID                                                                                                                    Linux            3             ID SUID                              ID SGID                                                                              SGID             SGID                                                  SGID   chmod           3          4                  s                                                                 SGID          mkdir                 chgrp                                               SGID                 shared                                umask                       umask   002                                                                       shared",
        "objectID": "post/文件权限解析",
        "date": "2017-08-09T09:54:34.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "文件指针和文件描述符的区别",
        "uri": "post/文件指针和文件描述符的区别",
        "content": "FILE     C           I O                      FILE         FILE                                     c         Linux                     FILE                                                                       C                                                                               FILE                                                                           write                           Linux                                PCB Process Control Block                                                          file        FILE                   file          file         stdin         0      stdout         1      stderr         2                              shell                                              POSIX     STDINFILENO STDOUTFILENO   STDERR_FILENO     0 1 2                 unistd h              0   OPEN_MAX                           int                 Linux 2 4 22            1 048 576                 UNIX   Linux       Windows NT                                                                                            FILE       fd       IO    C       FILE  fd           fopen    open                    fdopen fileno                stdio h                  fdopen         FILE   fdopen int filedes  const char  opentype        filedes            opentype             fopen             w   w                                   fdopen                          null                 fileno         int fileno FILE  stream       stream                    1                               stdin     stdout       stderr                                0 1 2                        http   blog csdn net sunjiangangok article details 69943620",
        "objectID": "post/文件指针和文件描述符的区别",
        "date": "2017-06-25T14:21:03.000Z",
        "tags": null,
        "categories": [
            "Linux编程"
        ]
    },
    {
        "title": "析构函数详解",
        "uri": "post/析构函数详解",
        "content": "vptr                                                                                                                          virtual      derived class      baseclass        base class    non virtual                           derived          base class      TimeKeeper                                                                                 base class   virtual         derived class                            derived class     class TimeKeeper   public  TimeKeeper    virtual  TimeKeeper       TimeKeeper  ptk   getTimeKeeper    delete ptk               class    virtual             virtual        class  virtual                 base class  class      base class        virtual             virtual                           virtual                  vptr  virtual table pointer       virtual                 class  virtual            vptr             C                            vptr                                      vptr                               classes        virtual          virtual                    class      virtual        virtual                                                          stack unwinding         terminate                                                      class Widget   public   Widget                           void doSomething     std  vector v      v          vector v                widgets   v    Widgets                         Widgets                             v                           Widget                         C                                             array                                arrays                       terminate                                                                                                                         C      terminate                                                                class Session   public  Session     Session        private  static void logCreation Session  objAddr   static void logDestruction Session  objAddr         logCreation   logDestruction                            Session        Session   Session     logDestruction this        logDestruction                      Session                                                           terminate                                                                                                 class         class DBConnection   public  static DBConnection create   void close              DBConnection   class           close  class DBConn        class      DBConnection    public   DBConn                      db close      private  DBConnection db         close                    DBConn                                                        catch     try                             Session                 Session   DBConn     try   db close      catch             catch       db close             DBConn                       DBConn      exception       terminate                       DBConn                         DBConn        close                              DBConn          DBConnection                                           DBConnection      close                                                                                                                                            close                                                                         DBConn       close             close          DBConn",
        "objectID": "post/析构函数详解",
        "date": "2017-08-30T21:58:15.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "洗牌问题",
        "uri": "post/洗牌问题",
        "content": "LeetCode 384  Shuffle Array Shuffle set numbers without duplicates  Example     Init array set 1  2  3  int   nums    1 2 3   Solution solution   new Solution nums      Shuffle array  1 2 3  return its result  permutation  1 2 3  equally likely returned  solution shuffle       Resets array back its original configuration  1 2 3   solution reset       Returns random shuffling array  1 2 3   solution shuffle               n   n                                                                                                   n 1                                               class Solution   public  Solution vector nums   v nums        Resets array its original configuration return it    vector reset     return v       Returns random shuffling array    vector shuffle     vector res v  for int i 0 i v         Solution object will instantiated called such  Solution obj   new Solution nums   vector param_1   obj reset    vector param_2   obj shuffle",
        "objectID": "post/洗牌问题",
        "date": "2017-06-24T15:38:28.000Z",
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "下标与数值相关联的排序",
        "uri": "post/下标与数值相关联的排序",
        "content": "N     arr    N         1 N    arr           0 N 1                 1 N            O N          0 1       arr           0 AM        1 N arr index  index l        am              arr i   i l                           arr i   i l          arr i                                 1 2 5 3 4         2    5    5      4     5         1 2 5 3 5     4     5            3    4           2 5 4 5    3     4            2    3         1 2 3 4 5                   arr i  i 1            public static void sort1 int   arr    int tmp   0  int next   0   int   0     arr length  i      tmp   arr i    arr i       1    next   arr tmp   1   arr tmp   1    tmp  tmp   next                                        2   arr         arr                                      arr    N           O N          O 1       public static void modify int   arr     arr    null    arr length   2    return    int even   0  int odd   1  int end   arr length   1   even",
        "objectID": "post/下标与数值相关联的排序",
        "date": "2017-09-01T22:37:16.000Z",
        "tags": [
            "Sort"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "先序、中序、后序数组两两组合重构二叉树",
        "uri": "post/先序、中序、后序数组两两组合重构二叉树 ",
        "content": "LeetCode 105  Construct Binary Tree Preorder Inorder Traversal Given preorder inorder traversal tree  construct binary tree                                                                                                                  Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  TreeNode  createTree vector  inorder  int inBeg  int inEnd  vector  preorder  int preBeg  int preEnd     inBeg   inEnd          return NULL  int root   preorder preBeg        int index  for int   inBeg  left   left  node  right   right  return node    TreeNode  buildTree vector  preorder  vector  inorder     inorder size      0  return NULL  TreeNode  head   createTree inorder  0  inorder size     1  preorder  0  preorder size     1   return head       LeetCode 106  Construct Binary Tree Inorder Postorder Traversal Given inorder postorder traversal tree  construct binary tree                                                                                                               class Solution   public  TreeNode  createTree vector  inorder  int inBeg  int inEnd  vector  postorder  int postBeg  int postEnd     inBeg   inEnd          return NULL  int root   postorder postEnd        int index  for int   inBeg  left   left  node  right   right  return node    TreeNode  buildTree vector  inorder  vector  postorder     inorder size      0  return NULL  TreeNode  head   createTree inorder  0  inorder size     1  postorder  0  postorder size     1   return head               class Solution   public  TreeNode  buildTree vector  inorder  vector  postorder    if inorder size      0 return NULL  TreeNode  p  TreeNode  root  stack stn            root   new TreeNode postorder back           stn push root   postorder pop_back                 while true    if inorder back      stn top    val    p   stn top    stn pop    inorder pop_back    if inorder size      0  break  if stn size      inorder back      stn top    val  continue  p  left   new TreeNode postorder back     postorder pop_back    stn push p  left     else   p   new TreeNode postorder back     postorder pop_back    stn top    right   p  stn push p       return root                                                                                               1     2     null         1 2        2 1       1     null     2                                                                                                                                     prePosToTree                0 2                 public static Node prePosToTree int   pre  int   pos     pre    null    pos    null    return null    HashMap map   new HashMap     int   0  map    Node head   new Node s sj       pi    pj    return head    int index   map get p   pi    head left   prePos p  pi  pi   index   si  s  si  index  map   head right   prePos p  pi   index   si   1  pj  s  index   1  sj  map   return head                                                                                           public static int   getPosArray int   pre  int   in     pre    null       null    return null    int len   pre length  int   pos   new int len   HashMap map   new HashMap     int   0  map     pi   pj    return si    s si      p pi   int   map get p pi    si   setPos p  pj   nj     1  pj  n    1  nj  s  si  map   return setPos p  pi   1  pi     ni  n  ni    1  s  si  map",
        "objectID": "post/先序、中序、后序数组两两组合重构二叉树 ",
        "date": "2017-06-25T02:26:54.000Z",
        "tags": [
            "Tree",
            "DFS"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "线性同余法与伪随机数",
        "uri": "post/线性同余法与伪随机数",
        "content": "a m  b     m  a   b                                                 The Art Computer Programming Volume 2 1  3 21  Linear Congruential Method            LCG Linear Congruential Generators                     m   a                                       LCS Linear Congruential Scquence         X1   X2   X3    Xn         c   0      0      c 0    2               MCG Multiplicative Congruential Generator    c 0  2                Mixed Linear Congruential Generator    X_0               seed                                        P  TAOCP                    exercise 3 1 6                                            f   Xn     X n 1                                         S T         S    0 m 1   m      T            LCS         X0               X1          S     X_1    S     T    X1               X2  f  X1       X2        S         T     X_2     S                   X2     T           X1               P 1             X1   X i 1              S             S       T                  X_i       Xi  f  X i 1      S                Xi  f  X i 1      T              P                                                       d 2 4             16             4          16                                                                                                  m 2 w                       m 2 w    m 2 w  1  m 2 w  1               a                      LCS          m                                                         X_0  3           4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3                          TAOCP                    a         m LCS         c  0  c m          0          m LCS        c 0                 m LCS                        c 0        m LCS   0             0          LCS    0                            d m        Xn  d       Xn  kd   k                    Xn  1  d           Xn  2  X_n  2  d                                     m                            m                      m             2 30                       m   m                    m   2     m 2 w     a      a 8  5  a 1    Xn  X0 nc mod m                a 0                    2",
        "objectID": "post/线性同余法与伪随机数",
        "date": "2019-10-09T15:10:17.000Z",
        "tags": [
            "线性同余",
            "随机数"
        ],
        "categories": [
            "算法"
        ]
    },
    {
        "title": "详解char类型",
        "uri": "post/详解char类型",
        "content": "char               1       128 127                                            ASCII          ASCII                                                             ASCII            char       int ASCII    ASCII       7   8           128  256          ASCII      ASCII    7          1     0                 0  9                             0 31 127  33                              LF     CR     FF     DEL     BS     BEL             SOH     EOT     ACK       ASCII  8 9 10  13                                                          32 126  95      32       48 57 0 9         65 90 26        97 122  26                         128 255   128  1    ASCII      128  128            x86                ASCII   ASCII           8         128                               ASCII       b7                                                                       1                   b7 1                 1                   b7 1                                    char                char a  1234  c                              1 2 3 4        1234       4      char  a                4         1234             a       1  a        4  a     x86        little endian                                     1234       1 4               0x04  0x01     1234    4               1234    1                1234    a                4 a              char b                             char                   cout",
        "objectID": "post/详解char类型",
        "date": "2017-06-24T10:24:21.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "向有序的环形单链表插入新节点",
        "uri": "post/向有序的环形单链表插入新节点",
        "content": "head                                   head     num        num                                     num       node          node               node             pre head  cur head next    pre cur            pre         mim   cur         num   node    pre   cur         node     head         1  3  4  1     mim 2        2      1 3              pre cur               3        node                            node                      node                          1   1  3  4  1     num 5        5         1      2      3  4  1     num 0         0         1       node                             node                     node             public static class Node   public int value  public Node next  public Node int data    this value   data      public static Node insertNum Node head  int num    Node node   new Node num    head    null    node next   node  return node    Node pre   head  Node cur   head next   cur    head     pre value   num    break    pre   cur  cur   cur next    pre next   node  node next   cur  return head value   num   head   node",
        "objectID": "post/向有序的环形单链表插入新节点",
        "date": "2017-08-17T16:01:21.000Z",
        "tags": [
            "Linked List"
        ],
        "categories": [
            "解题报告 "
        ]
    },
    {
        "title": "消费者的接收模式",
        "uri": "post/消费者的接收模式",
        "content": "DefaultMQPushConsumer                                   DefaultMQPullConsumer                      DefaultMQPushConsumer        DefaultMQPushConsumer                                              Offset       DefaultMQPushConsumer           package main import    context   fmt   os   time   github com apache rocketmq client go v2   github com apache rocketmq client go v2 consumer   github com apache rocketmq client go v2 primitive    func main     c  _    rocketmq NewPushConsumer  consumer WithGroupName  testGroup    consumer WithNameServer   string  127 0 0 1 9876       err    c Subscribe  test   consumer MessageSelector    func ctx context Context  msgs     primitive MessageExt   consumer ConsumeResult  error       range msgs   fmt Printf  subscribe callback   v  n   msgs i     return consumer ConsumeSuccess  nil    err    nil   fmt Println err Error         Note  start subscribe err   c Start   err    nil   fmt Println err Error    os Exit  1    time Sleep time Hour  err   c Shutdown   err    nil   fmt Printf  shutdown Consumer error   s   err Error        DefaultMQPushConsumer          Consumer GroupName NameServer        Topic                 GroupName Consumer GroupName     Consumer               GroupName        MessageModel       RocketMQ         Clustering Broadcasting   Clustering       ConsumerGroup GroupName       Consumer                  ConsumerGroup    Consumer             Topic                     Clustering    Broadcasting       ConsumerGroup    Consumer        Topic                       Consumer    Broadcasting    package main import    context   fmt   os   time   github com apache rocketmq client go v2   github com apache rocketmq client go v2 consumer   github com apache rocketmq client go v2 primitive    func main     c  _    rocketmq NewPushConsumer  consumer WithGroupName  testGroup    consumer WithNameServer   string  127 0 0 1 9876     consumer WithConsumeFromWhere consumer ConsumeFromFirstOffset   consumer WithConsumerModel consumer BroadCasting     err    c Subscribe  min   consumer MessageSelector    func ctx context Context  msgs     primitive MessageExt   consumer ConsumeResult  error    fmt Printf  subscribe callback   v  n   msgs  return consumer ConsumeSuccess  nil    err    nil   fmt Println err Error         Note  start subscribe err   c Start   err    nil   fmt Println err Error    os Exit  1    time Sleep time Hour  err   c Shutdown   err    nil   fmt Printf  Shutdown Consumer error   s   err Error        NameServer NameServer                                    ipl port p2 port ip3 port   Topic Topic                            Topic                Tag           selector    consumer MessageSelector  Type  consumer TAG  Expression   TagA    TagC     err    c Subscribe  TopicTest   selector  func ctx context Context  msgs     primitive MessageExt   consumer ConsumeResult  error    fmt Printf  subscribe callback   v  n   msgs  return consumer ConsumeSuccess  nil        Consumer    TopicTest    TagA tagB    Tag                  Tag                  Topic            DefaultMQPushConsumer       func  pc pushConsumer  Start   error                  func  pc pushConsumer  pullMessage request  PullRequest    pullMessage     switch      Broker                            switch result Status   case primitive PullFound  rlog Debug fmt Sprintf  Topic   s  QueueId   d found messages    request mq Topic  request mq QueueId   nil  prevRequestOffset    request nextOffset request nextOffset   result NextBeginOffset rt    time Now   Sub beginTime    time Millisecond increasePullRT pc consumerGroup  request mq Topic  int64 rt   pc processPullResult request mq  result  sd  msgFounded    result GetMessageExts   firstMsgOffset    int64 math MaxInt64  msgFounded    nil    len msgFounded     0   firstMsgOffset   msgFounded 0  QueueOffset increasePullTPS pc consumerGroup  request mq Topic  len msgFounded   pq putMessage msgFounded       result NextBeginOffset pc option PullThresholdForQueue   pc queueFlowControlTimes 1000    0   rlog Warning  the cached message count exceeds threshold  so flow control   map string interface     PullThresholdForQueue   pc option PullThresholdForQueue   minOffset   pq Min     maxOffset   pq Max     count   pq msgCache   size MiB    cachedMessageSizeInMiB   flowControlTimes   pc queueFlowControlTimes  rlog LogKeyPullRequest  request String         pc queueFlowControlTimes   sleepTime   _PullDelayTimeWhenFlowControl goto NEXT   cachedMessageSizeInMiB   pc option PullThresholdSizeForQueue   pc queueFlowControlTimes 1000    0   rlog Warning  the cached message size exceeds threshold  so flow control   map string interface     PullThresholdSizeForQueue   pc option PullThresholdSizeForQueue   minOffset   pq Min     maxOffset   pq Max     count   pq msgCache   size MiB    cachedMessageSizeInMiB   flowControlTimes   pc queueFlowControlTimes  rlog LogKeyPullRequest  request String         pc queueFlowControlTimes   sleepTime   _PullDelayTimeWhenFlowControl goto NEXT    pc consumeOrderly   pq getMaxSpan     pc option ConsumeConcurrentlyMaxSpan   pc queueMaxSpanFlowControlTimes 1000    0   rlo",
        "objectID": "post/消费者的接收模式",
        "date": "2020-04-20T15:51:58.000Z",
        "tags": [
            "rocketmq"
        ],
        "categories": [
            "rocketmq"
        ]
    },
    {
        "title": "写事务:WriteConcern",
        "uri": "post/写事务:WriteConcern",
        "content": "WriteConcern write Concern                         3       w    j    wtimeout    MongoDB   WriteConncern     w   w       number              w  0                                         w  1     writeConcern      Primary                                  x 1 primary          primary  crash        rollback   secondry1 secondry2          secondry1 secondry2   primory          x 1                majority       w 1 maxnumbers                                                  w   majority                                                       x 1  primary              secondry primary    x 1   primary  ack    primary        ack                      3    2                 primary crash  secondry1       x 1        MongoDB      Secondary    oplog           Primary        Secondary   Primary                     http   77g6ez com1 z0 glb clouddn com majority png Client Primary       writeConcern  w   majority   Primary                oplog                  oplog Secondary   oplog            Secondary   Primary     oplog        oplog    Secondary             oplog find      awaitData     find                          maxTimeMS    2s                              oplog           oplog  Secondary         oplog               Primary  replSetUpdatePosition       oplog      Primary         oplog                       w  all                                                                       j   Write Concern                    journal                 true       journal         false                    x 1  primary  primary     journal           wtimeout   wtimeout          w    1         w             number                                                                  wtimeout                                                 write Concern               majority                        writeconcern                              write Concern                                                       write Concern                           w  majority            w              https   mongoing com archives 2916",
        "objectID": "post/写事务:WriteConcern",
        "date": "2020-03-26T17:10:36.000Z",
        "tags": [
            "MongoDB"
        ],
        "categories": [
            "MongoDB"
        ]
    },
    {
        "title": "性能杀手：”潜伏”的memset",
        "uri": "post/性能杀手：”潜伏”的memset",
        "content": "memset     memset                                                                               char  buffer    char  malloc 1024   memset buffer  0x00  1024                             memset              1K               1M                     Redhat EL5 Intel R  Xeon R  CPU E5620 2 40GHz  gcc 4 1 2                memset             memset       memset 1M            1000  memset 1M      100 ms                                            1             10000          memset     memset                                     memset                    memset                                    char buffer 1024     0                                                                            memset    ltrace       int main    char buffer 1024   1024     0     libcstartmain 0x8048444  1  0xbff9b0a4  0x80484b0  0x80484a0 memset 0xbfe9afec    000   1048576    0xbfe9afec     exited  status 236                       0                                 int main    char buffer 1024   1024     0      libcstartmain 0x8048444  1  0xbfb54f84  0x80484b0  0x80484a0 memset 0xbfa54ecc    000   1048576    0xbfa54ecc     exited  status 204          ltrace                0              memset   memset     1024 1024                          memset           int main    char buffer 1024   1024          libcstartmain 0x8048444  1  0xbff0e844  0x80484b0  0x80484a0 memset 0xbfe0e78c    000   1048576    0xbfe0e78c     exited  status 140                   int main    char buffer 1024   1024     100     libcstartmain 0x8048444  1  0xbfea51b4  0x80484b0  0x80484a0 memset 0xbfda50fc    000   1048576    0xbfda50fc     exited  status 252        4                           memset         0                                                   0       0     0  char buffer 1024   1024     0   char buffer 1024   1024     0           memset      0                        include int main    char buffer 1024   1024      100   printf   d n    buffer     100 printf   d n     buffer 1      0                                           int main    char buffer 1024   1024     buffer    A   printf   d n    buffer     libcstartmain 0x8048444  1  0xbfbab8f4  0x80484b0  0x80484a0 printf   d n   6565    3     exited  status 3       ltrace                          memset     char                                                                                 char buffer 1024 1024    XXX          char buffer 1024 1024         memset                       memset         memset 1k                        memset                        1                      sprintf                                          2   C   struct                      gcc      O2  O3             memset                 Debug   Release              Debug                                  Debug                  Release",
        "objectID": "post/性能杀手：”潜伏”的memset",
        "date": "2017-06-24T10:27:08.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "修改矩阵",
        "uri": "post/修改矩阵",
        "content": "LeetCode 73  Set Matrix Zeroes Given m x n matrix  element 0  set its entire row column 0  place               in place      O 1                                                   0                                              0                                                               0 0                                col0 class Solution   public  void setZeroes vector    matrix    int col0   1  rows   matrix size    cols   matrix 0  size     int   0    0  i               int j   cols   1  j    1  j     matrixi    0    matrix0    0  matrixi   0   col0    0  matrixi   0         LeetCode 289  Game Life According Wikipedia s article   The Game Life  known simply Life  cellular automaton devised British mathematician John Horton Conway 1970   Given board m n cells  cell initial state live  1  dead  0   cell interacts its eight neighbors  horizontal  vertical  diagonal  using following four rules  taken above Wikipedia article   live cell fewer two live neighbors dies  caused under population  live cell two three live neighbors lives next generation  live cell three live neighbors dies  over population   dead cell exactly three live neighbors becomes live cell  reproduction  Write function compute next state  after one update  board given its current state  Follow up  solve in place  Remember board needs updated time  cannot update cells first use updated values update cells  question  represent board using 2D array  principle  board infinite  cause problems when active area encroaches border array  address problems          m n                      1     0              8                                2                                        2  3                                 3                                                3                                                                          8        8               8                       O 1                                                 0 1                                     cell                                   class Solution   public  void gameOfLife vector   board    int m   board size    n   m   board 0  size     0   m   n       vector   int i 0  i   1",
        "objectID": "post/修改矩阵",
        "date": "2017-06-24T20:32:04.000Z",
        "tags": [
            "Matrix"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "虚函数与纯虚函数的区别",
        "uri": "post/虚函数与纯虚函数的区别",
        "content": "Java               virtual",
        "objectID": "post/虚函数与纯虚函数的区别",
        "date": "2017-09-05T22:11:55.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "需要排序的最短子数组长度",
        "uri": "post/需要排序的最短子数组长度",
        "content": "air                    arr    1 5  3 4 2  6 7   4      5 3  4 2                           O N          O 1        noMinlndex  1                              min       arr i    arr i  min           min      arr i      noMinlndex                       noMinlndex     1                          0                                           max        arr i    air i  min    noMinIndex   i    else   min   Math min min  arr i         noMinIndex     1    return 0    int max   arr 0   int noMaxIndex    1   int   1     arr length  i       arr i    max    noMaxIndex   i    else   max   Math max max  arr i        return noMaxIndex   noMinIndex   1",
        "objectID": "post/需要排序的最短子数组长度",
        "date": "2017-08-28T14:16:17.000Z",
        "tags": [
            "Array"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "蓄水池算法",
        "uri": "post/蓄水池算法",
        "content": "C    rand                                                                                             Reservoir Sampling                                choice                choice                         choice                        choice                                                   1 n   n                                                                              k                  k          k 1    k  k 1                                                 n            k n                                                            public static int rand int max    return  int   Math random     max    1    public static int   getKNumsRand int k  int max     max val  for int  1  tem  i      if rand   i  0  val   tem  val      0 i     tem   tem  next    return val    private  ListNode  p         Solution object will instantiated called such  Solution obj   new Solution head   int param_1   obj getRandom       LeetCode 398  Random Pick Index Given array integers possible duplicates  randomly output index given target number  assume given target number exist array  Note  array size large  Solution uses extra space will not pass judge  Example  int   nums   new int    1 2 3 3 3   Solution solution   new Solution nums      pick 3  return either index 2  3  4 randomly  index equal probability returning  solution pick 3      pick 1  return 0  array nums 0  equal 1  solution pick 1                                      class Solution   public  vector n  Solution vector nums    n   nums    int pick int target    int count   0  res    1   int   0    n size      i    if n i     target  continue  count           1 if   rand   count   res   i    return res           Solution object will instantiated called such  Solution obj   new Solution nums   int param_1   obj pick target",
        "objectID": "post/蓄水池算法",
        "date": "2017-09-03T13:18:55.000Z",
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "寻找高效的字符串拼接方法",
        "uri": "post/寻找高效的字符串拼接方法",
        "content": "1          func BenchmarkAddStringWithOperator b  testing B    hello     hello  world     world     0    b N  i     _   hello         world     func BenchmarkAddMoreStringWithOperator b  testing B    hello     hello  world     world     0    b N  i     var str string    0    100  i     str    hello         world       golang                                                         gc                 2  fmt Sprintf   func BenchmarkAddStringWithSprintf b  testing B    hello     hello  world     world     0    b N  i     _   fmt Sprintf   s  s   hello  world             byte                                                   interface           3  strings Join   func BenchmarkAddStringWithJoin b  testing B    hello     hello  world     world     0    b N  i     _   strings Join   string hello  world            join                                                                                         4  buffer WriteString   func BenchmarkAddStringWithBuffer b  testing B    hello     hello  world     world     0    b N  i     var buffer bytes Buffer buffer WriteString hello  buffer WriteString      buffer WriteString world  _   buffer String       func BenchmarkAddMoreStringWithBuffer b  testing B    hello     hello  world     world     0    b N  i     var buffer bytes Buffer    0    100  i     buffer WriteString hello  buffer WriteString      buffer WriteString world    _   buffer String                                                     buffer Grow         capacity      BenchmarkAddStringWithOperator 8 50000000 28 4 ns op 0 B op 0 allocs op BenchmarkAddStringWithSprintf 8 10000000 234 ns op 48 B op 3 allocs op BenchmarkAddStringWithJoin 8 30000000 56 2 ns op 16 B op 1 allocs op BenchmarkAddStringWithBuffer 8 20000000 86 0 ns op 112 B op 1 allocs op BenchmarkAddMoreStringWithOperator 8 100000 14295 ns op 58896 B op 100 allocs op BenchmarkAddMoreStringWithBuffer 8 300000 4551 ns op 5728 B op 7 allocs op                     strings Join                              buffer WriteString                                                                                 fmt Sprintf",
        "objectID": "post/寻找高效的字符串拼接方法",
        "date": "2018-11-23T17:45:33.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "循环命令for详解",
        "uri": "post/循环命令for详解",
        "content": "for   bash shell   for                                                bash shell for         var list commands done  list                                                 for            for                          shell                               test don t know this ll work                                                          test don  t know  this ll  work                      shell                 for                                                         shell                                                for          list  Alabama Alaska Arizona Arkansas Colorado  list  list  Connecticut  state  list  list                                    list                                                                                                                  for             state   cat  file                 IFS           internal field separator   IFS       bash shell                    bash shell                             bash shell                                                                                 shell       IFS          bash shell                     IFS                      IFS    n                bash shell                      IFS                   IFS    n                                    IFS                                      IFS                        IFS                   IFS       IFS                      IFS OLD  IFS IFS    n  IFS  IFS OLD                   IFS                  for                                           shell                                       file  home rich test      d   file    echo   file directory  elif    f   file    echo   file file  fi done  Linux                                 file                                              for                           for    file  home rich  b   home rich badtest for                                                             C          bash shell     for        C     for                      shell              bash C     for            variable assignment   condition   iteration process    C     for       bash shell                 C               shell          C     for              1    10  a                  bash shell   for                                       expr               i 1",
        "objectID": "post/循环命令for详解",
        "date": "2017-08-09T18:46:05.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "循环命令while、until、break、continue详解",
        "uri": "post/循环命令while、until详解",
        "content": "while   while                                             0               test    test             while             while        testcommand commands done while      test command if then                     bash shell      test                  while      while                                                                               echo  var1    var1  ge 0   echo  This inside loop  var1     var1   1   done                                 var1                   var1            echo                                                             inside loop  1   while    var1    0   echo      var1                            echo           var         0     shell  test     whle                   while                                                until   until   while            until                                         0 bash shell                            0                until         until test commands commands done  while         until                               bash shell        other commands  break           shell  break                     var1 1 2 3 4 5 6 7 8 9 10    var1  eq 5   break fi echo  Iteration number   var1  done for                      if then     shell   break      for             while until                              break              break n   n                  n 1                 n  2 break                     1    4  a      echo  Outer loop   a     b   1  b   100  b         b  gt 4   break 2 fi echo   done done done continue   continue                                       shell             var1   1  var1   15  var1         var1  gt 5         var1  lt 10   continue fi echo  Iteration number   var1  done  if then             5   10  shell   continue                            if then                    break     continue                          continue n   n",
        "objectID": "post/循环命令while、until详解",
        "date": "2017-08-09T20:48:16.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "延迟消息的收发",
        "uri": "post/延迟消息的收发",
        "content": "RocketMQ         Broker                                                Message      setDelayTimeLevel  intlevel                                                   1s 5s 10s 30s 1m 2m 3m 4m 5m 6m 7m 8m 9m 10m 20m 30m 1h 2h    setDelayTimeLevel 3     10s      package main import    context   fmt   os   github com apache rocketmq client go v2   github com apache rocketmq client go v2 primitive   github com apache rocketmq client go v2 producer    func main     p  _    rocketmq NewProducer  producer WithNameServer   string  127 0 0 1 9876     producer WithRetry 2     err    p Start   err    nil   fmt Printf  start producer error   s   err Error    os Exit 1       0    10  i     msg    primitive NewMessage  test     byte  Hello RocketMQ Go Client     msg WithDelayTimeLevel 3  res  err    p SendSync context Background    msg  err    nil   fmt Printf  send message error   s n   err    else   fmt Printf  send message success  result  s n   res String        err   p Shutdown   err    nil   fmt Printf  shutdown producer error   s   err Error            package main import    context   fmt   os   time   github com apache rocketmq client go v2   github com apache rocketmq client go v2 consumer   github com apache rocketmq client go v2 primitive    func main     c  _    rocketmq NewPushConsumer  consumer WithGroupName  testGroup    consumer WithNameServer   string  127 0 0 1 9876       err    c Subscribe  TopicTest   consumer MessageSelector    func ctx context Context  msgs     primitive MessageExt   consumer ConsumeResult  error    _  msg    range msgs   t    time Now   UnixNano   int64 time Millisecond    msg BornTimestamp fmt Printf  Receive message msgId  s   d ms later n   msg MsgId  t    return consumer ConsumeSuccess  nil    err    nil   fmt Println err Error         Note  start subscribe err   c Start   err    nil   fmt Println err Error    os Exit  1    time Sleep time Hour  err   c Shutdown   err    nil   fmt Printf  Shutdown Consumer error   s   err Error",
        "objectID": "post/延迟消息的收发",
        "date": "2020-04-21T17:36:23.000Z",
        "tags": [
            "rocketmq"
        ],
        "categories": [
            "rocketmq"
        ]
    },
    {
        "title": "野指针及其危害",
        "uri": "post/野指针及其危害",
        "content": "NULL                         NULL      if                     if                                                    NULL                                       p free  delete       NULL      p",
        "objectID": "post/野指针及其危害",
        "date": "2017-09-05T21:47:16.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "一道题了解动态规划",
        "uri": "post/一道题了解动态规划",
        "content": "arr arr                                                  aim                                      arr  5 10 25 1  aim 1000          0 5        0 25 1      1000        res1   1 5       10 25 1      995        res2   2 5       10 25 1      990        res3          200 5       10 25 1      0        res201    reS1 reS2      res201                          processl arr index aim          arr index    N l         aim                     coins1    public static int coins1 int   arr  int aim     arr    null    arr length    0    aim  0 k         dpN 1            3   1        dpi 1   2       k              dpi        3     dpi dpi 1 dpi   public static int coins5 int   arr  int aim     arr    null    arr length    0    aim   0   dp j   arr i     0      return dp aim                                                                                                                                                                                                                       O N aim 2                                                                                                                              arr  20000 10000 1000   aim 2000000000                   3x2000000000                       1000       1 9      1 9      1 9",
        "objectID": "post/一道题了解动态规划",
        "date": "2017-08-22T15:31:13.000Z",
        "categories": [
            "算法"
        ]
    },
    {
        "title": "一行sed实现文本翻转",
        "uri": "post/一行sed实现文本翻转",
        "content": "1               2                    3                4                  5                        6       3   5                      7                                     sed  n                                      G                                                 1 G                                       h                                                                                     p              sed                          shell   cat data2 txt header line  first data line  second data line  last line      sed  n   1 G   h    p    data2 txt last line  second data line  first data line  header line",
        "objectID": "post/一行sed实现文本翻转",
        "date": "2017-08-12T15:19:46.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "一致性哈希算法-哈希环法",
        "uri": "post/一致性哈希算法-哈希环法",
        "content": "2  32                                               H     0  2  32   1        32                                        0 0          1      2 3 4 5 6     2  32   1     0           2  32   1  0  2  32   1                2  32           Hash              Hash                 IP                                                 IP                                         key       Hash                                                              Object A Object B Object C Object D                                    A     Node A  B    Node B  C    Node C  D    Node D                    Node C             A B D         C       Node D                                                                                                                  Node X            Object A B D         C        Node X                                                                                                                                                                                    k    K                                             1 K                   minimum disruption                                            ketama   hash ring                      z                                                                                    O logn               O n                                                                                                                                    6 2          N0 N1 N2 N3       1 2 3 2            V N2        N2                                                                                                                               Node A            Node B                                                                                 IP                                                        Node A 1   Node A 2   Node A 3   Node B 1   Node B 2   Node B 3                                                      Node A 1   Node A 2   Node A 3              Node A                                                         ketama              40                                                                         100                          10           1000           3 2                                                                           ketama           40              O n   O 40n         O logn     O log 40n                                                                                                                              HASH                                  CPU                                               KEY                               KEY                                   KEY             KEY                         KEY                   HASH               HASH                 HAHS                                   HASH                                   HASH        HASH         set  set      HASH                                                                                   set           set        key          set      KEY                                               HASH                              set                set               set                                  HASH                                       KEY                       key hash                                               key                        hash            hash    key                            key                         key             hash                                                         key                                   key                                                         10007                             key                                                                                                                                                      N key            N                      N                                                                                         N                                                            set                           HASH                                          HASH               set            set                         set                                                                                            HASH                                                                                            KEY                                                                                                                                                                                                               log                                                                                                                                                HASH              KEY                      HASH              HASH   5              30 KEY       10W s             HASH                             30 KEY     HASH              QPS 10W S      QPS 300W S                                       HASH                 30 KEY      5          6 KEY              6            QPS  50W S                           HASH                  5      QPS 10W s       QPS 50W s     10W     HASH  5             QPS  100W S         10W QPS    KEY                                                                              HASH            ",
        "objectID": "post/一致性哈希算法-哈希环法",
        "date": "2019-10-09T21:02:54.000Z",
        "tags": [
            "一致性哈希"
        ],
        "categories": [
            "算法"
        ]
    },
    {
        "title": "一致性哈希算法-跳跃一致性哈希法",
        "uri": "post/一致性哈希算法-跳跃一致性哈希法",
        "content": "Google  John Lamping  Eric Veach                              golang        func JumpHash key uint64  buckets int  int   var b  j int64 buckets  33  1      return int b                       64  key                             0                                                                                                                        f key  n               0 n                    n 1        key       0  n 2             1 2      0 1 2      1  n 3      1 3      0 1 3      1 1 3      2           n  n 1  f key  n      n  n 1        1  n 1      n                                        k                           k            k           Google               k                                                                                  k         k                k                  j     j 1     1  j 1               j 1                        random next    b 1  r     j        b 1  r        ch       int ch int key  int num_buckets    random seed key   int b    1     bucket number previous jump int j   0     bucket number current jump  j  33  1      r   random next    j   floor  b   1    r             key keyx 1            j  b 1 x y              y x           0 1           key  33  1  key   31     1   key 64    33    31       1 2 31 1  int64 1  33  1  int64 1  33  2 31     1    c        1                                                                                                                                                                     jump hash                                              Standard Error                                                                                                                                         O N                                                                                       0                     9 3                                                                                                                                                                          11 1   V Ni     Ni             N0  N1  N2       3 2 1           3 3 1                                              kvdb                                                                                                                                                         relay                                          n    n 1             ch k n               n      k          10 1               Nn    k                  Nold ch k n         get k         k            Nn                            Nold               Nn   k                                                                                                   10 2        N4                   n                            N4                                             10 2  k2        N3                             10 3     N1                                                              n                                                                                                                                                                                                                                                                             10 4       N4    k2        N3     N4      N3                         10 5       N1       k  k1  k3                                                                                                                                                                    package main import  fmt  func main     buckets    make map int int  10  count    10    uint64 0    33  1      checkAlive    nil     checkAlive int b     return JumpHash key 1  buckets  checkAlive             key 1             return int b                                                                   n                  https   zhuanlan zhihu com p 34985026 https   mp weixin qq com s yyqEwfEgEWYwWoalFLcuSw https   colobu com 2016 03 22 jump consistent hash  https   www owenzhang net blog tag jump consistent hash https   yikun github io 2016 06 09  E4 B8 80 E8 87 B4 E6 80 A7 E5 93 88 E5 B8 8C E7 AE 97 E6 B3 95 E7 9A 84 E7 90 86 E8 A7 A3 E4 B8 8E E5 AE 9E E8 B7 B5  https   www lanindex com  E4 B8 80 E8 87 B4 E6 80 A7 E5 93 88 E5 B8 8C E7 AE 97 E6 B3 95 EF BC 88consistent hash EF BC 89 E7 9A 84 E9 BB 91 E7 A7 91 E6 8A 80  https   writings sh post consistent hashing algorithms part 3 jump consistent hash",
        "objectID": "post/一致性哈希算法-跳跃一致性哈希法",
        "date": "2019-10-09T21:03:05.000Z",
        "tags": [
            "一致性哈希"
        ],
        "categories": [
            "算法"
        ]
    },
    {
        "title": "一致性哈希算法-Maglev算法",
        "uri": "post/一致性哈希算法-Maglev算法",
        "content": "Maglev        Maglev       Google     2016          1       2008            Maglev      Maglev                   Maglev       Maglev Consistent Hashing                                                       Maglev                        lookup table       k                         1 1           entry                           M        k                entry hash k  M                                      M         entry               M     permutation                                                                                                                                        1 2                                      1 3                                                B0              3       B0   entry 3      B1      B1           0       B1   entry 0      B2        entry 3            B2              4       B2   entry 4            B0                2       0    entry 0                    3      4                   1          B0   entry 1                                                          h1     h2               b                 offset     skip     offset   h_1 b     M    skip   h_2 b      M   1    1             j       permutation               b                permutation left j right     offset   j  times skip     M                                                                                            Google                                                     M                                                          Maglev                                                                                   Maglev                                                  1 4              2             entry left 2 right                                                                                                                      1 4             2                  B_0      Maglev                                                                                                                                                                                                                              2 1          B1                                    7     3                 0   2        B1                      6      B0  rightarrow B2            B0       B1     entry left 2 right            entry left 6 right      B_2           2 2          B3                                    7     3                 1   5        B3                        6      B0  rightarrow B2                2 2                 B0                 2 3                   7      4              3   4         B0                         1   6      B3  rightarrow B1     B2  rightarrow B3                                           Maglev                                     Google                       Maglev           Maglev                       O 1                                       N           permutation i        i         next i           i                                       i                                 c            i         entry                                                                                         N   M                        3 2                 3           3                     4 3 2 1              4 1  times 4      2              O   M 1  times M  2            O M 2                                                                entry                           1                             entry                M 1                   1  M 1                                          M            M  M 1                         entry     n                     M  M n                                      M M   M  M 1          M    M    M 1         sum   n 1     M     frac   M    n         1     1 M           M                                              O Mln M          O Mlog M          O ln n     O  frac   log 2  n      log_ 2  e              M  gg N    M       N                                                            M                                N               M           Google              M         100  times N                              1     Maglev            Maglev                                      4 1    Maglev             endezvous                              65537     655373                                          Maglev                              Maglev                                                                                                     Maglev                        4 2   Google  Maglev                                              65537     655373                                         Maglev                                    Google       65537                                 65537       655373               1 8ms        22 9ms                             Google                                                   Google                                                                     Maglev            Maglev                                 kvdb                                                                                                                                              relay                                                              2 2        k             B0     ",
        "objectID": "post/一致性哈希算法-Maglev算法",
        "date": "2019-10-09T21:03:19.000Z",
        "tags": [
            "一致性哈希"
        ],
        "categories": [
            "算法"
        ]
    },
    {
        "title": "一致性哈希算法概论",
        "uri": "post/一致性哈希算法概论",
        "content": "kvdb            kvdb  key value database                                                                                          sharding        1 1   kvdb                                                                 S1        k                S2         set k v      N3        get k      N0    get        S2               S1              S_2                              key                                                                        key        n                                     Mod N                         2 1           k       hash                               md5  sha1      uint32                                     hash k  n    hash                                            2 2                  kvdb                      Mod N                                                                                  rehash                         kvdb                                             Mod N                     Mod N                                  3 1           N4              N2   k           N1       kvdb                 k   N2     N1                                 N1              3 1                                                                   3 2             N2   k         N0                                         3 3 4    5                        hash k                                                                                  hash k      4  5                   0 1 2 3 20 21 22 23                                               k                n                                                        f k n  m         n                    k        n              m   m   n                               k          m         1 n            k  n                                                                           k n                                                                                 Maglev                                                                                                                                                                    O log n                                   O log n                Maglev              O 1                                          Cache                       Balance                                                                    Monotonicity                                                                                                          Spread                                                                                                                                                                                                                            Load                                                                                                                                                                                                                                                                                                         Shard   Shard                               Shard                    10 Shard              120      Shard   12        12 Shard       Shard   2           Shard      Shard    10                20 120 1 6         https   zhuanlan zhihu com p 34985026 https   mp weixin qq com s yyqEwfEgEWYwWoalFLcuSw https   colobu com 2016 03 22 jump consistent hash  https   www owenzhang net blog tag jump consistent hash https   yikun github io 2016 06 09  E4 B8 80 E8 87 B4 E6 80 A7 E5 93 88 E5 B8 8C E7 AE 97 E6 B3 95 E7 9A 84 E7 90 86 E8 A7 A3 E4 B8 8E E5 AE 9E E8 B7 B5  https   www lanindex com  E4 B8 80 E8 87 B4 E6 80 A7 E5 93 88 E5 B8 8C E7 AE 97 E6 B3 95 EF BC 88consistent hash EF BC 89 E7 9A 84 E9 BB 91 E7 A7 91 E6 8A 80  https   writings sh post consistent hashing algorithms part 1 the problem and the concept",
        "objectID": "post/一致性哈希算法概论",
        "date": "2019-10-09T20:03:19.000Z",
        "tags": [
            "一致性哈希"
        ],
        "categories": [
            "算法"
        ]
    },
    {
        "title": "一种消息接收并打印的结构设计",
        "uri": "post/一种消息接收并打印的结构设计",
        "content": "1 N                   1 N            O N        public static class Node   public int num  public Node next  public Node int num    this num   num      public static class MessageBox   private HashMap headMap  private HashMap tailMap  private int lastPrint  public MessageBox     headMap   new HashMap    tailMap   new HashMap    lastPrint   0    public void receive int num     num   1    return    Node cur   new Node num   headMap put num  cur   tailMap put num  cur    tailMap containsKey num   1     tailMap get num   1  next   cur  tailMap remove num   1   headMap remove num      headMap containsKey num   1     cur next   headMap get num   1   tailMap remove num   headMap remove num   1      headMap containsKey lastPrint   1     print        private void print     Node node   headMap get   lastPrint   headMap remove lastPrint    node    null    System out print node num         node   node next  lastPrint      tailMap remove   lastPrint   System out println",
        "objectID": "post/一种消息接收并打印的结构设计",
        "date": "2017-09-03T18:07:34.000Z",
        "tags": [
            "Design"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "异步任务队列:machinery使用方法",
        "uri": "post/异步任务队列:machinery使用方法",
        "content": "Config machinery       config   Config              Config holds configuration program type Config struct   Broker string yaml  broker  envconfig  BROKER  DefaultQueue string yaml  defaultqueue  envconfig  DEFAULTQUEUE  ResultBackend string yaml  resultbackend  envconfig  RESULTBACKEND  ResultsExpireIn int yaml  resultsexpirein  envconfig  RESULTSEXPIREIN  AMQP  AMQPConfig yaml  amqp  SQS  SQSConfig yaml  sqs  Redis  RedisConfig yaml  redis  GCPPubSub  GCPPubSubConfig yaml     ignored  true  MongoDB  MongoDBConfig yaml     ignored  true  TLSConfig  tls Config    NoUnixSignals   when set disables signal handling machinery NoUnixSignals bool yaml  nounixsignals  envconfig  NOUNIXSIGNALS  DynamoDB  DynamoDBConfig yaml  dynamodb    machinery          YAML                           cnf  err    config NewFromEnvironment true    YAML      cnf  err    config NewFromYaml  config yml   true             10            false        machinery    Config                          config yaml      broker   redis   localhost 6379   broker   redis   localhost 6379   broker   https   sqs us west 2 amazonaws com 123456789012  defaultqueue  machinerytasks result_backend   redis   localhost 6379   result_backend   memcache   localhost 11211   result_backend   mongodb   localhost 27017  resultsexpirein  3600000 broker       AMQP        AMQP URL  amqp    username password   host  port      amqp   guest guest localhost 5672 Redis          Redis URL  redis   password  host port redis socket    password   path to file sock   db_num      redis   localhost 6379  password redis   password localhost 6379 redis socket   password  path to file sock  0 default_queue          machinery_tasks  result_backend                 Redis          Redis URL  redis   password  host port redis socket    password   path to file sock   db_num      redis   localhost 6379  password redis   password localhost 6379 redis socket   password  path to file sock  0 cluster redis   host1 port1 host2 port2 host3 port3 Memcache        Memcache URL  memcache   host1 port1      hostN  portN        memcache   localhost 11211 single instance  memcache   10 0 0 1 11211 10 0 0 2 11211 cluster AMQP        AMQP URL  amqp    username password   host  port      amqp   guest guest localhost 5672         AMQP            MongoDB        Mongodb URL  mongodb   username password  host1  port1     hostN  portN    options       mongodb   localhost 27017 taskresults           MongoDB    resultsexpirein                      3600 1     AMQP RabbitMQ                            Exchange         machinery_exchange ExchangeType         direct QueueBindingArguments    AMQP                BindingKey                  machinery_task PrefetchCount          1                  Server Machinery                       Server   Server   Machinery               server        type Server struct   config  config Config registeredTasks map string interface   broker brokersiface Broker backend backendsiface Backend prePublishHandler func  tasks Signature         server    import    github com RichardKnop machinery v1 config   github com RichardKnop machinery v1    var cnf    config Config  Broker   amqp   guest guest localhost 5672    DefaultQueue   machinery_tasks   ResultBackend   amqp   guest guest localhost 5672    AMQP   config AMQPConfig  Exchange   machinery_exchange   ExchangeType   direct   BindingKey   machinery_task        server  err    machinery NewServer cnf  err    nil      something error                                    Register tasks tasks    map string interface     add   exampletasks Add   multiply   exampletasks Multiply   sum_ints   exampletasks SumInts   sum_floats   exampletasks SumFloats   concat   exampletasks Concat   split   exampletasks Split   panic_task   exampletasks PanicTask   longrunningtask   exampletasks LongRunningTask    err  server RegisterTasks tasks  err    nil      something error   Worker   worker                 workers    worker            Worker represents single worker process type Worker struct   server  Server ConsumerTag string Concurrency int Queue string errorHandler func err error  preTaskHandler func  tasks Signature  postTaskHandler func  tasks Signature         server    worker        worker     worker    server NewWorker  worker_name   10    worker                     Worker Process      goroutine                         worker            worker1 worker2           server NewWorker        Worker Process          worker     1          0                      Handler              hook                                                                            worker                                                                                           errorhandler    func err error    log ERROR Println  I error handler    err    pretaskhandler    func signature  tasks Signature    log INFO Println  I start task handler for    signature Name    posttaskhandler    func signature  tasks Signature    log INFO Println  I end task handler for    signature Name    worker SetPostTaskHandler posttaskhandler  worker SetErrorHandler errorhandler  worker SetPreTaskHandler pretaskha",
        "objectID": "post/异步任务队列:machinery使用方法",
        "date": "2019-10-16T21:09:01.000Z",
        "tags": [
            "machinery"
        ],
        "categories": [
            "machinery"
        ]
    },
    {
        "title": "异步任务队列:machinery源码剖析",
        "uri": "post/异步任务队列:machinery源码剖析",
        "content": "mysql       elasticsearch                                                                                                                                                                                                                                                                                                                                                            python  celery PHP laraval   Queues                            golang       go                    celery  laraval                         machinery            machinery                                                                  Workflow   Chain Group Chord  Brokers   Redis  AMQP  AWS SQS  Backends   Redis  Memcache  AMQP  MongoDB   machinery v1 stable       go github com RichardKnop machinery v1                                                                                                     machinery               Server                               Broker             machinery      Redis  AMQP  SQS  Worker                       Backend                                              Broker machinery broker         Redis AMQP SQS           redis                           API            machinery                            machinery Broker                             GetConfig    config Config SetRegisteredTaskNames names   string  IsTaskRegistered name string  bool StartConsuming consumerTag string  concurrency int  p TaskProcessor   bool  error  StopConsuming   Publish task  tasks Signature  error GetPendingTasks queue string      tasks Signature  error             machinery          StartConsuming              Broker                    StopConsuming           go       gracefully stop      StartConsumin                           func  b  RedisBroker  StartConsuming consumerTag string  concurrency int  taskProcessor TaskProcessor   bool  error               go  go func           select   case              Tracing         func  worker Worker  Process signature tasks Signature  error                      taskFunc  err    worker server GetRegisteredTask signature Name  err    nil   return nil             Received err   worker server GetBackend   SetStateReceived signature   err    nil   return fmt Errorf  Set state received error   s   err                          worker    task  err    tasks New taskFunc  signature Args  err    nil   worker taskFailed signature  err  return err      tracing   taskSpan    tracing StartSpanFromHeaders signature Headers  signature Name  tracing AnnotateSpanWithSignatureInfo taskSpan  signature  task Context   opentracing ContextWithSpan task Context  taskSpan            Started err   worker server GetBackend   SetStateStarted signature   err    nil   return fmt Errorf  Set state started error   s   err            results  err    task Call   err    nil      tasks ErrRetryTaskLater returned task     retry task specified duration retriableErr  ok    interface   err   tasks ErrRetryTaskLater  ok   return worker retryTaskIn signature  retriableErr RetryIn         Otherwise  execute default retry logic based signature RetryCount    signature RetryTimeout values signature RetryCount   0   return worker taskRetry signature    return worker taskFailed signature  err    return worker taskSucceeded signature  results    machinery                                                                                    taskSucceeded                                     chord             task chrod                 chord        Workflow           func  worker Worker  taskSucceeded signature tasks Signature  taskResults    tasks TaskResult  error             err    worker server GetBackend   SetStateSuccess signature  taskResults   err    nil   return fmt Errorf  Set state success error   s   err                _  successTask    range signature OnSuccess       immutable false       signature Immutable    false      Pass results task success callbacks _  taskResult    range taskResults   successTask Args   append successTask Args  tasks Arg  Type  taskResult Type  Value  taskResult Value         worker server SendTask successTask             chord        shouldTrigger  err    worker server GetBackend   TriggerChord signature GroupUUID  err    nil   return fmt Errorf  Trigger chord error   s   err             group            _  taskState    range taskStates    taskState IsSuccess     return nil   signature ChordCallback Immutable    false   _  taskResult    range taskState Results   signature ChordCallback Args   append signature ChordCallback Args  tasks Arg  Type  taskResult Type  Value  taskResult Value                chord   _  err   worker server SendTask signature ChordCallback  err    nil   return err   return nil           taskFailed                                            OnError      func  worker Worker  taskFailed signature tasks Signature  taskErr error  error             Failure err    worker server GetBackend   SetStateFailure signature  taskErr Error     err    nil   return fmt Errorf  Set state failure error   s   err           Trigger error callbacks _  errorTask    range signature OnError      Pass error first argument error c",
        "objectID": "post/异步任务队列:machinery源码剖析",
        "date": "2019-10-17T18:22:26.000Z",
        "tags": [
            "machinery"
        ],
        "categories": [
            "machinery"
        ]
    },
    {
        "title": "引爆区间气球",
        "uri": "post/引爆区间气球",
        "content": "LeetCode 312  Burst Balloons Given n balloons  indexed 0 n 1  balloon painted number represented array nums  asked burst balloons  burst balloon will nums left  nums i  nums right  coins  left right adjacent indices i  burst  left right becomes adjacent  Find maximum coins collect bursting balloons wisely  Note   1  may imagine nums  1    nums n    1  not real therefore not burst them   2  0   n   500  0   nums i    100 Example  Given  3  1  5  8  Return 167 nums    3 1 5 8       3 5 8       3 8       8         coins   315   358   138   181   167                   DP           i    j                 k i j              dpi         dpi   max i   nums    nums insert nums begin   1   nums push_back 1   int n nums size    vector  dp n vector n 0     dp     0        for int i 2 i",
        "objectID": "post/引爆区间气球",
        "date": "2017-06-24T22:11:25.000Z",
        "tags": [
            "区间DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "用户账户和组管理",
        "uri": "post/用户账户和组管理",
        "content": "Linux      Linux                  Linux                                                   etc passwd    Linux                         UID          etc passwd                     Linux       etc passwd         root x 0 0 root  root  bin bash root     Linux              UID 0 Linux                                                                                               Linux                          root                                      root                       Linux                                                Linux        500   UID             UID                    Linux    500         UID            Linux                   etc passwd             UID       etc passwd                etc passwd              x                         Linux                       shadow        etc shadow                            etc shadow     etc shadow   Linux                 root       etc shadow          etc passwd       etc shadow                                rich  1  FfcK0ns f1UgiyHQ25wrB hykCn020 11627 0 99999 7      etc shadow          9       shadow      Linux                                                              Linux             useradd                            HOME     useradd                                   etc default useradd            D   useradd       Linux                                   useradd       D                                      useradd              HOME                HOME                   HOME                bash shell                  useradd      HOME      m          HOME    useradd      HOME      etc skel                                                                            D                          useradd  D  s  bin tsch                   userdel               userdel        etc passwd                                  r   userdel      HOME                                                  1  usermod usermod                          etc passwd                                       useradd             c        e        g                                  l             L                 p          U               L                                                     U       2  passwd chpasswd                 passwd        passwd                                  root               e                                                                                chpasswd         chpasswd                                                           userid passwd             chpasswd   users txt 3  chsh chfn chage chsh chfn chage                chsh                shell       shell              shell   chsh  s  bin csh test Changing shell test  Shell changed  chfn       etc passwd                  chfn       Unix finger                                                  finger           Linux               chfn                               chfn test Changing finger information test  Name     Ima Test Office     Director Technology Office Phone      123 555 1234 Home Phone      123 555 9876 Finger information changed  finger test Login  test Directory   home test Office  Director Technology Name  Ima Test Shell   bin csh Office Phone   123 555 1234 Home Phone   123 555 9876 logged in  No mail  No Plan     etc passwd                    grep test  etc passwd test x 504 504 Ima Test Director Technology  123 555  1234  123 555 9876  home test  bin csh              etc passwd         chage                               chage                       YYYY MM DD         1970 1 1            chage                                                                                              Linux                                                    Linux                 group    etc group                             etc group                  bin x 1 root bin daemon mysql x 27   UID   GID                            500 GID        GID   500      etc group   4            GID                                                             etc group              usermod                                                                                   etc passwd                                 etc group          groupadd                                 groupadd                       usermod           usr sbin usermod  G shared rich usermod    G                                            g                      G                                                                                etc group                    groupmod           GID   g         n           GID                            GID",
        "objectID": "post/用户账户和组管理",
        "date": "2017-08-07T23:05:37.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "用一个栈实现另一个栈的排序",
        "uri": "post/用一个栈实现另一个栈的排序",
        "content": "stack         help  stack   pop           cur  help            cur     help        cur    help    cur  help        help            stack   cur     help        cur  help              stack          help    help           stack        public static void sortStackByStack Stack stack    Stack help   new Stack      stack isEmpty      int cur   stack pop       help isEmpty      help peek     cur    stack push help pop       help push cur       help isEmpty      stack push help pop",
        "objectID": "post/用一个栈实现另一个栈的排序",
        "date": "2017-08-16T17:45:36.000Z",
        "tags": [
            "单调栈"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "用引用方式捕捉异常",
        "uri": "post/用引用方式捕捉异常",
        "content": "catch                      catch                                by pointer       by value        by reference                    catch pointer    throw           catch                                                                                 c class exception          void someFunction     static exception ex      throw  ex        void doSomething     try   someFunction      catch  exception  ex                                                                                                                                            c void someFunction     exception ex      throw  ex                          catch                                            new heap object    c void someFunction         throw new exception                                    catch                                                                                                                               catch by value                                                                slicing problem                                      sliced off      sliced                                                                                   catch by reference                                                                                slicing problem                                              c void someFunction          a validation         throw Validation_error            void doSomething     try   someFunction      catch  exception  ex    cerr   ex what                          catch reference                                   slicing",
        "objectID": "post/用引用方式捕捉异常",
        "date": "2017-09-01T17:20:45.000Z",
        "tags": null
    },
    {
        "title": "用Etcd实现分布式锁",
        "uri": "post/用Etcd实现分布式锁",
        "content": "Etcd v3    client    concurrency                                     code                Copyright 2016 etcd Authors       Licensed Apache License  Version 2 0  the  License       may not use file except compliance License     may obtain copy License       http   www apache org licenses LICENSE 2 0       Unless required applicable law agreed writing  software    distributed License distributed  AS IS  BASIS     WITHOUT WARRANTIES CONDITIONS KIND  either express implied     License specific language governing permissions    limitations License  package concurrency import    context   fmt   sync  v3  github com coreos etcd clientv3  pb  github com coreos etcd etcdserver etcdserverpb       Mutex implements sync Locker interface etcd type Mutex struct   s  Session pfx string myKey string myRev int64 hdr  pb ResponseHeader   func NewMutex s Session  pfx string  Mutex   return  Mutex s  pfx             1  nil       Lock locks mutex cancelable context  context canceled    trying acquire lock  mutex tries clean its stale lock entry  func  m  Mutex  Lock ctx context Context  error   s    m s client    m s Client     m pfx       service lock     s Lease     64      etcd v3   lease        concurrency   lease   session            lease                 64        m myKey    service lock 12345  m myKey   fmt Sprintf   s x   m pfx  s Lease      etcdv3              v2 Compare And put   etcdv3                  compare                                         C                              key     key   etcd          key                       compare        key createRevision   revision 0      key   revision  0      key    revision etcd             etcd                  v2  index createRevision     key             key     createRivision 0        key revision 0 0    key  cmp    v3 Compare v3 CreateRevision m myKey        0     put self lock waiters via myKey  oldest waiter holds lock    put key       put    v3 OpPut m myKey      v3 WithLease s Lease        reuse key case session already holds lock          key                                                                      v3 OpGet m myKey     fetch current holder complete uncontended path one RPC              key getOwner    v3 OpGet m pfx  v3 WithFirstCreate       resp  err    client Txn ctx  If cmp  Then put  getOwner  Else get  getOwner  Commit   err    nil   return err   m myRev   resp Header Revision        key   CreateRevision         revision      CreateRevision Revision        resp Succeeded   m myRev   resp Responses 0  GetResponseRange   Kvs 0  CreateRevision      no key prefix   minimum rev key  already hold lock ownerKey    resp Responses 1  GetResponseRange   Kvs                    owner createrevision     kv revision                          revision      key revision                revision 5      key createRevision 3          waitDeletes      revision 5      key createRevision 5       len ownerKey     0    ownerKey 0  CreateRevision    m myRev   m hdr   resp Header return nil          code       myRev         key revision                                 revision    revision kv      waitDeletes     m pfx   service lock         createRivision    m myRev 1  keys                    key revision  key               wait deletion revisions prior myKey hdr  werr    waitDeletes ctx  client  m pfx  m myRev 1     release lock key wait failed werr    nil   m Unlock client Ctx      else   m hdr   hdr   return werr   func  m  Mutex  Unlock ctx context Context  error   client    m s Client   _  err    client Delete ctx  m myKey   err    nil   return err   m myKey     x00  m myRev    1 return nil   func  m  Mutex  IsOwner   v3 Cmp   return v3 Compare v3 CreateRevision m myKey        m myRev    func  m  Mutex  Key   string   return m myKey      Header response header received etcd acquiring lock  func  m Mutex  Header   pb ResponseHeader   return m hdr   type lockerMutex struct   Mutex   func  lm  lockerMutex  Lock     client    lm s Client   err    lm Mutex Lock client Ctx     err    nil   panic err      func  lm  lockerMutex  Unlock     client    lm s Client   err    lm Mutex Unlock client Ctx     err    nil   panic err         NewLocker creates sync Locker backed etcd mutex  func NewLocker s  Session  pfx string  sync Locker   return  lockerMutex NewMutex s  pfx              key                   createRevision  key           waitDeletes efficiently waits until keys matching prefix no greater    create revision  func waitDeletes ctx context Context  client v3 Client  pfx string  maxCreateRev int64   pb ResponseHeader  error      WithLastCreate   CreateRevision         5 4 3 2 1   WithMaxCreateRev    maxCreateRev  key getOpts    append v3 WithLastCreate    v3 WithMaxCreateRev maxCreateRev     resp  err    client Get ctx  pfx  getOpts     err    nil   return nil  err   len resp Kvs     0   return resp Header  nil   lastKey    string resp Kvs 0  Key           err   waitDelete ctx  client  lastKey  resp Header Revision   err    nil   return nil  err          revision           revision         ABA   func waitDelete ctx context Context  client  v3 Client  key string  rev int64  error   cctx  ",
        "objectID": "post/用Etcd实现分布式锁",
        "date": "2019-09-06T20:49:18.000Z",
        "categories": [
            "etcd"
        ]
    },
    {
        "title": "用eTcd实现选举",
        "uri": "post/用Etcd实现选举",
        "content": "etcd                                  1 MVCC key                0  2 CAS     MVCC          if version    0  set key value                  set    3 Lease      key                  key       4 Watch     key        key                etcd           etcdctl ctlv3    master                                               Copyright 2016 etcd Authors       Licensed Apache License  Version 2 0  the  License       may not use file except compliance License     may obtain copy License       http   www apache org licenses LICENSE 2 0       Unless required applicable law agreed writing  software    distributed License distributed  AS IS  BASIS     WITHOUT WARRANTIES CONDITIONS KIND  either express implied     License specific language governing permissions    limitations License  package concurrency import    context   errors   fmt  v3  github com coreos etcd clientv3  pb  github com coreos etcd etcdserver etcdserverpb   github com coreos etcd mvcc mvccpb    var   ErrElectionNotLeader   errors New  election  not leader   ErrElectionNoLeader   errors New  election  no leader     type Election struct   session  Session keyPrefix string leaderKey string leaderRev int64 leaderSession  Session hdr  pb ResponseHeader      NewElection returns new election given key prefix  func NewElection s Session  pfx string  Election   return  Election session  s  keyPrefix  pfx             ResumeElection initializes election known leader  func ResumeElection s Session  pfx string  leaderKey string  leaderRev int64  Election   return  Election  session  s  leaderKey  leaderKey  leaderRev  leaderRev  leaderSession  s         etcd        prefix path    key  key   lease   lease id      key     revision       prefix path  key    revision         Campaign puts value eligible election  blocks until    elected  error occurs  context cancelled  func  e  Election  Campaign ctx context Context  val string  error   s    e session client    e session Client          key   prefix   lease id k    fmt Sprintf   s x   e keyPrefix  s Lease      Txn transaction   Txn    key CAS    key           txn    client Txn ctx  If v3 Compare v3 CreateRevision k        0   txn   txn Then v3 OpPut k  val  v3 WithLease s Lease      txn   txn Else v3 OpGet k   resp  err    txn Commit   err    nil   return err   e leaderKey  e leaderRev  e leaderSession   k  resp Header Revision  s     key     resp Succeeded          kv kv    resp Responses 0  GetResponseRange   Kvs 0  e leaderRev   kv CreateRevision    key value   value         leader              value          string kv Value     val                 err   e Proclaim ctx  val   err    nil   e Resign ctx  return err                     create revision   path             leader _  err   waitDeletes ctx  client  e keyPrefix  e leaderRev 1  err    nil      clean case context cancel select   case",
        "objectID": "post/用Etcd实现选举",
        "date": "2019-09-07T16:32:17.000Z",
        "categories": [
            "etcd"
        ]
    },
    {
        "title": "用GDB调试程序",
        "uri": "post/用GDB调试程序",
        "content": "http   blog csdn net haoel GDB   GDB GNU            UNIX                             VC BCB IDE          UNIX           GDB        VC BCB                                        GDB                                                                                                                                   GDB                                      GDB                                                                     GDB     GDB      C C         C C                                      cc gcc g      g              gcc  g hello c  o hello g    g hello cpp  o hello      g                                    g                               gdb        GDB          gdb   program                    gdb   core  gdb           core   core        core dump        gdb                                      ID gdb   attach        program   PATH           GDB          GDB              gdb  help                      symbols  s               se file                             core  c    core dump core     directory  d                          PATH        GDB        gdb       gdb            gdb           gdb       help             home hchen  gdb GNU gdb 5 1 1 Copyright 2002 Free Software Foundation  Inc  GDB free software  covered GNU General Public License  welcome change and or distribute copies certain conditions  Type  show copying  conditions  absolutely no warranty GDB  Type  show warranty  details  GDB configured  i386 suse Linux    gdb  help List classes commands  aliases    Aliases commands breakpoints    Making program stop certain points data    Examining data files    Specifying examining files internals    Maintenance commands obscure    Obscure features running    Running program stack    Examining stack status    Status inquiries support    Support facilities tracepoints    Tracing program execution without stopping program user defined    User defined commands Type  help  followed class name list commands class  Type  help  followed command name full documentation  Command name abbreviations allowed unambiguous   gdb  gdb      gdb          help      gdb                     help      help breakpoints                  help           gdb                                                           Linux         TAB                   gdb                 func             break func       b func  gdb  b func Breakpoint 1 0x8048458  file hello c  line 10        b   TAB        b        gdb  b backtrace break bt  gdb                      gdb  b make_       TAB         makeasectionfromfile make_environ makeabssection makefunctiontype makeblockvector makepointer_type makecleanup makereference_type makecommand makesymbolcompletionlist  gdb  b make_ GDB   make                      C                    gdb  b  bubble  M   bubble double double  bubble int int   gdb  b  bubble        C                  M       TAB            gdb     quit     q     GDB   UNIX shell    gdb         UNIX shell      gdb shell       shell   UNIX shell        SHELL    UNIX shell          SHELL         UNIX   shell  bin sh   Windows   Command com cmd exe      gdb   make     gdb   make     build              shell     GDB        gdb     gdb  gdb  PATH                   gdb           l list     gdb           gdb        r  run                                  set args             set args 10 20 30 40 50  show args                       path             show paths            set environment varname   value            set env USER hchen show environment  varname                cd    shell cd    pwd                     info terminal                              run   outfile tty                  tty  dev ttyb                 UNIX  ps          PID   ID     gdb PID               gdb           gdb  gdb  attach        PID   detach                                       GDB                                                                            gdb         info program                          gdb                   BreakPoint      WatchPoint      CatchPoint     Signals       Thread Stops                c  continue           BreakPoint     break                      break            C       class  function function type type           break          break  offset break  offset             offset    offiset      break filename linenum     filename linenum      break filename function     filename function          break  address                break break                     break                 condition                           break i 100    i 100                info           n       info breakpoints  n  info break  n          WatchPoint                                                                  watch         expr                           rwatch         expr          awatch                        info watchpoints                         CatchPoint                                       C                 catch  event         event          1 throw   C         throw      2 catch   C          catch      3 exec       exec   exec            HP UX     4 fork       fork   fork            HP UX     5 vfork       vfork   vfork            HP UX     6 load   load             ",
        "objectID": "post/用GDB调试程序",
        "date": "2017-06-25T05:44:19.000Z",
        "tags": null,
        "categories": [
            "Linux编程"
        ]
    },
    {
        "title": "用redis实现分布式锁",
        "uri": "post/用redis实现分布式锁",
        "content": "Redis   Go    https   github com bsm redislock    go redis        import    fmt   time   github com bsm redislock   github com go redis redis    func main        Connect redis  client    redis NewClient  redis Options  Network   tcp   Addr   127 0 0 1 6379      defer client Close      Create new lock client  locker    redislock New client     Try obtain lock  lock  err    locker Obtain  my key   100 time Millisecond  nil  err    redislock ErrNotObtained   fmt Println  Could not obtain lock      else err    nil   log Fatalln err       Don t forget defer Release  defer lock Release   fmt Println  I lock       Sleep check remaining TTL  time Sleep 50   time Millisecond  ttl  err    lock TTL    err    nil   log Fatalln err    else ttl   0   fmt Println  Yay  lock         Extend lock  err    lock Refresh 100 time Millisecond  nil   err    nil   log Fatalln err       Sleep little longer  check  time Sleep 100   time Millisecond  ttl  err    lock TTL    err    nil   log Fatalln err    else ttl    0   fmt Println  Now  lock expired        Red lock         Go    https   github com go redsync redsync    redigo     Go     https   github com amyangfei redlock go    go redis  package main import    fmt   time   github com garyburd redigo redis   gopkg in redsync v1    func newPool server string   redis Pool   return  redis Pool  MaxIdle  3  IdleTimeout  240   time Second  Dial  func    redis Conn  error    c  err    redis Dial  tcp   server  err    nil   return nil  err   return c  err    TestOnBorrow  func c redis Conn  t time Time  error   _  err    c Do  PING   return err        func newPools servers   string    redsync Pool   pools      redsync Pool   _  server    range servers   pool    newPool server  pools   append pools  pool    return pools   func main     pools    newPools   string  127 0 0 1 6379    127 0 0 1 6378    127 0 0 1 6377    rs    redsync New pools  m    rs NewMutex   lock   err    m Lock   err    nil   panic err    fmt Println  lock success   unlockRes    m Unlock   fmt Println  unlock result     unlockRes       https   books studygolang com advanced go programming book ch6 cloud ch6 01 lock html",
        "objectID": "post/用redis实现分布式锁",
        "date": "2019-09-17T15:49:58.000Z",
        "tags": [
            "redis"
        ],
        "categories": [
            "redis"
        ]
    },
    {
        "title": "优秀的代码都是如何分层的？",
        "uri": "post/优秀的代码都是如何分层的？",
        "content": "controller service  mapper                                 controller     service   service                                                                                                                                                       2 1                                    Service       RPC       Web     http                                                 velocity    JS     JSP            Web                                        Service                 Manager                  1                            2   Service                       3   DAO       DAO       DAO             MySQL Oracle Hbase                                           service  manager                                 Manager                          2 2                                         rpc      thrift         rpc    dubbo         controller        controller TService                                                                                  Service                  controller        service          controller                    controller               thrift                                                                                            service     Mannager           Mannager              cache mq                     Mannager            Mannager                httpMannager rpcMannager               model               adapter       controller               DAO                            java    dao        Service     Service              Service              3 1                DO Data Object                DAO            DTO Data Transfer Object         Service Manager         BO Business Object        Service               AO Application Object        Web  Service                            VO View Object           Web               Query                        2             Map                                                                 3   4                      3 4                                                                         3 2                   Service Manager                                             Controller TService           DAO                     DAO       Controller Service             4 1 entity model domain            Java                         domain                       com xxx domain                                domain       domain                  Java    Web        domain                                             domain           entity                    com xxx entity  4 2       entity model domain     entity                          domain               OBJ   PO    persistant object               PO                                            BO    business object                                                                                  PO         PO         PO           BO         BO    PO                  BO     VO  value object    ViewObject                        WEB     SWT SWING         VO            DTO  Data Transfer Object                                     100         PO  100                10        WEB service             PO                    10    DTO                                                         VO POJO  plain ordinary java object   java       POJO                                   POJO       PO              DTO           VO DAO data access object                    O                                          POJO    PO  PO    VO DTO                                                                                                                                   https   juejin im post 5b44e62e6fb9a04fc030f216",
        "objectID": "post/优秀的代码都是如何分层的？",
        "date": "2019-06-03T13:40:42.000Z",
        "categories": [
            "架构"
        ]
    },
    {
        "title": "友元浅析",
        "uri": "post/友元浅析",
        "content": "A        B                     A       B                                                                    1                    2                                                                                                               this                  static                static                                                                                                                                                                                                                           friend                                                                                                                                                                            friend       include using namespace std  class Student  public  Student char  name  int age  float score   public  friend void show Student  pstu      show                     private  char  m_name  int m_age  float m_score     Student  Student char  name  int age  float score   mname name   mage age   m_score score             void show Student  pstu   coutmnamemagem_score using namespace std  class Address        Address    Student   Address       Student  class Student  public  Student char  name  int age  float score   public  void show Address  addr   private  char  m_name  int m_age  float m_score         Address  class Address  private  char  m_province       char  m_city       char  m_district          public  Address char province  char city  char  district      Student       show          friend void Student  show Address  addr          Student  Student  Student char  name  int age  float score   mname name   mage age   m_score score     void Student  show Address  addr        Address     coutmprovincemcitym_district show paddr   return 0                 16     95 5                       16     80 5                         Student   Address     27    Student        show       Address           show         Address    private                                                 4    Address               Address         Student                           Address  not declared                         Student               Address                           show           Address     province city district         Address               Address                                                                                                                                               include using namespace std  class Address        Address      Student  class Student  public  Student char  name  int age  float score   public  void show Address  addr   private  char  m_name  int m_age  float m_score         Address  class Address  public  Address char province  char city  char  district   public     Student    Address      friend class Student  private  char  m_province       char  m_city       char  m_district                 Student  Student  Student char  name  int age  float score   mname name   mage age   m_score score     void Student  show Address  addr   coutmprovincemcitym_district show paddr   return 0      24      Student      Address              friend class Student             class                                                             B  A     A     B                                B  A     C B     C     A",
        "objectID": "post/友元浅析",
        "date": "2017-06-23T17:31:04.000Z",
        "tags": null,
        "categories": [
            "C++"
        ]
    },
    {
        "title": "与数字的某位相关问题",
        "uri": "post/与数字的某位相关问题",
        "content": "LeetCode 233  Number Digit One Given integer n  count total number digit 1 appearing non negative integers less equal n  example  Given n   13  Return 6  digit 1 occurred following numbers  1  10  11  12  13       10          1   100     10    1   1000     100    1                 1                          1           0  1      2       case 1  n 3141092  a  31410  b 92       1       3141 100    case 2  n 3141192  a  31411  b 92       1       3141 100    92 1     case 3  n 3141592  a  31415  b 92       1        3141 1   100    class Solution   public  int countDigitOne int n    int ones   0   long m   1  m  2        1 9                       9  8  7  6                    class Solution   public  int countNumbersWithUniqueDigits int n      f 1    10       f k    9   9   8        9   k   2  if n  0  return 1  if n  1  return 10       10  int val   9  ans   10  for int   2  lexicalOrder int n    vector res   int   1    res     cur   n  return  res push_back cur          int   0  lexicalOrder int n    vector res n   int cur   1        1               int   0    n  cur    10      0    1 cur    1         1           1  cur   10    0  cur    10          1        1            1                         0      return res       LeetCode 400  Nth Digit Find nth digit infinite integer sequence 1  2  3  4  5  6  7  8  9  10  11    Note  n positive will fit within range 32 bit signed integer  n base digit    n    base  digit     ith    base    ith            base    10    return to_string ith  n 1  digit   n 1  digit   0",
        "objectID": "post/与数字的某位相关问题",
        "date": "2017-06-24T23:59:57.000Z",
        "tags": [
            "Math"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "约瑟夫环",
        "uri": "post/约瑟夫环",
        "content": "n     0 1   n 1            k                m                                                             m                                  include  include using namespace std  int main     int n  int m  int k  cin    n    m  k  vectorinp n    int   0  renshu      cur m  renshu    0  cur renshu 1  else cur   0     cur m  renshu    1    else cur   cur   m 1  renshu    count    inp erase inp begin     cur     cout 0 k 1         1 k 2         2         k 2         n 2     n  1          n   1         n                                     n  1             x               n             x   k    n   k  m   n    x   k    n  x    m   n   n  x n    m n  n  n  x n m n  n  x m  n           m   1     n   1              o    n   2          o  o   1  o   2       o   3  o   2         o        0 o 1         1 o 2         2         o 2         n 3     n   2               y   n  1          y   o     n  1     o  m    n  1         y m     n 1     n   1           n   2                          0          f  1    0  f         f  i  1    m    i   i 1                   int JosephusProblem_Solution4 int n  int m    if n f n 1 0   for unsigned   2",
        "objectID": "post/约瑟夫环",
        "date": "2017-07-20T21:33:51.000Z",
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "在1G内存的计算机中能否malloc(1.2G)",
        "uri": "post/在1G内存的计算机中能否malloc-1-2G",
        "content": "malloc                                                                              malloc                                                         1 2G 2 30 1 2 Byte          4CCC CCCC          int           unsigned           malloc         unsigned            include  include int main     char p  constunsigned k  102410241024 1 2  printf   x n  k   p   char   malloc  k    if  p  NULL   printf  OK    else printf  error    return0    malloc                                     malloc                               include  include unsigned maximum   102410241024  int main int argc  char  argv      unsignedblocksize      1024 1024  1024  1   inti  count  void  block  for i 0",
        "objectID": "post/在1G内存的计算机中能否malloc-1-2G",
        "date": "2017-06-24T13:11:52.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "在单链表中删除倒数第N个节点",
        "uri": "post/在单链表中删除倒数第N个节点",
        "content": "LeetCode 19  Remove Nth Node End List Given linked list  remove nth node end list return its head  example  Given linked list  1  2  3  4  5  n   2  removing second node end  linked list becomes 1  2  3  5  Note  Given n will always valid  Try one pass                     n     first     n     first                       head  next      first                   first            second  next second  next  next     n         Definition singly linked list  struct ListNode   int val  ListNode  next  ListNode int x    val x   next NULL           class Solution   public  ListNode removeNthFromEnd ListNode head  int n    if head    NULL    head  next    NULL        return NULL  ListNode   first   head        ListNode   second   head        for int   0 i next  if first    NULL          n           return head  next  while first  next    NULL      n    while     first   first  next  second   second  next    second  next   second  next  next      second  next return head",
        "objectID": "post/在单链表中删除倒数第N个节点",
        "date": "2017-06-25T02:24:48.000Z",
        "tags": [
            "Linked List",
            "Two Pointers"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "在二叉树节点中添加新指针",
        "uri": "post/在二叉树节点中添加新指针",
        "content": "LeetCode 116  Populating Next Right Pointers Node Given binary tree struct TreeLinkNode   TreeLinkNode  left  TreeLinkNode  right  TreeLinkNode  next    Populate next pointer point its next right node  no next right node  next pointer set NULL  Initially  next pointers set NULL  Note  may use constant extra space  may assume perfect binary tree  ie  leaves level  every parent two children   example  Given following perfect binary tree  1     2 3         4 5 6 7 calling function  tree look like  1    NULL     2    3    NULL         4  5  6  7    NULL                                                                             pre                       Definition binary tree next pointer  struct TreeLinkNode   int val  TreeLinkNode left  right   next  TreeLinkNode int x    val x   left NULL   right NULL   next NULL           class Solution   public  void connect TreeLinkNode  root     root    NULL  return  TreeLinkNode  pre   root  TreeLinkNode  cur   NULL  while pre  left                    cur   pre  while cur    cur  left  next   cur  right        if cur  next  cur  right  next   cur  next  left                      cur   cur  next           pre   pre  left                 LeetCode 117  Populating Next Right Pointers Node II Follow problem  Populating Next Right Pointers Node   given tree binary tree  previous solution work  Note  may use constant extra space  example  Given following binary tree  1     2 3       4 5 7 calling function  tree look like  1    NULL     2    3    NULL       4   5    7    NULL                                                        tempchild currentchild                        Definition binary tree next pointer  struct TreeLinkNode   int val  TreeLinkNode left  right   next  TreeLinkNode int x    val x   left NULL   right NULL   next NULL           class Solution   public  void connect TreeLinkNode  root    while root    NULL   TreeLinkNode  tempChild   new TreeLinkNode 0                                                     TreeLinkNode  currentChild   tempChild  while root  NULL                  if root  left    NULL    currentChild  next   root  left  currentChild   currentChild  next          if root  right    NULL    currentChild  next   root  right  currentChild   currentChild  next    root   root  next    root   tempChild  next                 LeetCode 199  Binary Tree Right Side View Given binary tree  imagine yourself standing right side it  return values nodes ordered top bottom  example  Given following binary tree  1  res                 if root  NULL  return                   if res size  val                   recursion root  right  level 1  res   recursion root  left  level 1  res     vector rightSideView TreeNode  root    vector res  recursion root  1  res   return res",
        "objectID": "post/在二叉树节点中添加新指针",
        "date": "2017-06-24T20:26:57.000Z",
        "tags": [
            "DFS",
            "Tree"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "在二叉树中找到累加和为指定值的最长路径长度",
        "uri": "post/在二叉树中找到累加和为指定值的最长路径长度",
        "content": "LeetCode 112  Path Sum Given binary tree sum  determine tree root to leaf path adding values along path equals given sum  example  Given below binary tree sum   22  5     4 8       11 13 4       7 2 1 return true  exist root to leaf path 5  4  11  2 sum 22                      sum                   Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  bool hasPathSum TreeNode  root  int sum     root    NULL  return false   root  val    sum    root  left    NULL    root  right    NULL  return true  return hasPathSum root  left  sum root  val     hasPathSum root  right  sum root  val        LeetCode 113  Path Sum II Given binary tree sum  find root to leaf paths path s sum equals given sum  example  Given below binary tree sum   22  5     4 8       11 13 4         7 2 5 1 return    5 4 11 2    5 8 4 5       dfs          sum           Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  vector  ret        void help TreeNode  root vector cur int now int target   if root  NULL  return          now  root  val          cur push_back root  val           if  root  left   root  right                 if now  target  ret push_back cur         return                help root  left cur now target        help root  right cur now target          vector  pathSum TreeNode  root  int sum    if  root  return ret  vector temp  help root temp 0 sum   return ret       LeetCode 129  Sum Root Leaf Numbers Given binary tree containing digits 0 9 only  root to leaf path represent number  example root to leaf path 1  2  3 represents number 123  Find total sum root to leaf numbers  example  1     2 3 root to leaf path 1  2 represents number 12  root to leaf path 1  3 represents number 13  Return sum   12   13   25       dfs    sum                   Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   private  int dfs TreeNode  root  int sum      dfs       sum   root    NULL  return 0   root  left    NULL    root  right    NULL  return sum   10   root  val  return dfs root  left  sum10   root  val    dfs root  right  sum10   root  val     public  int sumNumbers TreeNode  root    return dfs root  0        LeetCode 257  Binary Tree Paths Given binary tree  return root to leaf paths  example  given following binary tree  1     2 3   5 root to leaf paths are    1  2  5    1  3                    dfs            Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  void binaryTreePaths vector  result  TreeNode  root  string t      DFS        if  root  left     root  right                result push_back t                 return    if root  left  binaryTreePaths result  root  left  t          to_string root  left  val    if root  right  binaryTreePaths result  root  right  t          to_string root  right  val      vector binaryTreePaths TreeNode  root    vector result  if  root  return result  binaryTreePaths result  root  to_string root  val    return result       LeetCode 437  Path Sum III given binary tree node contains integer value  Find number paths sum given value  path does not need start end root leaf  go downwards  traveling parent nodes child nodes   tree no 1 000 nodes values range  1 000 000 1 000 000  Example  root    10 5  3 3 2 null 11 3  2 null 1   sum   8 10     5  3       3 2 11       3  2 1 Return 3  paths sum 8 are  5    3 5    2    1  3    11          root       leaf  dfs                    dfs     Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  int pathSum TreeNode  root  int sum    if  root  return 0                                      return sumUp root  0  sum    pathSum root  left  sum    pathSum root  right  sum     private  int sumUp TreeNode  root  int pre  int  sum   if  root  return 0  int current   pre   root  val  return  current    sum    sumUp root  left  current  sum    sumUp root  right  current  sum        LeetCode 124  Binary Tree Maximum Path Sum Given binary tree  find maximum path sum  problem  path defined sequence nodes starting node node tree along parent child connections  path contain least one node does not need go root  example  Given below binary tree  1     2 3 Return 6                                                                                             sum                                                 0                   Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  int maxPathSum TreeNode  root    maxsum   INTMIN  dfs root   return max_sum    private  int max_sum       int dfs const TreeNod",
        "objectID": "post/在二叉树中找到累加和为指定值的最长路径长度",
        "date": "2017-06-25T00:01:01.000Z",
        "tags": [
            "Tree",
            "DFS"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "在二叉树中找到一个节点的后继节点",
        "uri": "post/在二叉树中找到一个节点的后继节点",
        "content": "public class Node   public int value  public Node left  public Node right  public Node parent  public Node int data    this value   data                           parent        Node                    parent                    parent  null               node      node                       node        node                      node   node            L         L          0 L          0 1                  node          1   node                                       node   1 3 4 6 9            2   node          node   node                   node      node                  node                  s  s      p     s p         p  node                                 node   7    7       8      7   8         8    7                     node   5    5       4     5   4           node              4   4       3     4    3                    3    3       6         3   6            6  node   5          3      2                      node        node                         node   10           6       6           node          1   2       node node               3                   public static Node getNextNode Node node     node    null    return node     node right    null            return getLeftMost node right                 else   Node parent   node parent   parent    null    parent left    node    node   parent  parent   node parent    return parent      public static Node getLeftMost Node node     node    null    return node     node left    null    node   node left    return node",
        "objectID": "post/在二叉树中找到一个节点的后继节点",
        "date": "2017-08-19T22:51:16.000Z",
        "tags": [
            "Tree"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "在数组中找到一个局部最小的位置",
        "uri": "post/在数组中找到一个局部最小的位置",
        "content": "public static int getLessIndex int   arr     arr    null    arr length    0    return  1     no exist    arr length    1    arr 0  arr mid   1     right   mid   1    else  arr mid    arr mid   1     left   mid   1    else   return mid      return left",
        "objectID": "post/在数组中找到一个局部最小的位置",
        "date": "2017-09-01T23:36:04.000Z",
        "tags": [
            "Binary Search"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "在有序但含有空的数组中查找字符串",
        "uri": "post/在有序但含有空的数组中查找字符串",
        "content": "strs    sirs      null     null                                  str    str strs                                            strs left  right                res     str strs           left 0 right strs length l  res  l    mid  left right  2   strs mid   strs left  right                strs mid  str         str  res mid                              str      right mid l       2       strs mid  str      strs mid   null       strs mid  str   strs mid       str             str             left mid l       2       strs mid  str      strs mid  null    mid              strs left  mid             null                     left mid l        2            null         strs left  mid          null    i    str strs i         strs i       str            str  left mid l       2    strs i       str     str  res mid                 strs left  i l            str      right i 1       2    strs i       str   strs i  right     str    strs left  i 1      right i 1       2  public static int getIndex String   strs  String str     strs    null    strs length    0    str    null    return  1    int res    1  int left   0  int right   strs length   1  int mid   0  int   0   left   left     i   left    strs i  compareTo str    0    left   mid   1    else   res   strs i  equals str      res  right     1        return res",
        "objectID": "post/在有序但含有空的数组中查找字符串",
        "date": "2017-08-24T23:09:25.000Z",
        "tags": [
            "String",
            "Binary Sort"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "在有序矩阵中找数",
        "uri": "post/在有序矩阵中找数",
        "content": "LeetCode 74  Search 2D Matrix Write efficient algorithm searches value m x n matrix  matrix following properties  Integers row sorted left right  first integer row greater last integer previous row                                                                                                   while                     while       true          class Solution   public  bool searchMatrix vector    matrix  int target    int n   matrix size       if n  0  return false  int m   matrix 0  size       if m  0  return false  int l   0  r   m   n   1         l    matrix  int target    int m   matrix size     m    0  return false       int n   matrix 0  size    int   0  j   n   1   i   0            matrixi    target        return true  else  matrixi   target           j      else         i      return false       LeetCode 378  Kth Smallest Element Sorted Matrix Given n x n matrix rows columns sorted ascending order  find kth smallest element matrix  Note kth smallest element sorted order  not kth distinct element  Example  matrix       1  5  9    10  11  13    12  13  15     k   8  return 13  Note  may assume k always valid  1   k   n2                                                         mid                          class Solution        public  int kthSmallest vector   matrix  int k    int size   matrix size    l   matrix0  r   matrixsize 1  while l  1     for int   0     a  const pair    b    return a first b first       int kthSmallest vector   arr  int k    int n arr size   m arr 0  size    priority_queue    vector      compare   p  for int i 0 i",
        "objectID": "post/在有序矩阵中找数",
        "date": "2017-06-25T02:27:16.000Z",
        "tags": [
            "Binary Search"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "在有序旋转数组中的查找",
        "uri": "post/在有序旋转数组中的查找",
        "content": "LeetCode 153  Find Minimum Rotated Sorted Array Suppose array sorted ascending order rotated pivot unknown beforehand   i e   0 1 2 4 5 6 7 become 4 5 6 7 0 1 2   Find minimum element  may assume no duplicate exists array  Subscribe companies asked question                                                                                                                                                              mid     mid 1   mid          left  nums    int left   0  right   nums size     1  while left nums right   left   mid   1  else right   mid    return nums left           STL  class Solution   public  int findMin vector  num    sort num begin   num end     return num 0        LeetCode 154  Find Minimum Rotated Sorted Array II Follow  Find Minimum Rotated Sorted Array   duplicates allowed  affect run time complexity  why  Suppose array sorted ascending order rotated pivot unknown beforehand   i e   0 1 2 4 5 6 7 become 4 5 6 7 0 1 2   Find minimum element  array may contain duplicates                                                                                            rotate                                                                    1 2 3 3 3 3 3             3 3 3 3 3 1 2     3 1 2 3 3 3 3                    3                                                                                                  n            O n   class Solution   public  int findMin vector  nums    int left   0  right   nums size     1  while left nums right   left   mid   1  else if nums mid   nums  int target    if nums size    0  return  1  int l   0 r   nums size   1  while lnums m     target nums l     target  nums  int target    auto it find nums begin   nums end    target   if it  nums end    return  1  else return it nums begin         LeetCode 81  Search Rotated Sorted Array II Follow  Search Rotated Sorted Array   duplicates allowed  affect run time complexity  why  Suppose array sorted ascending order rotated pivot unknown beforehand   i e   0 1 2 4 5 6 7 become 4 5 6 7 0 1 2   Write function determine given target array  array may contain duplicates  Subscribe companies asked question                                                                                        n            O n   class Solution   public  bool search vector  nums  int target    int first   0  last   nums size     first nums mid            mid          nums mid    nums  int target     count nums begin   nums end   target   return true  return false",
        "objectID": "post/在有序旋转数组中的查找",
        "date": "2017-06-25T02:26:09.000Z",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "categories": [
            "解题报告 "
        ]
    },
    {
        "title": "在GO中用名字调用函数",
        "uri": "post/在GO中用名字调用函数",
        "content": "Golang       C             golong                             Golang           func foobar        bla   bla   bla      funcname     foobar  funcname         func foobar        bla   bla   bla      funcs    map string func     foobar  foobar  funcs foobar              map          func                                               interface                           map    func foo        bla   bla   bla      func bar a  b  c int       bla   bla   bla      funcs    map string interface    foo  foo   bar  bar         map             funcs foo                                                    reflect Call            func Call m map string interface    name string  params     interface     result   reflect Value  err error    f    reflect ValueOf m name   len params     f Type   NumIn     err   errors New  The number params not adapted    return      make   reflect Value  len params   k  param    range params   in k    reflect ValueOf param    result   f Call in  return   Call funcs   foo   Call funcs   bar   1  2  3",
        "objectID": "post/在GO中用名字调用函数",
        "date": "2019-01-09T16:12:05.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "栈空间的最大值是多少?",
        "uri": "post/栈空间的最大值是多少",
        "content": "windows                                                    windows       2MB              2GB                                                                                                                                                                                                             link    STACK             def    STACKSIZE                 EDITBIN   exe               LIUNUX         8MB        ulimit  s",
        "objectID": "post/栈空间的最大值是多少",
        "date": "2017-09-04T22:05:45.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "栈与队列的互相实现",
        "uri": "post/栈与队列的互相实现",
        "content": "LeetCode 225  Implement Stack using Queues Implement following operations stack using queues  push x    Push element x onto stack  pop     Removes element top stack  top     top element  empty     Return whether stack empty  Notes  use standard operations queue   means push back  peek pop front  size  empty operations valid  Depending language  queue may not supported natively  may simulate queue using list deque  double ended queue   long use standard operations queue  may assume operations valid  for example  no pop top operations will called empty stack                                                                push             front               class MyStack   public     Initialize data structure here    queue q  MyStack          Push element x onto stack    void push int x    q push x   for int i 0 i input  output  public  void push int x    input push x     int pop void    int top peek          output pop    return top    int peek void             output empty                 input size                   output push input top     input pop    return output top      bool empty void    return input empty      output empty             MyQueue object will instantiated called such  MyQueue obj   new MyQueue    obj push x   int param_2   obj pop    int param_3   obj peek    bool param_4   obj empty",
        "objectID": "post/栈与队列的互相实现",
        "date": "2017-06-25T02:26:20.000Z",
        "tags": [
            "Stack",
            "Queue"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "找出指定目录中最大的10个文件",
        "uri": "post/找出指定目录中最大的10个文件",
        "content": "",
        "objectID": "post/找出指定目录中最大的10个文件",
        "date": "2017-09-09T20:17:25.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "找到被指的新类型字符",
        "uri": "post/找到被指的新类型字符",
        "content": "1  2                      e                   Ab                   DC            str  str                     eaCCBi          e   a   CC   Bi             str          k                str  aaABCDEcBCg   A 7      Ec   A 4      CD   A 10      g             str 0                     H                       str  aaABCDEcBCg   yt 7             a   a   AB   CD      str 7       E                 EC               k 1                       uNum             uNum    str k 1  k               1    uNum    str k       str k  k 1               2   uNum    str k       str k               3 public static String pointNewchar String s  int k     s    null    s equals        k   s length      return       char   chas   s toCharArray    int uNum   0   int   k   1     0  i        isUpper chas i      break    uNum        uNum   1     1    return s substring k   1  k   1      isUpper chas k      return s substring k  k   2     return String valueOf chas k      public static boolean isUpper char ch    return   ch  Z",
        "objectID": "post/找到被指的新类型字符",
        "date": "2017-08-27T00:41:28.000Z",
        "tags": [
            "Two Pointers"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "找到无序数组中的第k个数",
        "uri": "post/找到无序数组中的第k个数",
        "content": "LeetCode 215  Kth Largest Element Array Find kth largest element unsorted array  Note kth largest element sorted order  not kth distinct element  example  Given  3 2 1 5 6 4  k   2  return 5  Note  may assume k always valid  1   k   array s length       K             k            RB                     O n    set              O nlogk                                                        k                                 STL class Solution   public  int findKthLargest vector  nums  int k    priority_queue pq nums begin    nums end      int   0    nums  int k    multiset mset  int n   nums size     int   0  k  mset erase mset begin              return  mset begin         LeetCode 414  Third Maximum Number Given non empty array integers  return third maximum number array  does not exist  return maximum number  time complexity O n   Example 1  Input   3  2  1  Output  1 Explanation  third maximum 1  Example 2  Input   1  2  Output  2 Explanation  third maximum does not exist  so maximum  2  returned instead  Example 3  Input   2  2  3  1  Output  1 Explanation  Note third maximum means third maximum distinct number  numbers value 2 considered second maximum           3             set     set     RBTree set     3            3             class Solution   public  int thirdMax vector  nums    set s   int num   nums    s insert num    s size     3    s erase s begin         return s size      3   s begin     s rbegin                   k   public static int   getMinKNumsByBFPRT int   arr  int k     k arr length    return arr    int minKth   getMinKthByBFPRT arr  k   int   res   new int k   int index   0   int   0     arr length  i       arr i    pivotRange 0     pivotValue    swap arr  cur    big     else   cur        int   range   new int 2   range 0    small   1  range 1    big   1  return range    public static int getMedian int   arr  int begin  int end    insertionSort arr  begin  end   int sum   end   begin  int mid    sum   2     sum   2   return arr mid     public static void insertionSort int   arr  int begin  int end     int   begin   1     end   1  i       int j   i  j    begin  j       arr j   1    arr j     swap arr  j   1  j     else   break          LeetCode 373  Find K Pairs Smallest Sums given two integer arrays nums1 nums2 sorted ascending order integer k  Define pair  u v  consists one element first array one element second array  Find k pairs  u1 v1   u2 v2    uk vk  smallest sums  Example 1  Given nums1    1 7 11   nums2    2 4 6   k   3 Return   1 2   1 4   1 6  first 3 pairs returned sequence   1 2   1 4   1 6   7 2   7 4   11 2   7 6   11 4   11 6  Example 2  Given nums1    1 1 2   nums2    1 2 3   k   2 Return   1 1   1 1  first 2 pairs returned sequence   1 1   1 1   1 2   2 1   1 2   2 2   1 3   1 3   2 3  Example 3  Given nums1    1 2   nums2    3   k   3 Return   1 3   2 3  possible pairs returned sequence   1 3   2 3                                                                         K                                                                  class Solution                K    public  struct cmp       bool operator   pair  num1  pair  num2   return num1 first   num1 second   kSmallestPairs vector  nums1  vector  nums2  int k    vector  res  priority_queue  vector    cmp  pq       for int   0    kSmallestPairs vector  nums1  vector  nums2  int k    vector  ret  int m   nums1 size    n   nums2 size    int cnt   min k  m n   vector idx m  0   for int i 0",
        "objectID": "post/找到无序数组中的第k个数",
        "date": "2017-08-27T20:16:25.000Z",
        "tags": [
            "Heap",
            "BFPRT"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "找到无序数组中某一频率的数",
        "uri": "post/找到无序数组中某一频率的数",
        "content": "LeetCode 451  Sort Characters Frequency Given string  sort decreasing order based frequency characters  Example 1  Input   tree  Output   eert  Explanation   e  appears twice  r   t  appear once  So  e  appear  r   t   Therefore  eetr  valid answer  Example 2  Input   cccaaa  Output   cccaaa  Explanation   c   a  appear three times  so  aaaccc  valid answer  Note  cacaca  incorrect  characters together  Example 3  Input   Aabb   Output   bbAa   Explanation   bbaA  valid answer   Aabb  incorrect  Note  A   a  treated two different characters        sort               sort   cmp   lambda    class Solution   public  string frequencySort string s    unordered_map m   char c   s    m c   sort s begin    s end                 return m a    m b      m a     m b     topKFrequent vector  nums  int k    unordered_map hash  priority_queue  vector   greater   heap         vector ret  for int num nums  hash num     for auto it hash    heap push make_pair it second  it first    if heap size     k  heap pop           K                     K        while  heap empty                       K          ret push_back heap top   second   heap pop      return ret          pair   first                       second first                  nums size                                                             k     class Solution   public  vector topKFrequent vector  nums  int k    unordered_map hash  vector  buckets nums size   1   vector ret  for int num nums  hash num     for auto it hash  buckets it second  push_back it first   for int i buckets size   1  i 0    i    for auto num buckets i     ret push_back num   if ret size      k  return ret      return ret       169  Majority Element Given array size n  find majority element  majority element element appears   n 2   times  may assume array non empty majority element always exist array                O 1                                              1      1                               count                    count  0   candidate              count   1                 candidate            count     count                               candidate                    count   0                  vote     count                 count      n 2    vote         1                                class Solution   public  int majorityElement vector  nums    int candidate   0  int count   0  for int   0    nums    unordered_map counts  int n   nums size     int   0  n   2  return nums i   return  1       229  Majority Element II Given integer array size n  find elements appear   n 3   times  algorithm run linear time O 1                   n 3                                                                           2      1                                                                                         class Solution   public  vector majorityElement vector  nums    int n nums size    vector result  int count1 0  count2 0       int result1 INTMAX  result2 INTMAX        for int num nums   if num  result1  count1    else if num  result2  count2                           else if count1  0    result1 num  count1 1                else if count2  0    result2 num  count2 1    else   count1    count2                                             count1 count2 0  for int num nums                           if num  result1  count1    else if num  result2  count2      if count1 n 3  result push_back result1   if count2 n 3  result push_back result2   return result             K                                                                                                                      true          false",
        "objectID": "post/找到无序数组中某一频率的数",
        "date": "2017-06-25T00:00:19.000Z",
        "tags": [
            "Array",
            "Heap",
            "Bucket Sort",
            "多数投票算法"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "折纸问题",
        "uri": "post/折纸问题",
        "content": "i                                                   2                                                            W                      N 1      down N 2      down down     class FoldPaper   public  vector foldPaper int n       write code vector v  pushs v n  down    return v    void pushs vector  v int n string s   if n 0   pushs v n 1  down    v push_back s   pushs v n 1  up",
        "objectID": "post/折纸问题",
        "date": "2017-09-03T12:59:00.000Z",
        "tags": [
            "递归"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "正则表达式匹配",
        "uri": "post/正则表达式匹配",
        "content": "LeetCode 44  Wildcard Matching Implement wildcard pattern matching support              Matches single character      Matches sequence characters  including empty sequence   matching cover entire input string  not partial   function prototype be  bool isMatch const char s  const char p  examples  isMatch  aa   a     false isMatch  aa   aa     true isMatch  aaa   aa     false isMatch  aa          true isMatch  aa    a      true isMatch  ab           true isMatch  aab    cab     false            Regular Expression Matching                                                                                                                  0 n                                                                                                        bool     dpi  s  i    p  j        dp0 true dp0     p j 1           j 1           pj        s i   p j    dp i     dpi 1   s      p            pj                 s  0            dp i  s      p            dpi 1  s      p                                          j j 1  dp            dp i    s  i    p  j          p j                  s i 1  p j 1            dp i 1    true       s   dp i 1   j 1      p j                             dp i    true     i     true                      O m n                     O n    s    n p    m  class Solution   public  bool isMatch string s  string p    int ls   s size    lp   p size    vector dp ls   1  false   dp 0    true  for int j   1  j 0     i  dp i    dp i   1             p j   1     s i   1     p j   1    else   int i  for i   0   1   s p                                  ptr pstar        ptr   ptr          str   starmatch   str           else return false    while p ptr      ptr                   return p ptr     0        LeetCode 10  Regular Expression Matching Implement regular expression matching support              Matches single character      Matches zero preceding element  matching cover entire input string  not partial   function prototype be  bool isMatch const char s  const char p  examples  isMatch  aa   a     false isMatch  aa   aa     true isMatch  aaa   aa     false isMatch  aa    a      true isMatch  aa           true isMatch  ab           true isMatch  aab    cab     true        Wildcard Matching      Wildcard Matching                  Wildcard Matching                         0      DP     s  0  i  p  0  j        P  i   j               i j                                class Solution   public  bool isMatch string s  string p     p    s     int m   s size    n   p size    vector  dp m   1  vector n   1 false    dp0   true   int   0  0    dpi   1     s i   1     p j   2     p j   2                      i            else                   i   0     s i 1     p j 1     p j 1           dpi   dpi   1    return dpm                       1         s     p        1  s         p              p  a b c              2  s        p            2  s    p         1   p 1               s    p            s 1      p 1                 2   p 1          p       s     0        i    p           s i 1       p 2                         class Solution   public  bool isMatch string ss  string pp    if pp size    0  return ss size    0  char  s  ss 0   char  p  pp 0     p   1                      p    s     p           s      0               return isMatch s   1  p   1   else return false    else             p    s     p           s      0                 2                                                    isMatch s  p   2   return true  s      return isMatch s  p   2              X",
        "objectID": "post/正则表达式匹配",
        "date": "2017-06-24T23:58:16.000Z",
        "tags": [
            "Backtracking",
            "DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "正则表达式详解",
        "uri": "post/正则表达式详解",
        "content": "pattern template  Linux            Linux      sed    gawk                                                                  Linux                                         regular expression engine                                                Linux                 POSIX        basic regular expression BRE    POSIX        extended regular expression ERE       Linux       POSIX BRE                                   sed        BRE                          sed                      POSIX BRE                                                                     gawk   ERE                   BRE                                                                            Linux                                                                                                                                                                                                                                                                                                                                                                                                1                                                                                             echo  The book store    sed  n    book p                                                                                                  echo  This test    sed  n   s   p                                                                             2                                                                                 echo  This good book    sed  n   book  p  3                                                                sed  n    this test  p  data4 sed                                                              sed      d  data5                                                                                    sed  n    at p  data6                                                                                                                                   sed  n    ch at p  data6                                                                                 sed  n   at p  data6                    c h                                                             at                                                                          Linux                                                     sed  n    0 90 9 0 9   p  data8                        sed  n    a ch m at p  data6         a c h m       at          d g                        BRE                                                          echo  abc    sed  n      digit    p                                0        echo  ik    sed  n   ie k p      u     u                                                                                            echo  bt    sed  n   b ae  t p    a e            b t                                                          POSIX ERE         Linux             gawk      ERE    sed          sed    gawk                  gawk                                           sed                 gawk                                                   0  1                         echo  bt    gawk   be t  print  0       e                    1                                                                           1            1     echo  beeet    gawk   be t  print  0       e                                               ERE                                 interval   10               m          m   m  n          m    n                                      gawk                  gawk     re interval                     echo  bet    gawk   re interval   be 1 t  print  0          1                                                                  echo  bt    gawk   re interval   be 1 2 t  print  0                          OR                                                                                   expr1 expr2               echo  The cat asleep    gawk   cat dog  print  0                    cat dog                                                                                                                                                              echo  Sat    gawk   Sat urday    print  0      urday                  Saturday   Sat                                    echo  cat    gawk    c b a b t   print  0      c b a b t",
        "objectID": "post/正则表达式详解",
        "date": "2017-08-12T22:39:08.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "正整数数组的最小不可组成和",
        "uri": "post/正整数数组的最小不可组成和",
        "content": "arr                            arr                           min      max      min max           arr                     arr              min max             arr             max 1 arr                   arr                    arr        sum   arr           0 sum            sum 1 boolean   dp   dp j    true    j        arr           false         arr 0  i                    k   arr 0  i 1                       k arr i 1   public static int unformedSum2 int   arr     arr    null    arr length    0    return 1    int sum   0  int min   Integer MAX_VALUE   int   0     arr length  i      sum    arr i   min   Math min min  arr i      boolean   dp   new boolean sum   1   dp 0    true   int   0     arr length  i       int j   sum  j    arr i   j      dp j    dp j   arr i     true   dp j        int   min     dp length  i        dp i     return i      return sum   1      dp     arr 0  i          arr 0  i 1            0 sum                            O sum        arr 0       arr 0  N 1          N         O N sum        dp               O N               arr    1                         public static int unformedSum3 int   arr     arr    null    arr length    0    return 0    Arrays sort arr        arr     int range   0   int   0     arr length  i       arr i    range   1    return range   1    else   range    arr i       return range   1",
        "objectID": "post/正整数数组的最小不可组成和",
        "date": "2017-09-03T16:30:08.000Z",
        "tags": [
            "背包DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "只用位运算不用算术运算实现整数的加减乘除运算",
        "uri": "post/只用位运算不用算术运算实现整数的加减乘除运算",
        "content": "32   a b        0               a b             a b                                               https   blog 1257321977 cos ap beijing myqcloud com QQ20170827 194017 2x png   public static int add int a  int b    int sum   a   b    0    sum     b  b    a   b      1    return res    public static boolean isNeg int n    return n  1    minus i  1       x    i     y    res     1   i   x   minus x  y   i       return isNeg a    isNeg b    negNum res    res    public static int divide int a  int b     b    0    throw new RuntimeException  divisor 0       a    Integer MINVALUE    b    Integer MINVALUE    return 1    else  b    Integer MIN_VALUE    return 0    else  a    Integer MIN_VALUE    int res   div add a  1   b   return add res  div minus a  multi res  b    b      else   return div a  b",
        "objectID": "post/只用位运算不用算术运算实现整数的加减乘除运算",
        "date": "2017-08-27T19:01:06.000Z",
        "tags": [
            "it Manipulation"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "指向常量字符串的指针",
        "uri": "post/指向常量字符串的指针",
        "content": "node1 node2                               abc                           node1            node2",
        "objectID": "post/指向常量字符串的指针",
        "date": "2017-09-05T21:39:17.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "指针和引用的区别",
        "uri": "post/指针和引用的区别",
        "content": "http   www cnblogs com jiu0821 p 4127382 htmlsizeof     sizeof                        sizeofinclude using namespace std  void swap int a int b    int temp  a  a b   b temp    int main void    int a 1 b 2  swap  a  b   cout",
        "objectID": "post/指针和引用的区别",
        "date": "2017-06-24T12:18:41.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "重复的DNA子序列",
        "uri": "post/重复的DNA子序列",
        "content": "LeetCode 187  Repeated DNA Sequences DNA composed series nucleotides abbreviated A  C  G  T  example   ACGAATTCCG   When studying DNA  sometimes useful identify repeated sequences within DNA  Write function find 10 letter long sequences  substrings  occur once DNA molecule  example  Given s    AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT   Return    AAAAACCCCC    CCCCCAAAAA                                    hash                                                     4         10                     4 10           4            int   map   4         2              2  num     4 16                           ACGT   1 2 3 4 A 1 C 3 G 7 T 20  5                                                                     num    0xfffff   20 1                                 20   class Solution   public  vector findRepeatedDnaSequences string s    char map 4 res   len",
        "objectID": "post/重复的DNA子序列",
        "date": "2017-06-24T19:52:16.000Z",
        "tags": [
            "Hash",
            "Bit Manipulation"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "重建搜索二叉树",
        "uri": "post/重建搜索二叉树",
        "content": "LeetCode 108  Convert Sorted Array Binary Search Tree Given array elements sorted ascending order  convert height balanced BST                      BST                                                                                        Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  TreeNode  sortedArrayToBST vector  num    if num size      0  return NULL  if num size      1  return new TreeNode num 0    int middle   num size   2  TreeNode  root   new TreeNode num middle    vector leftInts num begin    num begin   middle            vector rightInts num begin   middle 1  num end     root  left   sortedArrayToBST leftInts         root  right   sortedArrayToBST rightInts   return root       LeetCode 109  Convert Sorted List Binary Search Tree Given singly linked list elements sorted ascending order  convert height balanced BST                                                                                                                                                                                                           O n           O logn       Definition singly linked list  struct ListNode   int val  ListNode  next  ListNode int x    val x   next NULL               Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  TreeNode sortedListToBST ListNode head    int len   0  ListNode   node   head   node    NULL             node   node  next  len      return buildTree head  0  len 1     TreeNode buildTree ListNode  node  int start  int end                                                       start end                            start   end  return NULL  int mid   start    end   start  2        struct TreeNode  root new TreeNode  1           root  left   buildTree node  start  mid 1        root  val node  val         node   node  next            root  right   buildTree node  mid 1  end         return root                                 arr             arr                                     arr                              arr                                                                                                                                             arr  2 l 3 6 5 7 4   4      2 1 3   4      6 5 7                                                                                       public static boolean isPostArray int   arr     arr    null    arr length    0    return false    return isPost arr  0  arr length   1     public static boolean isPost int   arr  int start  int end     start    end         return true    int less    1  int   end   int   start  arr i            end  end    less   i    else           end         end     more       less     1       end             return isPost arr  start  end   1      less      1                 return false    return isPost arr  start  less     isPost arr  more  end   1                                                                                  public static class Node   public int value  public Node left  public Node right  public Node int value    this value   value      public static Node posArrayToBST int   posArr     posArr    null    return null    return posToBST posArr  0  posArr length   1     public static Node posToBST int   posArr  int start  int end     start   end    return null    Node head   new Node posArr end    int less    1  int   end   int   start  posArr i     less   i    else        end     more      head left   posToBST posArr  start  less   head right   posToBST posArr  more  end   1   return head",
        "objectID": "post/重建搜索二叉树",
        "date": "2017-06-24T20:28:50.000Z",
        "tags": [
            "BST",
            "DFS"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "重载和覆盖的区别",
        "uri": "post/重载和覆盖的区别",
        "content": "1  double calculate double   2  double calculate double  double   3   double calculate double  int   4  double calculate int  double   5   double calculate int   1  float calculate float   2  float calculate double   7     calculate 1  2  3  4  5  6           6  7          1  7           1  7                                                                                                                                                                                                                                                                                                                                               virtual                                                                                                                               1                                             2                                          3                         4                                                                                                                              virtual                                               virtual                                                                                                                                                                                          virtual                                                                                                virtual                                virtual                                        include using namespace std   include using namespace std  class Base   public  virtual void f float x    coutf 3 14f   pd  f 3 14f   pb  g 3 14   pd  h 3 14   return 0            Derived  f float  3 14 Derived  f float  3 14 Base  g float  3 14 Derived  h float  3 14        Derived  f float     Base  f float     Derived  g int    Base  g float          Derived  h float     Base  h float",
        "objectID": "post/重载和覆盖的区别",
        "date": "2017-09-01T13:26:43.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "转圈打印矩阵",
        "uri": "post/转圈打印矩阵",
        "content": "LeetCode 54  Spiral Matrix Given matrix m x n elements  m rows  n columns   return elements matrix spiral order  example  Given following matrix      1  2  3      4  5  6      7  8  9     return  1 2 3 6 9 8 7 4 5                           4                                                                                    class Solution   public  vector spiralOrder vector    matrix       Start typing C C   solution below    NOT write int main   function if matrix size      0  return vector    int x1   0  int y1   0  int x2   matrix size   1  int y2   matrix 0  size   1  vector ans  while x1   y1    i  ans push_back matrixx2     left column if y1    y2  for int   x2 1    x1    i  ans push_back matrixi   x1    y1    x2    y2      return ans       LeetCode 59  Spiral Matrix II Given integer n  generate square matrix filled elements 1 n 2 spiral order  example  Given n   3  return following matrix      1  2  3      8  9  4      7  6  5                                     1                 begin      end                         1      class Solution   public  vector   generateMatrix int n    vector   matrix n  vector n    int begin   0  end   n   1  int num   1   begin begin    j  matrixend   num     int   end    begin    i  matrixi   num      begin    end     begin    end  matrixbegin   num  return matrix",
        "objectID": "post/转圈打印矩阵",
        "date": "2017-06-25T02:22:38.000Z",
        "tags": [
            "Array"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "字典树相关问题",
        "uri": "post/字典树相关问题",
        "content": "LeetCode 79  Word Search Given 2D board word  find word exists grid  word constructed letters sequentially adjacent cell   adjacent  cells horizontally vertically neighboring  letter cell may not used once  example  Given board       A   B   C   E      S   F   C   S      A   D   E   E     word    ABCCED      returns true  word    SEE      returns true  word    ABCB      returns false                     dfs     dfs                                dfs           visit             class Solution   public  bool exist vector    board  string word    const int m   board size     m   const int n   board 0  size     n   vector   visited m  vector n  false     int   0     board  const string  word  int index  int x  int y  vector    visited     index    word size    return true           x   board size      y    board 0  size    return false              visitedx  return false               boardx    word index   return false            visitedx   true     visit bool ret   dfs board  word  index   1  x   1  y  visited          dfs board  word  index   1  x   1  y  visited          dfs board  word  index   1  x  y   1  visited          dfs board  word  index   1  x  y   1  visited        visitedx   false     visit return ret       LeetCode 212  Word Search II Given 2D board list words dictionary  find words board  word constructed letters sequentially adjacent cell   adjacent  cells horizontally vertically neighboring  letter cell may not used once word  example  Given words     oath   pea   eat   rain   board       o   a   a   n      e   t   a   e      i   h   k   r      i   f   l   v     Return   eat   oath    Note  may assume inputs consist lowercase letters a z                                                                                                                                    Insert      Delete     Find                   i       i                                                                                              1                                                         2                           3                                                                                                                           class Solution   private  class Trie   public  Trie   children 26   bool isEnd        int wordIdx            int prefixCount          Trie     isEnd   false  wordIdx   0  prefixCount   0  fill_n children  26  nullptr      Trie     for auto i 0  i  words  int idx                 string          int i  childID  len   words idx  size    for i 0  root  prefixCount     ichildren childID   root  children childID    new Trie    root   root  children childID     root  prefixCount                     root  isEnd   true  root  wordIdx   idx            Trie  buildTrie const vector  words                Trie  root   new Trie    for int i 0   res  Trie  root  vector   board  vector  words  int row  int col     res     root           int detected   0     root prefixCount    if root  isEnd              detected  root  isEnd   false             res push_back words root  wordIdx            if  row board size      col board0  size      board row                           root  children board row  a      root  children board row  a    prefixCount children curC   board  words  row 1  col    dfs_Trie res  root  children curC   board  words  row 1  col    dfs_Trie res  root  children curC   board  words  row  col   1    dfs_Trie res  root  children curC   board  words  row  col   1    root  prefixCount   detected     PrefixCount boardrow   curC  a       return detected    public  vector findWords vector   board  vector  words                           words        dfs board    int M  N  wordNum   words size              vector res  if    M   board size         N   board 0  size        wordNum  return res          Trie  root   buildTrie words            for auto i 0  iprefixCount    i       for auto j 0  jchild i                         p  child i    new TrieNode    p   p  child i     p  isWord   true       Returns word trie  bool search string key    TrieNode  p   root   auto  a   key               false int      a     p  child i   return false  p   p  child i     return p  isWord               Returns word trie    starts given prefix  bool startsWith string prefix    TrieNode  p   root   auto  a   prefix    int      a     p  child i   return false  p   p  child i     return true          true   private  TrieNode  root         Trie object will instantiated called such  Trie obj   new Trie    obj insert word   bool param_2   obj search word   bool param_3   obj startsWith prefix      LeetCode 211  Add Search Word   Data structure design Design data structure supports following two operations  void addWord word  bool search word  search word  search literal word regular expression string containing letters a z      means represent one letter  example  addWord  bad   addWord  dad   addWord  mad   search  pad      false search  bad      true search   ad      true search  b        true Note  may assume words consist lowercase letters a z  class TrieNode   public  bool isKey  TrieNode  children 26   TrieNode    isKey fals",
        "objectID": "post/字典树相关问题",
        "date": "2017-06-24T20:31:45.000Z",
        "tags": [
            "字典树",
            "Backtracking"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "字符串的调整与替换",
        "uri": "post/字符串的调整与替换",
        "content": "chas    chas                                        20    chas                                             O N          O 1                       chas          len               num            20         len 2 num                                                              0   2                      chas                replace    public static void replace char   chas     chas    null    chas length    0    return    int num   0  int len   0   len   0  len  1  i       chas i            chas j      chas i     else   chas j       0   chas j       2   chas j                 LeetCode 283  Move Zeroes Given array nums  write function move 0 s end maintaining relative order non zero elements  example  given nums    0  1  0  3  12   calling function  nums  1  3  12  0  0   Note  in place without making copy array  Minimize total number operations                  0         swap                    class Solution   public  void moveZeroes vector  nums     int   0  j   0    nums size    i       nums i     0    swap nums j     nums i",
        "objectID": "post/字符串的调整与替换",
        "date": "2017-08-25T14:18:57.000Z",
        "tags": [
            "String"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "字符串的输入输出",
        "uri": "post/字符串的输入输出",
        "content": "scanf printf scanf    int scanf char  format            stdio h                                 EOF 0xff    1     scanf                scanf                      scanf             scanf               0                               space      tab      newline   printf    int printf char  format            stdio h     printf                    0           0                             0   cin cout  scanf printf     cin                 getchar putchar getchar    int getchar void       stdio h     getchar         getc stdin     int          stdin          ASCII        1                 getchar                  getchar                                                        getchar                getchar    stdin                                                  getchar             getchar                                                 getchar      scanf gets         getchar  scanf      n     gets              scanf   d    t   getchar    gets s   getchar        2 getchar                    getchar                   scanf   d    t   int a getchar    getchar    int b getchar    putchar putchar c                   c                           0 127              0 127            ASCII       ASCII         getchar   int      char                   1                    unsigned int     2             EOF End file       cin get  getchar          cin get               c   c         cin get    getchar         cin get         cin get      cin      getchar      int  gets puts      gets    char   gets char   buffer               buffer                stdio h               buffer             EOF        NULL     stdin                 EOF              buffer             gets            TAB               TAB                                                0   gets                                                                             gets     n             0                0                    0      0x00      gets              0                gets           gets                                             0   puts int puts const char  string       stdio h                         0       0      n           0                             0   getline          string                       istream  getline   istream  is  string  str  char delim     istream  getline   istream  is  string  str         istream            istream  getline  char  s  streamsize n     istream  getline  char  s  streamsize n  char delim         getline           char              string     C                     streamsize      char         streamsize 1            char                   0                                                                          gets    getline          false                                                   gets       s    string               n      0                           include  include using namespace std  int main    char  s  s   new char 50             cin getline s 5   int   0  while s i       0    cout ssizet read int fd  void  buf  sizet nbytes   read     filedes             nbytes     buf                      nbytes                     nbytes              30           100              30    read      30        read              read    0         terminal device                                            nbytes        pipe    FIFO   pipe   FIFO           nbytes         record oriented                                                       read        0     n                    write  include ssizet write int fd  const void  buf  sizet nbytes                          1           nbytes             write                                                                      O_APPEND                                                            write        0     n",
        "objectID": "post/字符串的输入输出",
        "date": "2017-06-23T21:10:17.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "字符串的统计形式",
        "uri": "post/字符串的统计形式",
        "content": "str   str           aaabbadddffc         a3b2a1d3f2c_1      public static String getCountString String str     str    null    str equals        return       char   chs   str toCharArray    String res   String valueOf chs 0    int num   1   int   1  index    return cur    num   0  cur   chs i     else   num   num   10   chs i     0       return sum   num   index   cur   0    LeetCode 38  Count Say count and say sequence sequence integers beginning follows  1  11  21  1211  111221    1 read off  one 1  11  11 read off  two 1s  21  21 read off  one 2  one 1  1211  Given integer n  generate nth sequence  Note  sequence integers will represented string                                                          class Solution   public  string countAndSay int n     n    0  return     string res    1      n    string cur        int   0  0     n      res    t      return res    string decodeString string s    int   0  return decodeString s  i",
        "objectID": "post/字符串的统计形式",
        "date": "2017-06-24T15:38:19.000Z",
        "tags": [
            "tring"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "字符串交错组成",
        "uri": "post/字符串交错组成",
        "content": "LeetCode 97  Interleaving String Given s1  s2  s3  find whether s3 formed interleaving s1 s2  example  Given  s1    aabcc   s2    dbbca   When s3    aadbbcbcac   return true  When s3    aadbbbaccc   return false                                                         resi   s1  i    s2  j             s3  i j            ress1 length                            resi                resi                       s1     s3             s2                        s1 s2   i j       s3 i j                 resi 1 j       s3 i j                         res i                      fi    fi    s2j   1     s3 i   j   1       f i   1    s1 i   1     s3 i   j   1                         O m n  m n   s1 s2                                                             j            j        f0   f i      class Solution   public  bool isInterleave string s1  string s2  string s3     s1 length     s2 length      s3 length    return false   s1 length   f s2 length     1               f 0  1   int   1",
        "objectID": "post/字符串交错组成",
        "date": "2017-08-22T22:44:02.000Z",
        "tags": [
            "DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "字符串匹配",
        "uri": "post/字符串匹配",
        "content": "LeetCode 459  Repeated Substring Pattern                                                                         10000      str   len         k              k       str     str next            next k 1    1 2 3       next len  len k   len k  k  0       k class Solution   public  bool repeatedSubstringPattern string str    int len   str length    int next len 1   next 0     1  int j   0  k    1  while  j  len          next len    next len 1     next len 1      len 1                       str len 1    while  k   1    str j   str k   k   next k   next   j      k    return next len   next len   len next len    0      LeetCode 28  Implement strStr   Implement strStr    Returns index first occurrence needle haystack   1 needle not part haystack        KMP         next           next              class Solution   public  void getNext int  next  string  needle    int   0  j    1  next 0     1   i   needle length     1     j     1    needle i     needle j   j   next j    next                i    j                     AAAAB    4 A  0123               i       i j     j            j        needle i     needle j   next i    next j   else next i    j      int strStr string haystack  string needle     haystack empty    return needle empty     0    1   needle empty    return 0  int next needle length     1            1 getNext next  needle      needle next  int   0  j   0   i    haystack length       kmp   i      j        j     1    haystack i     needle j   j   next j     i    j   j    needle length    return   j   i         j            return  1             class Solution   public  int strStr string haystack  string needle    int i  j   i   j   0    haystack size      j   needle size        haystack i     needle j       i    j    else      j   1  j   0      return j    needle size      1     j",
        "objectID": "post/字符串匹配",
        "date": "2017-08-26T16:09:41.000Z",
        "tags": [
            "KMP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "字符串切分",
        "uri": "post/字符串切分",
        "content": "str  str            str                    1 26                     1     A   2     B  3     C   26     Z         str                             p i             P i 1  p i 2     N            0 2 N                       O N                  P i     P i 1  p i 2                          p N  p N 1            p N 2     p V 1  P N 2   p N 3      p 1  p 2    p 0                                                           num2         O N       cur next tmp                  0 1                                        O log                  f n  f n 1  f n 2           Str i         f i    0    f n 1  f n 2      f n 1   public static int num2 String str     str    null    str equals        return 0    char   chs   str toCharArray    int cur   chs chs length   1      0    0   1  int next   1  int tmp   0   int   chs length   2     0  i       chs i      0     next   cur  cur   0    else   tmp   cur    chs i     0     10   chs i   1     0  2     n     3         ndp n 5  1   dp 1  1  dp 2  1  for int i 3 i  wordDict    vector f s size     1  false       n     n 1    f 0    true               int   1    0    j     f j     find wordDict begin   wordDict end   s substr j    j    wordDict end      f i    true  break      return f s size          LeetCode 140  Word Break II Given non empty string s dictionary wordDict containing list non empty words  add spaces s construct sentence word valid dictionary word  may assume dictionary does not contain duplicate words  Return possible sentences  example  given  s    catsanddog   dict     cat    cats    and    sand    dog    solution   cats dog    cat sand dog    UPDATE  2017 1 4   wordDict parameter changed list strings  instead set strings   Please reload code definition latest changes                                    i                                      class Solution   public  vector wordBreak string s  vector  wordDict    if m count s                   return m s     vector res  if find wordDict begin   wordDict end   s   wordDict end       s       res push_back s   for int i 1 i tmp combine last wordBreak pre wordDict                 dfs res insert res end   tmp begin   tmp end                     m s  res      return res    private  vector combine string last vector pre               for int i 0 i  m",
        "objectID": "post/字符串切分",
        "date": "2017-08-23T14:46:27.000Z",
        "tags": [
            "DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "字符串中数字子串的求和",
        "uri": "post/字符串中数字子串的求和",
        "content": "stn                             A1 3          1 3                                                            A 1BC  12          1 12                   O N          O 1                       str                                    res              mim                  posi      num   res  num           res 0 num 0  posi true        str        cha      cha          cha  0   9   cha  O     cur           num           cha   0   9      cha             res  num     num 0    num              cha        cha          posi true    cha                 posi   true   cha         cha                       posi      posi  posi     posi false               cha              str                                    res  num                        res  public static int numSum String str     str    null    return 0    char   charArr   str toCharArray    int res   0  int num   0  boolean posi   true  int cur   0   int   0  9    res    num  num   0   charArr i             i   1    1    charArr i   1            posi    posi    else   posi   false      else   posi   true      else   num   num   10    posi   cur    cur       res    num  return res",
        "objectID": "post/字符串中数字子串的求和",
        "date": "2017-08-24T14:00:27.000Z",
        "tags": [
            "String"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "字符集和编码",
        "uri": "post/字符集和编码",
        "content": "1                                                                                         ASCII    ISO 8859    GB2312    BIG5    GB18030    Unicode                                                    encoding                                        encode        Unicode       UTF 8 UTF 16 UTF 32                                                                                                                                                                                                                GB2312  GBK  JIS                                     Unicode            UTF 8 UTF 16  ASCII        MBCS   GB2312        2                          8                                 8                                                                                                                             256 2 8                    0   32                                                   00x10          0x07                0x1b                                         0x20                                                          127                                                   ANSI   Ascii    American Standard Code Information Interchange                             ASCII                                                              ASCII                           127                                                             255  128 255                                                                                                            6000                                   127                       127                 127                                  0xA1  0xF7             0xA1 0xFE             7000                                               ASCII                                                127                                           GB2312  GB2312    ASCII                                                                          GB2312                                           127                 127                                                 GBK    GBK     GB2312              20000                                                     GBK     GB18030                                                              DBCS  Double Byte Charecter Set          DBCS                                                                                     127                                                                                                                                                       150                           DBCS                                                                                    BIG5                                                                                                                  ISO                                                                                    Universal Multiple Octet Coded Character Set     UCS      UNICODE   UNICODE                                     ISO                 16              ascii           UNICODE                    8    16                                       8      8    0                                                            strlen                                 UNICODE                                                                                8                           UNICODE                                                                                                                                               UNICODE                         Windows NT    MS                              UNICODE               WINDOWS                                         UNICODE                              GBK  UNICODE                                     UNICODE                                 UNICODE                        65535                                     ISO     UCS 4                               21                                       UNICODE                     UNICODE                               UTF UCS Transfer Format            UTF8    8        UTF16    16                 UNICODE UTF                                                                                                     PC     INTEL                                                                                                       FEFF         FFFE                 UTF X                                                   windows                                                                                           GB2312   UTF8                      UNICODE UTF8       Unicode UTF 8 0000   007F 0xxxxxxx 0080   07FF 110xxxxx 10xxxxxx 0800   FFFF 1110xxxx 10xxxxxx 10xxxxxx        Unicode   6C49 6C49 0800 FFFF       3     1110xxxx 10xxxxxx 10xxxxxx  6C49       0110 1100 0100 1001                    0110 110001 001001         x    1110 0110 10 110001 10 001001  E6 B1 89     UTF8                           ANSI      ANSI               GB                         c1 1100 0001 aa 1010 1010 cd 1100 1101 a8 1010 1000                             110   10     UTF8                                    UTF8                110       10          00001 101010              0      0000 0000 0110 1010         UNICODE 006A          j          UTF8     0368        ",
        "objectID": "post/字符集和编码",
        "date": "2017-06-23T20:21:32.000Z",
        "tags": null,
        "categories": [
            "杂谈"
        ]
    },
    {
        "title": "字符数组中的单独字符",
        "uri": "post/字符数组中的单独字符",
        "content": "chas     chas                           0 1                                 chas                                                                        0 1             0 N                  0 1                                                               O Mog                                                                                                       0 1                      O N 2                                             O logN      0 1                                                            0  2                             0 1                  Olog N                                                O logN              2                     public static boolean isUnique2 char   chas     chas    null    return true    heapSort chas    int   1  0  i      swap chas  0  i   heapify chas  0  i       public static void heapInsert char   chas  int i    int parent   0   i    0    parent    i   1    2   chas parent  chas i     largest   left     right chas largest     largest   right     largest    i    swap chas  largest  i     else   break      largest  left     2   1  right     2   2      public static void swap char   chas  int index1  int index2    LeetCode 387  First Unique Character String Given string  find first non repeating character return it s index  doesn t exist  return  1  Examples  s    leetcode  return 0  s    loveleetcode   return 2  Note  may assume string contain lowercase letters                   2                                        class Solution   public  int firstUniqChar string s    unordered_map m  for auto  c   s    m c       for int   0    m   map                int idx   s size    for int   0    s size    i      m s i   first    m s i   second   i    for auto  p   m  if p second first    1  idx   min idx  p second second   return idx    s size      1   idx",
        "objectID": "post/字符数组中的单独字符",
        "date": "2017-06-24T23:59:36.000Z",
        "tags": [
            "Hash",
            "Heap"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "子集",
        "uri": "post/子集",
        "content": "LeetCode 78  Subsets Given set distinct integers  nums  return possible subsets  Note  solution set not contain duplicate subsets  example  nums    1 2 3   solution is     3    1    2    1 2 3    1 3    2 3    1 2                                             0 1                              class Solution   public  vector   subsets vector  nums    sort nums begin    nums end               vector   result  const int n   nums size    vector v   int   0    subsetsWithDup vector  nums    sort nums begin    nums end               set   result       set        unordered_set          int n   nums size    vector v   int   0    real_result         vector   copy result begin    result end    backinserter realresult    return real_result       LeetCode 416  Partition Equal Subset Sum Given non empty array containing positive integers  find array partitioned two subsets sum elements subsets equal  Note  array element will not exceed 100  array size will not exceed 200  Example 1  Input   1  5  11  5  Output  true Explanation  array partitioned  1  5  5   11   Example 2  Input   1  2  3  5  Output  false Explanation  array cannot partitioned equal sum subsets                                                                                                                       dp i    dp i     dp i   nums k    dp i           i        v                      fi  fi            class Solution   public  bool canPartition vector  nums    int sum   accumulate nums begin    nums end    0        if sum 1  return false                  vector dp sum 2 1  0   dp 0    1  for int   0    nums i   j                   dp j    dp j     dp j nums i      return dp sum 2",
        "objectID": "post/子集",
        "date": "2017-06-24T20:31:54.000Z",
        "tags": [
            "背包DP",
            "Bit Manipulation"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "子数组的最大累加和/累乘积",
        "uri": "post/子数组的最大累加和:累乘积",
        "content": "LeetCode 53  Maximum Subarray Find contiguous subarray within array  containing least one number  largest sum  example  given array   2 1  3 4  1 2 1  5 4   contiguous subarray  4  1 2 1  largest sum   6               2                                          0                               class Solution   public  int maxSubArray vector  nums    int result   INT_MIN  f   0   int   0    nums  int cuts  long long max               max m           int acc   0   auto num   nums     acc   num   nums  int m    long long left   0  right   0   auto num   nums    left   max left   long long num   right    num     left   nums    int r   nums 0    int   1  imax   r  imin   r  0  number rows larger number columns                                 k                        k                                                                      l r         r l  sum                       sum i    i                 sum                set                0         lower_bound curSum   k   curSum k    0                                        sum i j    sum i    sum j    sums i j                k   sums j  curSum  sum i                    sum i   sum i       sum j    k        lower_bound   class Solution   public  int maxSumSubmatrix vector   matrix  int k     matrix empty    return 0  int row   matrix size    col   matrix 0  size    res   INT_MIN   int l   0  l sums row  0               int r   l  r accuSet  accuSet insert 0   int curSum   0  curMax   INT_MIN   int sum   sums                           curSum    sum                auto   accuSet lower_bound curSum   k    it    accuSet end           curMax   max curMax  curSum    it                   set          accuSet insert curSum     res   max res  curMax                             return res       LeetCode 198  House Robber professional robber planning rob houses along street  house certain amount money stashed  constraint stopping robbing adjacent houses security system connected will automatically contact police two adjacent houses broken night  Given list non negative integers representing amount money house  determine maximum amount money rob tonight without alerting police                                                              dp   dp i    i                  i                num i    dp i   2             dp i 1          dp 0    num 0    i 0   dp 1    max num 0   num 1     i 1   dp i    max num i    dp i   2   dp i   1     i   0    1   class Solution   public  int rob vector  nums    if nums empty    return 0  vector dp nums size   0   dp 0    nums 0   dp 1    max nums 0  nums 1    for int   2 i   nums    int n   nums size     n    0  return 0   n    1  return nums 0   vectordp n 1 0                        dp 0    nums 0    int   1  left  ll  lr   r   tryRob root  right  rl  rr   return max root  val   ll   lr   rl   rr  l   r     int rob TreeNode  root    int l  r  return tryRob root  l  r",
        "objectID": "post/子数组的最大累加和:累乘积",
        "date": "2017-06-25T00:00:10.000Z",
        "tags": [
            "Array",
            "DP",
            "Binary Search",
            "Matrix"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "数组、字符串、链表的旋转判定",
        "uri": "post/组、字符串、链表的旋转判定",
        "content": "LeetCode 189  Rotate Array Rotate array n elements right k steps  example  n   7 k   3  array  1 2 3 4 5 6 7  rotated  5 6 7 1 2 3 4   Note  Try solutions can  least 3 different ways solve problem            k  1234567 k 3   5671234        n k       k          class Solution   public  void rotate vector  nums  int k    int n nums size    k    n   k    0  return  reverse nums begin    nums end   k   reverse nums end   k  nums end     reverse nums begin    nums end                                    str     str                   str        str  12345   str       12345   23451   34512   45123   51234          a b    a b                         a b          a b           a b              b2 b2      b         String b2   b   b    b2        a           a b                       public static boolean isRotation String a  String b     a    null    b    null    a length      b length      return false    String b2   b   b  return getIndexOf b2  a      1    LeetCode 61  Rotate List Given list  rotate list right k places  k non negative  example  Given 1  2  3  4  5  NULL k   2  return 4  5  1  2  3  NULL                        k len                                     Definition singly linked list  struct ListNode   int val  ListNode  next  ListNode int x    val x   next NULL           class Solution   public  ListNode rotateRight ListNode head  int k     head    nullptr    k    0  return head  int len   1  ListNode  p   head   p  next           len    p   p  next    k   len   k   len       K  K          p  next   head          for int step   0  step next            head   p  next           p  next   nullptr         return head       LeetCode 396  Rotate Function Given array integers let n its length  Assume Bk array obtained rotating array k positions clock wise  define  rotation function  F follow  F k    0 Bk 0    1 Bk 1         n 1    Bk n 1   Calculate maximum value F 0   F 1      F n 1   Note  n guaranteed less 105  Example     4  3  2  6  F 0     0   4     1   3     2   2     3   6    0   3   4   18   25 F 1     0   6     1   4     2   3     3   2    0   4   6   6   16 F 2     0   2     1   6     2   4     3   3    0   6   8   9   23 F 3     0   3     1   2     2   6     3   4    0   2   12   12   26 So maximum value F 0   F 1   F 2   F 3  F 3    26                                                                                                                               1        A 0  A 1    A N 2                      A n 1      n 1    0          n 1  A n 1            F i    F i 1    sum A    A n i     n 1  A n i  class Solution   public  int maxRotateFunction vector  A    int F   0  sum   0  n   A size     int   0    0    i    i          F   F   sum   n   A i   m   max m  F     return m",
        "objectID": "post/组、字符串、链表的旋转判定",
        "date": "2017-06-25T02:24:25.000Z",
        "tags": [
            "Linked List",
            "Array",
            "String"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "组合",
        "uri": "post/组合",
        "content": "LeetCode 39  Combination Sum Given set candidate numbers  C   without duplicates  target number  T   find unique combinations C candidate numbers sums T  repeated number may chosen C unlimited number times  Note  numbers  including target  will positive integers  solution set not contain duplicate combinations  example  given candidate set  2  3  6  7  target 7  solution set is     7    2  2  3                           nums size        target                           dfs                         start                                dfs               dfs start             class Solution   public  vector   combinationSum vector  nums  int target    sort nums begin    nums end     vector   result          vector intermediate          dfs nums  target  0  intermediate  result     DFS              DFS         nums result       return result    private  void dfs vector  nums  int gap  int start  vector  intermediate vector    result     gap    0         0         result push_back intermediate   return     int   start    combine int n  int k    vector   result  vector path  dfs n  k  1  0  path  result   return result    private     start       cur         static void dfs int n  int k  int start  int cur vector  path  vector    result     cur    k            result push_back path      int   start    combinationSum2 vector  nums  int target    sort nums begin    nums end           50                  vector   result  vector intermediate  dfs nums  target  0  intermediate  result   return result    private       nums start  nums size                   static void dfs vector  nums  int gap  int start vector  intermediate  vector    result     gap    0               result push_back intermediate   return    int previous    1   int   start  keyboard             abc    def    ghi    jkl    mno    pqrs    tuv    wxyz     vector letterCombinations string digits    if digits size    0  return     vector result  dfs digits  0      result   return result    void dfs const string  digits  int cur  string path vector result      dfs                        cur    digits size              result push_back path   return     auto c   keyboard digits cur     0                  dfs digits  cur   1  path   c  result          LeetCode 216  Combination Sum III Find possible combinations k numbers add number n  given numbers 1 9 used combination unique set numbers  Example 1  Input  k   3  n   7 Output    1 2 4   Example 2  Input  k   3  n   9 Output    1 2 6    1 3 5    2 3 4                         class Solution   public  vector   combinationSum3 int k  int n     k      n     vector   res  vector out  DFS k  n  1  out  res                            return res    private  static void DFS int k  int n  int level  vector  out  vector    res     n    0    out size      k  res push_back out    n 0                                                 1   1  target   1  class Solution   public  int combinationSum4 vector  nums  int target    if nums size    0  return 0  vector dp target 1  0   dp 0    1  for auto val  nums    for int  1",
        "objectID": "post/组合",
        "date": "2017-06-24T22:09:05.000Z",
        "tags": [
            "Greedy",
            "背包DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "最大的leftMax与rightMax之差的绝对值",
        "uri": "post/最大的leftMax与rightMax之差的绝对值",
        "content": "N     arr                 arr O  K      arr K 1  N 1   K         0 K 2                                             2 7 3 1 1        2 7       3 1 1                        4       2 7 3       1 1                        6               6                O N          O 1       arr    max   max                max                            max                                                  arr N 1                   max                                 arr 0                              class MaxGap  public  int findMaxGap vector A  int n       write code int max   0  int pos   0  for int   0  right   left  right",
        "objectID": "post/最大的leftMax与rightMax之差的绝对值",
        "date": "2017-09-03T14:36:45.000Z",
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "最大区域面积",
        "uri": "post/最大区域面积",
        "content": "LeetCode 84  Largest Rectangle Histogram Given n non negative integers representing histogram s bar height width bar 1  find area largest rectangle histogram  Above histogram width bar 1  given height    2 1 5 6 2 3   largest rectangle shown shaded area  area   10 unit  example  Given heights    2 1 5 6 2 3   return 10                                                                                                                                                                                               height                                 class Solution   public  int largestRectangleArea vector  heights    if heights size     0  return 0  heights push_back 0   int len   heights size    ans   0  stack st  for int   0     matrix     matrix empty    return 0  int m   matrix size    n   matrix 0  size     m   n   vector dp m   1  0               0         int maxsize   0  pre   0        int j   0  j    matrix    if matrix size      0    matrix 0  size      0  return 0  int res   0  vector height matrix 0  size    0   for int   0    heights    if heights size     0  return 0  heights push_back 0     height                                 int len   heights size    ans   0  stack st  for int   0     matrix    if matrix empty    return 0  const int m   matrix size    const int n   matrix 0  size    int left n   right n   height n   filln left n 0   filln right n n   fill_n height n 0   int maxA   0  for int i 0  i 0  j      if matrixi   1   right j  min right j  cur_right   else  right j  n  cur_right j        compute area rectangle  can either side  for int j 0  j",
        "objectID": "post/最大区域面积",
        "date": "2017-06-24T20:29:09.000Z",
        "tags": [
            "DP",
            "单调栈"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "最短路径算法总结",
        "uri": "post/最短路径算法总结",
        "content": "BFS 4                matrix       1     0                      4                          matrix   1 0 1 1 1 1 0 1 0 1 1 1 1 0 1 0 0 0 0 1         12 1       12                       O N M          public static int minPathValue int m     m    null    m length    0    m0  length    0    m 0    1    mm length   1 length   1     1    return 0    int res   0  int map   new intm length length   map0   1  Queue rQ   new LinkedList    Queue cQ   new LinkedList    rQ add 0   cQ add 0   int r   0  int c   0    rQ isEmpty      r   rQ poll    c   cQ poll     r    m length   1    c    m 0  length   1    return mapr    walkTo mapr  r   1  c  m  map  rQ  cQ      walkTo mapr  r   1  c  m  map  rQ  cQ      down walkTo mapr  r  c   1  m  map  rQ  cQ      left walkTo mapr  r  c   1  m  map  rQ  cQ      right   return res    Dijkstra 1      Dijkstra                                                                                                    G  V E          E i       w i        V0                     2      1        G  V E                 V                        S      S                             S            S                               U                            S                 v S                 v U                            S          v            U          v       S                    2           S       S  v  v    0 U   v         U         v U   u           u  v               U       v     k  k  S          v k           k           U            v   u        k            k        u               k               2 3          S             4          N      a  b       a b           1 n                       dijkstra         bellman ford spfa           include  include  include using namespace std  const int N 1005  const int M 2005  const int inf  1d b        int dijstra int s    priority_queue cmp  que  for int i 1 id u  w    d v  d u  w  que push v         return d n     int main     scanf   d d   m  n   int u v w  k 1  for int i 1 i d  u    w u v     false                                                                            4       N                                                                                             bellman ford                                   bellman ford                                                                                    0                include  include  include  include using namespace std  const int MAXN 110  const int MAXE 210      double dist MAXN   int tol        int DMAXE            double CMAXE           bool Bellman int start int n double V    for int i 1 iu       len   Dist v  len     Dist u        Dist u   Fa u   v     S u            u            u                                S                              n        SPFA                                                SPFA                                                                                                 k              k 2    4                  n   m                 a b  b a    c           w             a b       c                                                                                 SPFA        include  include  include  include using namespace std  int F N M W  const int INF   1 G 1000           int updateTimes 1000              int dist 1000     dist i    i         int Spfa int v    for  int   1  que  que push v   memset updateTimes  0 sizeof updateTimes    while   que empty      int s   que front    que pop    for  int   0 i dists    G s w     diste    dist s    G s w      S e            e            u               que push e     updateTimes e           if  updateTimes e     N  return true                  n              return false    int main    cin    F  while  F      cin    N    M    W  for  int   1    s    e    t  G s  push_back Edge e t    G e  push_back Edge s t      for  int   0 i   s    e    t  G s  push_back Edge e  t      if  Spfa 1   cout int stb102  int min int x int y  return xlinemax    linemax stbi      if linemax",
        "objectID": "post/最短路径算法总结",
        "date": "2017-07-31T14:45:52.000Z",
        "categories": [
            "算法"
        ]
    },
    {
        "title": "最后一个单词的长度",
        "uri": "post/最后一个单词的长度",
        "content": "LeetCode 58  Length Last Word Given string s consists upper lower case alphabets empty space characters      return length last word string  last word does not exist  return 0  Note  word defined character sequence consists non space characters only  example  Given s    Hello World   return 5                    len                   class Solution   public  int lengthOfLastWord string s    int len   0  auto t   s begin      t      t              if         t     len  else  t    t          t                                    len   0    return len",
        "objectID": "post/最后一个单词的长度",
        "date": "2017-06-24T22:08:22.000Z",
        "tags": [
            "String"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "最小生成树算法总结",
        "uri": "post/最小生成树算法总结",
        "content": "Prim      Prim              G   V                    U T   U    G           T  G              u U v  V U   V U    U                  u  v     v    U     u  v     T           U V                 T                               0 low _cost i                         1       0             1 2 3   low cost       0    4     low cost 4       low _cost              3                  0 3    2     3        low cost     3   1     3 1 low cost 1      low cost 1   3 3   2     3 2 low cost 2       low cost 2   3   4     3 4 low cost 4      low cost 4   5  low cost              1    2               1           3 1     3     1        low cost        1                        low cost              2           0 2    4     2        low cost     2   4     2 4 low cost 4      low cost 4   1  low cost              4           2 4    5                           N     N 2                    N                              prim                                                                          include  include  include  include using namespace std  const int INFINITE   1 e w                       vector   G 110           int HeapPrim const vector     G  int n    G     n                     int i j k  Edge xDist 0 0   priority_queue pq                    vector vDist n                      vector vUsed n                     int nDoneNum   0                    for    0 i w                vDist k    w  pq push Edge k w              if  nDoneNum   N    for  int   0 i   w  G i  push_back Edge j w      cout  include  include  include using namespace std  const int maxn 500 10  const int maxm 500 500 10  struct Point   double x y   points maxn   struct Edge   int u v  double dist      Edge     Edge int u int v double d  u u  v v  dist d    bool operator",
        "objectID": "post/最小生成树算法总结",
        "date": "2017-08-01T23:07:09.000Z",
        "categories": [
            "算法"
        ]
    },
    {
        "title": "最长的可整合子数组的长度",
        "uri": "post/最长的可整合子数组的长度",
        "content": "1                5 3 4 6 2       2 3 4 5 6                 1                       arr                      5 5 3 2 6 4 3            5 3 2 6 4      5                                                             1          max min 1                        3 2 5 6 4   max min l 6 2 1 5                    public static int getLIL2 int   arr     arr    null    arr length    0    return 0    int len   0  int max   0  int min   0  HashSet set   new HashSet            int   0    arr length  i      max   Integer MIN_VALUE  min   Integer MAX_VALUE   int j   i  j   arr length  j       set contains arr j      break    set add arr j    max   Math max max  arr j    min   Math min min  arr j     max   min    j   i         len   Math max len  j     1       set clear      return len",
        "objectID": "post/最长的可整合子数组的长度",
        "date": "2017-08-28T15:16:49.000Z",
        "tags": [
            "Array"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "最长公共前缀",
        "uri": "post/最长公共前缀",
        "content": "LeetCode 14  Longest Common Prefix Write function find longest common prefix string amongst array strings                              O N L  N       L                             idx        class Solution   public  string longestCommonPrefix vector  strs    string prefix       for int idx 0  strs size   0  prefix  strs0  idx                    for int i 0  i  strsi  size      i   0    strs i    strsi 1   return prefix        return prefix",
        "objectID": "post/最长公共前缀",
        "date": "2017-06-24T22:12:20.000Z",
        "tags": [
            "Array"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "最长公共子序列/子串",
        "uri": "post/最长公共子序列:子串",
        "content": "str1 str2                        str1    M str2    N      M N   dp    M    N dpi    str1 0  i  str2 0  j                           dp    dp    dp0  M 1  dpi    str10  i  str2 0            str2 0          dp i   1   str1i  str2 0   dp i i   dpi     1     dpi 1  M 1    1     dp      dp0    1       str10  str2 j     dp 0 1   dp0    1    dp0   1        i j   dpi                  dpi 1   str1 0  i 1  str2 0  j                dpi   str1 0  i  str2 0  j 1                str1i   str2 j       dp i l 1                 dpi                getdp     public static int getdp char   str1  char   str2    int dp   new intstr1 length  dp0   str1 0     str2 0    1   0   int   1    0     n   0    dpm    dpm    n      else  m   0    dpm    dpm   1    m      else   res index      chs1 m   m    n        return String valueOf res                      str1 str2                                      MxW   dp    M    W dp i  j           str1 i  str2 j                                  dPi          dpi              dp    dp0  M 1        i 0      str1i  str2 0   dp i 1     dpi 0    dp    dp0   1          0 j       strl0   str2 j    dp 0 1     dp0 0                     dp i Lj               strli   str2 j        str1 i  str2 j                    dp i 0    strli   str2 j    strl i  str2 j                                     dp i 1      dpi dpi l 1 public static int getdp char   str1  char   str2    int dp   new intstr1 length   int   0  max    end   i  max   dpi        return str1 substring end   max   1  end   1",
        "objectID": "post/最长公共子序列:子串",
        "date": "2017-08-22T17:42:36.000Z",
        "tags": [
            "DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "最长上升子序列",
        "uri": "post/最长上升子序列",
        "content": "LeetCode 300  Longest Increasing Subsequence Given unsorted array integers  find length longest increasing subsequence  example  Given  10  9  2  5  3  7  101  18   longest increasing subsequence  2  3  7  101   therefore length 4  Note may one LIS combination  necessary return length  algorithm run O n2  complexity  Follow up  improve O n log n  time complexity                LIS            nlogn                                                                                        1 3 5 2 8 4 6        6                                           1  1  2  1 3  4  1 3 5  6                                          tail i      i             1 2 4 6  tail    tail       tail 0    nums    vector res  for int i 0  i  nums    if nums size    0  return 0  vector dp nums size   1          dp i  1 int ret 1          for int i 0 iret  ret dp j     return ret             dp                             dp               arr  2 l 5 3 6 4 8 9 7        dp  1 1 2 2 3 3 4 5 4     dp                     5    7                 5      arr 7     arr 7  9      arr     7                 i   arr i  len    len   dp i   index   i      int   lis   new int len   lis   len    arr index    int   index     0  i       arr i    nums     nums size    5 4      6 7                            pair                                            width    height               width                          width         height width                   height  LIS           width     height                    width           LIS                                                1 5 8 3 6 7    1 5 8         3  3  5   1 3 8    6  6  8   1 3 6    7       1 3 6 7           4  class Solution   public  int maxEnvelopes vector   envelopes    int size   envelopes size    sort envelopes begin    envelopes end      return a firstb second                vector collector                      vector       for auto  pair  envelopes    auto iter   lower_bound collector begin    collector end    pair second            pair       if iter    collector end    collector push_back pair second                   else if iter   pair second  iter   pair second                               return collector size              DP int maxenvelopes vector   envelopes    int size   envelopes size    if  size  return 0  sort envelopes begin    envelopes end             int maxrolls size  0   maxroll   1  maxrolls 0    1  for int   1    0    j  if envelopes i  first envelopes j  first    envelopes i  second envelopes j  second  maxrolls i    max maxrolls i   maxrolls j  1   maxroll   max maxroll  maxrolls i      return maxroll    LeetCode 368  Largest Divisible Subset Given set distinct positive integers  find largest subset every pair  Si  Sj  elements subset satisfies  Si   Sj   0 Sj   Si   0  multiple solutions  return subset fine  Example 1  nums   1 2 3  Result   1 2   of course   1 3  will ok  Example 2  nums   1 2 4 8  Result   1 2 4 8                                       DP                                                                   class Solution   public  vector largestDivisibleSubset vector  nums    sort nums begin   nums end     int len   nums size    int ans   0  ansi  int  dp new int len   int  pre new int len                            int i 0 idp i               dp i    dp j  1  pre i    j               dp i    ans            ans   dp i   ansi   i      vector res   int i 1 i  nums    if nums size   0  flag  1 ans   flag 1  else if nums i  nums i 1",
        "objectID": "post/最长上升子序列",
        "date": "2017-06-24T20:26:24.000Z",
        "tags": [
            "Greedy",
            "Hash",
            "DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "最长子串/子序列",
        "uri": "post/最长子串:子序列",
        "content": "LeetCode 392  Subsequence Given string s string t  check s subsequence t  may assume lower case English letters s t  t potentially long  length    500 000  string  s short string    1B  want check one one T its subsequence  scenario  change code           s   t                     class Solution   public  bool isSubsequence string s  string t    auto   s begin    for char c   t       i    c   return    s end         LeetCode 485  Max Consecutive Ones Given binary array  find maximum number consecutive 1s array  Example 1  Input   1 1 0 1 1 1  Output  3 Explanation  first two digits last three digits consecutive 1s  maximum number consecutive 1s 3  Note  input array will contain 0 1  length input array positive integer will not exceed 10 000       1         sum     1      0                class Solution   public  int findMaxConsecutiveOnes vector  nums    int max   0  int sum   0   int i 0   num    unordered_map used   auto   num  used i    false       int longest   0   auto   num     used i   continue              int length   1  used i    true   int j     1  used find j     used end      j          used j    true    length     int j     1  used find j     used end      j          used j    true    length    longest   max longest  length           return longest       LeetCode 3  Longest Substring Without Repeating Characters Given string  find length longest substring without repeating characters  Examples  Given  abcabcbb   answer  abc   length 3  Given  bbbbb   answer  b   length 1  Given  pwwkew   answer  wke   length 3  Note answer substring   pwke  subsequence not substring                                 hash                                                   hash                              hash        1  class Solution   public  int lengthOfLongestSubstring string s                                left               last                      int ans   0  left   0  len   s length    int last 255    hash  memset last   1  sizeof last     int   0    left                                    left       left   last s i     1  last s i     i  ans   max ans    left   1         return ans       LeetCode 395  Longest Substring Least K Repeating Characters Find length longest substring T given string  consists lowercase letters only  every character T appears no less k times  Example 1  Input  s    aaabb   k   3 Output  3 longest substring  aaa    a  repeated 3 times  Example 2  Input  s    ababbc   k   2 Output  5 longest substring  ababb    a  repeated 2 times  b  repeated 3 times                                                                                                             K                                                                             K                         class Solution   public  int longestSubstring string s  int k    return longestSubstring_recur s  k  0  s size       int longestSubstring_recur const string  s  int k  int first  int last    int count 26     0                    int   first   k    r          l    first    r    last  return last first                           dfs maxlen   max maxlen  longestSubstring_recur s  k  l  r          l  r                                   return max_len                          strl str2  strl      str2                 str1  abcde   str2  ac     abc   str2                str1        abc        3  str1  12345   str2  344              0            O N       public static int minLength String str1  String str2     str1    null    str2    null    str1 length     0    match       match    0     map chas1 left     0    map chas1 left          minLen   Math min minLen  right   left   1   match    map chas1 left          right      return minLen    Integer MAX_VALUE   0   minLen",
        "objectID": "post/最长子串:子序列",
        "date": "2017-06-25T02:28:32.000Z",
        "tags": [
            "Two Pointers"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "作业控制、调整nice值",
        "uri": "post/作业控制、调整nice值",
        "content": "Linux                   kill                         SIGCONT                                             shell                               jobs   jobs      shell                  PID    jobs      l     jobs  l  1   1897 Stopped   test10 sh  2   1917 Running     test10 sh   test10 out                                                                                                                         shell                       bash                                             bg                            fg                    Linux         CPU                       scheduling priority          CPU             Linux      shell                                   20         19              bash shell     0         nice   nice                                    nice   n               nice  n 10   test4 sh   test4 out         nice                 nice                                   nice    n                            renice                         renice                    PID            renice  n 10  p 5055 renice                     nice     renice                     renice      renice          root      renice                            root         sudo",
        "objectID": "post/作业控制、调整nice值",
        "date": "2017-08-10T21:08:16.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "作用域与{}",
        "uri": "post/作用域与",
        "content": "C C                                                                                                     void MyProcess MyType input  MyType   output    MyType filter   input    MyType temp  step1 filter temp       MyType temp  step2 filter temp       MyType temp  step3 filter temp     output   filter                        temp1 temp2 temp3       input   step1   step2   step3   output temp                                                                                          include int main int argc  char  argv      int  pa    int a 10  pa  a      error C2065   a    undeclared identifier   printf   d n  a       pa                     main       a         block                       a           a                      pa                    a                  printf   d n   pa   return 0       http   blog csdn net zhu2695 article details 8762965",
        "objectID": "post/作用域与",
        "date": "2017-06-23T20:33:54.000Z",
        "tags": null,
        "categories": [
            "C++"
        ]
    },
    {
        "title": "ACID理论与BASE理论",
        "uri": "post/ACID理论与BASE理论",
        "content": "ACID     4        Atomicity      Consistency      Isolation      Durability   4      ACID   ACID properties       Atomicity                                         Consistency                                                                                                                                                                        A  B             A           B                                A                 B                                                                                                             Isolation                                                                      Durability           Permanence                                                                                          BASE BASE    Basically Available       Soft state        Eventually consistent                  ebay         Base      CAP                                      CAP                              Strong consistency                                       Eventual consistency   Basically Available                                                                      0 5                         1                                                                                        Soft state                                                                                                                     Eventually consistent                                                                                                                                                                                                                                                              5          Causal consistency                      B      B                                          C                      Read writes                                                           Session consistency                                                                                                            Monotonic read consistency                                                                       Monotonic write consistency                                                                                                                                                                    MySQL PostgreSQL                                                                                                                                                                                                                                                                           BASE                         ACID        ACID        BASE                                                                               ACID BASE                https   juejin im post 5b2663fcf265da59a401e6f8 https   feixiao github io 2017 03 14 fbsxt9",
        "objectID": "post/ACID理论与BASE理论",
        "date": "2019-09-20T17:22:31.000Z",
        "tags": null,
        "categories": [
            "架构"
        ]
    },
    {
        "title": "algorithm库操作总结",
        "uri": "post/algorithm库操作总结",
        "content": "for_each template Function for_each  InputIterator first  InputIterator last  Function fn   template Function for_each InputIterator first  InputIterator last  Function fn     first  last    fn   first     first    return fn     or  C  11  return move fn     all_of    all_of example  include    std  cout  include    std  all_of  include    std  array int main      std  array foo    3 5 7 11 13 17 19 23     std  all_of foo begin    foo end     return i 2      std  cout Function for_each  InputIterator first  InputIterator last  Function fn   find template InputIterator find  InputIterator first  InputIterator last  const T  val   template InputIterator find  InputIterator first  InputIterator last  const T  val     first  last      first  val  return first    first    return last    find_if template InputIterator find_if  InputIterator first  InputIterator last  UnaryPredicate pred   template InputIterator find_if  InputIterator first  InputIterator last  UnaryPredicate pred     first  last     pred  first   return first    first    return last    find_end template ForwardIterator1 find_end  ForwardIterator1 first1  ForwardIterator1 last1  ForwardIterator2 first2  ForwardIterator2 last2   template ForwardIterator1 find_end  ForwardIterator1 first1  ForwardIterator1 last1  ForwardIterator2 first2  ForwardIterator2 last2  BinaryPredicate pred   template ForwardIterator1 find_end  ForwardIterator1 first1  ForwardIterator1 last1  ForwardIterator2 first2  ForwardIterator2 last2     first2  last2  return last1     specified C  11 ForwardIterator1 ret   last1   first1  last1    ForwardIterator1 it1   first1  ForwardIterator2 it2   first2   it1  it2       or   pred it1 it2   version  2    it1    it2   it2  last2    ret first1  break     it1  last1  return ret      first1    return ret    find firstof template InputIterator findfirstof  InputIterator first1  InputIterator last1  ForwardIterator first2  ForwardIterator last2   template InputIterator findfirstof  InputIterator first1  InputIterator last1  ForwardIterator first2  ForwardIterator last2  BinaryPredicate pred   template InputIterator findfirstof   InputIterator first1  InputIterator last1  ForwardIterator first2  ForwardIterator last2     first1  last1     ForwardIterator it first2  it  last2    it     it  first1     or   pred it first   version  2  return first1      first1    return last1    adjacent_find template ForwardIterator adjacent_find  ForwardIterator first  ForwardIterator last   template ForwardIterator adjacent_find  ForwardIterator first  ForwardIterator last  BinaryPredicate pred   template ForwardIterator adjacent_find  ForwardIterator first  ForwardIterator last     first    last    ForwardIterator next first    next   next    last     first    next     or   pred first next    version  2  return first    first    next      return last    equal template bool equal  InputIterator1 first1  InputIterator1 last1  InputIterator2 first2   template bool equal  InputIterator1 first1  InputIterator1 last1  InputIterator2 first2  BinaryPredicate pred   template bool equal   InputIterator1 first1  InputIterator1 last1  InputIterator2 first2      first1  last1       first1    first2      or    pred first1 first2    version 2 return false    first1    first2    return true    count template typename iteratortraits  differencetype count  InputIterator first  InputIterator last  const T  val   template typename iteratortraits  differencetype count  InputIterator first  InputIterator last  const T  val    typename iteratortraits  differencetype ret   0   first  last      first    val    ret    first    return ret    count_if template typename iteratortraits  differencetype count_if  InputIterator first  InputIterator last  UnaryPredicate pred   template typename iteratortraits  differencetype count_if  InputIterator first  InputIterator last  UnaryPredicate pred    typename iteratortraits  differencetype ret   0   first  last     pred  first     ret    first    return ret    mismatch template pair mismatch  InputIterator1 first1  InputIterator1 last1  InputIterator2 first2   template pair mismatch  InputIterator1 first1  InputIterator1 last1  InputIterator2 first2  BinaryPredicate pred   template pair mismatch  InputIterator1 first1  InputIterator1 last1  InputIterator2 first2        first1  last1      first1  first2       or  pred first1 first2   version 2     first1    first2    return std  make_pair first1 first2     search template ForwardIterator1 search  ForwardIterator1 first1  ForwardIterator1 last1  ForwardIterator2 first2  ForwardIterator2 last2   template ForwardIterator1 search  ForwardIterator1 first1  ForwardIterator1 last1  ForwardIterator2 first2  ForwardIterator2 last2  BinaryPredicate pred   template ForwardIterator1 search   ForwardIterator1 first1  ForwardIterator1 last1  ForwardIterator2 first2  ForwardIterator2 last2     first2  last2  return first1     specified C  11  first1  last1    ForwardIterator1 it1   first1  ForwardIterator2 it2   first2   it1  it2       or   pred it1 it2   version 2  it2  last2  return first1   it1  last1  return last1    it",
        "objectID": "post/algorithm库操作总结",
        "date": "2017-07-27T21:50:23.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "alias命令详解",
        "uri": "post/alias命令详解",
        "content": "alias                                                      alias       p    alias li  ls  li      li total 36 529581 drwxr xr x  2 Christine Christine 4096 May 19 18 17 Desktop 529585 drwxr xr x  2 Christine Christine 4096 Apr 25 16 59 Documents 529582 drwxr xr x  2 Christine Christine 4096 Apr 25 16 59 Downloads 529586 drwxr xr x  2 Christine Christine 4096 Apr 25 16 59 Music 529587 drwxr xr x  2 Christine Christine 4096 Apr 25 16 59 Pictures 529584 drwxr xr x  2 Christine Christine 4096 Apr 25 16 59 Public 529583 drwxr xr x  2 Christine Christine 4096 Apr 25 16 59 Templates 532891  rwxrw r    1 Christine Christine 36 May 30 07 21 test sh 529588 drwxr xr x  2 Christine Christine 4096 Apr 25 16 59 Videos                   shell        shell                                      shell        alias                                                         bashrc            shell             bashr        echo  alias cmd  command seq         bashrc                       bashrc        unalias                                    bashrc            rm              backup         alias rm cp      backup  rm                                                                         alias                                                                           command",
        "objectID": "post/alias命令详解",
        "date": "2017-09-08T12:34:30.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "append的陷阱",
        "uri": "post/append的陷阱",
        "content": "package main import  fmt  func main     s      byte     s1    append s   a   s2    append s   b     fmt Println s1                s2  fmt Println string s1                 string s2                              b            b             97              98             b string   byte s      byte     fmt Println cap s   len s    capacity  32 length  0           slice    32    0  8                Go                                      go run  gcflags   S  S  main go        0x0000 00000    TEXT    main SB    264 0 0x003e 00062    MOVQ AX   SP  0x0042 00066    XORPS X0  X0 0x0045 00069    MOVUPS X0  8 SP  0x004a 00074    PCDATA  0   0 0x004a 00074    CALL runtime stringtoslicebyte SB  0x004f 00079    MOVQ 32 SP   AX b   b Go    plan9                               CALL runtime stringtoslicebyte SB       src runtime string go    const tmpStringBufSize   32 type tmpBuf  tmpStringBufSize byte func stringtoslicebyte buf  tmpBuf  s string    byte   var b   byte buf    nil    len s",
        "objectID": "post/append的陷阱",
        "date": "2019-01-05T11:24:39.000Z",
        "tags": [
            "Go",
            "逃逸机制",
            "slice"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Arithmetic Slices",
        "uri": "post/Arithmetic-Slices",
        "content": "LeetCode 413  Arithmetic Slices Given m x n matrix non negative integers representing height unit cell continent   Pacific ocean  touches left top edges matrix  Atlantic ocean  touches right bottom edges  Water flow four directions  up  down  left  right  cell one height equal lower  Find list grid coordinates water flow Pacific Atlantic ocean  Note  order returned grid coordinates does not matter  m n less 150  Example  Given following 5x5 matrix  Pacific             1 2 2 3  5      3 2 3  4   4      2 4  5  3 1      6   7  1 4 5      5  1 1 2 4           Atlantic Return    0  4    1  3    1  4    2  2    3  0    3  1    4  0    positions parentheses above matrix                                                                                                                                                                                                                                 true                  true                    Definition binary tree node  public class TreeNode   int val  TreeNode left  TreeNode right  TreeNode int x    val   x         class Solution   public  vector  res  vector  visited                                void dfs vector   matrix  int x  int y  int pre  int preval           2           pre     preval  x   matrix size      y   matrix 0  size      matrixx   pacificAtlantic vector   matrix                                           matrix empty    return res  int m   matrix size    n   matrix 0  size           visited resize m  vector n  0         visited      int   0    m  i                        matrix   min  dfs matrix  i  0  INT_MIN  1    1      dfs matrix  i  n   1  INT_MIN  2    2         int   0    n  i            dfs matrix  0  i  INT_MIN  1   dfs matrix  m   1  i  INT_MIN  2     return res",
        "objectID": "post/Arithmetic-Slices",
        "date": "2017-06-24T15:34:35.000Z",
        "tags": [
            "FS"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "ARP协议详解",
        "uri": "post/ARP协议详解",
        "content": "IP   MAC      IP                  IP                                         IP                          IP          IP                                           IP   IP                    MAC   MAC                                 MAC                             MAC       MAC                       MAC      IP        MAC          MAC                  IP          IP     IP       IP    IP               MAC                   IP                      IP           MAC        IP      MAC                    IP                           IP                                                IP                    ARP                                          IP                      ARP                               RARP                       RARP     IP      DHCP       RARP            RARP         ARP                   IP                                      IP                                    IP   32            48                                                              ARP             ARP            IP                                               ARP     ARP cache                    IP                                                              A            B  IP         ARP           B IP        ARP                           MAC           MAC                   B IP            B          A                        A     ARP             B        1  ARP              ARP       a    A    ARP         ARP               IP   209 0 0 5      00 00 C0 15 AD 18     IP    209 0 0 6            2                 ARP      ARP       3    B IP   ARP         IP          ARP          A  ARP         ARP                          IP    ARP         IP               ARP        b  ARP                IP   209 0 0 6        08 00 2B 00 EE 0A        ARP             ARP                              3    A    B ARP         ARP         B IP                A B                B   A           B     A  ARP                   A    ARP           IP            ARP        B  A  ARP          A           B   ARP           B A               ARP              ARP                                    ARP                     ARP                                                                             ARP      ARP                              10   20                                                          A B   A ARP        B       B           B          B             A   B     A  ARP        B                  B       B               A      B                A ARP           B          A      ARP         B      ARP                  IP                                      H1               H2                      H2         H1   H2 IP            H1              R1         H1        R1 IP  IP3       HA3      IP         R1    R1             R2     ARP   R2     HA5   IP         HA5      R2    R2     IP                H2     HA2   IP         H2   IP                                                          IP              ARP           IP                           ARP         4 12                                                              IP      ARP                                                                                                          IP                             IP                                    ARP",
        "objectID": "post/ARP协议详解",
        "date": "2017-07-30T15:45:45.000Z",
        "categories": [
            "网络"
        ]
    },
    {
        "title": "assert()用法",
        "uri": "post/assert-用法",
        "content": "assert                                                             if    if                   else                                             if           if                                                                          assert    assert       assert h                           include  assert h  void assert  int expression    assert          expression           0       stderr                abort            assert                                              include          define NDEBUG    assert            include  define NDEBUG  include                               int resetBufferSize int nNewSize                       nNewSize                                     nNewSize  0   assert nNewSize  0    nOffset nSize  0   assert nOffset nSize 0                                                                                                                                                                                                                                                                         ASSERT                                         FALSE  0                        0                                                                  ASSERT   Debug            Release",
        "objectID": "post/assert-用法",
        "date": "2017-06-24T13:53:26.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "AVL树详解",
        "uri": "post/AVL树详解",
        "content": "http   www cnblogs com QG whz p 5167238 html  http   blog csdn net sp_programmer article details 41812787     AVL                                                      AVL                                                                                               1      5 5         2 6 2 6           1 4 7 1 4     3 3         AVL                                      1          6          5      2       AVL  N            lgN                 lgN                 AVL                                    1 2 3 4 5      1   2   3   4   5                                                           O N          AVL     AVL               2     1 4     3 5      AVL                       O logN                                                      AVL               struct AVLTreeNode   AVLTreeNode T value  AVLTreeNodel  AVLTreeNoder   key value   lchild l   rchild r    T key  int height                       AVLTreeNode  lchild  AVLTreeNode  rchild                       2  AVL       2                                                  2                                                                                                                                            1 4                2 3                                                                                                                                                                                        1  LL                                                             A    B      A         B      A           Brh A              pnode                         template AVLTreeNode  AVLTree  rightRotation AVLTreeNode proot    AVLTreeNode  plchild   proot  lchild  proot  lchild   plchild  rchild  plchild  rchild   proot  proot  height   max height proot  lchild   height proot  rchild     1             plchild  height   max height plchild  lchild   height plchild  rchild     1             return plchild     2  RR                                                             A   B      A         B    Blh   A               pnode                         template AVLTreeNode  AVLTree  leftRotation AVLTreeNode  proot    AVLTreeNode  prchild   proot  rchild  proot  rchild   prchild  lchild  prchild  lchild   proot  proot  height   max height proot  lchild  height proot  rchild   1             prchild  height   max height prchild  lchild   height prchild  rchild     1             return prchild     3  LR                                                                         B    RR              A                                      proot                         template AVLTreeNode  AVLTree  leftRightRotation AVLTreeNode  proot    proot  lchild  leftRotation proot  lchild   return rightRotation proot      4  RL                                                          LR                 proot                         template AVLTreeNode  AVLTree  rightLeftRotation AVLTreeNode  proot    proot  rchild   rightRotation proot  rchild   return leftRotation proot                                                       2                                   X item            X l   item                        X   T  l   item                      X   T  item           X r   item                       X   T  r   item               X    T  item                                                   template AVLTreeNode  AVLTree  insert AVLTreeNode   pnode  T key     pnode    nullptr               pnode   new AVLTreeNode key  nullptr  nullptr     else  key   pnode  key                              pnode  rchild   insert pnode  rchild  key    height pnode  rchild    height pnode  lchild     2               key   pnode  rchild  key                       pnode leftRotation pnode   else  key rchild  key                           pnode rightLeftRotation pnode       else  key key                              pnode  lchild   insert pnode  lchild  key    height pnode  lchild    height pnode  rchild     2                key lchild  key                           pnode   rightRotation pnode   else  key pnode  lchild  key  pnode   leftRightRotation pnode                                   pnode  height   max height pnode  lchild   height pnode  rchild     1  return pnode                   AVL                                     AVL                  AVL               AVL                  AVL        AVL                                                                                                                                                                                                             AVL                                                               template AVLTreeNode  AVLTree  remove AVLTreeNode    pnode  T key     pnode    nullptr     key    pnode  key                 AVL                          pnode  lchild    nullptr  pnode  rchild    nullptr                                         height pnode  lchild    height pnode  rchild                                 AVLTreeNode  ppre   maximum pnode  lchild             pnode  key   ppre  key                  pnode  lchild   remove pnode  lchild  ppre  key                 else                                            AVLTreeNode  psuc   minimum pnode  rc",
        "objectID": "post/AVL树详解",
        "date": "2017-06-25T22:44:51.000Z",
        "categories": [
            "算法"
        ]
    },
    {
        "title": "Binary Search Tree",
        "uri": "post/Binary-Search-Tree",
        "content": "LeetCode 230  Kth Smallest Element BST Given binary search tree  write function kthSmallest find kth smallest element it         BST                Kth                  Kth                                                                        Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  int calcTreeSize TreeNode  root    root    NULL  return 0  return 1 calcTreeSize root  left    calcTreeSize root  right     int kthSmallest TreeNode  root  int k                   root    NULL  return 0  int leftSize   calcTreeSize root  left              k    leftSize 1             return root  val   else  leftSize    k             return kthSmallest root  left k    else            return kthSmallest root  right  k leftSize 1          LeetCode 501  Find Mode Binary Search Tree Given binary search tree  BST  duplicates  find mode s   the frequently occurred element  given BST  Assume BST defined follows  left subtree node contains nodes keys less equal node s key  right subtree node contains nodes keys greater equal node s key  left right subtrees binary search trees                                                            2                 2                                             Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  vector findMode TreeNode  root    inorder root   return result    private  vector result  int maxCount   0  currentVal  tempCount   0      maxCount        tempCount           currentVal         void inorder TreeNode  root     root    NULL  return          inorder root  left    root  val    currentVal                 currentVal   root  val  tempCount   0    tempCount     tempCount   maxCount                          maxCount   tempCount  result clear    result push_back root  val     else  tempCount    maxCount               result push_back root  val     inorder root  right        LeetCode 173  Binary Search Tree Iterator Implement iterator binary search tree  BST   iterator will initialized root node BST  Calling next   will return next smallest number BST  Note  next   hasNext   run average O 1  time uses O h  memory  h height tree                    next                                                       Definition binary tree struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class BSTIterator   public  stack snode  TreeNode   t  BSTIterator TreeNode  root                                                        a        t root  while t  NULL    snode push t   t t  left                    t          return whether next smallest number   bool hasNext                       if snode empty    return false  else return true        return next smallest number   int next                                    a        b    a b         a       a           b     a b            a                      int result  t   snode top               b   a result t  val  snode pop     a   if t  right    NULL      a                  t   t  right       while t            snode push t   t   t  left      return result           BSTIterator will called this  BSTIterator   BSTIterator root    i hasNext    cout   nums   Iterator const Iterator  iter   virtual  Iterator       Returns next element iteration  int next       Returns true iteration elements  bool hasNext   const     class PeekingIterator   public Iterator   private  int cache     peek           next         int isvis                 peek  public  PeekingIterator const vector  nums    Iterator nums       Initialize member here     NOT save copy nums manipulate directly     use Iterator interface methods  isvis 0       Returns next element iteration without advancing iterator  int peek     if  isvis   isvis 1  return cache Iterator  next      else return cache       hasNext   next   behave Iterator interface     Override needed  int next     if  isvis  return Iterator  next      isvis 0      peek next            next               else    isvis 1     peek next                     next            peek    isvis 0  return cache      bool hasNext   const   if isvis  return true     sivis       return Iterator  hasNext",
        "objectID": "post/Binary-Search-Tree",
        "date": "2017-06-25T02:26:31.000Z",
        "tags": [
            "DFS",
            "BST"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "Broker端的消息过滤机制",
        "uri": "post/Broker端的消息过滤机制",
        "content": "Broker                   Consumer                Broker                 Tag Key                Topic          Tag             Tag        Tag                                Tag                  Tag Broker              Key          Key         Key          Key                                         Broker               Key                   Key              Tag Key             Tag  Consumer                 Key                 Tag      Tag                Tag   Tag                Message         Message     Tag   Tag         Broker    ConsumeQueue         CommitLog                ConsumerQueue       ConsumeQueue         Tag   hashcode             Tag            hashcode   hashcode            CommitLog         Hash                   Message Tag      Hash         package main import    context   fmt   os   time   github com apache rocketmq client go v2   github com apache rocketmq client go v2 consumer   github com apache rocketmq client go v2 primitive    func main     c  _    rocketmq NewPushConsumer  consumer WithGroupName  testGroup    consumer WithNameServer   string  127 0 0 1 9876       selector    consumer MessageSelector  Type  consumer TAG  Expression   TagA    TagC     err    c Subscribe  TopicTest   selector  func ctx context Context  msgs     primitive MessageExt   consumer ConsumeResult  error    fmt Printf  subscribe callback   v  n   msgs  return consumer ConsumeSuccess  nil    err    nil   fmt Println err Error      err   c Start   err    nil   fmt Println err Error    os Exit  1    time Sleep time Hour  err   c Shutdown   err    nil   fmt Printf  shutdown Consumer error   s   err Error          SQL             Tag                        Message         putUserProperty                                     SQL                 SQL                            IN  NULL NOT NULL      AND OR NOT                 123 3 1415         abc            NULL             TRUEorFALSE  SQL          Broker               SQL            Tag      Filter Server     Filter Server    SQL                   Java     Java                 Filter Server       Broker         filterServerNums 3      Broker               3 FilterServer   Filter Server    RocketMQ Consumer       Broker                Java                   Consumer          Broker   CPU                  java                                   Broker",
        "objectID": "post/Broker端的消息过滤机制",
        "date": "2020-04-22T22:56:38.000Z",
        "tags": [
            "rocketmq"
        ],
        "categories": [
            "rocketmq"
        ]
    },
    {
        "title": "bufio包解析",
        "uri": "post/bufio包解析",
        "content": "Constants const            token        token                       MaxScanTokenSize   64   1024   Variables var   ErrInvalidUnreadByte   errors New  bufio  invalid use UnreadByte   ErrInvalidUnreadRune   errors New  bufio  invalid use UnreadRune   ErrBufferFull   errors New  bufio  buffer full   ErrNegativeCount   errors New  bufio  negative count     var   ErrTooLong   errors New  bufio Scanner  token long   ErrNegativeAdvance   errors New  bufio Scanner  SplitFunc returns negative advance count   ErrAdvanceTooFar   errors New  bufio Scanner  SplitFunc returns advance count beyond input       Scanner         type Reader type Reader struct                   Reader      io Reader          func NewReader func NewReader rd io Reader   Reader NewReader              r    Reader  func NewReaderSize func NewReaderSize rd io Reader  size int   Reader NewReaderSize         size       r    Reader     r              Reader       r  func   Reader  Reset func  b  Reader  Reset r io Reader  Reset                 b       r      func   Reader  Buffered func  b  Reader  Buffered   int Buffered                 func   Reader  Peek func  b  Reader  Peek n int     byte  error  Peek       n                   byte                 Peek        n                  n               ErrBufferFull  func   Reader  Read func  b  Reader  Read p   byte   n int  err error  Read      p        p                   Reader    Read        n    len p             n  0 err  io EOF  func   Reader  ReadByte func  b  Reader  ReadByte    c byte  err error  ReadByte                           func   Reader  UnreadByte func  b  Reader  UnreadByte   error UnreadByte                                        func   Reader  ReadRune func  b  Reader  ReadRune    r rune  size int  err error  ReadRune    utf 8   unicode                       utf 8            1     U FFFD    size 1 err nil                  func   Reader  UnreadRune func  b  Reader  UnreadRune   error UnreadRune      ReadRune     unicode                ReadRune             UnreadRune UnreadByte      func   Reader  ReadLine func  b  Reader  ReadLine    line   byte  isPrefix bool  err error  ReadLine                        ReadBytes   n   ReadString   n         Scanner  ReadLine                                  isPrefix    true                                 isPrefix                false                           ReadLine       nil line        nil err           nil                    r n    n                                        ReadLine    UnreadByte                                     ReadLine         func   Reader  ReadSlice func  b  Reader  ReadSlice delim byte   line   byte  err error  ReadSlice         delim                  delim                          ReadSlice      delim                                      io EOF        delim          ReadSlice     ErrBufferFull   ReadSlice         I O             ReadBytes ReadString           ReadBytes         delim          nil     func   Reader  ReadBytes func  b  Reader  ReadBytes delim byte   line   byte  err error  ReadBytes         delim                delim        ReadBytes      delim                               io EOF      ReadBytes         delim          nil     func   Reader  ReadString func  b  Reader  ReadString delim byte   line string  err error  ReadString         delim                delim         ReadString      delim                               io EOF      ReadString         delim          nil     func   Reader  WriteTo func  b  Reader  WriteTo w io Writer   n int64  err error  WriteTo     io WriterTo    type Writer type Writer struct                   Writer    io Writer               Writer                                                         Flush                 io Writer  w    bufio NewWriter os Stdout  fmt Fprint w   Hello     fmt Fprint w   world    w Flush      Don t forget flush  Output  Hello  world  func NewWriter func NewWriter w io Writer   Writer NewWriter               w  Writer  func NewWriterSize func NewWriterSize w io Writer  size int   Writer NewWriterSize         size        w  Writer     w             Writer       w  func   Writer  Reset func  b  Writer  Reset w io Writer  Reset                 b         w  func   Writer  Buffered func  b  Writer  Buffered   int Buffered              func   Writer  Available func  b  Writer  Available   int Available                func   Writer  Write func  b  Writer  Write p   byte   nn int  err error  Write p                      nn   len p                func   Writer  WriteString func  b  Writer  WriteString s string   int  error  WriteString                      nn   len s                func   Writer  WriteByte func  b  Writer  WriteByte c byte  error WriteByte        func   Writer  WriteRune func  b  Writer  WriteRune r rune   size int  err error  WriteRune    unicode    utf 8                    func   Writer  Flush func  b  Writer  Flush   error Flush              io Writer    func   Writer  ReadFrom func  b  Writer  ReadFrom r io Reader   n int64  err error  ReadFrom   io ReaderFrom    type ReadWriter type ReadWriter struct    Reader  Writer   ReadWriter       Reader Writer        ",
        "objectID": "post/bufio包解析",
        "date": "2018-11-15T18:12:08.000Z",
        "tags": [
            "Go标准库"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "Bulls and Cows",
        "uri": "post/Bulls and Cows",
        "content": "LeetCode 299  Bulls Cows playing following Bulls Cows game friend  write down number ask friend guess number is  time friend makes guess  provide hint indicates digits guess match secret number exactly digit position  called  bulls   digits match secret number locate wrong position  called  cows    friend will use successive guesses hints eventually derive secret number  example  Secret number   1807  Friend s guess   7810  Hint  1 bull 3 cows   The bull 8  cows 0  1 7   Write function return hint according secret number friend s guess  use indicate bulls B indicate cows  above example  function return  1A3B   Please note secret number friend s guess may contain duplicate digits  example  Secret number   1123  Friend s guess   0111  case  1st 1 friend s guess bull  2nd 3rd 1 cow  function return  1A1B   may assume secret number friend s guess contain digits  lengths always equal                  Bulls Cows     4                                                         Bulls                   Cows                                  1807        7810    A  Bulls B  Cows        1A3B        secret        guess                     a bulls   b bulls cows   m                 secret             1  guess             1       secret       1 guess       1           bulls       s g     a  1     bulls        s     0      guess     b 1   g     0      secret    b 1 class Solution   public  string getHint string secret  string guess              bulls cows int m 10     0     0  b   0  i j  for i 0 j 0 i 0     return tostring a     A    tostring b   a     B",
        "objectID": "post/Bulls and Cows",
        "date": "2017-06-24T16:12:15.000Z",
        "tags": [
            "Array",
            "Hash"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "C++编译不了的C程序",
        "uri": "post/C-编译不了的C程序",
        "content": "C   C                              include int main     foo       foo   called its declaration definition   int foo     printf  Hello    return 0                include int main void    int const j   20     below assignment invalid C    results error C  compiler may throw warning  casting implicitly allowed    int  ptr    j     normal pointer points const printf  ptr   d n   ptr   return 0                include int main     void vptr  int iptr   vptr     C    replaced int iptr    int  vptr  return 0",
        "objectID": "post/C-编译不了的C程序",
        "date": "2017-06-24T14:07:24.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "C++变量的自动初始化",
        "uri": "post/C-变量的自动初始化",
        "content": "include  define CONST 100 int  p1  int a 2   int b  static int c  main     int d  static int e  int f 2   int  p2  printf  CONST  d n  CONST   printf  a 0   d n  a 0      printf  p1  d n  p1   printf  b  d n  b   printf  c  d n  c   printf  d  d n  d   printf  e  d n  e   printf  f 0   d n  f 0    printf  p2  d n  p2         CONST 100 a 0  0 b 0 c 0 d 1 e 0 f 0  1307813  p2 457819009                                           uninitializeddata segment BSS             BSS                 0 NULL BSS                                        0                      0                                                               0 NULL     p1     p1  NULL           p1          p1      NULL                                                                                                                             2  class A  public  int value  A    cout",
        "objectID": "post/C-变量的自动初始化",
        "date": "2017-08-30T16:08:30.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "C++程序内存分配形式",
        "uri": "post/C-程序内存分配形式",
        "content": "1        text          text      C P U                                           C     s h e l l                                                                                                                     2         rdata                                  const           char  p  hello     hello                                                                                                                                                                                        3        data                   0                                                     static                                                  3         bss           0            BSS                        4   stack                                                                         5   heap                                                                     malloc new         free delete                                                                                           rdata  data  bss          rdata data                               bss                           bss          0                                           char name5 20     fengkewei   char name1      fengkewei            char  name    fengkewei                       malloc  alloc  realloc                                       int main     char  name    fengkewei   char name1      fengkewei   char  name2    fengkewei   char  name3    woaifengkewei   int   10  int j   10  int k   11  return 0                                                                                                                                              name 0x004156b8  fengkewei  unsigned char   name2 0x004156b8  fengkewei  unsigned char   name3 0x00416010  woaifengkewei  unsigned char   name1 0x0013ff48  fengkewei  unsigned char  10    name1                          strcpy char name4 20   strcpy name4   fengkewei     name4 0x0013fee4 unsigned char  20    name4 0  0x0013fee4  fengkewei  unsigned char    name4 1  0x0013fee5  engkewei  unsigned char    name4 2  0x0013fee6  ngkewei  unsigned char   name4 0  102  f  unsigned char name4 1  101  e  unsigned char                                         strcpy              fengkewei             name4 20                                                                                    rdata                                              bss            data                          stack              heap             stack            CPU                                                                  memory leak              32            4G                                                   VC6            1M                    new delete                                                                                                                                                                                                                        2                                           alloca                                                                                                                                 C C",
        "objectID": "post/C-程序内存分配形式",
        "date": "2017-06-23T14:32:37.000Z",
        "tags": [
            "内存分配"
        ],
        "categories": [
            "C++"
        ]
    },
    {
        "title": "C++的万能头文件",
        "uri": "post/C-的万能头文件",
        "content": "C                          include           C              include  include  include  include  include  include  include  include  include  include  include  include  include         oj  poj hdu            oj            oj      oj    CF Topcoder",
        "objectID": "post/C-的万能头文件",
        "date": "2017-06-23T20:06:44.000Z",
        "tags": null,
        "categories": [
            "C++"
        ]
    },
    {
        "title": "C++函数返回值问题",
        "uri": "post/C-函数返回值问题",
        "content": "stack        ebp     esp                     1         ret                      2  ebp   3  esp   ebp 4                            1          2 ebp     ebp   3                                ebp esp                                                                                                                                            int func     int temp   0                return temp        temp                  temp copy          vector func     vector v  v push_back 0   return v        v           Person func     Person p1  p1 name    test   return p1                Person                      int func     static int   1                return a        a                                                                                                                                                                                                                        int  test int b    int a 0        a b         a int   p  a         int         a    p return p      p   p           void test2     int a 10    int   0  val val    ret   l1  ret  next   mergeTwoLists l1  next  l2     else   ret   l2  ret  next   mergeTwoLists l1  l2  next     return ret                                 NULL",
        "objectID": "post/C-函数返回值问题",
        "date": "2017-06-23T16:16:12.000Z",
        "tags": null,
        "categories": [
            "C++"
        ]
    },
    {
        "title": "C++中的默认参数",
        "uri": "post/C-中的默认参数",
        "content": "C                                                                                                                                                                                      void point int 3 int 4             void point int x int y                  cout",
        "objectID": "post/C-中的默认参数",
        "date": "2017-09-05T16:41:31.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "C++中的强制类型转换",
        "uri": "post/C-中的强制类型转换",
        "content": "C C                                                  2                                                                         short a 2000  int b  b a  short     int      short   int       bit           warning        char int int long long int float float double int double                                                             double a 2000  short b  b a       8   double   2   short                warning                                       warning   int short                        include using namespace std  class                class B   public                int main     B  pB   new B   pA   pB     Safe will succeed           void                 void        const     const                                  int   int                                                 C            C                             C                   C       int dval      int dval                             double     int                int                                                         C          C     4              staticcast  reinterpretcast  constcast   dynamiccast  static_cast       staticcast      staticcast  expression   expression   type id                                                                                                            int   char  int   enum                                          static_cast                     void                void                                                                                                                                                      staticcast     expression const volatile _unaligned    dynamic_cast       dynamiccast      dynamiccast  expression                                    type        expression   type id   type id               void     type id        expression           type id        expression                                                           dynamiccast           staticcast                  dynamic_cast                                 dynamiccast staticcast                       void              A B                              dynamic_cast                   expression type id      dynamic_cast              expression         type id                               NULL                       class B   virtual void f         class D   public B   virtual void f         void main     B  pb   new D     unclear ok B  pb2   new B  D  pd   dynamic_cast pb      ok  pb actually points D D  pd2   dynamic_cast pb2      pb2 points B not D  pd2 NULL        B                                                                                                                         void              A B          class   public  virtual void f                  class B   public  virtual void f                  int main      pA   new A  B  pB   new B  void  pV   dynamic_cast pA      pV points object pV   dynamic_cast pB      pV points object B   dynamiccast                staticcast       class Base   public  virtual  Base       donnt forget   least one virtual function         class   public Base     class B   public Base     class AB   public A  public B     int main     AB ab  B  b    ab      dynamic_cast b   return 0                    dynamic_cast                                                   D          B C     D         A     class   virtual void Func     0     class B   public   void Func         class C   public   void Func         class D   public B  public C   void Func        int main     D  pD   new D   pA   dynamic_cast pD      will pA NULL                     NULL pA        B C    A          Func                     A             int main     D  pD   new D  B  pB   dynamic_cast pD    pA   dynamic_cast pB                           A         E       B        E                                E  C  B    E  D  B               A                     E                           reinterpret_cast reinterpretcast      reinterpretcast  expression  reinterpret_cast                    staticcast                   reinterpretcast                                                                     staticcast                                reinterpretcast                                     int ival   1  double  dptr   reinterpret_cast ival      int  iptr   NULL  double  dptr   reinterpret_cast iptr              reinterpret_cast       reinterpret_cast                                      32      4                   void               staticcast   reinterpretcast         void                                                 int                                                    C                                   reinterpret_cast               new    struct                                                                                  int         reinterpret_cast          struct car   int doors  int height  int length  float weight     int create_car     car  c   new car  return reinterpret_cast c     int getcardoors int car_id    car  c   reinterpretcast carid   return c  doors    void destroycar int carid    car  c   reinterpretcast carid   delete c    const_cast constcast      constcast  expression             const                       ",
        "objectID": "post/C-中的强制类型转换",
        "date": "2017-06-23T21:33:06.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "C++中临时对象及返回值优化",
        "uri": "post/C-中临时对象及返回值优化",
        "content": "C                                                      non heap object              4                         1                                                                         void test const string  str   char buffer      buffer   test buffer                                       string          buffer     string constructor  test                           reference                 reference to const                   reference to non const               void upper string  str   char lower      lower   upper lower                          reference to non const                                                            upper    lower                      char lower       lower                                           constructor explicit    explicit           constructor            explicit string const char    2                                                T formalArg   actualArg            void test T formalArg   T actualArg  test actualArg                T _temp  temp T  T acutalArg                temp g temp           temp temp T   T         temp         formalArg test          formalArg              actualArg    formalArg                       3                                       class Integer   public  friend Integer operator  const Integer  a  const Integer  b   Integer int val 0   value val      Integer const Integer  rhs   value rhs value      Integer  operator  const Integer  rhs    Integer       private  int value     Integer operator  const Integer  a  const Integer  b    Integer retVal  retVal value   a value   b value  return retVal    Integer c1  c2  c3  c3   c1   c2             struct Integer _tempResult                   operator  _tempResult  c1  c2                c3   _tempResult     operator      Integer operator  const Integer  _tempResult  const Integer  a  const Integer  b    struct Integer retVal  retVal Integer  Integer       Integer int val 0    retVal value   a value   b value  _tempResult Integer  Integer retVal            Integer const Integer  rhs            retVal Integer   Integer              return    return retVal       operator         RVO Return Value Optimization                   Integer operator  const Integer  a  const Integer  b    return Integer a value   b value                Integer operator  const Integer  _tempResult  const Integer  a  const Integer  b    _tempResult Integer  Integer       Integer int val 0    _tempResult value   a value   b value  return                      retVal     4          Integer i1 100                    Integer i2   Integer 100                  Integer i3   100                                                                                              1                          full expression                                   include using namespace std  class   public  A int i   m_i i    cout using namespace std  class   public  A int   0   m_i i    cout using namespace std  class   friend ostream  operator",
        "objectID": "post/C-中临时对象及返回值优化",
        "date": "2017-06-23T16:30:48.000Z",
        "tags": null,
        "categories": [
            "C++"
        ]
    },
    {
        "title": "C++ 中头文件（.h）和源文件（.cc）",
        "uri": "post/C-中头文件（-h）和源文件（-cc）",
        "content": "1                                  2 3                   c_function h  int integer_add const int a  const int b    return   b               a c   b c                                                         integeradd                                                      inline         static                   integeradd                    inline                                                                                   inline                                            C                             inline                      inline                                         static                              static                                                                   extern                                        extern                                                                   C         C     C                                     C                                                           cpp          obj                                                                                                               exe          C                                                                                                                                                    h                                                        C                                         1                    include                       include                                                      include                                                                                include                                include                              h  c                                                                                                                                                                      ifndef     define     endif                                       LNK2005                          lib dll                            C                                                 h       cc             h                               define                                                           ifndef CIRCLE_H  define CIRCLE_H             endif                           CIRCLE_H                                                                      cc                                          include                                           include       Example                            1            2                 Circle h              ifndef CIRCLE_H  define CIRCLE_H class Circle      private  double r      public  Circle          Circle double R         double Area               endif                                   3     Circle                    Circle cc             include  Circle h  Circle  Circle        this  r 5 0    Circle  Circle double R       this  r R    double Circle   Area        return 3 14rr                 Circle h        cpp                             Circle cc      cc                   test cc       Circle           include  include  Circle h  using namespace std  int main        Circle c 3   cout  include  filename h     include                filename h                include  filename h                  filename h                          http   www cnblogs com superpig0501 p 3967578 html http   www cnblogs com sylar5 p 6702483 html",
        "objectID": "post/C-中头文件（-h）和源文件（-cc）",
        "date": "2017-07-25T10:51:30.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "C/C++源代码到可执行程序的过程详解",
        "uri": "post/C-C-源代码到可执行程序的过程详解",
        "content": "1       c                                                     define Name TokenString  undef                          Name TokenString            Name                                               ifdef  ifndef  else  elif  endif                                                                                 include  FileName    include               define                                                            C                  C            include                                                                        c                            usr include         include                                    c               include                                            LINE                  FILE           C                                                                                                                                                                   2                                        C        main if else for while
        "objectID": "post/C-C-源代码到可执行程序的过程详解",
        "date": "2017-06-24T11:55:03.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "C语言程序可以没有main函数",
        "uri": "post/C语言程序可以没有main函数",
        "content": "helloworld                C  helloworld     hello c     include int main     printf  helloworld  n    return 0                                                      main                                           grep                         gcc hello c  o hello   readelf  s hello   grep FUNC Num  Value Size Type Bind Vis NdxName 27  000000000040040c 0 FUNC LOCAL DEFAULT 13 callgmonstart 32  0000000000400430 0 FUNC LOCAL DEFAULT 13 _doglobaldtorsaux 35  00000000004004a0 0 FUNC LOCAL DEFAULT 13 frame_dummy 40  0000000000400580 0 FUNC LOCAL DEFAULT 13 _doglobalctorsaux 47  00000000004004e0 2 FUNC GLOBAL DEFAULT 13 libccsufini 48  00000000004003e0 0 FUNC GLOBAL DEFAULT 13 _start 51  0000000000000000 0 FUNC GLOBAL DEFAULT UND puts  GLIBC_2 2 5 52  00000000004005b8 0 FUNC GLOBAL DEFAULT 14 _fini 53  0000000000000000 0 FUNC GLOBAL DEFAULT UND _libcstartmain  GLIBC 58  00000000004004f0 137 FUNC GLOBAL DEFAULT 13 libccsuinit 62  00000000004004c4 21 FUNC GLOBAL DEFAULT 13 main 63  0000000000400390 0 FUNC GLOBAL DEFAULT 11 _init             main                 main                          _start                main           hello c          gcc hello c  nostdlib  usr bin ld  warning  cannot find entrysymbol _start  defaulting 0000000000400144  nostdlib                 entry symbol start            start             _start       main                       main                                        main          exit                    _start       hello_start c     include  include _start void    printf  hello world  n    exit 0                    gcc hellostart c  nostartfiles  ohellostart     hello_start     nostartfiles    Do notuse standard system startup files when linking          startupfiles                                     readelf  s hello_start   grep FUNC Num  Value Size Type Bind Vis NdxName 20  0000000000400350 24 FUNC GLOBAL DEFAULT 10 _start 21  0000000000000000 0 FUNC GLOBAL DEFAULT UND puts  GLIBC_2 2 5 22  0000000000000000 0 FUNC GLOBAL DEFAULT UND exit  GLIBC_2 2 5                           printf                puts         fno builtin               start     exit 0          core     start                    _start      exit                main              start             start                         hello_nomain c     include  include int nomain     printf  helloworld  n    exit 0                gcc hellonomain c  nostartfiles  enomain  o hellonomain    e                        readelf  s hello_nomain   grep FUNC Num  Value Size Type Bind Vis NdxName 20  0000000000000000 0 FUNC GLOBAL DEFAULT UNDputs  GLIBC_2 2 5 21  0000000000000000 0 FUNC GLOBAL DEFAULT UNDexit  GLIBC_2 2 5 22  0000000000400350 24 FUNC GLOBAL DEFAULT 10 nomain   hellostart         start   nomain                          start                   main                     start          _start",
        "objectID": "post/C语言程序可以没有main函数",
        "date": "2017-07-25T12:19:56.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "C语言中操作符的优先级总结",
        "uri": "post/C语言中操作符的优先级总结",
        "content": "",
        "objectID": "post/C语言中操作符的优先级总结",
        "date": "2017-09-04T18:11:42.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "cctype库操作总结",
        "uri": "post/cctype库操作总结",
        "content": "",
        "objectID": "post/cctype库操作总结",
        "date": "2017-07-27T20:39:29.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "CDN的实现原理",
        "uri": "post/CDN的实现原理",
        "content": "CDN   Content Delivery Network     CDN          CDN                                                                  CDN         Internet                                                    Internet                               www web com                 dns        DNS          DNS        CNAME    www web 51cdn com      CDN      DNS          DNS                      IP             IP   CDN                   CDN      web                      CDN              Cache             Cache                  DNS      CDN                       1        DNS       5           TTL                   CDN                        DNS           DNS                                                              CDNC                                   CDN          DNS              Internet       CDN               WEB         DNS                          CDN                                               CDN                                       Cache                                                DNS                CDN                                                                                                                                                CDN              DNS      Cache      DNS       IP       IP                                           Cache             Cache   Cache                Cache          http   blog csdn net coolmeme article details 9468743",
        "objectID": "post/CDN的实现原理",
        "date": "2017-06-25T20:02:18.000Z",
        "tags": null,
        "categories": [
            "网络"
        ]
    },
    {
        "title": "流对象为什么可以作为条件表达式？",
        "uri": "post/cin-out流对象为什么可以作为条件表达式？",
        "content": "http   blog csdn net bladelyer article details 8505912  http   blog csdn net andyelvis article details 4529592                      string str  while  cin    str   cout   str       while           cin    str   while                              cin                       EOF                  str                  EOF                                              cin             cin      while             iOS bool        cin       bool                  cppreference                         cin  bool                since C  11        c  11        C                                    while cin  str                      while cin  str                          cin     void          cplusplus                        ios istream                                            failbit orbadbit                                    0                    ios      explicit           cin               while          C              bool   false         bool   true                  cin  str                 failbit orbadbit         cin   void                          bool  true   cin  str                 failbit orbadbit         cin   void                         bool  false      cin    str               while   getline cin scanf                              cin                standard input  cin                                                                cin get                       cin get                     Ctrl Z    Ctrl D                                                          Ctrl Z                       Ctrl D                 Ctrl D                Ctrl D                               Ctrl D               Ctrl D              Ctrl D           Windows             Ctrl Z Unix linux               Ctrl D                                    Ctrl Z                               Ctrl Z                                Ctrl Z          ASCII                                                        abcd z        Windows                      abcd                       z                             z         cin get                               z                                        cin get                  z                     abcd                          z                       z",
        "objectID": "post/cin-out流对象为什么可以作为条件表达式？",
        "date": "2017-07-13T16:33:26.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "container包解析(1.13)",
        "uri": "post/container包解析-1-13",
        "content": "heap heap             heap Interface                                                       0     heap                                               Less   Heap         Push      Pop                    int  IntHeap                         example demonstrates integer heap built using heap interface  package main import    container heap   fmt       IntHeap min heap ints  type IntHeap   int func  h IntHeap  Len   int   return len h    func  h IntHeap  Less i  j int  bool   return h i  0   fmt Printf   d    heap Pop h                     PriorityQueue                              example demonstrates priority queue built using heap interface  package main import    container heap   fmt       Item something manage priority queue  type Item struct   value string    value item  arbitrary  priority int    priority item queue     index needed update maintained heap Interface methods  index int    index item heap       PriorityQueue implements heap Interface holds Items  type PriorityQueue    Item func  pq PriorityQueue  Len   int   return len pq    func  pq PriorityQueue  Less i  j int  bool      want Pop give us highest  not lowest  priority so use greater here  return pq i  priority   pq j  priority   func  pq PriorityQueue  Swap i  j int    pq i   pq j    pq j   pq i  pq i  index   pq j  index   j   func  pq  PriorityQueue  Push x interface      n    len  pq  item    x   Item  item index   n pq   append pq  item    func  pq  PriorityQueue  Pop   interface     old     pq n    len old  item    old n 1  old n 1    nil    avoid memory leak item index    1    safety  pq   old 0   n 1  return item      update modifies priority value Item queue  func  pq PriorityQueue  update item Item  value string  priority int    item value   value item priority   priority heap Fix pq  item index       example creates PriorityQueue items  adds manipulates item     removes items priority order  func main        items priorities  items    map string int   banana   3   apple   2   pear   4       Create priority queue  put items it     establish priority queue  heap  invariants  pq    make PriorityQueue  len items      0 value  priority    range items   pq i     Item  value  value  priority  priority  index  i    i     heap Init  pq     Insert new item modify its priority  item     Item  value   orange   priority  1    heap Push  pq  item  pq update item  item value  5     items out  arrive decreasing priority order  pq Len     0   item    heap Pop  pq    Item  fmt Printf    2d  s    item priority  item value      type Interface type Interface interface   sort Interface Push x interface               Pop   interface                                             heap Init                                 h Less j  i  0  0     n",
        "objectID": "post/container包解析-1-13",
        "date": "2019-10-23T18:38:22.000Z",
        "tags": [
            "Go标准库"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "context包解析(1.11)",
        "uri": "post/context包解析-1-11",
        "content": "context           API                                         context             context               context            withcancel withdeadline withtimeout withvalue    context            context      WithCancel WithDeadline WithTimeout    Context         Context    CancelFunc   CancelFunc                                     CancelFunc                       go vet    CancelFuncs                 context                                      context       Contexts             Context              Context              ctx  func DoSomething ctx context Context  arg Arg  error          use ctx                   nil Context            Context    context TODO    context        API                             Context      goroutine              goroutine          Variables Canceled   context Context Err       var Canceled   errors New  context canceled   DeadlineExceeded Context Err context             var DeadlineExceeded error   deadlineExceededError   func WithCancel 1 7 func WithCancel parent Context   ctx Context  cancel CancelFunc  WithCancel     Done channel         Context Done channel      cancel    Context Done channel                  context                  context             cancel  package main import    context   fmt    func main       gen    goroutine                   channel    gen        context                         goroutine  gen   gen    func ctx context Context",
        "objectID": "post/context包解析-1-11",
        "date": "2019-03-25T17:53:14.000Z",
        "tags": [
            "Go标准库"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "cookie-session机制与JWT机制对比",
        "uri": "post/cookie-session机制与JWT机制对比",
        "content": "Session Cookie JWT                   Session        client         server         server            session                         sesssionid   client client    sessionid              cookie   client          session_id       cookie  server     server       session                                                cookie                   session       JWT               session  session                 cookie                 cookie   session                           session         session         redis     cookie         CSRF   session                 session cookie sessionStorage localstorage     session                 cookie                                              4kb sessionStorage                         localstorage               JWT JSON Web Token JWT         RFC 7519                             JSON                                     JWT                                 JWT          eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9 eyJ1c2VyX2lkIjoiemhhbmdzYW4ifQ ec7IVPU ePtbdkb85IRnK4t4nUVvF2bBf8fGhJmEwSs                      3                      JWT                 Header Payload Signature             base64url      JSON    Payload         Header JWT   Header              typ type    alg algorithm   typ token          JWT alg     hash       HMAC SHA256    RSA             alg    HS256    typ    JWT                base64 b64encode json dumps   alg   HS256   typ   JWT      eyJhbGciOiAiSFMyNTYiLCAidHlwIjogIkpXVCJ9  Payload Payload    Registered Claim                      Claim  JWT    Payload                                   ID                                         Header                               BASE64                     BASE64               BASE64                   Base64UrlEncoder   Base64               padding                  _              Payload      user_id   zhangsan        Base64        base64 urlsafeb64encode    userid   zhangsan      eyJ1c2VyX2lkIjoiemhhbmdzYW4ifQ                     eyJ1c2VyX2lkIjoiemhhbmdzYW4ifQ  Signature Sign   Header Payload    secretOrPrivateKey          secretOrPrivateKey          HMAC            RSA    ECDSA    PrivateKey  Signature              Header   Payload           Token                                         Header   Payload                     Signature   HMACSHA256  base64UrlEncode header          base64UrlEncode payload   secret              base64UrlEncode header     eyJhbGciOiAiSFMyNTYiLCAidHlwIjogIkpXVCJ9 base64UrlEncode payload     eyJ1c2VyX2lkIjoiemhhbmdzYW4ifQ secret      secret                    import hmac     import hashlib     import base64     dig   hmac new  secret       msg  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9 eyJ1c2VyX2lkIjoiemhhbmdzYW4ifQ   digestmod      base64 b64encode dig digest     ec7IVPU ePtbdkb85IRnK4t4nUVvF2bBf8fGhJmEwSs                      JWT token          user_id    zhangsan   token     eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9 eyJ1c2VyX2lkIjoiemhhbmdzYW4ifQ ec7IVPU ePtbdkb85IRnK4t4nUVvF2bBf8fGhJmEwSs           Web                              HTTP POST           SSL      https                                   id       JWT Payload              Base64            JWT    JWT      lll zzz xxx         JWT                                 localStorage sessionStorage              JWT             JWT  HTTP Header  Authorization     XSS XSRF                  JWT                   Token       Token                        JWT                         JWTs vs Sessions                                     session                                                       session                           session                           JWT         token                 session                              token                                                         session         session                                             RESTful API    session                     Redis        session   session                 JWT                            token   claim      JWT        web      session    cookies   JavaScript          Web         JWT      XSS           JavaScript             Web                  XSS                  Web                  JWT                                    JWT     cookie      JWT          cookie   cookies     CSRF             CSRF              cookie                      JWT      CSRF                  JWT session ID                                                    JWT                                           JWT      IP                 HTTPS   SSL    Cookie JWT                              RESTful API                RESTful API    JSON              RESTful API                API                                                 session Cookie                                RESTful API                                                                          API                                           API                                                CORS  Cookie                       API                JWT          RESTful API            API                                                     JWT         HTTP                              SESSION ID                JWT 5 claim     sub    1234567890    name    Prosper Otemuyiwa  ",
        "objectID": "post/cookie-session机制与JWT机制对比",
        "date": "2019-08-06T15:17:51.000Z",
        "tags": [
            "鉴权"
        ],
        "categories": [
            "架构"
        ]
    },
    {
        "title": "coredump详解",
        "uri": "post/coredump详解",
        "content": "coredump             core                               bug                                                          core           core                                                                                        core                                                          coredump        core                             core              core         cat  proc sys kernel core_pattern     core                                            chdir                   core     chdir                      core          chdir                     core                 core      data coredump wd                                 coredump             core      data coredump core     echo   data coredump core    proc sys kernel core_pattern                proc sys kernel core_pattern               coredump     core                       core              core                        core                  core                kernel              coredump                  kernel     core filename pid   core dump    echo   data coredump core  e  p    proc sys kernel core_pattern          core                   ID     e  p              ID                            core                               coredump         proc sys kernel coreusespid              1     core_pattern      p      core dump         ID  Core_pattern       core_pattern                             p  dump     ID  u  dump       ID  g  dump      ID  s     core dump     t core dump      1970 1 1         h      e                  coredump      unix    coredump           ELF            readelf            ELF    Type       CORE  Core file         file              coredum          coredump               ulimit  c   0         coredump            ulimit  c unlimited      coredump                            ulimit  c  size          size    blocks   1block 512bytes    ulimit  c 4       size               core        ulimit  c 1          core       1 2 3     core     4   core         ulimit                              etc profile              coredump   ulimit c unlimited  rc local                   coredump     data coredump      echo  data coredump core  e  p   proc sys kernel core_pattern   rc local                 susu     etc rc d rc local      root     ubuntu                   ulimit       core                           core                         core             ID                           ID                                           core                                        coredump              coredump                                                                                               strcpy  strcat  sprintf  strcmp strcasecmp                        strncpy  strlcpy  strncat  strlcat  snprintf  strncmp  strncasecmp                                                      asctimer 3c  gethostbynamer 3n  getservbynamer 3n ctermidr 3s  gethostentr 3n  getservbyportr 3n  ctimer 3c  getloginr 3c getserventr 3n  fgetgrentr 3c  getnetbyaddrr 3n  getspentr 3c fgetpwentr 3c  getnetbynamer 3n  getspnamr 3c  fgetspentr 3c getnetentr 3n  gmtimer 3c  gammar 3m  getnetgrentr 3n  lgammar 3m  getauclassentr 3 getprotobynamer 3n  localtimer 3c  getauclassnamr 3  etprotobynumberr 3n nissperrorr 3n  getaueventr 3  getprotoentr 3n  randr 3c  getauevnamr 3 getpwentr 3c  readdirr 3c  getauevnumr 3  getpwnamr 3c  strtokr 3c  getgrentr 3c getpwuidr 3c  tmpnamr 3s  getgrgidr 3c  getrpcbynamer 3n  ttynamer 3c getgrnamr 3c  getrpcbynumberr 3n  gethostbyaddrr 3n  getrpcent_r 3n                                                   coredump                                                                                                                                                                   bus error core dump                                                                       gdb  coredump        coredump             unix        coredump                   gdb                                                                 g              12             core dumped        core             core       gdb                           11   bt backtrace      where                  coremain cpp  5       scanf               IOvfscanf_internal              gdb              gdb           g         SIGSEGV 11 Core Invalid memoryreference      signal    SIGABRT   abort                 SIGBUS                SIGEMT               EMT      PDP 11 emulator trap     SIGFPE                   0        SIGILL                    4 3BSD abort        SIGABRT        SIGIOT                IOT       PDP 11       TRAP input outputTRAP         V       abort        SIGABRT        SIGQUIT                 Ctrl                                        SIGINT             core    SIGSEGV                    SEGV       segmentationviolation    SIGSYS                                                        SIGTRAP                      PDP 11 TRAP    SIGXCPUSVR4 4 3 BSD                   C P U             SIGXFSZ                  SVR4 4 3 BSD",
        "objectID": "post/coredump详解",
        "date": "2017-06-25T05:44:05.000Z",
        "tags": null,
        "categories": [
            "Linux编程"
        ]
    },
    {
        "title": "cron库源码剖析",
        "uri": "post/cron库源码剖析",
        "content": "Cron      cron    cron           0   59          0   23           1   31            1   12               0   7     0 7                                             0 7                                                      5                                                     cron                  5        month                       1    minutes     3 59 15        3              15          3 18 33 48                   3 15               6      MON WED FRI                               3       9 17    9am   5pm          9 17              Day month       Day week                                                    yourCommand      2  10      2 10         yourCommand     9  12   2  10      2 10 9 12       yourCommand        9  12   2  10      2 10 9 12  2   yourCommand      9  12   2  10      2 10 9 12     1 yourCommand      package main import    time   log   github com robfig cron   github com EDDYCJY go gin example models    func main     log Println  Starting      c    cron New   c AddFunc                func     log Println  Run models CleanAllTag      models CleanAllTag      c AddFunc                func     log Println  Run models CleanAllArticle      models CleanAllArticle      c Start   t1    time NewTimer time Second   10    select   case   0                                   L   W                                   robfig cron       L   W                                                       60         uint64                       unit64       go cron                                                                         64                              63   0         63   0                                                                             0   63                0 3                 1                                                                       0   1 0 0 1 0 0 1 1 0 0 1 0 0 1                                                                  63     0    2 5                2 5    1                                                                       0   0 0 0 0       0 0 0 1 1 1 1 0 0                                                                  63     0                        1                                                                       1   1 1 1 1 1       1 1 1 1 1 1 1 1 1                                                                  63     0    ConstantDelaySchedule    ConstantDelaySchedule represents simple recurring duty cycle  e g   Every 5 minutes      does not support jobs frequent once second  type ConstantDelaySchedule struct   Delay time Duration                    5                               Every                 constDelaySchedule    Every 5e9          5            Cron     func New opts    Option   Cron   c     Cron  entries  nil  chain  NewChain    add  make chan  Entry   stop  make chan struct     snapshot  make chan chan   Entry   remove  make chan EntryID   running  false  runningMu  sync Mutex    logger  DefaultLogger  location  time Local  parser  standardParser    _  opt    range opts   opt c    return c      Option represents modification default behavior Cron  type Option func  Cron                                job    Cron                      FuncJob        cmd      AddJob    func  c  Cron  AddFunc spec string  cmd func    error      job    Cron         Parse      cron     spec         Schedule       c Schedule    func  c  Cron  AddJob spec string  cmd Job  error         Cron     Entities     func  c Cron  Entries     Entry                Entity        Cron              Cron           entity    Cron             add      channel   entity         Cron   func  c  Cron  Schedule schedule Schedule  cmd Job           goroutine      Cron func  c  Cron  Start          stop        struct           Cron     running    false          stop      Cron        channel                          stop      struct func  c  Cron  Stop   AddFunc  AddFunc                AddFunc adds func Cron run given schedule     spec parsed using time zone Cron instance default     opaque ID returned used later remove it  func  c  Cron  AddFunc spec string  cmd func     EntryID  error    return c AddJob spec  FuncJob cmd        AddJob adds Job Cron run given schedule     spec parsed using time zone Cron instance default     opaque ID returned used later remove it  func  c  Cron  AddJob spec string  cmd Job   EntryID  error    schedule  err    c parser Parse spec  err    nil   return 0  err   return c Schedule schedule  cmd   nil   AddFunc             cron              func      cmd                            FuncJob      AddJob   FuncJob       FuncJob wrapper turns func   cron Job type FuncJob func   func  f FuncJob  Run     f            FuncJob             func           Run     AddJob    AddJob           string   cron      Job   cmd     AddFunc               FuncJob     Job              cron           Schedule   cmd        Job        Job interface submitted cron jobs  type Job interface   Run          Job     Run                   cron                             Run           AddJob   cmd    Run                       AddFunc                                                       int         type",
        "objectID": "post/cron库源码剖析",
        "date": "2019-10-15T11:19:03.000Z",
        "tags": [
            "cron"
        ],
        "categories": [
            "cron"
        ]
    },
    {
        "title": "database/sql包解析(1.11)",
        "uri": "post/database-sql包解析-1-11",
        "content": "Variables                          ErrConnDone  var ErrConnDone   errors New  sql  connection already closed    QueryRow        row        Scan     ErrNoRows    QueryRow        Row           Scan        var ErrNoRows   errors New  sql  no rows result set   ErrTxDone                       var ErrTxDone   errors New  sql  transaction already committed rolled back   func Drivers 1 4 func Drivers     string                        func Register func Register name string  driver driver Driver  Register                             Register          nil         type ColumnType 1 8 ColumnType           type ColumnType struct                    func   ColumnType  DatabaseTypeName 1 8 func  ci  ColumnType  DatabaseTypeName   string DatabaseTypeName                                                                              VARCHAR   TEXT   NVARCHAR   DECIMAL   BOOL   INT   BIGINT   func   ColumnType  DecimalSize 1 8 func  ci  ColumnType  DecimalSize    precision  scale int64  ok bool  DecimalSize                          ok false  func   ColumnType  Length 1 8 func  ci  ColumnType  Length    length int64  ok bool  Length                                          math MaxInt64                            int              ok false  func   ColumnType  Name 1 8 func  ci  ColumnType  Name   string Name           func   ColumnType  Nullable 1 8 func  ci  ColumnType  Nullable    nullable  ok bool  Nullable      null               ok  false  func   ColumnType  ScanType 1 8 func  ci  ColumnType  ScanType   reflect Type ScanType      Rows Scan   Go                 ScanType           type Conn 1 9 Conn                                          DB      Conn    Close                                   Close                 ErrConnDone  type Conn struct                    func   Conn  BeginTx 1 9 func  c Conn  BeginTx ctx context Context  opts TxOptions    Tx  error  BeginTx                                      sql              BeginTx     Tx Commit          TxOptions                   nil                             package main import    context   database sql   log    var ctx   context Background   var db  sql DB func main     tx  err    db BeginTx ctx   sql TxOptions Isolation  sql LevelSerializable   err    nil   log Fatal err    id    37 _  execErr    tx Exec UPDATE users SET status     id       paid   id  execErr    nil   _   tx Rollback   log Fatal execErr    err    tx Commit    err    nil   log Fatal err      func   Conn  Close 1 9 func  c  Conn  Close   error Close                      ErrConnDone                                                    close       func   Conn  ExecContext 1 9 func  c  Conn  ExecContext ctx context Context  query string  args    interface     Result  error  ExecContext            args               package main import    context   database sql   log    var ctx   context Background   var db  sql DB func main         DB pool connections  Call Conn reserve connection    exclusive use  conn  err    db Conn ctx  err    nil   log Fatal err    defer conn Close      Return connection pool  id    41 result  err    conn ExecContext ctx  UPDATE balances SET balance   balance   10 user_id      id  err    nil   log Fatal err    rows  err    result RowsAffected   err    nil   log Fatal err    rows    1   panic err      func   Conn  PingContext 1 9 func  c  Conn  PingContext ctx context Context  error PingContext                 func   Conn  PrepareContext 1 9 func  c Conn  PrepareContext ctx context Context  query string   Stmt  error  PrepareContext                                                            Close       context                  func   Conn  QueryContext 1 9 func  c Conn  QueryContext ctx context Context  query string  args    interface     Rows  error  QueryContext            SELECT args               func   Conn  QueryRowContext 1 9 func  c Conn  QueryRowContext ctx context Context  query string  args    interface    Row QueryRowContext                QueryRowContext                Row Scan                 Row      ErrNoRows      Row                     type DB DB                      goroutine          sql                                               Tx     Conn               DB Begin     Tx               Commit Rollback            DB           SetMaxIdleConns       type DB struct                    func Open func Open driverName  dataSourceName string    DB  error  Open                                                                   DB                     Go                                 https   golang org s sqldrivers  Open                                        Ping                goroutine                    Open                     func OpenDB 1 10 func OpenDB c driver Connector   DB OpenDB  Connector                                       DB                     Go                                 https   golang org s sqldrivers  OpenDB                                         Ping                goroutine                    OpenDB                     func   DB  Begin func  db DB  Begin    Tx  error                      func   DB  BeginTx 1 8 func  db DB  BeginTx ctx context Context  opts TxOptions    T",
        "objectID": "post/database-sql包解析-1-11",
        "date": "2018-12-18T17:57:32.000Z",
        "tags": [
            "Go标准库"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "date命令详解",
        "uri": "post/date命令详解",
        "content": "date                   shell                                                                                       UNIX                           UTC 1970 1 1 0 0 0            date             d   date                           f   file          date                 r    reference                     R    rfc 2822  RFC 2822           s    set                   u    utc    universal                 help              version                                                          n        t       H      00  23   I      01  12   k      0  23   l      1  12   M      00  59   p          PM  r           12         hh mm ss  AP M   s     1970   1   1   00 00 00 UTC           S     00  61   T           24       X        H  M  S  Z                a        Sun  Sat   A        Sunday  Saturday   b       Jan  Dec   B       January  December   c              d      01  31   D           mm dd yy   h      b  j            001  366   m       01  12   U            00  53     Sunday              w            0  6   W            00  53     Monday              x           mm dd yy   y              00 99   Y         0000  9999                             MMDDhhmm CC YY  MM      DD     hh      mm      CC           YY           ss               date    Y  m  d  2009 12 07         date  d  1 day ago     Y  m  d  2012 11 19 2      date  d  2 second     Y  m  d  H  M  S  2012 11 20 14 21 31      1234567890    date  d  1970 01 01 1234567890 seconds     Y  m  d  H  m  S  2009 02 13 23 02 30        date  d  2009 12 12     Y  m  d  H  M  S  2009 12 12 00 00 00 apache      date  d  Dec 5  2009 12 00 37 AM     Y  m  d  H  M  S  2009 12 05 00 00 37            date  d  Dec 5  2009 12 00 37 2 year ago     Y  m  d  H  M  S  2007 12 05 00 00 37       date   Y m d           date  d   1 day    Y m d            date  d   1 day    Y m d            date  d   1 month    Y m d            date  d   1 month    Y m d            date  d   1 year    Y m d            date  d   1 year    Y m d                  date   Y m d            date   Y m d   date   1 day             date   Y m d   date   1 day             date   Y m d   date   1 month             date   Y m d   date   1 month             date   Y m d   date   1 year             date   Y m d   date   1 year                   date  s            root              date  s 20120523      20120523             00 00 00 date  s 01 01 01                   date  s  01 01 01 2012 05 23               date  s  01 01 01 20120523               date  s  2012 05 23 01 01 01               date  s  20120523 01 01 01",
        "objectID": "post/date命令详解",
        "date": "2017-08-10T22:08:24.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "Dcron:基于一致性哈希算法实现分布式定时任务",
        "uri": "post/Dcron:基于一致性哈希算法实现分布式定时任务",
        "content": "quartz                                                                                                                           redis       hash                                cron                 hash                                                                                                           10s                                                                 driver                    1   redisDriver            dcron                drv  _    redis NewDriver  redis Conf  Host   127 0 0 1   Port  6379     dcron    NewDcron  server1   drv  2   cron                                    dcron AddFunc  test1    3        func    fmt Println     test1     time Now   Format  15 04 05       3       dcron Start                                  uuid                                                                               n                                     https   github com dlvkin dcron     https   libisky com post Dcron  E5 9F BA E4 BA 8Eredis E4 B8 8E E4 B8 80 E8 87 B4 E6 80 A7 E5 93 88 E5 B8 8C E7 AE 97 E6 B3 95 E7 9A 84 E5 88 86 E5 B8 83 E5 BC 8F E5 AE 9A E6 97 B6 E4 BB BB E5 8A A1 E5 BA 93 https   blog csdn net Mr_Fogg article details 78705134",
        "objectID": "post/Dcron:基于一致性哈希算法实现分布式定时任务",
        "date": "2019-10-16T14:59:13.000Z",
        "tags": [
            "Go",
            "分布式",
            "Dcron"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "DDoS攻击原理",
        "uri": "post/DDoS攻击原理",
        "content": "http   www cnblogs com 2myroad articles 3881042 html DDoS     DDoS Distributed Denial service                                                                   DDoS                                      IDC                                            ICMP Flood UDP Flood                                                                                Slowloris   Hash                                                                   SYN Flood   DNS Query Flood                                                  SYN Flood SYN Flood         DDoS            1999                 SYN Flood     TCP                                    TCP                   SYN   TCP   SYN    Synchronize                   TCP                   SYN         SYN ACK    Acknowledgement                   TCP                      ACK        TCP              TCP        TCP                                                  ACK          SYNRECV       IP              SYN ACK         3 5      30                                 SYN ACK                TCP                                              SYNRECV              SYN          TCP      SYN Flood        TCP                      IP        SYN        IP                                                          SYN ACK                               SYN_RECV                  SYN                  TCP              SYN Flood       DNS Query Flood                DNS    DDoS            DNS                                               anonymous              13  DNS              UDP                     IP                       IP    UDP       UDP            UDP                UDP     DNS Query Flood                 DDoS                                      DNS Query Flood                                   ACL                      UDP      IP               DNS          ID                                DNS              DNS    CPU    HTTP Flood      SYN Flood DNS Query Flood                                 HTTP Flood   HTTP Flood   WEB                                              SYN Flood DNS Query Flood       root                root                                                                                HTTP Flood                                              HTTP    SOCKS                   HTTP                                                               HTTP Flood   HTTP                                                                                        HTTP Flood                         WEB                JAVA                                                 HTTP Flood              CC   CC Challenge Collapsar     Collapsar            DDoS                  Collapsar                                                                                                                     rsnake   SlowLoris  HTTP     HTTP Request  r n r n                               r n r n    SlowLoris         DDoS       HTTP     Connection   Keep Alive   Web Server  TCP                     key value           a b r n        HTTP                                         WEB            TCP                 SlowLoris           POST   WEB Server          Content Length              POST           DDoS                                                                                        DDoS                                                     SYN Flood                SYN Cookie              SYN Flood   SYN ACK           SYN                               IP         IP      TCP     TTL            TCP Flow                SYN Cookie             SYN                                  DNS Query lood           DNS      DNS    DNS     DNS IP                               DNS     IP                         ISP DNS                            IP       IP                                                                                                                                                                                                                                DNS          UDP     DNS   TCP                 UDP TCP        HTTP Flood            cache   HTTP           WEB Server      HTTP Flood                                                                                                                        APP              WEB API               APP                    SlowLoris                                           TCP                           TCP                                      SlowLoris    stateless                  TCP         TCP           TCP                   65535 TCP                                         SYN Flood                SlowLoris                                 SYN      TCP                                                                                                                                                         P2P                              HTTP Flood                                                                 P2P                  P2P                                          IP                    BT                                                     P2P                                                                                                                       P2P                      ",
        "objectID": "post/DDoS攻击原理",
        "date": "2017-06-25T20:01:31.000Z",
        "tags": null,
        "categories": [
            "网络"
        ]
    },
    {
        "title": "DeepEqual浅析",
        "uri": "post/DeepEqual浅析",
        "content": "Values distinct types deeply equal  type S1 struct   Field int   type S2 struct   Field int   func main     fmt Println reflect DeepEqual S1 1   S2 1          false                          Array values deeply equal when corresponding elements deeply equal  func main     Array1      string  hello1    hello2   Array2      string  hello1    hello2   fmt Println reflect DeepEqual Array1  Array2         true                                  Struct values deeply equal corresponding fields both exported unexported  deeply equal  type S struct   Field1 int field2 string   func main     s1    S Field1  1  field2   hello   s2    S Field1  1  field2   hello   fmt Println reflect DeepEqual s1  s2         true        nil                             Func values deeply equal nil  otherwise not deeply equal  func main     f1    func a int  int   return   2   fmt Println reflect DeepEqual f1  f1   f1   nil fmt Println reflect DeepEqual f1  f1         false true    interface            interface     Interface values deeply equal hold deeply equal concrete values  func main     var i1 interface   i1    hello  var i2 interface   i2    hello  fmt Println reflect DeepEqual i1  i2         true map    go map                map  nil     nil         nil non nil  length    map      key      either map object corresponding keys map   value       map deeply equal values func main     m1    map string int   a   1   b   2    m2    map string int   a   1   b   2    fmt Println reflect DeepEqual m1  m2         true                                go       Pointer values deeply equal equal using Go s    operator                func main     m1    map string int   a   1   b   2    m2    map string int   a   1   b   2    M1   m1 M2   m2 fmt Println reflect DeepEqual M1  M2         true                              nil     nil         nil non nil  length                                 either point initial entry underlying array  that is   x 0      y 0   corresponding elements  up length  deeply equal  func main     s1      int  1 2 3 4 5  s2   s1 0 3  s3   s1 0 3  fmt Println reflect DeepEqual s2  s3   s4   s1 1 4  fmt Println reflect DeepEqual s2  s4         true false        nil             func main     s1     byte   s2     byte nil  fmt Println reflect DeepEqual s1  s2         false           numbers  bools  strings  channels     go                                                             go                        visit    map visit bool       reflect deepequal go  deepValueEqual           v1 CanAddr      v2 CanAddr      hard v1 Kind      addr1    unsafe Pointer v1 UnsafeAddr    addr2    unsafe Pointer v2 UnsafeAddr                       uintptr addr1    uintptr addr2       Canonicalize order reduce number entries visited     Assumes non moving garbage collector  addr1  addr2   addr2  addr1      Short circuit references already seen  typ    v1 Type   v    visit addr1  addr2  typ            true visited v    return true                      Remember later  visited v    true          reflect DeepEqual                                  start  time Now    i  0 i",
        "objectID": "post/DeepEqual浅析",
        "date": "2019-08-19T20:02:22.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "define详解",
        "uri": "post/define详解",
        "content": "define                              define    ifndef define endif               C       C   include                     C                                               ifhdef  endif           ifhdef      define      endif                  defme                                                                                       stdio h   ifhdefSTDIOH_  define STDIO H  endif   ifndef                  ifndef         ifndef AAA  define AAA int i   endif            VC         i          c         define                                                                                     define SECONDPERYEAR  60   60   24   365 UL      a b                                        define check a b     a   b    fabs  a   b      greater    smaller   int        define MySizeof Value   char     Value   1     char    Value      char     Value  Value           char  Value  1   Value                                           define OffSet type  field    size_t    type   0    field    C    ANSI C      0                                 NULL      0        type   0           type NULL           NULL     type                type   0   field          field       C             type          type                                       NULL                       0                                       define Count  sizeof array  sizeof array 0             sizeof        sizeof                              define WORD_LO xxx    byte    word  xxx    255    define WORD_HI xxx    byte    word  xxx    8           define                                                                 define                     vb        _            define add1  x  y     x   y            define add1 x y     x   y    define Conn x y  x  y         token paste operator                                                                                                                                                                                                                                  define add a  b  a b                                               token     token           token  or    token               token                                 define A1 name  type  type name  type  type    define A2 name  type  type name    type  type A1 a1  int           int nameinttype     A2 a1  int           int a1inttype                   name             2        type                 name_  type  type   3    name   type     _type        type                                 name      _                  name    type  type   4   name      type    type                   A1 A2           define A1 name  type  type name_   type    _type  define A2 name  type  type name   _   type   _type                                     define ToChar x    x    x             const char       char   ToChar 1       a  1        char   ToChar 123     a  3                               define ToString x   x                                                        char  str   ToString 123132     str  123132        define TRACE S   printf   s n    S   S                include  include  include int main     int a 5  int b TRACE a   const char  str  hello   char des 50   strcpy des TRACE str    puts des   system  pause    return 0        str hello     TRACE a       S a     a     printf             a    b   TRACE a  TRACE str          5 hello        a str       include  define M 1  define N 2  define A a b  a  b  a b  define B a   a a int main     char  MN    here   printf   s   d   d n   B A 1 2     printf   s   d n   A M N    return 0        A 1 2   12  3 here  3                                 B a          a A 1 2               12  1 2  MN                     here",
        "objectID": "post/define详解",
        "date": "2017-06-23T15:45:27.000Z",
        "tags": null,
        "categories": [
            "C++"
        ]
    },
    {
        "title": "deque操作总结",
        "uri": "post/deque操作总结",
        "content": "deque   vector            default  1  explicit deque  const allocatortype  alloc   allocatortype     fill  2  explicit deque  size_type n   deque  sizetype n  const valuetype  val  const allocatortype  alloc   allocatortype     range  3  template deque  InputIterator first  InputIterator last  const allocatortype  alloc   allocatortype     copy  4  deque  const deque  x   deque  const deque  x  const allocator_type  alloc   move  5  deque  deque   x   deque  deque   x  const allocator_type  alloc   initializer list  6  deque  initializer_list il  const allocatortype  alloc   allocatortype            constructing deques  include  include int main      unsigned int i     constructors used order described above  std  deque first     empty deque ints std  deque second  4 100      four ints value 100 std  deque third  second begin   second end        iterating second std  deque fourth  third      copy third    iterator constructor used copy arrays  int myints      16 2 77 29   std  deque fifth  myints  myints   sizeof myints    sizeof int     std  cout   iterator   fifth begin    it  fifth end      it  std  cout il          assignment operator deques  include  include int main      std  deque first  3      deque 3 zero initialized ints std  deque second  5      deque 5 zero initialized ints second   first  first   std  deque    std  cout  include int main      std  deque mydeque  100   std  cout bool operator    const deque  lhs  const deque  rhs    2  template bool operator    const deque  lhs  const deque  rhs    3  template bool operator  lhs  const deque  rhs    4  template bool operator  lhs  const deque  rhs    5  template bool operator   const deque  lhs  const deque  rhs    6  template bool operator    const deque  lhs  const deque  rhs        include  include int main      std  deque foo  3 100      three ints value 100 std  deque bar  2 200      two ints value 200  foo  bar  std  cout bar  std  cout  bar  std  cout    foo greater equal bar n   return 0",
        "objectID": "post/deque操作总结",
        "date": "2017-07-15T17:01:53.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "df和du命令详解",
        "uri": "post/df和du命令详解",
        "content": "df Disk Free  df                                                  df                        df                                                      df                               h                           M        G       Linux                    df          Linux                                                           du Disk Usage  du             fstat                                                                         du               du                                                                                        du 484    gstreamer 0 10 8   Templates 8   Download 8    ccache 7 0 24    ccache 7 368    ccache a d 384    ccache a 424    ccache 8   Public 8    gphpedit plugins 32    gphpedit 72    gconfd 128    nautilus metafiles 384    nautilus 72    bittorrent data metainfo 20    bittorrent data resume 144    bittorrent data 152    bittorrent 8   Videos 9 8   Music 16    config gtk 2 0 40    config 8   Documents                                                                    du                                                                 du df    du                      du                                                   df                                                                          OS               df                      du                                                                  du df",
        "objectID": "post/df和du命令详解",
        "date": "2017-09-07T17:13:30.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "DNS原理总结及其解析过程详解",
        "uri": "post/DNS原理总结及其解析过程详解",
        "content": "DNS Domain Name System                               IP                                                          domain                                                 IP    32                                        32                  IP                                        IP                IP       IP                                                                   1983                               DNS            DNS             resolve                    DNS          DNS                          DNS            IP                                                                             IP                            IP                    DNS               DNS       UDP                                   IP                       IP                                       DNS                                                                                                                                                  domain name         domain                                   label                                                                   com        cctv        mail       DNS                           63                 12                                                                                  255    DNS                                                                 ICANN                                                                           2006 12          TLD Top Level Domain   265               nTLD   ISO3166      cn     us     uk                ccTLD cc      contry code         gTLD            7    com       net         org        int       gov          mil                  infrastructure domain              arpa                                                                                         DNS                                      zone                                                                           IP         DNS                              DNS",
        "objectID": "post/DNS原理总结及其解析过程详解",
        "date": "2017-06-25T20:07:58.000Z",
        "tags": [
            "NS"
        ],
        "categories": [
            "网络"
        ]
    },
    {
        "title": "E-R模型与关系模型",
        "uri": "post/E-R模型与关系模型",
        "content": "1                   1 1                     S                                   S          1 1                                                         1 n         A           B  n    n  0               B           A                   A     B         1 n                                                      m n         A           B  n    n  0              S              m    m  0           A    B          m nn m n                                          E R",
        "objectID": "post/E-R模型与关系模型",
        "date": "2017-08-15T16:06:24.000Z",
        "tags": null
    },
    {
        "title": "echo命令与printf命令详解",
        "uri": "post/echo命令详解",
        "content": "echo echo                     echo                         n             echo  Welcome Bash  WeXcome Bash                echo                                              echo Welcome Baah Welcome Bash                    echo   text quote                                     echo ncazmot include exclamation   1 within double quotes11           bash     event not found error                                                         echo Hello world        echo  Hello world         echo  Hello world      Bscape character N prefixed                     echo                    bash shell            echo hello hello   echo hello           hello                  echo  Bash             var                      echo  var      var    echo  var       var        var                           echo e                             echo  e  1 t2 t3  1 2 3 printf      C       printf                             printf       printf  format string   var1  var2       format string                                                                          gawk                                                                                   modifier control letter   control letter                        modifier               shell   gawk  BEGIN    x   10   100   printf  The answer is   e n   x      answer is  1 000000e 03               3                 width                           printf                                            prec                                                                                    printf                        printf                           printf                         gawk  BEGIN FS       printf   s     1  END printf   n    data1   printf                    END                    16                     16          printf                                            printf    16s  s n    1   4       5 1f        printf                                                                        0    30    31    32    33    34    35    36    37                   echo  e   e 1 31m Thia red text  e 0m   e 1 31m         e 0m             31                                    0    40    41    42    43    44    45    46    47                   echo  e   e 1 42m Green Background  e 0m",
        "objectID": "post/echo命令详解",
        "date": "2017-09-07T11:31:30.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "etcd：从应用场景到实现原理的全方位解读",
        "uri": "post/etcd：从应用场景到实现原理的全方位解读",
        "content": "highly available key value store shared configuration service discovery      etcd      Zookeeper doozer                           4       etcd            HTTP JSON API     CURL                   SSL                                  Ralf                           Service Discovery                                                                               upd  tcp                                                                    Ralf   etcd                                                  etcd                key TTL                                         etcd                                                 proxy   etcd          etcd                                                       Docker                                                                    etcd                            IP                                                PaaS                   PaaS                                                                                               etcd                                                                                                                                                                                            etcd                                    etc             etcd       Watcher                 etcd                                                                                          etcd                                      IP                       etcd Watcher                                  IP                                                                      JMX                           etcd                etcd        http                                                                                                                                                                                                           etcd                   etcd        etcd                                        etcd                                                    etcd                                                         etcd                    etcd            etcd                                                 KafkaMQ   Zookeeper                    etcd  Zookeeper                                                     etcd Watcher                                                                   etcd                Watcher                                          etcd         Watcher                              etcd                       etcd                                  etcd                                                                       etcd            etcd               Watcher                           etcd                            etcd                                                                       etcd  Raft                                                                                                     etcd                 CAS ComparaAndSwap  API     prevExist                                                                                              etcd        API                     POST     etcd                                          API                                                                                                                                                               queue             queue condition    condition                                                  condition   1                                       condition                                                                            condition                               condition                          Leader     etcd                                          Watcher                Watcher                    TTL key     30s etcd                                                                          Leader          CPU     IO           Leader                 Follower                    Leader                                                          etcd CAS    Leader  Leader                                etcd   Zookeeper      Zookeeper                  etcd        Zookeeper           etcd      Zookeeper         Zookeeper           Zookeeper                          Paxos                        Zookeeper                      Java C          Java        Java      Java                                                            Apache         Apache Way                                              etcd                        Go         HTTP           Raft                        etcd                   etcd  SSL            etcd                                                                                                   CoreOS Kubernetes Cloudfoundry               etcd        etcd           https   blog csdn net liukuan73 article details 61918130",
        "objectID": "post/etcd：从应用场景到实现原理的全方位解读",
        "date": "2019-09-04T14:39:33.000Z",
        "categories": [
            "etcd"
        ]
    },
    {
        "title": "etcd2和3的区别",
        "uri": "post/etcd2和3的区别",
        "content": "etcd2   etcd3 etcd            CoreOS                                                                  etcd                 JSON                                                                                       etcd2                         etcd                         etcd3     etcd2              gRPC     JSON       JSON          gRPC gateway                             streaming lease keepalive                                  v3                                                                            etcd3       gRPC               protobuf           PRC                             etcd2             etcd3            2         gRPC                gRPC         HTTP2        RPC      JSON                      etcd2             TTL                                                                           etcd              TTL                          TTL                 etcd3           TTL                                      TTL             TTL                                                                         etcd2                  gPRC                                                                etcd              ZooKeeper   Consul           etcd                    etcd2              long polling     HTTP          etcd2                     TCP                                etcd2               etcd3                                        gRPC                         ID                    TCP                           etcd3                               etcd              etcd2                                                                                                        etcd2                                                         etcd3                                                                               etcd3                        etcd3                                                                                                                                 etcd3              etcd2                                                      etcd3                                                                                                                                etcd2     load link store conditional   compare and swap                                                                                                                 etcd3                                                                                      Get Put Delete                                         etcd3                                                                etcd3                      https   www infoq cn article 2016 07 etcd3",
        "objectID": "post/etcd2和3的区别",
        "date": "2019-09-06T21:18:46.000Z",
        "categories": [
            "etcd"
        ]
    },
    {
        "title": "etcd部署与配置",
        "uri": "post/etcd部署与配置",
        "content": "name      data dir             listen peer urls   URL           listen client urls              http   ip 2379 http   127 0 0 1 2379             etcd    initial advertise peer urls    member                       initial cluster                node1 http   ip1 2380 node2 http   ip2 2380           node1        name           ip1 2380     initial advertise peer urls      initial cluster state              new                 existing initial cluster token       token                                                     uuid                        advertise client urls                               configuration file etcd server  Human readable name member  name   etcd 0 231  Path data directory  data dir   data etcd  Path dedicated wal directory  wal dir  Number committed transactions trigger snapshot disk  snapshot count  10000 Time  in milliseconds  heartbeat interval  heartbeat interval  100 Time  in milliseconds  election timeout  election timeout  1000 Raise alarms when backend size exceeds given quota  0 means use default quota  quota backend bytes  0 List comma separated URLs listen peer traffic  listen peer urls  http   1 1 1 1 12380 List comma separated URLs listen client traffic  listen client urls  http   1 1 1 1 12379 http   127 0 0 1 12379 Maximum number snapshot files retain  0 unlimited   max snapshots  5 Maximum number wal files retain  0 unlimited   max wals  5 Comma separated white list origins CORS  cross origin resource sharing   cors  List member s peer URLs advertise rest cluster  URLs needed comma separated list  initial advertise peer urls  http   1 1 1 1 12380 List member s client URLs advertise public  URLs needed comma separated list  advertise client urls  http   1 1 1 1 12379 Discovery URL used bootstrap cluster  discovery  Valid values include  exit    proxy  discovery fallback   proxy  HTTP proxy use traffic discovery service  discovery proxy  DNS domain used bootstrap initial cluster  discovery srv  Initial cluster configuration bootstrapping  initial cluster  etcd 2 2 http   2 2 2 2 12380 etcd 3 3 http   3 3 3 3 12380 etcd 1 1 http   1 1 1 1 12380 Initial cluster token etcd cluster during bootstrap  initial cluster token   etcd cluster  Initial cluster state   new   existing    initial cluster state   new  Reject reconfiguration requests cause quorum loss  strict reconfig check  false Accept etcd V2 client requests enable v2  true Enable runtime profiling data via HTTP server enable pprof  true Valid values include  on    readonly    off  proxy   off  Time  in milliseconds  endpoint will held failed state  proxy failure wait  5000 Time  in milliseconds  endpoints refresh interval  proxy refresh interval  30000 Time  in milliseconds  dial timeout  proxy dial timeout  1000 Time  in milliseconds  write timeout  proxy write timeout  5000 Time  in milliseconds  read timeout  proxy read timeout  0 client transport security  DEPRECATED  Path client server TLS CA file  ca file  Path client server TLS cert file  cert file  Path client server TLS key file  key file  Enable client cert authentication  client cert auth  false Path client server TLS trusted CA cert file  trusted ca file  Client TLS using generated certificates auto tls  false peer transport security  DEPRECATED  Path peer server TLS CA file  ca file  Path peer server TLS cert file  cert file  Path peer server TLS key file  key file  Enable peer client cert authentication  peer client cert auth  false Path peer server TLS trusted CA cert file  trusted ca file  Peer TLS using generated certificates  auto tls  false Enable debug level logging etcd  debug  false Specify particular log level etcd package  eg   etcdmain CRITICAL etcdserver DEBUG   log package levels  Specify  stdout   stderr  skip journald logging even when running systemd  log output  default Force create new one member cluster  force new cluster  false      etcd   config file etcd conf",
        "objectID": "post/etcd部署与配置",
        "date": "2019-06-17T14:09:04.000Z",
        "categories": [
            "etcd"
        ]
    },
    {
        "title": "etcd的事务机制",
        "uri": "post/etcd的事务机制",
        "content": "etcd                                                                                                             etcd3 API                key value                                                                              key           value                 value            key                     value                                                                                                                                                    import    fmt   encoding binary   github com coreos etcd clientv3    func toUInt64 v   byte  uint64   x  _    binary Uvarint v   return x   func fromUInt64 v uint64    byte   b    make   byte  binary MaxVarintLen64   return b  binary PutUvarint b  v     func nosyncXfer etcd  clientv3 Client  from  string  amount uint64   err error    var fromKV  toKV  clientv3 GetResponse fromKV  err   etcd Get context TODO    from   err    nil   return err   toKV  err   etcd Get context TODO    to   err    nil   return err   fromV  toV    toUInt64 fromKV Kvs 0  Value   toUInt64 toKV Kvs 0  Value  fromV   nosyncXfer                        key                key                                                        func txnXfer etcd  clientv3 Client  from  string  amount uint64  error     ok  err    doTxnXfer etcd  from  to  amount   err    nil   return err   else ok   return nil       func doTxnXfer etcd  clientv3 Client  from  string  amount uint64   bool  error    getresp  err    etcd Txn context TODO     Then clientv3 OpGet from   clientv3 OpGet to    Commit   err    nil   return false  err   fromKV    getresp Responses 0  GetResponseRange   Kvs 0  toKV    getresp Responses 1  GetResponseRange   Kvs 0  fromV  toV    toUInt64 fromKV Value   toUInt64 toKV Value  fromV   amount   return false  fmt Errorf  insufficient value     txn    etcd Txn context TODO    If  clientv3 Compare clientv3 ModRevision from        fromKV ModRevision   clientv3 Compare clientv3 ModRevision to        toKV ModRevision   txn   txn Then  clientv3 OpPut from  string fromUInt64 fromV amount     clientv3 OpPut to  string fromUInt64 toV amount     putresp  err    txn Commit   err    nil   return false  err   return putresp Succeeded  nil                       Get            from to                        Put              from to                                                                       STM                                                                                                                                                              STM                       STM                                 STM                                                                                                            STM                 STM  P1 P2            P1 P2   a   b       a   b  P1      key         a 2  b 2  P2    STM             a         1            2                P2                                         etcd3 STM            import conc  github com coreos etcd clientv3 concurrency  func stmXfer etcd  clientv3 Client  from  string  amount uint64  error   _  err    conc NewSTMRepeatable context TODO    etcd  func s conc STM   err error    fromV    toUInt64   byte s Get from    toV    toUInt64   byte s Get to    fromV   amount   return fmt Errorf  insufficient value     s Put to  string fromUInt64 toV amount    s Put from  string fromUInt64 fromV amount    return nil    err    nil   return err   return nil     STM               STM                        STM      etcd                         STM                                                           context TODO                                  STM               STM etcd3        STM    v3 API             etcd3 STM          70  Go                  STM            STM                                       etcd        Software Transactional Memory  STM  API                                                       etcd v3                                                                                    STM                                          key         key                                                        STM                        STM                              condition  key    condition   key version                condition    key  version                                      STM                 func NewSTM ctx context Context  c v3 Client  apply func STM  error",
        "objectID": "post/etcd的事务机制",
        "date": "2019-09-07T21:18:50.000Z",
        "categories": [
            "etcd"
        ]
    },
    {
        "title": "etcd的MVCC",
        "uri": "post/etcd的MVCC",
        "content": "MVCC MVCC Multi version Cocurrent Control                                                                                ID              MVCC                                                                                                                        MVCC                   etcd             MVCC                        etcd             etcd       MVCC        mvcc                                         revision MVCC                                                                                                MVCC                              etcd                    etcd v3                         key                       etcd         revision                                          revision   revision               version  key         revision        revision         Watcher         watch revision etcd             revision                                    revision     revision          revision         key                  etcd    key                             key       revision  key                   version      1   key     key         version   0   key         key           version    key version key                revison                                       revison    1  ResponseHeader Revision           etcd revision  KeyValue CreateRevision  etcd   key       etcd revison KeyValue ModRevision   etcd   key       etcd revison  verison  etcd     key              KeyValue Versiono etcd v3          WithRev rev        etcd  rev  revision        etcd revision  rev           revision indicates modification key value space     set changes share main revision changes key value space atomically  type revision struct      main main revision set changes happen atomically  main int64    sub sub revision change set changes happen    atomically  change different increasing sub revision    set  sub int64      main      ID           etcd              sub                put delete     0                           revision    txID  0    txID  1    txID  2   keyIndex etcd            B                revision              revision      revision          key  B       key revision  revision   2   main  sub    main  revision              1  sub   revision                1          revision   key  B       value        revision          revision       B   key              etcd revision        range query      revision       revision                    revision   revision     etcd v3                 etcd v3            B          key       B    key       etcd   key   B    value              B         etcd          B          keyIndex      key              revision   type keyIndex struct   key   byte modified revision    main rev last modification generations   generation          key     key             modified      key     generation   generation     key               key                                       generation        generation           generation contains multiple revisions key  type generation struct   ver int64 created revision    when generation created  put first revision   revs   revision          generation           revision                                foo key ki     keyIndex key    byte  foo               ki put zap NewExample    2  0             ID 2             ki put zap NewExample    4  2             ID 4                keyIndex        key   foo  modified   4  2  generations    2  0    4  2              key               ki tombstone zap NewExample    6  0       6        ki put zap NewExample    8  0  ki put zap NewExample    10  0        generation key   foo  modified   10  0  generations    2  0    4  2    6  0  t      8  0    10  0          key                             treeIndex treeIndex                        BTree        key                keyIndex        key          keyIndex                                                    key    value          key                    key      value                                value      key  key                value        backend backend   etcd          backend               boltdb      CNCF                  1 boltdb           KV   etcd      boltdb        BoltDB   B  mmap           mmap    page      page          COW  copy on write      page     cow                                                                        BoltDB         ACID          etcd              etcd v3    BoltDB          etcd BoltDB    key reversion  value etcd   key value       etcd  BoltDB                                             key                                  MVCC            etcd                                              etcd                    compact      etcd v3                BoltDB          reversion          key   value    etcd          kvindex      key reversion                kvindex    Google   Golang B             etcdv3                    key   value       kvindex     key   revision      revision BoltDB       etcd boltdb    key reversion value etcd   key value              reversion    keyIndex       reversion    key value      boltdb          etcdctl              etcdctl txn keyIndex    keyIndex       revision    revision       bbolt    value              ",
        "objectID": "post/etcd的MVCC",
        "date": "2019-09-16T13:50:13.000Z",
        "categories": [
            "etcd"
        ]
    },
    {
        "title": "etcd身份验证",
        "uri": "post/etcd身份验证",
        "content": "etcd                                       etcd                                                         root    root   etcd           etcd                          root            root        root         etcd        root    root               root                                                                     etcdctl   ca file  root cfssl ca pem   endpoints https   192 168 3 3 2379 user list         etcdctl   ca file  root cfssl ca pem   endpoints https   192 168 3 3 2379 user add user1                             etcdctl   ca file  root cfssl ca pem   endpoints https   192 168 3 3 2379 user grant   roles root user1         etcdctl   ca file  root cfssl ca pem   endpoints https   192 168 3 3 2379 user revoke   roles root user1           etcdctl   ca file  root cfssl ca pem   endpoints https   192 168 3 3 2379 user passwd user1              etcdctl   ca file  root cfssl ca pem   endpoints https   192 168 3 3 2379 role list         etcdctl   ca file  root cfssl ca pem   endpoints https   192 168 3 3 2379 role add myrolename                                 read    write    readwrite                    role1        foo        etcdctl   ca file  root cfssl ca pem   endpoints https   192 168 3 3 2379 role grant role1   path  foo   read   role1        foo        etcdctl   ca file  root cfssl ca pem   endpoints https   192 168 3 3 2379 role grant role1   path  foo   write   role1        foo        etcdctl   ca file  root cfssl ca pem   endpoints https   192 168 3 3 2379 role grant role1   path  foo   rw   role1        foo          etcdctl   ca file  root cfssl ca pem   endpoints https   192 168 3 3 2379 role grant role1   path  foo     rw              role1      foo        etcdctl   ca file  root cfssl ca pem   endpoints https   192 168 3 3 2379 role revoke role1   path  foo   read    role1      foo        etcdctl   ca file  root cfssl ca pem   endpoints https   192 168 3 3 2379 role revoke role1   path  foo   write    role1      foo         etcdctl   ca file  root cfssl ca pem   endpoints https   192 168 3 3 2379 role revoke role1   path  foo   rw    role1      foo           etcdctl   ca file  root cfssl ca pem   endpoints https   192 168 3 3 2379 role revoke role1   path  foo     rw             etcdctl   ca file  root cfssl ca pem   endpoints https   192 168 3 3 2379 role role1          etcdctl   ca file  root cfssl ca pem   endpoints https   192 168 3 3 2379 role remove role1        1   root      etcdctl   ca file  root cfssl ca pem   endpoints https   192 168 3 3 2379 user add root Password root  2           etcdctl   ca file  root cfssl ca pem   endpoints https   192 168 3 3 2379 etcdctl auth enable                    etcdctl   ca file  root cfssl ca pem   endpoints https   192 168 3 3 2379 set  foo bar     bar                                                         Etcd    Basic Auth              root   guest  root   guest                            guest                                        Bug                         guest                 etcdctl   ca file  root cfssl ca pem   username root passwod   endpoints https   192 168 3 3 2379 ro le revoke guest   path        rw      Role guest updated     guest        etcdctl   ca file  root cfssl ca pem   username root passwod   endpoints https   192 168 3 3 2379 ro le guest           Role  guest    KV Read     KV Write     ok               set     etcdctl   ca file  root cfssl ca pem   endpoints https   192 168 3 3 2379 set  foo bar   Error  110  request requires user authentication  Insufficient credentials   0               etcd                                 user2   etcdctl   ca file  root cfssl ca pem   username root passwod   endpoints https   192 168 3 3 2379 user add user2 New password        User user2 created   role2   etcdctl   ca file  root cfssl ca pem   username root passwod   endpoints https   192 168 3 3 2379 role add role2 Role role2 created   role2      etcdctl   ca file  root cfssl ca pem   username root passwod   endpoints https   192 168 3 3 2379 ro le grant role2   path  foo   rw Role role2 updated    user2    role2 etcdctl   ca file  root cfssl ca pem   username root passwod   endpoints https   192 168 3 3 2379 us er grant   roles role2 user2 User user2 updated    foo   etcdctl   ca file  root cfssl ca pem   username user2 passwod   endpoints https   192 168 3 3 2379 2379 set foo bar bar    http   www artacode com posts etcd auth",
        "objectID": "post/etcd身份验证",
        "date": "2019-06-23T00:43:23.000Z",
        "categories": [
            "etcd"
        ]
    },
    {
        "title": "etcdctl命令操作",
        "uri": "post/etcdctl命令操作",
        "content": "etcdctl v2 v3 etcd2 etcd3         api             etcdctl  h       api2   api3    etcd3                api             api                  etcdctl    v2 API    etcd           etcdctl    v3 API   etcd   API            ETCDCTL_API      3  ETCDCTL_API 2      ETCDCTL_API 2  root vStack etcd v3 0 15 linux amd64     etcdctl help NAME  etcdctl   simple command line client etcd  USAGE  etcdctl  global options  command  command options   arguments     VERSION  3 0 15 COMMANDS  backup backup etcd directory cluster health check health etcd cluster mk new key given value mkdir new directory rm remove key directory rmdir removes key empty directory key value pair retrieve value key ls retrieve directory set set value key setdir create new directory update existing directory TTL update update existing key given value updatedir update existing directory watch watch key changes exec watch watch key changes exec executable member member add  remove list subcommands import import snapshot cluster user user add  grant revoke subcommands role role add  grant revoke subcommands auth overall auth controls GLOBAL OPTIONS    debug output cURL commands used reproduce request   no sync don t synchronize cluster information sending request   output simple   o simple output response given format  simple  extended json   default   simple     discovery srv value   D value domain name query SRV records describing cluster endpoints   insecure discovery accept insecure SRV records describing cluster endpoints   peers value   C value DEPRECATED      endpoints  used instead   endpoint value DEPRECATED      endpoints  used instead   endpoints value comma delimited list machine addresses cluster  default   http   127 0 0 1 2379 http   127 0 0 1 4001     cert file value identify HTTPS client using SSL certificate file   key file value identify HTTPS client using SSL key file   ca file value verify certificates HTTPS enabled servers using CA bundle   username value   u value provide username  password  prompt password not supplied    timeout value connection timeout per request  default  1s    total timeout value timeout command execution  except watch   default  5s    help   h show help   version   v print version ETCDCTL_API 3 export ETCDCTL_API 3  root vStack etcd v3 0 15 linux amd64     etcdctl   help NAME  etcdctl   simple command line client etcd3  USAGE  etcdctl VERSION  3 0 15 COMMANDS  Gets key range keys etcdctl  options   range_end  OPTIONS    consistency  l  Linearizable l  Serializable s    from key  false  keys greater equal given key   keys only  false  keys   limit 0 Maximum number results   order    Order results  ASCEND DESCEND   prefix  false  keys matching prefix   rev 0 Specify kv revision   sort by    Sort target  CREATE  KEY  MODIFY  VALUE  VERSION put Puts given key store del Removes specified key range keys  key  range_end  txn Txn processes requests one transaction compaction Compacts event history etcd   etcd                       compacting    etcd                      compacted             alarm disarm Disarms alarms alarm list Lists alarms defrag Defragments storage etcd members given endpoints endpoint health Checks healthiness endpoints specified   endpoints flag endpoint status Prints status endpoints specified   endpoints flag watch Watches events stream keys prefixes version Prints version etcdctl lease grant Creates leases lease revoke Revokes leases lease keep alive Keeps leases alive  renew  member add Adds member cluster member remove Removes member cluster member update Updates member cluster member list Lists members cluster snapshot save Stores etcd node backend snapshot given file snapshot restore Restores etcd member snapshot etcd directory snapshot status Gets backend snapshot status given file make mirror Makes mirror destination etcd cluster migrate Migrates keys v2 store mvcc store lock Acquires named lock elect Observes participates leader election auth enable Enables authentication auth disable Disables authentication user add Adds new user user delete Deletes user user Gets detailed information user user list Lists users user passwd Changes password user user grant role Grants role user user revoke role Revokes role user role add Adds new role role delete Deletes role role Gets detailed information role role list Lists roles role grant permission Grants key role role revoke permission Revokes key role help Help command OPTIONS    cacert    verify certificates TLS enabled secure servers using CA bundle   cert    identify secure client using TLS certificate file   command timeout 5s timeout short running command  excluding dial timeout    dial timeout 2s dial timeout client connections   endpoints  127 0 0 1 2379  gRPC endpoints   hex  false  print byte strings hex encoded strings   insecure skip tls verify  false  skip server certificate verification   insecure transport  true  disable transport security client connections   key    identify secure client using TLS key file   user    username  password  authentication  prompt password not supplied   w    write out  simple  set output format  simple  json  etc     ",
        "objectID": "post/etcdctl命令操作",
        "date": "2019-06-23T13:40:47.000Z",
        "categories": [
            "etcd"
        ]
    },
    {
        "title": "find命令详解",
        "uri": "post/find命令详解",
        "content": "find UNIX Linux                      shell                                      find                       find                                                find                                                 find base_path bash__path           home slynux  find                   find    print                               UNIX             print                      print    n                 printO      0                                                      find                      find                       find",
        "objectID": "post/find命令详解",
        "date": "2017-09-08T21:32:58.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "Fizz Buzz",
        "uri": "post/Fizz-Buzz",
        "content": "412  Fizz Buzz Write program outputs string representation numbers 1 n  multiples three output  Fizz  instead number multiples five output  Buzz   numbers multiples three five output  FizzBuzz   Example  n   15  Return     1    2    Fizz    4    Buzz    Fizz    7    8    Fizz    Buzz    11    Fizz    13    14    FizzBuzz       3        Fizz 5        Buzz 15        FizzBuzz class Solution   public  vector fizzBuzz int n    vector ret_vec n   for int i 1",
        "objectID": "post/Fizz-Buzz",
        "date": "2017-06-24T15:37:53.000Z",
        "tags": [
            "ath"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "Flatten Binary Tree to Linked List",
        "uri": "post/Flatten-Binary-Tree-to-Linked-List",
        "content": "LeetCode 114  Flatten Binary Tree Linked List Given binary tree  flatten linked list in place  example  Given 1     2 5       3 4 6 flattened tree look like  1   2   3   4   5   6                                                                                                                             class Solution   public  TreeNode  pre NULL  void flatten TreeNode  root    if root  NULL          return  if pre                    pre  left NULL  pre  right root    pre root  TreeNode  lastright root  right                            root     root       flatten root  left   flatten lastright                                                                                                                                                                                Definition binary tree node  struct TreeNode   int val  TreeNode  left  TreeNode  right  TreeNode int x    val x   left NULL   right NULL           class Solution   public  void flatten TreeNode  root    while root    NULL   if root  left    NULL   TreeNode  cur   root  left           while cur  right  NULL              cur   cur  right    cur  right   root  right                            root  right   root  left        root  left   NULL    root   root  right",
        "objectID": "post/Flatten-Binary-Tree-to-Linked-List",
        "date": "2017-06-24T20:27:52.000Z",
        "tags": [
            "DFS",
            "Tree"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "fmt包解析",
        "uri": "post/fmt包解析",
        "content": "Printing verb       v            v    v                 v   Go      T      Go                  t   true false      b         c      unicode    d         o         q             go                       x           a f  X           A F  U    Unicode   U 1234     U  04X                b                     123456p 78   strconv FormatFloat  e         1234 456e 78  E         1234 456E 78  f              123 456  F     f  g          e  f                  G          E  F                       byte   s            byte  q             go                        x                   a f   X                   A F       p               0x    u                                        int8 int64                                                                                                         0        f             9f   9        2f        2  9 2f   9   2  9 f   9   0             Unicode         C printf                                                        verb                                     int                                                                                                        0                                                      g  G                    123 45    6 2f   123 45     4g  123 5  e  f      6  g                                                          f  1 2 3 4i   1 200000 3 400000i     flag                   q   q       ASCII                                                                                           0   o         0x   x  0X   X         0x   p     q   q    strconv CanBackquote                       U   U    Unicode                         go            x  X    x   X                 0    0                   0         verb       flag                    d  d               Printf         Print                                verb  v      Println                            verb                                       var interface     23 fmt Printf   v n   i     23    verb  T  p                                               Formatter             Formatter             verb  v  flag       v         GoStringer                             s  q  v  x  X  verb              error   Error                  flag      verb            String                        flag      verb                           verb                               q    string           6 2f                                    type X string func  x X  String   string   return Sprintf     x                  func  x X  String   string   return Sprintf     string x                Printf Sprintf Fprintf                   verb                       verb    n          n       1               n        n                        n                 n 1 n 2                     fmt Sprintf    2 d   1 d n   11  22      22 11     fmt Sprintf    3   2  1 f   12 0  2  6        fmt Sprintf   6 2f   12 0        12 00               verb                         fmt Sprintf   d  d    1 x   x   16  17      16 17 0x10 0x11              verb            d                                        verb   verb type value  Printf   d   hi     d string hi                    EXTRA type value  Printf  hi    guys    hi   EXTRA string guys          verb MISSING  Printf  hi d    hi   d MISSING                BADWIDTH     BADPREC  Printf    s   4 5   hi       BADWIDTH hi Printf     s   4 5   hi       BADPREC hi              BADINDEX  Printf     2 d   7     d BADINDEX  Printf     2 d   7     d BADINDEX                             verb                     print        Error String     panic fmt    panic                panic   fmt       String     panic  bad                      s PANIC bad    s       panic        verb  Scanning                        Scan Scanf Scanln     os Stdin     Fscan Fscanf Fscanln    io Reader       Sscan Sscanf Sscanln              Scanln Fscanln Sscanln                         Scanf Fscanf Sscanf                                     Scanf Fscanf Sscanf               Printf    x              v                   Printf         p      T      e  E  f  F  g  G                    s  v                    flag                  verb verb  v                  0      0x                      5s      5 rune                        5 2f    5f                                                                                                                          r n     n                      Scan           Scanner                                                                            Scanner      Fscan               rune                                                  Fscan    io Reader     ReadRune                 io Reader      UnreadRune                         Fscan                        io Reader            bufio NewReader  type Stringer type Stringer interface   String   string      Stringer        String                           verb  v  s  q  x  X                         Print            String            type GoStringer type GoStringer interface   GoString   string      GoStringer        GoString            go        verb   v             GoString            type State type State interface      Write             Write b   byte   ret int  err error",
        "objectID": "post/fmt包解析",
        "date": "2018-11-15T18:15:52.000Z",
        "tags": [
            "Go标准库"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "forward_list操作总结",
        "uri": "post/forward-list操作总结",
        "content": "default  1  explicit forwardlist  const allocatortype  alloc   allocator_type     fill  2  explicit forwardlist  sizetype n   explicit forwardlist  sizetype n  const value_type  val  const allocatortype  alloc   allocatortype     range  3  template forward_list  InputIterator first  InputIterator last  const allocatortype  alloc   allocatortype     copy  4  forwardlist  const forwardlist  fwdlst   forwardlist  const forwardlist  fwdlst  const allocator_type  alloc   move  5  forwardlist  forwardlist   fwdlst   forwardlist  forwardlist   fwdlst  const allocator_type  alloc   initializer list  6  forwardlist  initializerlist il  const allocatortype  alloc   allocatortype            forward_list constructors  include  include int main         constructors used order described above  std  forward_list first     default  empty std  forward_list second  3 77      fill  3 seventy sevens std  forward_list third  second begin    second end        range initialization std  forward_list fourth  third      copy constructor std  forward_list fifth  std  move fourth       move ctor   fourth wasted  std  forwardlist sixth    3  52  25  90      initializerlist constructor std  cout il    include  include template Container by_two  const Container  x    Container temp x    auto  x temp  x  2  return temp    int main      std  forward_list first  4      4 ints std  forward_list second  3 5      3 ints value 5 first   second     copy assignment second   by_two first      move assignment std  cout  include int main      std  forward_list mylist    20  30  40  50   mylist insertafter   mylist beforebegin    11    std  cout  include int main      std  forward_list mylist    77  2  16   mylist insertafter   mylist cbeforebegin    19    std  cout  include int main      std  forward_list mylist    2  16  77   mylist front     11  std  cout void assign  InputIterator first  InputIterator last   fill  2  void assign  sizetype n  const valuetype  val   initializer list  3  void assign  initializer_list il               forward_list                            1                                          2       n               val               3                                                                                                                      include  include int main      std  forward_list first  std  forward_list second  first assign  4 15      15 15 15 15 second assign  first begin   first end        15 15 15 15 first assign    77  2  16        77 2 16 std  cout void emplace_front  Args      args              forward_list                                  args                                      push_front                  push_front   void pushfront  const valuetype  val   void pushfront  valuetype   val             forward_list                          val                                            emplace_front                                    forwardlist  pushfront  include  include using namespace std  int main      forward_list mylist    77  2  16   mylist push_front  19   mylist push_front  34   std  cout  include int main      std  forward_list mylist    10  20  30  40   std  cout iterator emplaceafter  constiterator position  Args      args                                         args                         list forward_list                                     forwardlist              emplacefront     before_begin  position              args    allocatortraits    construct                insertafter                     forwardlist  emplaceafter  include  include int main      std  forward_list   mylist  auto   mylist before_begin      mylist emplace_after   it  100   x       mylist emplace_after   it  200   y       mylist emplace_after   it  300   z     std  cout iterator insertafter   constiterator position  InputIterator first  InputIterator last     5  iterator insertafter   constiterator position  initializer_list il                                          list forward_list                                            emplace_after                                include  include  include int main      std  array myarray     11  22  33    std  forward_list mylist  std  forward_list  iterator it    mylist insertafter   mylist beforebegin    10       10       include int main      std  forward_list mylist    10  20  30  40  50      10 20 30 40 50 auto   mylist begin           mylist erase_after it      10 30 40 50        mylist erase_after it mylist end        10 30      std  cout  include int main      std  forward_list first    10  20  30   std  forward_list second    100  200   std  forward_list  iterator it  first swap second   std  cout  include int main      std  forward_list mylist    10  20  30  40  50      10 20 30 40 50 mylist resize 3      10 20 30 mylist resize 5 100      10 20 30 100 100 std  cout  include int main      std  forward_list mylist     10  20  30    std  cout  include int main      std  forward_list first     1  2  3    std  forward_list second     10  20  30    auto   first begin       points 1 first spliceafter   first beforebegin    second       first  10 20 30 1 2 3    second   empty      it ",
        "objectID": "post/forward-list操作总结",
        "date": "2017-07-16T16:25:06.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "134. Gas Station",
        "uri": "post/Gas-Station",
        "content": "LeetCode 134  Gas Station N gas stations along circular route  amount gas station gas i   car unlimited gas tank costs cost i  gas travel station its next station  i 1   begin journey empty tank one gas stations  Return starting gas station s index travel around circuit once  otherwise return  1  Note  solution guaranteed unique           i            cur       0      diff i        0                  1                     i 1       k         k                               sum             total                    sum              1 class Solution   public  int canCompleteCircuit vector  gas  vector  cost    int total   0  int j    1   int   0  sum   0    0   j   1    1",
        "objectID": "post/Gas-Station",
        "date": "2017-06-24T20:26:00.000Z",
        "tags": [
            "Greedy"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "gawk编辑器详解",
        "uri": "post/gawk编辑器详解",
        "content": "sed                                                                                     gawk       gawk   Unix    awk   GNU   gawk                                      gawk                                                          if then                                                       gawk                                                                          gawk                                                 gawk           gawk options program file gawk                                                                   gawk                                      gawk   print  Hello World                   print                    STDOUT                                                    gawk    STDIN                     STDIN                       gawk                     gawk                 bash shell            EOF End of File    Ctrl D     bash     EOF             gawk                           gawk                                                   gawk                         0          1        1        2        2        n        n                                gawk                              gawk                                                      F      gawk  F    print  1    etc passwd                    1         etc passwd                                 gawk                             gawk                                                            echo  My name Rich    gawk    4  Christine   print  0   name Christine               4                      gawk                                                       gawk       4  Christine    print  0   name Rich name Christine                 bash shell                                                           gawk     STDIN                         STDIN              Ctrl D                      sed      gawk                             cat script2 gawk  print  1   s home directory    6      gawk  F   f script2 gawk  etc passwd                                             text     s home directory   print  1 text  6        gawk             shell                      gawk                    gawk                                                        BEGIN                 gawk        BEGIN               gawk  BEGIN  print  The data3 File Contents       print  0   data3 txt   print               gawk   BEGIN                                       gawk                                      BEGIN      END               gawk              gawk  BEGIN  print  The data3 File Contents       print  0    END  print  End File    data3 txt  gawk               END                                            1                                                                              1             2                                                            FS                    gawk                      FS OFS   gawk                          FS                OFS              print              gawk OFS                 print  1  2  3          field1 field2 field3                   cat data1 data11 data12 data13 data14 data15 data21 data22 data23 data24 data25 data31 data32 data33 data34 data35   gawk  BEGIN FS       print  1  2  3   data1 data11 data12 data13 data21 data22 data23 data31 data32 data33   print      OFS                     OFS                        gawk  BEGIN FS      OFS       print  1  2  3   data1 FIELDWIDTHS                                                                   FIELDWIDTHS                      FIELDWIDTH   gawk    FS                                            gawk  BEGIN FIELDWIDTHS  3 5 2 5   print  1  2  3  4   data1b            FIELDWIDTHS                                RS ORS   gawk                    gawk RS ORS          RS                                                                                Riley Mullen 123 Main Street Chicago  IL 60601  312 555 1234        FS RS           gawk                                                          FS                                                                                    RS                         gawk                   2                     gawk                                shell       ARGC ARGV     shell                              gawk                        gawk  BEGIN print ARGC ARGV 1    data1 ARGC                 gawk   data1                 ARGV     0                 gawk               shell           gawk               ENVIRON                      shell                                     shell             shell        print ENVIRON  HOME   ENVIRON  HOME     shell    HOME          ENVIRON  PATH      PATH                shell              gawk      NF                                            FNR                     NR                                 FNR NR                       FNR                  NR                             gawk                                          gawk           1             gawk          shell                testing  This test                         gawk  BEGIN x 4  x  x   2   3  print x   gawk                                                 2                 gawk                                         cat script1 BEGIN FS       print ",
        "objectID": "post/gawk编辑器详解",
        "date": "2017-08-11T20:45:01.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "GCC编译器介绍",
        "uri": "post/GCC编译器介绍",
        "content": "gcc   gcc    GNU     C C                                                        GCC          GCC    GCC      C C   FORTRAN JAVA OBJC ADA                          gcc             v    v    version   gcc     I              I           o             c        o          g            GDB           On n 1 3      n         Wall                 D           D         E             i                  M    c             Makefile            MM    c             Makefile               C      C           GCC     GCC  O                                                               O         O0  O1  O2  O3  Os      etc make conf              O0       O               gcc                 O                                   O0         O                  CFLAGS CXXFLAGS      O                                O1                                                                     O2  O1                         O2   O1            O2                                  O3                                   gcc4 x             3 x    gcc              3 x  O3          O2        gcc4 x         O3                                                                        gcc 4 x     O3        Os                    O2                                CPU                                 ebuild               Os       GCC           g   ggdb GDB        GCC                           GCC            g       1 2 3                      2  g2                                3   g3     2                  1  g1                                    s                                                                                              test c         gcc test c  test c                                   a out      o gcc test c  o test  test c                   test  o                    E gcc  E test c  o test i  test c     test i        S gcc  S test i         test i   test s        c gcc  c test s        test s    test o          gcc test o  o test        test o          test      O gcc  O1 test c  o test         1        1 3                                                             test c testfun c          gcc testfun c test c  o test  testfun c test c        test                                  gcc  c testfun c   testfun c   testfun o gcc  c test c   test c   test o gcc  o testfun o test o  o test   testfun o test o   test                                                               GCC      gcc  pedantic illcode c  o illcode  pedantic               ANSI ISO C                 Linux                     pedantic                 ANSI ISO C                 ANSI ISO C                         GCC            pedantic   GCC                               W             Wall        GCC             gcc  Wall illcode c  o illcode GCC                                           Linux                                                                           Werror     GCC                                    gcc  Werror test c  o test                                                                                      h      so  lib dll        Linux                 usr include             usr lib     Windows           Visual Stido     include lib                                 GCC                                   test c  linux   c  mysql          mysql    MySQL Connectors C              include        mysql connectors         lib           so  libmysqlclient so   inclulde        usr dev mysql include lib     usr dev mysql lib                   test c               gcc  c  I  usr dev mysql include test c  o test o                         gcc  L  usr dev mysql lib  lmysqlclient test o  o test Linux                       so              a                                                                  GCC                                                    static                usr dev mysql lib              libmysqlclient so libmysqlclient a    GCC                        gcc  L  usr dev mysql lib  static  lmysqlclient test o  o test              ld   GCC       L   gcc     LIBRARY_PATH         lib  usr lib  usr local lib     compile gcc                                               LDLIBRARYPATH                etc ld so conf                       lib            usr lib         LIBRARY_PATH                     LDLIBRARYPATH                     gcc g      GCC GNU Compiler Collection GUN             C C   JAV Fortran Pascal Object C Ada     gcc GCC  GUN C Compiler C      g   GCC  GUN C   Compiler C                       gcc g                                                 GUN          gcc    c               Step1 Call preprocessor  cpp  Step2 Call actual compiler  cc cc1  Step3 Call assembler  as  Step4 Call linker  ld               gcc       C              gcc   C compiler  g     C   compiler gcc g            c  cpp   gcc    c cpp     c cpp                c  cpp   g       cpp     g                STL  gcc      STL gcc   C                    gcc   cpp      g     c   cpp        gcc g       cpp                          define GXX_WEAK 1  define __cplusplus 1  define __DEPRECATED 1  define GNUG 4  define __EXCEPTIONS 1  define private_extern extern   gcc  c            STL        lstdc        ",
        "objectID": "post/GCC编译器介绍",
        "date": "2017-06-25T14:19:06.000Z",
        "tags": null,
        "categories": [
            "Linux编程"
        ]
    },
    {
        "title": "GCD、扩展GCD和中国剩余定理",
        "uri": "post/GCD、扩展GCD和中国剩余定理",
        "content": "gcd a  b    gcd b    b          a   b   r    a   k   b   r    r     k   b   d a b          d a  d b  d a     d  a    a  d      a   k   b      d     d r      d  a   b     d  b    a   b        a b      b   a b                         gcd a  b    gcd b    b                                         b  0                                  0                    a       long long gcd long long a long long b                 return b gcd b a b  a                            b         gcd                 x   y      a x     gcd                                 x0   y0           x0   y0               x   x0    b gcd  t y   y0    a gcd  t                            x   x0   b t y   y0   a t       b gcd   b      a gcd               t             b gcd  t         b t           a gcd  t         a gcd                              b gcd  a gcd           B   b gcd     a gcd      A   B                         A B                      A B                   x   y      a x   b y   gcd               x   y                                              a  gcd   b   0               x y                     gcd      1       b      0                      0     0   a         1            a 1   b0   gcd                                                  b           x   y    a x   b y  gcd                b   a b               x1  y1     b x1    a b y1   gcd                                a b      a b   b                  5 2 2   1 3 0                gcd   bx1    a  a b b  y1   bx1   ay1    a b by1   ay1   b x1   a b y1                x   y    a x   b y   gcd               x   y1 y   x1   a b y1                       void exgcd  long long int a  long long int b  long long int  x  long long int  y     if  b   0     x  1  y  0  return    exgcd  b  a  b  x  y    long long int t  x  x  y  y  t  a  b  y  return      1    Gcd a  b   n   Gcd a  b                        Gcd a  b          a    x   b    y   n    Gcd a   b   1    2     a    x   b    y   1      x0  y0  n    x0 n    y0   a    x   b    y   n           3                a    x   b    y   n            x   n    x0   b    k   y   n    y0   a    k    t                                                                                                                                                                                                                                                                      A   B           0                   1                       A       x   B       y   A    m    B    n                       L                             5   x y m n L   x y long long gcd long long a long long b                 return b gcd b a b  a    void exgcd  long long int a  long long int b  long long int  x  long long int  y     if  b   0     x  1  y  0  return    exgcd  b  a  b  x  y    long long int t  x  x  y  y  t  a  b  y  return      1    Gcd a  b   n   Gcd a  b                        Gcd a  b          a    x   b    y   n    Gcd a   b   1    2     a    x   b    y   1      x0  y0  n    x0 n    y0   a    x   b    y   n           3                a    x   b    y   n            x   n    x0   b    k   y   n    y0   a    k    t     int main      long long int x  y  m  n  l  while  scanf    lld  lld  lld  lld  lld    x   y   m   n   l     EOF     long long int a  n  m  b  l  c  x  y  p  q  long long int d  gcd  a  b    if  c  d    ax     c         c gcd a b   0   puts   Impossible     continue    a   d  b   d  c   d  exgcd  a  b  p  q                   x   cp   bk  x cp  b                                  m              0   m               m            m              x0            m                b          b    p   c          c      c long long int ans  p  b        while  ans  include  include using namespace std  int a 4   m 4   void extend_Euclid int a  int b  int  x  int  y            if b    0    x   1  y   0  return    extend_Euclid b    b  x  y   int tmp   x  x   y  y   tmp    a   b    y    int CRT int a   int m   int n    int M   1  int ans   0  for int i 1  i p  e  i  d    if p     1    e     1        1    d     1  break  a 1    p  a 2    e  a 3    i  m 1    23  m 2    28  m 3    33  int ans   CRT a  m  3   if ans",
        "objectID": "post/GCD、扩展GCD和中国剩余定理",
        "date": "2017-08-02T18:54:00.000Z",
        "categories": [
            "算法"
        ]
    },
    {
        "title": " Gin实现自动注册路由",
        "uri": "post/Gin实现自动注册路由",
        "content": "gin                      r GET   page  controller Page  r GET   index  controller Index    controller       controller                                    controller                                                                                   type Ctl struct                Ctl                                            controller     func  this Ctl  GETPage c gin Context   c HTML http StatusOK   page page tmpl  gin H   title   TEST                 ctl    controller Ctl            ctl       refCtl    reflect TypeOf  ctl  methodCnt    refCtl NumMethod   index    0  index",
        "objectID": "post/Gin实现自动注册路由",
        "date": "2018-12-21T12:53:03.000Z",
        "tags": [
            "Gin"
        ],
        "categories": [
            "Gin"
        ]
    },
    {
        "title": "Gin源码剖析:auth",
        "uri": "post/Gin源码剖析-auth",
        "content": "Copyright 2014 Manu Martinez Almeida  rights reserved     Use source code governed MIT style    license found LICENSE file  package gin import    crypto subtle   encoding base64   net http   strconv       AuthUserKey cookie name user credential basic auth  const AuthUserKey    user     Accounts defines key value user pass list authorized logins  type Accounts map string string type authPair struct   value string user string   type authPairs   authPair func  a authPairs  searchCredential authValue string   string  bool    authValue         return     false   _  pair    range   pair value    authValue   return pair user  true     return     false      BasicAuthForRealm returns Basic HTTP Authorization middleware  takes arguments map string string    key user name value password  name Realm     realm empty   Authorization Required  will used default      see http   tools ietf org html rfc2617 section 1 2  func BasicAuthForRealm accounts Accounts  realm string  HandlerFunc   realm         realm    Authorization Required    realm    Basic realm     strconv Quote realm  pairs    processAccounts accounts  return func c  Context       Search user slice allowed credentials user  found    pairs searchCredential c requestHeader  Authorization     found      Credentials doesn t match  return 401 abort handlers chain  c Header  WWW Authenticate   realm  c AbortWithStatus http StatusUnauthorized  return      user credentials found  set user s id key AuthUserKey context  user s id read later using    c MustGet gin AuthUserKey   c Set AuthUserKey  user         BasicAuth returns Basic HTTP Authorization middleware  takes argument map string string    key user name value password  func BasicAuth accounts Accounts  HandlerFunc   return BasicAuthForRealm accounts        func processAccounts accounts Accounts  authPairs   assert1 len accounts    0   Empty list authorized credentials   pairs    make authPairs  0  len accounts   user  password    range accounts   assert1 user         User not empty   value    authorizationHeader user  password  pairs   append pairs  authPair  value  value  user  user       return pairs   func authorizationHeader user  password string  string   base    user         password return  Basic     base64 StdEncoding EncodeToString   byte base     func secureCompare given  actual string  bool   subtle ConstantTimeEq int32 len given    int32 len actual       1   return subtle ConstantTimeCompare   byte given     byte actual      1      Securely compare actual itself keep constant time  always return false  return subtle ConstantTimeCompare   byte actual     byte actual      1    false",
        "objectID": "post/Gin源码剖析-auth",
        "date": "2018-11-15T18:17:00.000Z",
        "tags": [
            "Gin"
        ],
        "categories": [
            "Gin"
        ]
    },
    {
        "title": "Gin源码剖析:context",
        "uri": "post/Gin源码剖析-context",
        "content": "Copyright 2014 Manu Martinez Almeida  rights reserved     Use source code governed MIT style    license found LICENSE file  package gin import    errors   io   io ioutil   math   mime multipart   net   net http   net url   os   strings   time   github com gin contrib sse   github com gin gonic gin binding   github com gin gonic gin render       Content Type MIME common data formats  const   MIMEJSON   binding MIMEJSON MIMEHTML   binding MIMEHTML MIMEXML   binding MIMEXML MIMEXML2   binding MIMEXML2 MIMEPlain   binding MIMEPlain MIMEPOSTForm   binding MIMEPOSTForm MIMEMultipartPOSTForm   binding MIMEMultipartPOSTForm BodyBytesKey    _gin gonic gin bodybyteskey    const abortIndex int8   math MaxInt8   2    Context important part gin  allows us pass variables middleware     manage flow  validate JSON request render JSON response example     Context gin                                     json      json type Context struct   writermem responseWriter Request  http Request Writer ResponseWriter Params Params handlers HandlersChain index int8 engine  Engine    Keys key value pair exclusively context request  Keys map string interface      Errors list errors attached handlers middlewares used context  Errors errorMsgs    Accepted defines list manually accepted formats content negotiation  Accepted   string             CONTEXT CREATION           func  c  Context  reset     c Writer    c writermem c Params   c Params 0 0  c handlers   nil c index    1 c Keys   nil c Errors   c Errors 0 0  c Accepted   nil      Copy returns copy current context safely used outside request s scope     used when context passed goroutine  func  c Context  Copy   Context   var cp    c cp writermem ResponseWriter   nil cp Writer    cp writermem cp index   abortIndex cp handlers   nil return  cp      HandlerName returns main handler s name  example handler  handleGetUsers        function will return  main handleGetUsers   func  c  Context  HandlerName   string   return nameOfFunction c handlers Last         Handler returns main handler  func  c  Context  Handler   HandlerFunc   return c handlers Last               FLOW CONTROL              Next used inside middleware     executes pending handlers chain inside calling handler     example GitHub  func  c  Context  Next     c index   s    int8 len c handlers    c index   abortIndex      Abort prevents pending handlers called  Note will not stop current handler     Let s say authorization middleware validates current request authorized     authorization fails  ex  password does not match   call Abort ensure remaining handlers    request not called  func  c  Context  Abort     c index   abortIndex      AbortWithStatus calls Abort   writes headers specified status code     example  failed attempt authenticate request use  context AbortWithStatus 401   func  c  Context  AbortWithStatus code int    c Status code  c Writer WriteHeaderNow   c Abort        AbortWithStatusJSON calls Abort   JSON internally     method stops chain  writes status code return JSON body     sets Content Type  application json   func  c  Context  AbortWithStatusJSON code int  jsonObj interface      c Abort   c JSON code  jsonObj       AbortWithError calls AbortWithStatus   Error   internally     method stops chain  writes status code pushes specified error c Errors     Context Error   details  func  c Context  AbortWithError code int  err error  Error   c AbortWithStatus code  return c Error err              ERROR MANAGEMENT              Error attaches error current context  error pushed list errors     It s good idea call Error error occurred during resolution request     middleware used collect errors push database together     print log  append HTTP response     Error will panic err nil  func  c Context  Error err error  Error   err    nil   panic  err nil     parsedError  ok    err   Error   ok   parsedError    Error  Err  err  Type  ErrorTypePrivate      c Errors   append c Errors  parsedError  return parsedError             METADATA MANAGEMENT             Set used store new key value pair exclusively context     lazy initializes c Keys not used previously  func  c  Context  Set key string  value interface      c Keys    nil   c Keys   make map string interface      c Keys key    value      returns value given key  ie   value  true      value does not exists returns  nil  false  func  c  Context  Get key string   value interface    exists bool    value  exists   c Keys key  return      MustGet returns value given key exists  otherwise panics  func  c  Context  MustGet key string  interface     value  exists    c Get key   exists   return value   panic  Key       key       does not exist        GetString returns value associated key string  func  c  Context  GetString key string   s string    val  ok    c Get key   ok    val    nil   s  _   val  string    return      GetBool returns value associated key boolean  func  c  Context  GetBool key string   b bool    val  ok    c Get key   ok    val    nil   b  _   val  bool    return      GetInt returns value associated key integer  func  c  Context  GetInt key string   i int    val  ok    c G",
        "objectID": "post/Gin源码剖析-context",
        "date": "2018-11-15T18:20:19.000Z",
        "tags": [
            "Gin"
        ],
        "categories": [
            "Gin"
        ]
    },
    {
        "title": "Gin源码剖析:gin",
        "uri": "post/Gin源码剖析-gin",
        "content": "Copyright 2014 Manu Martinez Almeida  rights reserved     Use source code governed MIT style    license found LICENSE file  package gin import    html template   net   net http   os   sync   github com gin gonic gin render    const defaultMultipartMemory   32 0   return c length 1    return nil      RouteInfo represents request route s specification contains method path its handler  type RouteInfo struct   Method string Path string Handler string      RoutesInfo defines RouteInfo array  type RoutesInfo   RouteInfo    Engine framework s instance  contains muxer  middleware configuration settings     Create instance Engine  using New   Default   type Engine struct   RouterGroup    Enables automatic redirection current route can t matched    handler path  without  trailing slash exists     example  foo  requested route exists  foo     client redirected  foo http status code 301 requests    307 request methods  RedirectTrailingSlash bool    enabled  router tries fix current request path  no    handle registered it     First superfluous path elements        removed     Afterwards router does case insensitive lookup cleaned path     handle found route  router makes redirection    corrected path status code 301 requests 307    request methods     example  FOO      Foo redirected  foo     RedirectTrailingSlash independent option  RedirectFixedPath bool    enabled  router checks method allowed    current route  current request not routed     case  request answered  Method Not Allowed     HTTP status code 405     no Method allowed  request delegated NotFound    handler  HandleMethodNotAllowed bool ForwardedByClientIP bool     726  755 enabled  will thrust headers starting     X AppEngine     better integration PaaS  AppEngine bool    enabled  url RawPath will used find parameters  UseRawPath bool    true  path value will unescaped     UseRawPath false  by default   UnescapePathValues effectively true     url Path gonna used  already unescaped  UnescapePathValues bool    Value  maxMemory  param given http Request s ParseMultipartForm    method call  MaxMultipartMemory int64 delims render Delims secureJsonPrefix string HTMLRender render HTMLRender FuncMap template FuncMap allNoRoute HandlersChain allNoMethod HandlersChain noRoute HandlersChain noMethod HandlersChain pool sync Pool trees methodTrees   var _ IRouter    Engine      New returns new blank Engine instance without middleware attached     default configuration is       RedirectTrailingSlash  true      RedirectFixedPath  false      HandleMethodNotAllowed  false      ForwardedByClientIP  true      UseRawPath  false      UnescapePathValues  true func New    Engine   debugPrintWARNINGNew   engine     Engine  RouterGroup  RouterGroup  Handlers  nil  basePath       root  true     FuncMap  template FuncMap    RedirectTrailingSlash  true  RedirectFixedPath  false  HandleMethodNotAllowed  false  ForwardedByClientIP  true  AppEngine  defaultAppEngine  UseRawPath  false  UnescapePathValues  true  MaxMultipartMemory  defaultMultipartMemory  trees  make methodTrees  0  9   delims  render Delims Left        Right         secureJsonPrefix   while 1       engine RouterGroup engine   engine engine pool New   func   interface     return engine allocateContext     return engine      Default returns Engine instance Logger Recovery middleware already attached  func Default    Engine   debugPrintWARNINGDefault   engine    New   engine Use Logger    Recovery    return engine   func  engine Engine  allocateContext   Context   return  Context engine  engine       Delims sets template left right delims returns Engine instance  func  engine Engine  Delims left  right string  Engine   engine delims   render Delims Left  left  Right  right  return engine      SecureJsonPrefix sets secureJsonPrefix used Context SecureJSON  func  engine Engine  SecureJsonPrefix prefix string  Engine   engine secureJsonPrefix   prefix return engine      LoadHTMLGlob loads HTML files identified glob pattern    associates result HTML renderer  func  engine  Engine  LoadHTMLGlob pattern string    left    engine delims Left right    engine delims Right templ    template Must template New     Delims left  right  Funcs engine FuncMap  ParseGlob pattern   IsDebugging     debugPrintLoadTemplate templ  engine HTMLRender   render HTMLDebug Glob  pattern  FuncMap  engine FuncMap  Delims  engine delims  return   engine SetHTMLTemplate templ       LoadHTMLFiles loads slice HTML files    associates result HTML renderer  func  engine  Engine  LoadHTMLFiles files    string    IsDebugging     engine HTMLRender   render HTMLDebug Files  files  FuncMap  engine FuncMap  Delims  engine delims  return   templ    template Must template New     Delims engine delims Left  engine delims Right  Funcs engine FuncMap  ParseFiles files      engine SetHTMLTemplate templ       SetHTMLTemplate associate template HTML renderer  func  engine Engine  SetHTMLTemplate templ template Template    len engine trees    0   debugPrintWARNINGSetHTMLTemplate     engine HTMLRender   render HTMLProduction Template  templ Funcs engine FuncMap        SetFuncMap sets FuncMap ",
        "objectID": "post/Gin源码剖析-gin",
        "date": "2018-11-15T18:24:16.000Z",
        "tags": [
            "Gin"
        ],
        "categories": [
            "Gin"
        ]
    },
    {
        "title": "Git LFS操作指南",
        "uri": "post/Git-LFS操作指南",
        "content": "png psd        blob            git diff patch                    git      commit                                      clone pull                      LFS Large File Storage                                                                                                        Git LFS Large File Storage                               Git         Git            1KB                          Git           Git             Git             Git                    Git LFS              Git                 Git LFS Server          Git          GitLab                     Git LFS           Git           Git LFS                       git lfs fetch     git clone            Git LFS      git lfs fetch    git clone             Git LFS            post checkout hook     git pull  git checkout              Git LFS                commit    LFS                             Git LFS                       Git LFS                                                                             Git LFS      Git     GitHub   GitLab         Git LFS                    Git LFS                   Git LFS    Git        1 8 5 Linux curl  s https   packagecloud io install repositories github git lfs script deb sh   sudo bash   sudo apt get install git lfs Mac HomeBrew  brew install git lfs             Git LFS         git lfs track    Git LFS         git lfs track    psd       Git LFS         git lfs untrack    psd     git status      Git LFS       git lfs status         Git LFS         git lfs ls files        Git LFS     git lfs version       LFS             clone           LFS           git clone         1   2  git lfs clone https   github com user repo git git lfs lock                                              git lfs unlock                git lfs migrate          git           git lfs        git      lfs                      pdf      git lfs migrate import   include    pdf                                  push   force  git lfs migrate import   include    mp4    include ref refs origin master   include ref refs origin dev   include ref refs origin test             git    git reflog expire   expire unreachable now   all    git gc   prune now git lfs prune        Git LFS      git lfs fetch   git lfs pull   git lfs push   git lfs checkout          git pull push          git pull push                                                 1  git lfs clone        LFS           LFS API         LFS                   git lfs clone             LFS                   LFS       git lfs clone           2          git clone         git lfs clone           Git LFS 2 3 0     git lfs clone               git lfs   help      git lfs               git lfs install   lfs            Git LFS            git lfs track             git lfs track    png         png       git lfs track                    gitattributes                          git lfs ls files                   push        LFS         Git LFS        clone      git clone    git lfs clone           Git LFS                                    Git                                LFS                   commit    LFS                              LFS                   Git LFS                  Git               LFS        GITLFSSKIP_SMUDGE 1 git clone https   github com user repo git   git  c filter lfs smudge   c filter lfs required false clone https   github com user repo git   GITLFSSKIP_SMUDGE 1   git  c filter lfs smudge   c filter lfs required false         git      checkout  reset         commit      LFS                          LFS              LFS               LFS          LFS     git lfs fetch git lfs checkout   git lfs pull           LFS                                                    zzz buzz     images       cat png       dog gif       rabbit webp     src       buzz css       index html       zzz js     videos     chameleon mp4     iguana webm     images      videos      LFS                images           videos                     LFS          images      git config lfs fetchinclude  images        git checkout  git reset  git lfs fetch  git lfs pull                                         git config lfs fetchexclude  videos                            include     exclude              git config lfs fetchinclude  videos     git config lfs fetchexclude  videos chameleon mp4                 videos iguana webm            LFS         Git LFS         LFS                                LFS                             git config lfs fetchrecentcommitsdays 7 7          7              LFS                 0                                          git lfs fetch          recent                   git config lfs fetchrecentalways true          LFS                   Git LFS          Git LFS        Git LFS                                             version https   git lfs github com spec v1 oid sha256 4b99dbe6fe6f646b2026de93481045bbf34f995559db15fce34d192f1f320ef4 size 156154               Git LFS        git lfs fetch git lfs checkout   git lfs pull Git LFS                  Git LFS                     git lfs objects              sha256            Git                git objects        commit  tree  blob  tag   sha1            git lfs track so",
        "objectID": "post/Git-LFS操作指南",
        "date": "2020-02-12T22:09:20.000Z",
        "tags": [
            "Git",
            "LFS"
        ],
        "categories": [
            "Git"
        ]
    },
    {
        "title": "Git撤销操作总结",
        "uri": "post/Git撤销操作总结",
        "content": "develop         feat home     A             A              develop          B    C                    B                    push      push            push                                           push                      git reset                                      git reset   hard HEAD  git reset              soft   mixed    hard         mixed  git reset   soft   soft                                                                     git add 1 js    git commit  m  update part 1  git add 2 js    git commit  m  update part 2  git add 3 js    git commit  m  update part 3  git add 4 js    git commit  m  update part 4  git log   oneline   graph  4   decorate     soft            git reset   soft HEAD 1         soft                                git log   oneline   graph  4   decorate                          git status     SHA1 54b1941  commit                        soft            git commit       git add     git reset   hard                   hard              git reset   hard HEAD 2                                                                       git status          SHA1   54b1941  commit                               git commit   hard                                                         git reflog           commit                    git reset   mixed          commit     git add 1 js    git commit  m  update 1 js  git add 2 js    git commit  m  update 2 js  git add 3 js    git commit  m  update 3 js  git add 4 js    git commit  m  update 4 js  git add 5 js    git commit  m  update 5 js  git log   oneline   graph  4   decorate         commit             mixed                  git reset HEAD 2 git reset   mixed HEAD 2                     git status           HEAD                             mixed                                              git add   git commit         git reset                                                  A           B                 commit   git reset HEAD                 HEAD git reset   soft HEAD   HEAD       git reset   soft HEAD    HEAD  5    git reset   soft HEAD 5   id       git reset   soft a06ef2f            git stash          git checkout feat xxx        git stash pop              git add      git commit  m  update xxxx                  master                 feature                          master               git branch feat update   master        git reset   hard origin master                              push git checkout feat update                       commit                   feature                     bug       commit           bug                               git cherry pick  bug    commit     fix                     bug            git checkout feat update         bug fix  commit    feat update     git cherry pick a06ef2f         git checkout feat feedback   a06ef2f            git reset   head a06ef2f              commit          commit           commit      git cherry pick b9dabf9 e2c739d dad9e51               commit        git cherry pick 422db47  e2c739d              commit    git cherry pick                       commit                                            no commit                         git cherry pick b9dabf9   no commit                                                          1 js 2 js 3 js           git add      3 js                        git reset 3 js   3 js              1 js 2 js git commit  m  Update 1 js 2 js   3 js      git stash       3 js       git checkout feat update           stash 3 js  pop            stash                    git stash pop      git add    git commit  m  update 3 js                   feat feedback           commit     feat update               commit update 2 js     feat feedback                 git revert                             git revert HEAD   no edit        sourceTree                        SHA1   db6bb3   commit Update 2 js            SHA1   6e1d7ee    commit Revert  Update 2 js          git revert       commit                                   git cherry pick    revert                                                                           git cherry pick       revert commit push    git push origin feat feedback          git checkout feat update    commit         git cherry pick db6bb3f git revert                              edit      git revert                                                  git revert 6ac5152   edit   no edit        commit    revert   commit          Revert        commit  message                        no commit          commit                                          commit                               git revert 13b7faf   no commit                                             develop                                                                     develop      git revert                                                    develop master                                         revert             develop                      feat feedback             git revert      merge commit        commit            git           git revert g error  Commit g merge no  m option given  fatal  revert failed                Git                          Git       master     dev                workflow   master",
        "objectID": "post/Git撤销操作总结",
        "date": "2020-03-13T15:55:46.000Z",
        "tags": [
            "Git"
        ],
        "categories": [
            "Git"
        ]
    },
    {
        "title": "Git工作流:Git-Flow",
        "uri": "post/Git工作流:Git-Flow",
        "content": "Gitflow     feature               Vincent Driessen           gitflow avh           feature   feature                                   featustre     develop           release       release                bug   release             master   develop       master   tag    tag  apk           bug   hotfix      master    hotfix          bug       master develop      master      tag           Gitflow             Gitflow                                             tag               Gitflow             Gitflow          git                           Gitflow                         master    Gitflow    master               develop                        master          tag           Gitflow                                                                                                           develop    master                      merge  develop                 master                develop              Feature Branch Workflow       Gitflow                          develop                                develop                                                                 bug                                       master                             develop           develop                       develop                                                                                                                   4 0                                     develop        master       release  release                                                      master                          master develop                     master                                                                                  master               brew install git flow                  git clone    Gitflow    git flow init            Gitflow                                                               Gitflow                Gitflow                   feature     gitworkflow                feature gitworkflow      git flow feature start gitworkflow                        d            git flow init  d feature                              start      publish         finish                  feature                start                    git flow feature start                                               develop              git     git checkout  b feature  develop            develop                        publish            commit         push       git flow feature publish                  feature              track              push      push     git           git push origin feature    git push   set upstream origin feature    git push origin            publish        push                                  push  git push origin  finish                           feature       develop    git flow feature finish                develop         develop       feature               git    git checkout develop git merge feature  git branch  d feature    merge      merge          git merge                            fast forward       ff      HEAD              Gitflow                merge    commit           ff            no ff   no ff         merge commit                           merge                     commit        merge                       finish     merge            merge                       develop           commit      git flow feature finish       finish               finish         develop      push         feature             git push origin develop git push origin  feature     finish             r  merge    rebase    rebase   ff        ff    F                    k     feature       delete                        git flow feature finish  F         feature                   git flow feature  list    v  git flow feature start   F     git flow feature finish   rFk  git flow feature publish git flow feature track git flow feature diff    git flow feature rebase   i     git flow feature checkout    git flow feature pull    release        release        feature                                  develop    release            release                feature                     release                          start      release               v2 0    git flow release start v2 0          develop      release v2 0                                         git flow release publish v2 0    feature                      git flow release finish v2 0                 git fetch release v2 0     master        v2 0 tag  release v2 0     develop        release v2 0       develop      merge                   release                 finish                    finish release         start      release                   release finish                            git push origin develop git push origin master git push origin v2 0                  tag  git push origin   all git push origin   tags hotfix  tag                             bug                           v2 0 patch  git flow hotfix start v2 0 patch       hotfix v2 0             hotfix  publish     hotfix                              commit    finish    git flow hotfix finish v2 0 patch   Gitflow               release      git fetch hotfix v2 0 patch     master        v2 0 patch tag  hotfix v2 0 patch     develop        hotfi",
        "objectID": "post/Git工作流:Git-Flow",
        "date": "2020-02-25T18:00:26.000Z",
        "tags": [
            "Git"
        ],
        "categories": [
            "Git"
        ]
    },
    {
        "title": "Git工作流对比",
        "uri": "post/Git工作流对比",
        "content": "WorkFlow                                                                                                                                      bug                                                                                                          Git Flow         Vincent Driessen 2010                                Git Flow                     5     5                                                          Git Flow                               master develop    origin master                   origin develop                develop                         develop                  master                               Git Flow                                                                                                                        Feature Branch Release Branch Hotfix Branch Feature                                                   master                          develop            Release                       release xxx       1 0 0                      develop   release 1 0 0              release                             master   develop master                v1 0 0                                         Hotfix             bug             hotfix xxx                            Hotfix              master   develop                  master                   Merge    no ff           Git Flow     Vincent Driessen                 no ff                 Fast Forward                                                                                          Git Flow          Git Flow       master develop feature branchs  release branchs   hoxfixes    master   develop             master               hotfix    release                                     feature     develop          develop  hoxfixes   master            develop   master master                              Gitflow                                                     Dev                 Feature                                                                        Develop      Master          Fix bug Merge   Master                        Develop        Master                  Release Master                      Release Master          Release Master                 Pipeline                                                                    Release Master        Release Meeting             Release   Feature                     Gitflow                     Feature                               Feature                                                                                             feature                                           feature                        GitHub Flow GitHub Flow   GitHub               scott chacon   2011   8  31           Story       Feature       Feature     Pull Request      Master   Develop  Pull Request       Code Review     Gitflow                                                                                           Github flow                                                              Fork                                           Pull Request                                                                                                    GitHub Flow     GitHub Flow              master              pull Request      master                   master     master                    master     protected                     master                  master                                                                pull request    review                           master            Pull Request      GitHub Flow         Pull Request                                                                             Review pull request           issue tracking                                                 GitHub         issue                            issue   open              closed     issue tracking                   issue                                            fix  1                 issue  Trunk based development                                    Feature        Feature               Pull Request      Push     Master           Trunk based Development           Trunk based development TBD  SVN      Google Facebook        trunk SVN           Git   master    TBD                                       tag   tag  commit            tag                                     Repository    trunk   Developer  Developer        private branch                 Release            Developer   Release Branch      Release Engineer    Release Branch  Release Branch             Bug  trunk       cherry pick Commit   Release Branch     Release Branch      trunk        Release Branch                                                                                            bug                           bug                                                                             Master                   Master                                                                           Feature        Bug Fix                  Feature      Feature Toggle                                                                                Feature Toggle             Toggle                Toggle                                                             ",
        "objectID": "post/Git工作流对比",
        "date": "2020-02-25T15:20:28.000Z",
        "tags": [
            "Git"
        ],
        "categories": [
            "Git"
        ]
    },
    {
        "title": "go generate介绍",
        "uri": "post/go-generate介绍",
        "content": "go generate   go 1 4                go generate                            go generate                                  shell                        go                   generate          go generate                                                    go generate                              go generate  yacc    y       go     protobufs   protocol buffer       proto     pb go     Unicode   UnicodeData txt    Unicode    HTML   HTML       go      bindata     JPEG         go                string                 String                           ints sort Ints     go generate          go generate   run regexp    n    v    x   build flags   file go      packages       run                      v                n          x           go generate                GOARCH       arm amd64     GOOS OS   linux windows    GOFILE            GOLINE              GOPACKAGE            DOLLAR                    main go         package main import  fmt    go generate echo hello   go generate go run main go   go generate echo file  GOFILE pkg  GOPACKAGE func main     fmt Println  main func        go generate           go generate hello main func file main go pkg main                  go generate  String                        Pill       package painkiller type Pill int const   Placebo Pill   iota Aspirin Ibuprofen Paracetamol Acetaminophen   Paracetamol                     String        func  p Pill  String   string                    func  p Pill  String   string   switch p   case Placebo  return  Placebo  case Aspirin  return  Aspirin  case Ibuprofen  return  Ibuprofen  case Paracetamol        Acetaminophen return  Paracetamol    return fmt Sprintf  Pill  d    p            go generate   String              painkiller go             go generate stringer  type Pill package painkiller type Pill int const   Placebo Pill   iota Aspirin Ibuprofen Paracetamol Acetaminophen   Paracetamol                 go generate stringer  type Pill        stringer    String          stringer       go generate           stringer           go golang org x tools cmd stringer     painkiller go          go generate       go generate                pill_string go             String                Code generated  stringer  type Pill   NOT EDIT  package painkiller import  fmt  const Pillname    PlaceboAspirinIbuprofenParacetamol  var Pillindex        uint8 0  7  14  23  34  func  i Pill  String   string     Pill len Pillindex  1    return fmt Sprintf  Pill  d    i    return Pillname Pillindex i  Pillindex i 1        http   ddrv cn a 291663",
        "objectID": "post/go-generate介绍",
        "date": "2019-09-26T15:44:33.000Z",
        "categories": [
            "go"
        ]
    },
    {
        "title": "Go-Micro使用:构建GRPC服务端与客户端",
        "uri": "post/Go-Micro使用:构建GRPC服务端与客户端",
        "content": "proto hello proto syntax    proto3   package go micro srv greeter  service Say   rpc Hello Request  returns  Response       message Request   string name   1    message Response   string msg   1          protoc   protopath     microout     go_out   hello proto       hello pb go     Code generated protoc gen go  NOT EDIT     source  hello proto package gomicrosrv_greeter import   fmt  fmt  proto  github com golang protobuf proto  math  math       Reference imports suppress errors not otherwise used  var _   proto Marshal var _   fmt Errorf var _   math Inf    compile time assertion ensure generated file    compatible proto package compiled against     compilation error line likely means copy    proto package needs updated  const _   proto ProtoPackageIsVersion3    please upgrade proto package type Request struct   Name string protobuf  bytes 1 opt name name proto3  json  name omitempty  XXX_NoUnkeyedLiteral struct   json     XXX_unrecognized   byte json     XXX_sizecache int32 json       func  m Request  Reset     m   Request     func  m  Request  String   string   return proto CompactTextString m    func   Request  ProtoMessage      func   Request  Descriptor      byte    int    return fileDescriptor_61ef911816e0a8ce    int 0    func  m  Request  XXX_Unmarshal b   byte  error   return xxxmessageInfoRequest Unmarshal m  b    func  m  Request  XXX_Marshal b   byte  deterministic bool     byte  error    return xxxmessageInfoRequest Marshal b  m  deterministic    func  m  Request  XXX_Merge src proto Message    xxxmessageInfoRequest Merge m  src    func  m  Request  XXX_Size   int   return xxxmessageInfoRequest Size m    func  m  Request  XXX_DiscardUnknown     xxxmessageInfoRequest DiscardUnknown m    var xxxmessageInfoRequest proto InternalMessageInfo func  m  Request  GetName   string   m    nil   return m Name   return      type Response struct   Msg string protobuf  bytes 1 opt name msg proto3  json  msg omitempty  XXX_NoUnkeyedLiteral struct   json     XXX_unrecognized   byte json     XXX_sizecache int32 json       func  m Response  Reset     m   Response     func  m  Response  String   string   return proto CompactTextString m    func   Response  ProtoMessage      func   Response  Descriptor      byte    int    return fileDescriptor_61ef911816e0a8ce    int 1    func  m  Response  XXX_Unmarshal b   byte  error   return xxxmessageInfoResponse Unmarshal m  b    func  m  Response  XXX_Marshal b   byte  deterministic bool     byte  error    return xxxmessageInfoResponse Marshal b  m  deterministic    func  m  Response  XXX_Merge src proto Message    xxxmessageInfoResponse Merge m  src    func  m  Response  XXX_Size   int   return xxxmessageInfoResponse Size m    func  m  Response  XXX_DiscardUnknown     xxxmessageInfoResponse DiscardUnknown m    var xxxmessageInfoResponse proto InternalMessageInfo func  m  Response  GetMsg   string   m    nil   return m Msg   return      func init     proto RegisterType   Request  nil    go micro srv greeter Request   proto RegisterType   Response  nil    go micro srv greeter Response     func init     proto RegisterFile  hello proto   fileDescriptor_61ef911816e0a8ce    var fileDescriptor_61ef911816e0a8ce     byte     146 bytes gzipped FileDescriptorProto 0x1f  0x8b  0x08  0x00  0x00  0x00  0x00  0x00  0x02  0xff  0xe2  0xe2  0xce  0x48  0xcd  0xc9  0xc9  0xd7  0x2b  0x28  0xca  0x2f  0xc9  0x17  0x12  0x49  0xcf  0xd7  0xcb  0xcd  0x4c  0x2e  0xca  0xd7  0x2b  0x2e  0x2a  0xd3  0x4b  0x2f  0x4a  0x4d  0x2d  0x49  0x2d  0x52  0x92  0xe5  0x62  0x0f  0x4a  0x2d  0x2c  0x4d  0x2d  0x2e  0x11  0x12  0xe2  0x62  0xc9  0x4b  0xcc  0x4d  0x95  0x60  0x54  0x60  0xd4  0xe0  0x0c  0x02  0xb3  0x95  0x64  0xb8  0x38  0x82  0x52  0x8b  0x0b  0xf2  0xf3  0x8a  0x53  0x85  0x04  0xb8  0x98  0x73  0x8b  0xd3  0xa1  0xd2  0x20  0xa6  0x91  0x3f  0x17  0x73  0x70  0x62  0xa5  0x90  0x07  0x17  0xab  0x07  0xc8  0x22  0x21  0x59  0x3d  0x6c  0x76  0xe8  0x41  0x2d  0x90  0x92  0xc3  0x25  0x0d  0xb1  0x40  0x89  0x21  0x89  0x0d  0xec  0x54  0x63  0x40  0x00  0x00  0x00  0xff  0xff  0xe3  0x91  0x64  0xd6  0xb9  0x00  0x00  0x00    hello pb micro go     Code generated protoc gen micro  NOT EDIT     source  hello proto package gomicrosrv_greeter import   fmt  fmt  proto  github com golang protobuf proto  math  math    import   context  context  api  github com micro go micro v2 api  client  github com micro go micro v2 client  server  github com micro go micro v2 server       Reference imports suppress errors not otherwise used  var _   proto Marshal var _   fmt Errorf var _   math Inf    compile time assertion ensure generated file    compatible proto package compiled against     compilation error line likely means copy    proto package needs updated  const _   proto ProtoPackageIsVersion3    please upgrade proto package    Reference imports suppress errors not otherwise used  var _ api Endpoint var _ context Context var _ client Option var _ server Option    Api Endpoints Say service func NewSayEndpoints      api Endpoint   return    api Endpoint   api Endpoint           Client API Say service type SayServic",
        "objectID": "post/Go-Micro使用:构建GRPC服务端与客户端",
        "date": "2020-04-12T17:23:48.000Z",
        "tags": [
            "Go-Micro"
        ],
        "categories": [
            "Go-Micro"
        ]
    },
    {
        "title": "Go-Micro使用:构建HTTP服务",
        "uri": "post/Go-Micro使用:构建HTTP服务",
        "content": "package main import    log   github com gin gonic gin   github com micro go micro v2 web    type Say struct   func  s Say  Anything c gin Context    log Print  Received Say Anything API request   c JSON 200  map string string   message    Hi  Greeter API        func main        Create service service    web NewService  web Address   8080      service Init      Create RESTful handler  using Gin  say    new Say  router    gin Default   router GET   greeter   say Anything     Register Handler service Handle      router     Run server err    service Run    err    nil   log Fatal err",
        "objectID": "post/Go-Micro使用:构建HTTP服务",
        "date": "2020-04-11T22:39:34.000Z",
        "tags": [
            "Go-Micro"
        ],
        "categories": [
            "Go-Micro"
        ]
    },
    {
        "title": "Go-Micro使用:客户端中间件",
        "uri": "post/Go-Micro使用:客户端中间件",
        "content": "package main import    fmt   github com micro go micro v2 client   github com micro go micro v2 registry   github com micro go micro v2 service   time   context  hello  examples grpc greeter srv proto hello   github com micro go micro v2 metadata   github com micro go micro v2 service grpc       wrapper example code    log wrapper logs every time request made type logWrapper struct   client Client   func  l  logWrapper  Call ctx context Context  req client Request  rsp interface    opts    client CallOption  error   md  _    metadata FromContext ctx  fmt Printf   Log Wrapper  ctx   v service   s method   s n   md  req Service    req Endpoint    return l Client Call ctx  req  rsp       trace wrapper attaches unique trace ID   timestamp type traceWrapper struct   client Client   func  t  traceWrapper  Call ctx context Context  req client Request  rsp interface    opts    client CallOption  error   ctx   metadata NewContext ctx  map string string   X Trace Id   fmt Sprintf   d   time Now   Unix        return t Client Call ctx  req  rsp       Implements client Wrapper logWrapper func logWrap c client Client  client Client   return  logWrapper c       Implements client Wrapper traceWrapper func traceWrap c client Client  client Client   return  traceWrapper c    func metricsWrap cf client CallFunc  client CallFunc   return func ctx context Context  node  registry Node  req client Request  rsp interface    opts client CallOptions  error   t    time Now   err    cf ctx  node  req  rsp  opts  fmt Printf   Metrics Wrapper  called   v  s  s duration   v n   node  req Service    req Endpoint    time Since t   return err     func main     myService    grpc NewService  service Name  test client    service WrapClient logWrap traceWrap   service WrapCall metricsWrap     myService Init      use generated client stub cl    hello NewSayService  test   myService Client       Set arbitrary headers context ctx    metadata NewContext context TODO    map string string   X User Id    john    X From Id    script      rsp  err    cl Hello ctx   hello Request  Name   John      err    nil   fmt Println err  return   fmt Println rsp Msg          package main import    context  hello  examples grpc greeter srv proto hello   fmt   github com afex hystrix go hystrix   github com micro go micro v2 client   github com micro go micro v2 metadata   github com micro go micro v2 service   github com micro go micro v2 service grpc    type hystrixWrapper struct   client Client   func  c  hystrixWrapper  Call ctx context Context  req client Request  rsp interface    opts    client CallOption  error   return hystrix Do req Service       req Endpoint    func   error   return c Client Call ctx  req  rsp  opts        nil       Implements client Wrapper traceWrapper func hystrixWrap c client Client  client Client   return  hystrixWrapper c    func main     myService    grpc NewService  service Name  test client    service WrapClient hystrixWrap     myService Init      use generated client stub cl    hello NewSayService  test   myService Client       Set arbitrary headers context ctx    metadata NewContext context TODO    map string string   X User Id    john    X From Id    script      rsp  err    cl Hello ctx   hello Request  Name   John      err    nil   fmt Println err  return   fmt Println rsp Msg",
        "objectID": "post/Go-Micro使用:客户端中间件",
        "date": "2020-04-12T22:16:08.000Z",
        "tags": [
            "Go-Micro"
        ],
        "categories": [
            "Go-Micro"
        ]
    },
    {
        "title": "Go-Micro使用:实现GRPC网关",
        "uri": "post/Go-Micro使用:实现GRPC网关",
        "content": "protobuf  mkdir tmp cd tmp git clone https   github com google protobuf cd protobuf   autogen sh   configure check sudo install      go  u github com grpc ecosystem grpc gateway protoc gen grpc gateway go  u github com micro protobuf protoc gen go Greeter Service        go grpc      greeter        proto       syntax    proto3   package go micro srv greeter  service Say   rpc Hello Request  returns  Response       message Request   string name   1    message Response   string msg   1       Go    package main import    log   time  hello  github com micro examples greeter srv proto hello   github com micro go grpc   github com micro go micro v2   golang org x net context    type Say struct   func  s Say  Hello ctx context Context  req hello Request  rsp  hello Response  error   log Print  Received Say Hello request   rsp Msg    Hello     req Name return nil   func main     service    grpc NewService  micro Name  go micro srv greeter    micro RegisterTTL time Second 30   micro RegisterInterval time Second 10        optionally setup command line usage service Init      Register Handlers hello RegisterSayHandler service Server    new Say      Run server err    service Run    err    nil   log Fatal err      GRPC Gateway GRPC       proto    http       syntax    proto3   package greeter  import  google api annotations proto   service Say   rpc Hello Request  returns  Response    option  google api http      post    greeter hello  body             message Request   string name   1    message Response   string msg   1         proto    grpc         protoc  I usr local include  I     I GOPATH src    I GOPATH src github com grpc ecosystem grpc gateway third_party googleapis     go_out plugins grpc     path to your_service proto protoc  I usr local include  I     I GOPATH src    I GOPATH src github com grpc ecosystem grpc gateway third_party googleapis     grpc gateway_out logtostderr true     path to your_service proto                    greeter   API                                  package main import    flag   net http   github com golang glog   github com grpc ecosystem grpc gateway runtime   golang org x net context   google golang org grpc  hello  github com micro examples grpc gateway proto hello    var      go micro srv greeter address endpoint   flag String  endpoint    localhost 9090    go micro srv greeter address     func run   error   ctx    context Background   ctx  cancel    context WithCancel ctx  defer cancel   mux    runtime NewServeMux   opts      grpc DialOption grpc WithInsecure    err    hello RegisterSayHandlerFromEndpoint ctx  mux   endpoint  opts  err    nil   return err   return http ListenAndServe   8080   mux    func main     flag Parse   defer glog Flush   err    run    err    nil   glog Fatal err               greeter     mdns                  go run examples grpc greeter srv main go   registry mdns   server_address localhost 9090         greeter         localhost 9090  go run examples grpc gateway main go  Curl       curl  d    name    john    http   localhost 8080 greeter hello          gRPC                        micro api",
        "objectID": "post/Go-Micro使用:实现GRPC网关",
        "date": "2020-04-13T18:27:03.000Z",
        "tags": [
            "Go-Micro"
        ],
        "categories": [
            "Go-Micro"
        ]
    },
    {
        "title": "Go-Micro使用:HTTP服务注册与发现",
        "uri": "post/Go-Micro使用:HTTP服务注册与发现",
        "content": "package main import    github com micro go micro v2 registry   github com micro go micro v2 registry etcd   log   github com gin gonic gin   github com micro go micro v2 web    type Say struct   func  s Say  Anything c gin Context    log Print  Received Say Anything API request   c JSON 200  map string string   message    Hi  Greeter API        func main     etcdReg  etcd NewRegistry registry Addrs  127 0 0 1 2379       Create service service    web NewService  web Name  test    web Address   8080    web Registry etcdReg     service Init      Create RESTful handler  using Gin  say    new Say  router    gin Default   router GET   greeter   say Anything     Register Handler service Handle      router     Run server err    service Run    err    nil   log Fatal err           package main import    fmt   github com micro go micro v2 client selector   github com micro go micro v2 registry   github com micro go micro v2 registry etcd   io ioutil   log   net http    func main     etcdReg  etcd NewRegistry  registry Addrs  127 0 0 1 2379    mySelector  selector NewSelector  selector Registry etcdReg   selector SetStrategy selector Random     next err  mySelector Select  test   err  nil  log Fatal err    node err  next   err  nil  log Fatal err    host  node Address res err  http Get  http     host   greeter   err  nil  log Fatal err    defer res Body Close   data err  ioutil ReadAll res Body  err  nil  log Fatal err    fmt Println string data",
        "objectID": "post/Go-Micro使用:HTTP服务注册与发现",
        "date": "2020-04-12T09:56:41.000Z",
        "tags": [
            "Go-Micro"
        ],
        "categories": [
            "Go-Micro"
        ]
    },
    {
        "title": "Go Modules 浅析",
        "uri": "post/Go-Modules-浅析",
        "content": "go mod    download download modules local cache       module   cache   edit edit go mod tools scripts    go mod    graph print module requirement graph            init initialize new module current directory                module    go mod     tidy add missing remove unused modules       module      module  vendor vendored copy dependencies        vendor   verify verify dependencies expected content        why explain why packages modules needed             go          go mod                                import        go mod                 go                                go mod                          tag               non prerelease               tag                      tag                          go                go modules      GOPATH pkg mod       Semantic versioning                      major               minor              patch             bug               v           import        v0   v1   import                    v2      Module   import path          vN    go mod      module github com my mod v2   require      require github com my mod v2 v2 0 0   import      import  github com my mod v2 mypkg             v0                                         v1                99         v2                  v1                               v0 0 0                                go mod     package                         main module         package           go mod      module github com chromedp chromedp require   github com chromedp cdproto v0 0 0 20180713053126 e314dc107013 github com disintegration imaging v1 4 2 github com gorilla websocket v1 2 0 github com knq sysutil v0 0 0 20180306023629 0218e141a794 github com mailru easyjson v0 0 0 20180606163543 3fdea8d05856 golang org x image v0 0 0 20180708004352 c73c2afc3b81                import                              vX Y Z pre 0 yyyymmddhhmmss abcdefabcdef vX 0 0 yyyymmddhhmmss abcdefabcdef vX Y  Z 1  0 yyyymmddhhmmss abcdefabcdef vX Y Z golang org x text    v0 0 0 20170915032832 14c0d48ead0c                     go         v0 0 0     go module         workround  20180606163543 3fdea8d05856                   commit    hash     12        Rev  commit          2                 tag   tag                          tag                                                commit hash            go get  go github com mqu go notify ef6f6f49  go mod    module my module require      packages github com mqu go notify ef6f6f49         go build go mod tidy            go mod               module my module require   github com mattn go gtk v0 0 0 20181205025739 e9a6766929f6    indirect github com mqu go notify v0 0 0 20130719194048 ef6f6f49d093       hash                                        hash            hash          v      commit hash   hash    8   git        8    go mod              go mod      12    hash            hash                         tag        commit    hash            package                    chromedp  v0 1 0                  go mod edit  require  github com chromedp chromedp v0 1 0               go mod       module test require github com chromedp chromedp v0 1 0                                               tag    1 x                   go mod             semver          v2 0 0                                         v2 0 0                                                                      module my module v2 require   some pkg v2 v2 0 0 some pkg v2 mod1 v2 0 0 my pkg v3 v3 0 1        pkgpath vN   N   1                            import  some pkg v2                                           golang                                          gopkg in          require gopkg in some pkg v2 v2 0 0          incompatible         vN    require some pkg v2 0 0 incompatible   go1 11   GO111MODULE off          go1 12                      v2       go mod    v2                             vN                    vN                 v2         go modules                                          incompatible                   go modules                go mod             v3 2 1 incompatible               go module       git    tag  go mod       go mod                    go mod                                                             go mod init name init                     go mod          go                       go get                   go mod  module myprojectname             import myprojectname stuff    stuff      stuff                                                          app configs docker             stuff      pkg      go  pkg stuff  stuff              import myprojectname pkg stuff                       myprojectname pkg db provider postgresql   postgresql    pkg db provider postgresql                  github   modules           module    go mod init github com objcoding testmod go  creating new go mod  module github com objcoding testmod               go mod             module github com objcoding testmod                 module        github      git init   git add     git commit  am  First commit    git push  u origin master                                                   go mudules                                                 gopath      objcoding mypack",
        "objectID": "post/Go-Modules-浅析",
        "date": "2019-07-25T10:49:06.000Z",
        "tags": [
            "Go",
            "Modules"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go处理数据库的NULL",
        "uri": "post/Go处理数据库的NULL",
        "content": "golang                                                                          not null    CREATE TABLE  users     id  serial not null primary key   name  text   age  integer    gorp insert                    dbmap Insert   User Name   John   Age  0      insert  users    id   name   age   values  default  1  2  returning Id   1  John  2 0   User Name   John       insert  users    id   name   age   values  default  1  2  returning Id   1  John  2 0   User Name      Age  8      insert  users    id   name   age   values  default  1  2  returning Id   1    2 8   User Age  30      insert  users    id   name   age   values  default  1  2  returning Id   1    2 30       golang       NULL                         NULL      database sql       sql NullString sql NullBool                        NULL          sql NullString sql NullBool         type User struct  Id int db id Name sql NullString db name Age sql NullInt64 db age     sql NullString         type NullString struct   String string Valid bool    Valid true String not NULL      sql NullString          insert      Valid   fasle        null           false                        dbmap Insert   User  Name  sql NullString  Mike   true   Age  sql NullInt64 0  true         insert  users    id   name   age   values  default  1  2  returning Id   1  Mike  2 0   User  Name  sql NullString     false   Age  sql NullInt64 30  true         insert  users    id   name   age   values  default  1  2  returning Id   1  2 30              valid                      dbmap Insert   User Name  sql NullString  Mike   true   Age  sql NullInt64 0  true     User Name  sql NullString  John   true   Age  sql NullInt64 0  false     User Name  sql NullString  John   true   Age  sql NullInt64 8  true     User Name  sql NullString     false   Age  sql NullInt64 30  true      users      User   _  err    dbmap Select  users   select   users   err    nil   log Fatal err    _  user    range users   spew Dump user        main User    Id   int  1  Name   sql NullString    String   string   len 4   Mike   Valid   bool  true    Age   sql NullInt64    Int64   int64  0  Valid   bool  true      main User    Id   int  2  Name   sql NullString    String   string   len 4   John   Valid   bool  true    Age   sql NullInt64    Int64   int64  0  Valid   bool  false      main User    Id   int  3  Name   sql NullString    String   string   len 4   John   Valid   bool  true    Age   sql NullInt64    Int64   int64  8  Valid   bool  true      main User    Id   int  4  Name   sql NullString    String   string      Valid   bool  false    Age   sql NullInt64    Int64   int64  30  Valid   bool  true                valid                    var s NullString err    db QueryRow  SELECT name foo id     id  Scan  s      s Valid      use s String   else      NULL value                    NULL     NULL    scan                null   nil   null                 database sql     sql NullFloat64                                        var   s1 string s2 sql NullString i1 int f1 float64 f2 float64                  hello   NULL  12345   12345 6789    not a float   err   rows Scan  s1   s2   i1   f1   f2  err    nil   log Fatal err          f2      float           sql  Scan error column index 4  converting string  not a  oat  oat64  strconv ParseFloat  parsing  not a  oat   invalid syntax     err                                    err   rows Scan  s1   s2   i1   f1   f2  log Printf   q   v  d  f  f   s1  s2  i1  f1  f2         hello  sql NullString String     Valid false  12345 12345 678900 0 000000                                      null   NullString           null              var world sql NullString err    db QueryRow  SELECT world hello id       id  Scan  world      world Valid   wrold String   else          value   null       world            world String         world     int             sql NullInt64         world Int64                 Null                                byte null byte        string  var world   byte err    db QueryRow  SELECT world hello id       id  Scan  world      log Println string real_name               null",
        "objectID": "post/Go处理数据库的NULL",
        "date": "2019-06-04T11:32:07.000Z",
        "tags": [
            "Go",
            "Mysql"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go的编译优化:内联与死码消除",
        "uri": "post/Go的编译优化:内联与死码消除",
        "content": "Go                                                                                                                                                                                                                               1 func Max a  b int  int     b   return   return b   func F     const a  b   100  20 Max a  b     b   panic b              gcflags    m                 go build  gcflags  m examples max max go command line arguments examples max max go 3 6  inline Max examples max max go 12 8  inlining call Max                3  Max                    Max         12                   max go             F             go build  gcflags  S examples max max go 2  1   grep  A5     F STEXT     F STEXT nosplit size 1 args 0x0 locals 0x0 0x0000 00000   Users dfc devel gophercon2018 performance tuning workshop 4 compiler optimisations examples max max go 10  TEXT    F SB   NOSPLIT   0 0 0x0000 00000   Users dfc devel gophercon2018 performance tuning workshop 4 compiler optimisations examples max max go 10  FUNCDATA  0  gclocals 33cdeccccebe80329f1fdbee7f5874cb SB  0x0000 00000   Users dfc devel gophercon2018 performance tuning workshop 4 compiler optimisations examples max max go 10  FUNCDATA  1  gclocals 33cdeccccebe80329f1fdbee7f5874cb SB  0x0000 00000    RET 0x0000 c3   Max          F                                              RET    F     func F     return           S                                        FUNCDATA PCDATA                                      S       FUNCDATA PCDATA                           gcflags  l                       l                             gcflags  l                    gcflags   l  l      2                          gcflags   l  l  l      3                             bug   gcflags  l 4  4   l    Go 1 11                           a b                             Max   F                                      Before  func Max a  b int  int     b   return   return b   func F     const a  b   100  20 Max a  b     b   panic b      After  func F     const a  b   100  20 var result int   b   result     else   result   b   result    b   panic b        a b                           100    20            F   func F     const a  b   100  20 var result int true   result     else   result   b   result    b   panic b                                         func F     const a  b   100  20 const result   result    b   panic b                         a     a                               func F     const a  b   100  20 const result   false   panic b                 F            func F     const a  b   100  20 const result           func F                                                                                                                                                                     const debug   false                       Using     build switch debug release builds use conditional compilation go build tool                    go build  gcflags  FLAGS                S                l          l        l  l    l    l                                      m                     m                  l  N             find subsequent runs go build     produce no output  delete   max binary working directory  Further reading Codegen Inspection Jaana Burcu Dogan  0   https   www goodreads com book show 112269 PrinciplesofCompiler_Design  1   https   en wikipedia org wiki Staticsingleassignment_form  2   https   golang org doc go1 5 c  3   https   blog golang org go1 7  4   https   golang org ref spec  5   https   github com golang go issues 19348 issuecomment 393654429  6   http   go talks appspot com github com rakyll talks gcinspect talk slide 1  7   http   dave cheney net 2014 09 28 using build to switch between debug and release  8   http   dave cheney net 2013 10 12 how to use conditional compilation with the go build tool    https   github com sxs2473 go performane tuning blob master 2  E7 BC 96 E8 AF 91 E4 BC 98 E5 8C 96  E7 BC 96 E8 AF 91 E4 BC 98 E5 8C 96 md",
        "objectID": "post/Go的编译优化:内联与死码消除",
        "date": "2020-01-30T16:33:02.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go调优"
        ]
    },
    {
        "title": "Go的编译优化:逃逸分析",
        "uri": "post/Go的编译优化:逃逸分析",
        "content": "Sharing Stacks    goroutine              4KB  goroutine        golang   runtime morestack      asm_xxx s                          2                                            function         stack frame   function           Go         goroutine            goroutine                  goroutine                                  goroutine                      Heaps                                                                          GC                                                     CPU     25                 stop world         GC                                         Go                     GC                                               GC                                                                                                                                                         https   play golang org p Y_VZxYteKO   1 package main type user struct   name string email string   func main     u1    createUserV1   u2    createUserV2   println  u1    u1   u2    u2      go noinline func createUserV1   user   u    user  name   Bill   email   bill ardanlabs com     println  V1    u  return u     go noinline func createUserV2    user   u    user  name   Bill   email   bill ardanlabs com     println  V2    u  return  u       go noinline        main                                                1           user                         1           2 func createUserV1   user   u    user  name   Bill   email   bill ardanlabs com     println  V1    u  return u                          user                                          17    20   user              23   user                                      1        1        createUserV1     user                       2            3 func createUserV2    user   u    user  name   Bill   email   bill ardanlabs com     println  V2    u  return  u                           user                                         28    31              user       34               user                user                                     2        2                                  main                                                                   createUserV2           user                                            28               Readability                                                                                     createUserV2            4 func createUserV2    user   u    user  name   Bill   email   bill ardanlabs com     println  V2    u  return  u                     28        u      user      Go                             34                              u      user                                           3       3   createUserV2         u                      u                               u                          5 func createUserV2    user   u     user  name   Bill   email   bill ardanlabs com     println  V2   u  return u                                           return     6 return u      return                u                        return              7 return  u             return     u                                                   sharing                                   8 var u  user err    json Unmarshal   byte r    u  return u  err                                 json Unmarshal json Unmarshal        user               https   play golang org p koI8EjpeIx               user             json Unmarshal            u                    user   json Unmarshal                                         9 var u user err    json Unmarshal   byte r    u  return  u  err               user             json Unmarshal      u         u            02     user         json Unmarshal    03   user                    user                                                   Escape Mechanics                                                                  Go                                                      go                 go                                                                                                                                                             gc                                gc                                                                                                                                     gcflags   m                         l       gcflags   m  l  Example  package main import    fmt    func main     s     hello  fmt Println s    go run  gcflags   m  l  escape go Output  command line arguments escape_analysis main go 9  s escapes heap escape_analysis main go 9  main     argument does not escape hello         Example1  package main type S struct   func main     var x S y     x _    identity y    func identity z S  S   return z   Output  command line arguments escape_analysis main go 11  leaking param  z result  r1 level 0 escape_analysis main go 7  main  x does not escape         z          identity                           identity     z             x             main  x            Example2  package main type S struct   func main     var x S _    ref x    func ref z S   S   return  z   Output  command line arguments escape_analysis main go 11   z escapes heap escape_analysis main go 10  moved heap  z    z        ",
        "objectID": "post/Go的编译优化:逃逸分析",
        "date": "2018-12-21T14:54:40.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go调优"
        ]
    },
    {
        "title": "Go的调度器源码剖析-基本原理",
        "uri": "post/Go的调度器源码剖析-基本原理",
        "content": "CPU     CPU                                                           CPU         CPU                         CPU                                 CPU                                                                                    CPU                                                                                         C C                                     pthread lib                                                C C   Programming           thread     pthread                       thread        thread detached     parent thread join      thread   cancel point    join                       thread                                shared memory       lock            thread stack size                              scaling    thread                         thread       thread                  thread                           thread      thread             epoll kqueue IoCompletionPort        libevent libev                            callback                                                                                                 MB                 CPU         CPU                                                                                                    CPU                      1                                 co routine                                  User level threads  Application level threads  Green threads            OS         Google coroutine                     Green threads        Green threads             coroutine     Java Lua Go Erlang Common Lisp Haskell Rust PHP Stackless Python                                CPU                            CPU                  3       N 1   N    1                                     1 1   1                                                          POSIX     pthread  Java  M N                              Go                       goroutine                             Goroutine Go         thread     coroutine           Go     goroutine  goroutine         Go 1 4   goroutine stack size     2k  goroutine           trap                     Go               goroutine    Go    goroutine       go runtime        goroutines         CPU          goroutine    goroutine scheduler       Go                                   thread           Goroutine       goroutine      Go       Go   goroutine          CPU            Go runtime         Go                go runtime     Goroutine         go runtime         goroutine          CPU                Thread    CPU         CPU   Go       Goroutine     CPU        Go                                  goroutine        CPU              Go scheduler         goroutines                                                 G P M   G    goroutine    goroutine   stack   goroutine    goroutine         G          P      processor P               G            cpu    P     P             G          cache     M  M                   p    schedule    schedule              p        G    G        G      goexit        m      M    G     G   M       P      Proccessor    G                  P    P local runq       global runq        G   P       CPU      G     P   Go scheduler         CPU  M    P M     P runq G            P M       Linux             user thread       kernel thread         N x M   P   M      G           1 1        P      CPU      GOMAXPROCS    M          M                  P                    M      M                   M  Goroutine            M        M    1                     CPU              goroutine                                                      4          Global Queue         G  P                        G           256    G   G      P                        G         P      P                     GOMAXPROCS   M           P  P       G P      M            G  P          P            P      M  G G     M  P     G                                                                      2     work stealing          G            P  G          hand off       G                 P  P                   GOMAXPROCS  P     GOMAXPROCS  1      GOMAXPROCS                     CPU                    GOMAXPROCS            GOMAXPROCS      2          CPU                           Go   Rob Pike     go           Go                                                                                                 CPU 8           8                   G P M       Go scheduler       Scheduler                             G                   G          P M      P    G                             P  GOMAXPROCS 1     Go      G         Dmitry Vyukov     Go Preemptive Scheduler Design   Go 1 2                                                runtime                                                      G scheduler         coroutine            CPU          Go    goroutine    CPU 10ms     goroutine       goroutine   coroutine         G               G              M  work stealing   P   G        G    G  Poller Go runtime     netpoller      G    I O       M       G          M          regular file I O         M   sleep     I O            P  sleep M        idle M       idle M        M        I O      Thread        Ian Lance Taylor Go 1 9 dev        Poller os package           netpoller    G ",
        "objectID": "post/Go的调度器源码剖析-基本原理",
        "date": "2019-07-05T16:46:28.000Z",
        "tags": [
            "Go",
            "调度器"
        ],
        "categories": [
            "Go源码"
        ]
    },
    {
        "title": "Go的调度器源码剖析-源码实现",
        "uri": "post/Go的调度器源码剖析-源码实现",
        "content": "G   M         P                  P      P              P      M                    go1 12    G P M      G type g struct      Stack parameters     stack describes actual stack memory   stack lo  stack hi      stackguard0 stack pointer compared Go stack growth prologue     stack lo StackGuard normally  StackPreempt trigger preemption     stackguard1 stack pointer compared C stack growth prologue     stack lo StackGuard g0 gsignal stacks      0 goroutine stacks  trigger call morestackc  and crash   stack stack    offset known runtime cgo       stackguard0 uintptr    offset known liblink stackguard1 uintptr    offset known liblink panic  panic    innermost panic   offset known liblink defer  defer    innermost defer m  m    current m  offset known arm liblink sched gobuf            syscallsp uintptr    status  Gsyscall  syscallsp   sched sp use during gc syscallpc uintptr    status  Gsyscall  syscallpc   sched pc use during gc stktopsp uintptr    expected sp top stack  check traceback param unsafe Pointer    passed parameter wakeup atomicstatus uint32 stackLock uint32    sigprof scang lock  TODO  fold atomicstatus goid int64        schedlink guintptr      waitsince int64    approx time when g become blocked waitreason waitReason    status  Gwaiting preempt bool    preemption signal  duplicates stackguard0   stackpreempt paniconfault bool    panic  instead crash  unexpected fault address preemptscan bool    preempted g does scan gc gcscandone bool    g scanned stack  protected _Gscan bit status gcscanvalid bool    false start gc cycle  true G not run last scan  TODO  remove  throwsplit bool    not split stack raceignore int8    ignore race detection events sysblocktraced bool    StartTrace emitted EvGoInSyscall goroutine sysexitticks int64    cputicks when syscall returned  for tracing  traceseq uint64    trace event sequencer tracelastp puintptr    last P emitted event goroutine lockedm muintptr sig uint32 writebuf   byte sigcode0 uintptr sigcode1 uintptr sigpc uintptr gopc uintptr    pc go statement created goroutine      PC IP ancestors    ancestorInfo    ancestor information goroutine s  created goroutine  only used debug tracebackancestors  startpc uintptr    pc goroutine function        racectx uintptr waiting  sudog    sudog structures g waiting  that valid elem ptr   lock order cgoCtxt   uintptr    cgo traceback context labels unsafe Pointer    profiler labels timer  timer    cached timer time Sleep selectDone uint32    participating select someone win race     Per G GC state    gcAssistBytes G s GC assist credit terms    bytes allocated  positive  G credit    allocate gcAssistBytes bytes without assisting     negative  G correct performing    scan work  track bytes fast update    check debt malloc hot path  assist ratio    determines corresponds scan work debt  gcAssistBytes int64   P type p struct   lock mutex id int32 status uint32    one pidle prunning     link puintptr schedtick uint32    incremented every scheduler call syscalltick uint32    incremented every system call sysmontick sysmontick    last tick observed sysmon m muintptr    back link associated m  nil idle  mcache  mcache racectx uintptr deferpool 5 _defer    pool available defer structs different sizes  see panic go  deferpoolbuf 5 _defer    Cache goroutine ids  amortizes accesses runtime sched goidgen  goidcache uint64 goidcacheend uint64    Queue runnable goroutines  Accessed without lock  runqhead uint32 runqtail uint32 runq  256 guintptr                   runnext  non nil  runnable G ready d    current G run next instead what s    runq there s time remaining running G s time    slice  will inherit time left current time    slice  set goroutines locked    communicate and wait pattern  schedules set    unit eliminates  potentially large  scheduling    latency otherwise arises adding ready d    goroutines end run queue  runnext guintptr           Available G s  status    Gdead  gFree struct   gList n int32   sudogcache    sudog sudogbuf  128  sudog tracebuf traceBufPtr    traceSweep indicates sweep events traced     used defer sweep start event until span    actually swept  traceSweep bool    traceSwept traceReclaimed track number bytes    swept reclaimed sweeping current sweep loop  traceSwept  traceReclaimed uintptr palloc persistentAlloc    per P avoid mutex    Per P GC state gcAssistTime int64    Nanoseconds assistAlloc gcFractionalMarkTime int64    Nanoseconds fractional mark worker gcBgMarkWorker guintptr gcMarkWorkerMode gcMarkWorkerMode    gcMarkWorkerStartTime nanotime   mark    worker started  gcMarkWorkerStartTime int64    gcw P s GC work buffer cache  work buffer    filled write barriers  drained mutator assists     disposed certain GC state transitions  gcw gcWork    wbBuf P s GC write barrier buffer        TODO  Consider caching running G  wbBuf wbBuf runSafePointFn uint32    1  run sched safePointFn next safe point pad cpu CacheLinePad   M type m struct   g0  g    goroutine scheduling stack           morebuf gobuf    gobuf arg morestack divmod uint32    div mod denominator arm   known liblink    Fields not known debuggers  procid uint64  ",
        "objectID": "post/Go的调度器源码剖析-源码实现",
        "date": "2019-07-12T13:29:52.000Z",
        "tags": [
            "Go",
            "调度器"
        ],
        "categories": [
            "Go源码"
        ]
    },
    {
        "title": "Go的定时器源码剖析",
        "uri": "post/Go的定时器源码剖析",
        "content": "timers                                                                                           0   1   2   3   4   5   6         63                                                                                                                                                                              cacheline size                             cacheline size                                                                                                                                                                         timersBucket             timersBucket                                         pad                                     pad     lock mutex       lock mutex                                                                               gp g       gp g                                                                               created bool       created bool                                                                                        sleeping bool       sleeping bool                                                                               rescheduling bool       rescheduling bool                                                                               sleepUntil int64       sleepUntil int64                                                                               waitnote note       waitnote note                                                                               t   timer       t   timertimers   runtime time go      timers     var timers  timersLen struct   timersBucket pad  sys CacheLineSize   unsafe Sizeof timersBucket    sys CacheLineSize byte     Go             timer          timer                                   Go   timers                      runtime      64  const timersLen   64           GOMAXPROCS           procresize                     64                   GOMAXPROCS   64            P                          64      CPU  timers            struct    timersBucket   pad         pad       struct   cacheline              P      false sharing                timerBucket        go notinheap type timersBucket struct   lock mutex gp  g created bool sleeping bool rescheduling bool sleepUntil int64 waitnote note t    timer       t                      heap                              timersBucket          go notinheap          go notinheap applies type declarations  indicates type allocated GC d heap  Specifically  pointers type always fail runtime inheap check  type may used global variables  stack variables  objects unmanaged memory  e g   allocated sysAlloc  persistentalloc  fixalloc  manually managed span   Specifically    1  new T   make   T   append   T       implicit heap allocation T disallowed   Though implicit allocations disallowed runtime anyway     2  pointer regular type  other unsafe Pointer  cannot converted pointer go notinheap type  even underlying type    3  type contains go notinheap type itself go notinheap  Structs arrays go notinheap elements are  Maps channels go notinheap types disallowed  keep things explicit  type declaration type implicitly go notinheap explicitly marked go notinheap well    4  Write barriers pointers go notinheap types omitted    last point real benefit go notinheap  runtime uses low level internal structures avoid memory barriers scheduler memory allocator illegal simply inefficient  mechanism reasonably safe does not compromise readability runtime                           Timer Timer              Timer                C  channel     Timer    AfterFunc           Timer         NewTimer   AfterFunc             type Timer struct   C last    tb t i     t   unlock  tb lock  return false        timer i      timer last     last   tb t i    tb t last  tb t i  i           timer last      slice tb t last    nil tb t   tb t  last                                      last                                                                    siftupTimer tb t  i  siftdownTimer tb t  i    unlock  tb lock  return true            timerproc                                      sleep          addtimer                  timerproc func timerproc tb  timersBucket    tb gp   getg               timerBucket       lock  tb lock              sleeping     false tb sleeping   false          nanotime   delta    int64  1             timer                 timer                         ",
        "objectID": "post/Go的定时器源码剖析",
        "date": "2019-10-21T15:23:59.000Z",
        "tags": [
            "Go",
            "定时器"
        ],
        "categories": [
            "Go源码"
        ]
    },
    {
        "title": "Go的交叉编译",
        "uri": "post/go的交叉编译",
        "content": "PC   X86 CPU          ARM    CPU               X86 CPU              ARM CPU                  Linux                                                                                                                                                                     Linux                                        PC                             PC                                                         binutils gcc glibc 3              libc               c      glibc    uClibc dietlibc   newlib  Golang          Go                                                         golang                          mac   Windows linux                       mac   64 linux             golang        golang   1 5            1 9                hello go hello go package main import  fmt  func main     fmt Printf  hello  world n      mac   64 linux        bash  GOOS linux GOARCH amd64 go build hello go                        64 linux                          GOARCH                      386 amd64 arm    GOOS                     darwin freebsd linux windows  OS  ARCH  OS version             linux  386   amd64   arm     Linux 2 6 darwin  386   amd64  OS X  Snow Leopard   Lion  freebsd  386   amd64     FreeBSD 7 windows  386   amd64     Windows 2000                            Golang             GOROOT go src                                   Windows 32         cd  GOROOT src   CGO_ENABLED 0 GOOS windows GOARCH 386   make bash      Windows 64         cd  GOROOT src   CGO_ENABLED 0 GOOS windows GOARCH amd64   make bash      Linux 32         cd  GOROOT src   CGO_ENABLED 0 GOOS linux GOARCH 386   make bash      Linux 64         cd  GOROOT src   CGO_ENABLED 0 GOOS linux GOARCH amd64   make bash                                       Windows 32         CGO_ENABLED 0 GOOS windows GOARCH 386 go build test go      Windows 64         CGO_ENABLED 0 GOOS windows GOARCH amd64 go build test go      Linux 32         CGO_ENABLED 0 GOOS linux GOARCH 386 go build test go      Linux 64         CGO_ENABLED 0 GOOS linux GOARCH amd64 go build test go        CGO_ENABLED   0     CGO       GOOS                 Linux Windows   GOARCH                 32  64                                                          CGO_ENABLED 0 GOOS linux GOARCH amd64 go build hello go   CGOENABLED 0      C     GO         0      C            golang1 5  go   go            golang1 9      CGOENABLED                             CGO_ENABLED     1            CGO                         go     C     import  C     go build       CGO            CGO_ENABLED 0   go build    CGO",
        "objectID": "post/go的交叉编译",
        "date": "2018-11-15T18:26:56.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go的静态库和动态库的编译与使用",
        "uri": "post/Go的静态库和动态库的编译与使用",
        "content": "go                  go               windows     linux                echo  GOPATH  E  share git go_practice   echo  GOROOT  C  Go   tree  F  GOPATH  src   work      PATH          0009 D8C8 E  SHARE GIT GO_PRACTICE SRC   main go     demo demo go   GOPATH  src    demo    demo      main go main go      package main import  demo  func main     demo Demo     demo   demo go      package demo import  fmt  func Demo     fmt Println  call demo           demo go  GOPATH  src        main go import             main go   go run main go call demo           demo go      demo a    demo go      main go                      demo a  go install demo       go install demo      GOPATH             demo a windows      GOPATH  src pkg windows_amd64       main go   main go       main go   go tool compile  I E  share git gopractice pkg windowsamd64 main go  I     demo        main go      E  share git gopractice pkg win dowsamd64                  main o    main o  go tool link  o main exe  L E  share git gopractice pkg windowsamd64 main o  L        demo a     E  share git gopractice pkg win dowsamd64                   main exe    main exe  main exe call demo           demo           main go       main exe   go tool compile  I E  share git gopractice pkg windowsamd64 main go  go tool link  o main exe  L E  share git gopractice pkg windowsamd64 main o  main exe call demo                demo a      main go      go tool compile  I E  share git gopractice pkg windowsamd64 main go main go 3  can t find import   demo  go            Go 1 5                     linux amd64         gccgo                go                        echo  GOPATH  media sfshare git gopractice   echo  GOROOT  usr lib golang    tree  GOPATH src  media sfshare git gopractice src     demo       demo go     main go 1 directory  2 files    GOPATH src    demo    demo      main go main go      package main import  demo  func main     demo Demo     demo   demo go      package demo import  fmt  func Demo     fmt Println  call demo           demo go   GOPATH src        main go import             main go    go run main go call demo          Go                    hello  world         fmt                                    Go                  Go                             root            demo go      libdemo so  main go                  go              go install  buildmode shared  linkshared std       go install  buildmode shared  linkshared std    buildmode             linkshared                 GOROOT             libstd so       GOROOT pkg linuxamd64dynlink      cd  GOROOT pkg linuxamd64dynlink   ls libstd so libstd so  demo go         go install  buildmode shared  linkshared demo   cd  GOPATH pkg   ls linuxamd64dynlink  demo a demo shlibname libdemo so          GOPATH pkg          libdemo so          main go   go build  linkshared main go   ll  h total 25K drwxrwx     1 root vboxsf 4 0K Apr 28 17 30    drwxrwx     1 root vboxsf 4 0K Apr 28 17 22     drwxrwx     1 root vboxsf 0 Apr 28 08 37 demo   rwxrwx     1 root vboxsf 16K Apr 28 17 30 main   rwxrwx     1 root vboxsf 58 Apr 28 08 37 main go      main call demo                              main   16K                 main   1 5M         go build main go   ll  h total 1 5M drwxrwx     1 root vboxsf 4 0K Apr 28 17 32    drwxrwx     1 root vboxsf 4 0K Apr 28 17 22     drwxrwx     1 root vboxsf 0 Apr 28 08 37 demo   rwxrwx     1 root vboxsf 1 5M Apr 28 17 32 main   rwxrwx     1 root vboxsf 58 Apr 28 08 37 main go      main call demo                      libdemo so     libstd so   main                      libdemo so    rm    pkg linuxamd64dynlink libdemo so     main   main  error loading shared libraries  libdemo so  cannot open shared object file  No file directory     go                       go     go                              demo go              main go           go install  buildmode shared  linkshared demo   rm demo demo go   go build  linkshared main go main go 3 8  no buildable Go source files  media sfshare git gopractice src demo",
        "objectID": "post/Go的静态库和动态库的编译与使用",
        "date": "2018-11-15T18:28:11.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go的timer和ticker用法",
        "uri": "post/Go的timer和ticker用法",
        "content": "timer time                time Timer                   time After      New Timer       Timer     Timer        Timer Stop                         Newtimer time Newtimer                  3  30      t    time Newtimer 3time Hour   30time Minute     t    time NewTimer                        Reset                  bool     Stop                  bool         false                           true           C                      C     chan time Time                           C        time Time       package main import    time   fmt    func main     t    time NewTimer 3   time Second  fmt Printf  Time    v n   time Now    fmt Printf  Expiration time    v n",
        "objectID": "post/Go的timer和ticker用法",
        "date": "2019-10-21T15:53:41.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go调试器:GODEBUG",
        "uri": "post/Go调试器:GODEBUG",
        "content": "Go               GODEBUG    GODEBUG        Go                                                                          GODEBUG                    GODEBUG                             name val                                schedtrace    schedtrace X            X                   err      scheddetail    schedtrace X   scheddetail 1          X                                OS      Goroutine           package main import    sync   time    func main     var wg sync WaitGroup wg Add 10     0  loop       slice                    0  6  2 MB  5 MB goal  2 P gc 2  0 003s 0   0 002 0 43 0 002 ms clock  0 004 0 013 0 0 32 0 005 ms cpu  5  5  1 MB  6 MB goal  2 P gc 3  0 003s 1   0 002 0 47 0 003 ms clock  0 004 0 027 0 0 44 0 006 ms cpu  4  4  2 MB  5 MB goal  2 P gc 4  0 004s 1   0 002 0 50 0 003 ms clock  0 004 0 022 0 0 48 0 007 ms cpu  5  5  2 MB  6 MB goal  2 P gc 5  0 004s 1   0 001 1 2 0 003 ms clock  0 003 0 070 0 1 1 0 006 ms cpu  6  6  3 MB  7 MB goal  2 P gc 6  0 006s 1   0 002 1 8 0 004 ms clock  0 004 0 027 0 001 1 8 0 008 ms cpu  8  8  4 MB  9 MB goal  2 P gc 7  0 008s 1   0 002 2 4 0 005 ms clock  0 005 0 042 0 2 4 0 010 ms cpu  10  10  5 MB  11 MB goal  2 P gc 8  0 010s 1   0 002 1 0 0 004 ms clock  0 005 0 025 0 0 99 0 008 ms cpu  12  12  6 MB  13 MB goal  2 P gc 9  0 012s 1   0 011 1 8 0 005 ms clock  0 022 0 025 0 1 7 0 010 ms cpu  15  15  8 MB  16 MB goal  2 P gc 10  0 014s 1   0 002 3 8 0 004 ms clock  0 005 0 014 0 3 8 0 009 ms cpu  19  19  10 MB  20 MB goal  2 P gc 11  0 018s 1   0 003 2 0 0 004 ms clock  0 006 0 026 0 2 0 0 008 ms cpu  24  24  13 MB  25 MB goal  2 P gc 12  0 020s 1   0 002 3 0 0 005 ms clock  0 005 0 028 0 3 0 0 011 ms cpu  30  30  16 MB  31 MB goal  2 P gc 13  0 024s 0   0 003 9 0 0 004 ms clock  0 006 0 028 0 9 0 0 009 ms cpu  38  38  21 MB  39 MB goal  2 P gc 14  0 033s 0   0 002 4 6 0 005 ms clock  0 005 0 036 0 4 6 0 011 ms cpu  47  47  26 MB  48 MB goal  2 P gc 15  0 039s 0   0 003 13 0 004 ms clock  0 007 0 024 0 13 0 009 ms cpu  59  59  33 MB  60 MB goal  2 P gc 16  0 053s 0   0 002 17 0 005 ms clock  0 005 0 030 0 027 17 0 011 ms cpu  74  74  41 MB  75 MB goal  2 P gc 17  0 072s 0   0 049 29 0 004 ms clock  0 098 0 015 0 091 29 0 009 ms cpu  93  93  51 MB  94 MB goal  2 P gc 18  0 103s 0   0 003 29 0 005 ms clock  0 007 0 031 0 029 29 0 010 ms cpu  116  116  64 MB  117 MB goal  2 P gc 19  0 134s 0   0 003 41 0 004 ms clock  0 006 0 016 0 030 41 0 009 ms cpu  145  145  80 MB  146 MB goal  2 P gc 20  0 178s 0   0 003 44 0 005 ms clock  0 006 0 016 0 045 44 0 010 ms cpu  181  181  101 MB  182 MB goal  2 P gc 21  0 223s 0   0 003 55 0 004 ms clock  0 006 0 015 0 044 55 0 008 ms cpu  227  227  126 MB  228 MB goal  2 P gc 22  0 281s 0   0 004 67 0 004 ms clock  0 009 0 048 0 023 67 0 008 ms cpu  284  284  157 MB  285 MB goal  2 P gc 23  0 352s 0   0 004 90 0 005 ms clock  0 008 0 035 0 042 90 0 011 ms cpu  355  355  197 MB  356 MB goal  2 P 2019 04 06 14 28 27 444  0 MB  445 MB goal  2 P  forced  2019 04 06 14 28 27 done  gc 25  0 554s 0   0 077 0 071 0 002 ms clock  0 15 0 0 078 0 036 0 004 ms cpu  0  0  0 MB  8 MB goal  2 P  forced     gc     s           ms clock            ms cpu          MB    MB goal    P gc   GC                 s                            GC                   GC           CPU      CPU                 MB       mark    heaplive     markTermination    heaplive                        444  444  0 MB            444M                                                MB goal       GC           P          P             forced         GC  runtime GC           gctrace       0                                             scavenging                              scvg     MB released printed non zero scvg   inuse    idle    sys    released    consumed     MB          scvg  scavenge        scavenge    inuse    MB             idle    MB                 sys    MB                 released    MB          consumed    MB             gc 7  0 140s 1   0 031 2 0 0 042 ms clock  0 12 0 43 1 8 0 049 0 17 ms cpu  4  4  1 MB  5 MB goal  4 P gc 7   7   GC   0 140s           0 140s  1              1       GC    0 031 2 0 0 042 ms clock  0 031      P   mark     STW     2 0      P   mark concurrent              0 042      P   markTermination     STW     0 12 0 43 1 8 0 049 0 17 ms cpu  0 12         mark    STW        0 43 1 8 0 049 0 43    mutator assist       1 8    dedicated   fractional       0 049    idle        0 17ms 0 17         markTermination    STW     4  4  1 MB  4      mark      heap_live     4      markTermination      heap_live     1             5 MB goal         GC        5 MB  4 P    GC         P      runtime         GODEBUG gctrace 1                     runtime                    grpc sidecar                             io                                                                           gctrace                            commit                               golang gc gctrace          go 1 12 stop world   mark         mark setup          mark termination     gc    gcMarkTermination   stop world           gctrace                      stop world        pts                          ",
        "objectID": "post/Go调试器:GODEBUG",
        "date": "2020-02-11T10:22:37.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go调优"
        ]
    },
    {
        "title": "Go调用Python",
        "uri": "post/Go调用Python",
        "content": "Go Python      Python    Python                     libpython so dylib    Python h   linux    python devel      cgo   python                mac   homebrew       Ubuntu      sudo apt get install python2 7 dev Centos      sudo yum install python devel Golang Golang              go         Golang                                Python                                       Go Python                go python go github com sbinet go python            Python       go run test go    file test go package main import    github com sbinet go python   os    func init     err    python Initialize   err    nil   panic err Error        func main     rc    python Py_Main os Args  os Exit rc                          Py_Main       Python            python            go run main go   version     Python            golang    Python   sys path   package main import    fmt   github com sbinet go python    func init     err    python Initialize   err    nil   panic err Error        func main     m    python PyImport_ImportModule  sys   m    nil   fmt Println  import error   return   path    m GetAttrString  path   path    nil   fmt Println  get path error   return   size    python PyListGETSIZE path     0    size  i     item    python PyListGETITEM path  i  s    python PyString_AsString item  fmt Println s        GetAttrString                  python         Python      Object Call          Tuple         PyStringASSTRING Python      C Go          PyImport_ImportModule  sys      path      path                               sys path                                    sys path         package main import    fmt   github com sbinet go python    func init     err    python Initialize   err    nil   panic err Error        func main     m    python PyImport_ImportModule  sys   m    nil   fmt Println  import error   return   path    m GetAttrString  path   path    nil   fmt Println  get path error   return                     currentDir    python PyString_FromString     python PyList_Insert path  0  currentDir  size    python PyListGETSIZE path     0    size  i     item    python PyListGETITEM path  i  s    python PyString_AsString item  fmt Println s         sys path                    sys path                                     python               fib py def fib n   n",
        "objectID": "post/Go调用Python",
        "date": "2019-11-11T13:47:29.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go和HTTPS",
        "uri": "post/Go和HTTPS",
        "content": "HTTPS                         HTTP                       HTTP      Go    HTTP Server  Easy              gohttps 1 http server go package main import    fmt   net http    func handler w http ResponseWriter  r  http Request    fmt Fprintf w   Hi  example http service golang      func main     http HandleFunc      handler  http ListenAndServe   8080   nil            go run server go              http   localhost 8080         Hi  example http service golang              HTTP                            sniffer                                 care                HTTP        HTTPS  HTTPS                                SSL Secure Sockets Layer  TLS Transport Layer Security             HTTP                       SSL TLS             HTTPS Web Server Golang    net http   https server                    HTTP Server    HTTPS Web Server     gohttps 2 https server go package main import    fmt   net http    func handler w http ResponseWriter  r  http Request    fmt Fprintf w   Hi  example https service golang      func main     http HandleFunc      handler  http ListenAndServeTLS   8081    server crt    server key   nil       http ListenAndServeTLS    http ListenAndServe     HTTP Server   HTTPS Web Server    ListenAndServeTLS        certFile keyFile                            HTTPS                  Run               openssl  server crt server key            openssl genrsa  out server key 2048 Generating RSA private key  2048 bit long modulus                    e 65537  0 10001    openssl req  new  x509  key server key  out server crt  days 365 asked enter information will incorporated certificate request  enter called Distinguished Name DN  quite few fields leave blank fields will default value  enter      field will left blank     Country Name  2 letter code   AU   State Province Name  full name   Some State   Locality Name  eg  city      Organization Name  eg  company   Internet Widgits Pty Ltd   Organizational Unit Name  eg  section      Common Name  e g  server FQDN name     localhost Email Address            server crt server key          go run server go         https   localhost 8081 chrome                       Hi  example https service golang                   curl      HTTPS server  curl  k https   localhost 8081 Hi  example http service golang         k curl         curl https   localhost 8081 curl   60  SSL certificate problem  Invalid certificate chain details here  http   curl haxx se docs sslcerts html curl performs SSL certificate verification default  using  bundle  Certificate Authority  CA  public keys  CA certs   default bundle file isn t adequate  specify alternate file using  cacert option  HTTPS server uses certificate signed CA represented bundle  certificate verification probably failed due problem certificate  it expired  name not match domain name URL   you d turn off curl s verification certificate  use  k  or  insecure  option                  HTTPS                HTTPS                                                                                                                                                                                              HTTPS          HTTPS           ssl shakingertification Authority                                    CA  Verisign GoDaddy        CNNIC                 CA                  CA                                                                                                                         go http ListenAndServeTLS                                                                  openssl                          openssl genrsa  out server key 2048            server key      2048   bit         openssl                              openssl rsa  in server key  out server key public                         openssl req  new  x509  key server key  out server crt  days 365 server key server crt   ListenAndServeTLS               Go        HTTPS server           gohttps 4 https client1 go package main import    fmt   io ioutil   net http    func main     resp  err    http Get  https   localhost 8081   err    nil   fmt Println  error    err  return   defer resp Body Close   body  err    ioutil ReadAll resp Body  fmt Println string body         client            go run client1 go error  https   localhost 8081  x509  certificate signed unknown authority                  2015 04 30 16 03 31 http  TLS handshake error 127 0 0 1 62004  remote error  bad certificate            go   Client                                        CA              client1 go     client             gohttps 4 https client2 go package main import    crypto tls   fmt   io ioutil   net http ",
        "objectID": "post/Go和HTTPS",
        "date": "2019-08-19T13:36:12.000Z",
        "tags": [
            "Go",
            "HTTPS"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go连接MySql数据库too many connections错误解决",
        "uri": "post/Go连接MySql数据库too-many-connections错误解决",
        "content": "Mysql                    too connection     google             MySql      my ini          MySql       100                           max_connections 1000            MySql                             10000   MySql                                MySql          10000                                        too connections                                               Go sql       func   DB  SetMaxOpenConns                                                                                   sql Row        Close                                                      SetMaxOpenConns                                                                 MySql                   DB Query         defer row Close                                                                                  Go                               _  err    m DB Query  sql      update del   sql                                                              sql Row                                                     Ping Exec                                   Exce     go run    ok              Prepare     stmt                                                            Go sql   Query QueryRow  qgymje        QueryRow    Scan                                        close         stmt               Go sql  Ping Exec                                                 close                        close                           https   my oschina net waknow blog 205654",
        "objectID": "post/Go连接MySql数据库too-many-connections错误解决",
        "date": "2018-12-20T14:07:16.000Z",
        "tags": [
            "Go",
            "Mysql"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go强大的调试日志打印工具:go:Spew",
        "uri": "post/Go强大的调试日志打印工具:go-spew",
        "content": "Golang Go                                                                                                                                                       fmt Println                                  log   func main     i  0 s       fmt Println i s  log Println i s                                                                                                                                                       struct                           struct                                                                                                go spew                             go spew go spew    Golang                                              go  u github com davecgh go spew spew                  go spew go                                   func main     i  0 s       spew Dump i s            int  0  string   len 6                                                        func main     i  0 s       m  map int string 1  1  2  2   e  errors New          p  person Name       spew Dump i s m e p    type person struct   Name string            map   error           struct                  int  0  string   len 6        map int string   len 2     int  1   string   len 1   1    int  2   string   len 1   2      errors errorString  0xc000010d50          main person    Name   string   len 6         map                map         K V           errors New        error         spew                                      person                                                                   Dump Fdump Sdump     spew    dump                                         dump                           Dump          os Stdout                Fdump              io Writer    os Stdout        File       io Writer       func Dump a    interface      fdump  Config  os Stdout  a       func Fdump w io Writer     interface      fdump  Config  w  a                     Dump Fdump os Stdout        Sdump                                    API        func Sdump a    interface    string   var buf bytes Buffer fdump  Config   buf  a     return buf String               bytes Buffer                      bytes Buffer   io Writer                        strings Builder                    Go               Printf  Fprintf Sprintf       Dump                      spew                    fmt           func main     s       e  errors New          spew Printf   v n  s  spew Printf    v n  s  spew Printf    v n  s  spew Printf     v n  s  spew Dump s  spew Printf   v n  e  spew Printf    v n  e  spew Printf    v n  e  spew Printf     v n  e  spew Dump e                 Printf     Dump                         s   error                         string     string     string   len 6              0xc00007cd30         errors errorString         errors errorString  0xc00007cd30         errors errorString  0xc00007cd30              s         v  v  v                error                                        v                 v                   v                 v                   Dump          Fprintf Sprintf      Printf    Fprintf            io Writer  Sprintf                                            spew                         spew                   spew                                t  func main     spew Config Indent     t  spew Dump spew Config                          t     spew ConfigState    Indent   string   len 1    t   MaxDepth   int  0  DisableMethods   bool  false  DisablePointerMethods   bool  false  DisablePointerAddresses   bool  false  DisableCapacities   bool  false  ContinueOnMethod   bool  false  SortKeys   bool  false  SpewKeys   bool  false               MaxDepth                                                                     MaxDepth          0                          spew Config       spew ConfigState           type ConfigState struct   Indent string MaxDepth int DisableMethods bool DisablePointerMethods bool DisablePointerAddresses bool DisableCapacities bool ContinueOnMethod bool SortKeys bool SpewKeys bool                                               https   www flysnow org 2019 02 03 golang classic libs go spew html",
        "objectID": "post/Go强大的调试日志打印工具:go-spew",
        "date": "2019-11-22T11:15:12.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go如何操作etcd",
        "uri": "post/Go如何操作etcd",
        "content": "ETCD ETCD                     KV     ETCD CoreOS                 Apache                     kv           kv                                  key               key     etcd                       if then else              key TTL           var   config clientv3 Config client  clientv3 Client err error   config   clientv3 Config  Endpoints    string  127 0 0 1 2379            DialTimeout  5   time Second    client  err   clientv3 New config   err    nil   log Printf  clientv3 New error    err  return   api   kv   type KV interface   Put ctx context Context  key  val string  opts    OpOption    PutResponse  error  Get ctx context Context  key string  opts    OpOption    GetResponse  error  Delete ctx context Context  key string  opts    OpOption    DeleteResponse  error  Compact ctx context Context  rev int64  opts    CompactOption    CompactResponse  error  Do ctx context Context  op Op   OpResponse  error  Txn ctx context Context  Txn        type Lease interface   Grant ctx context Context  ttl int64    LeaseGrantResponse  error  Revoke ctx context Context  id LeaseID    LeaseRevokeResponse  error  TimeToLive ctx context Context  id LeaseID  opts    LeaseOption    LeaseTimeToLiveResponse  error  KeepAlive ctx context Context  id LeaseID     2018 05 10 22 00 05   clusterid 14841639068965178418 memberid 10276657743932975437 revision 114 raftterm 2 key  key1  createrevision 113 mod_revision 113 version 1 value  value1                key   value                     Version       key        1     key   0   Create_Revision          key      Mod_Revision          key                        Lease        package main import    log   time   golang org x net context   github com coreos etcd clientv3    var   dialTimeout   5   time Second requestTimeout   2   time Second endpoints     string  localhost 2379     func main     cli  err    clientv3 New clientv3 Config  Endpoints  endpoints  DialTimeout  dialTimeout     err    nil   log Fatal err    defer cli Close   key1  value1     key1   value1 _   value1              resp  err    cli Get context TODO    key1   err    nil   log Fatal err    else   log Println resp                 resp  err    cli Get context TODO    key1 key1   err    nil   log Fatal err    else   log Println resp                2018 05 10 22 05 25   clusterid 14841639068965178418 memberid 10276657743932975437 revision 114 raftterm 2  key  key1  createrevision 113 mod_revision 114 version 2 value  value2    false 1  2018 05 10 22 05 25   clusterid 14841639068965178418 memberid 10276657743932975437 revision 114 raft_term 2    false 0             kvs     key     more       limit              count    range           package main import    fmt   log   time   golang org x net context   github com coreos etcd clientv3    var   dialTimeout   5   time Second requestTimeout   2   time Second endpoints     string  localhost 2379     func main     cli  err    clientv3 New clientv3 Config  Endpoints  endpoints  DialTimeout  dialTimeout     err    nil   log Fatal err    defer cli Close   key1  value1     key1   value1 _   value1            key resp  err    cli Delete context Background    key1   err    nil   fmt Println err    else   fmt Println resp                key resp  err    cli Delete context Background     key10    err    nil   fmt Println err    else   fmt Println resp                  clusterid 14841639068965178418 memberid 10276657743932975437 revision 118 raft_term 2 1       clusterid 14841639068965178418 memberid 10276657743932975437 revision 118 raft_term 2 0                deleted       prev_kv     key Transaction                                   compare and swap                       revision                kv                                                            message Compare   enum CompareResult   EQUAL   0  GREATER   1  LESS   2  NOT_EQUAL   3    enum CompareTarget   VERSION   0  CREATE   1  MOD   2  VALUE  3    CompareResult result   1     target key value field inspect comparison  CompareTarget target   2     key subject key comparison operation  bytes key   3  oneof target_union   int64 version   4  int64 create_revision   5  int64 mod_revision   6  bytes value   7      Result                      Target         kv       key version    revision   revision  value  Key          key  Target_Union              key      key   revision      revision key value                                  message RequestOp      request union request types accepted transaction  oneof request   RangeRequest request_range   1  PutRequest request_put   2  DeleteRangeRequest requestdeleterange   3      Request_Range     RangeRequest  Request_Put     PutRequest keys   key           RequestDeleteRange     DeleteRangeRequest     key                         message TxnRequest   repeated Compare compare   1  repeated RequestOp success   2  repeated RequestOp failure   3    Compare             Success                                          Failure                                                    message TxnResponse   ResponseHeader header   1  bool succeeded   2  repeated ResponseOp responses   3    Succeeded           success  tr",
        "objectID": "post/Go如何操作etcd",
        "date": "2019-09-02T20:17:28.000Z",
        "categories": [
            "etcd"
        ]
    },
    {
        "title": "Go如何嵌入静态资源",
        "uri": "post/Go如何嵌入静态资源",
        "content": "Go             Go            Go                     Web                                                               Go               String literals          fileData      byte   x1f x8b       x0f x00 x00                                   Lex Library                         20MB      21MB             Go                                                                                                                                               Go                          jteeuwen   Go BinData                                  go           jteeuwen                GitHub                                     fork    GitHub              fork        fork   shuLhan                         jteewen                               vfsgen   https   github com shurcooL vfsgen go rice   https   github com GeertJohan go rice statik   https   github com rakyll statik esc   https   github com mjibson esc go embed   https   github com pyros2097 go embed go resources   https   github com omeid go resources packr   https   github com gobuffalo packr statics   https   github com go playground statics templify   https   github com wlbr templify gnoso go bindata   https   github com gnoso go bindata shuLhan go bindata   https   github com shuLhan go bindata fileb0x   https   github com UnnoTed fileb0x gobundle   https   github com alecthomas gobundle parcello   https   github com phogolabs parcello                                                  Web                                                                                                                                                                                                   gzip                                      gzip                    gzip                                                                                       Web                                                CSS   HTML             Go                                                                                                                     Lex Library                              shuLhan fork   go bindata                 go bindata          fork                                    CI                                                                                                                                                                       Docker                                                   Dockerfile            RUN go  u github com shuLhan go bindata       go bindata                                                            go                                                git                                                           go bindata          git            git                                     go bindata                                                        vendor               go generate                                                                                                                              http FileSystem       http FileSystem                  GitHub    200                                                                                                              vfsgen    vfsgen    http FileSystem      go generate      Go                http FileSystem                            gzip                                     gzip          go fmt Go         vfsgen   Go          Generate         filesystem   http FileSystem      Go               filesystem             http Dir  http FileSystem var fs http FileSystem   http Dir   path to assets                 err    vfsgen Generate fs  vfsgen Options    err    nil   log Fatalln err    assets_vfsdata go                 Code generated vfsgen  NOT EDIT  package main import        assets statically implements virtual filesystem provided vfsgen Generate  var assets http FileSystem                      assets      http FileSystem     file  err    assets Open   some file txt   err    nil   return err   defer file Close   http Handle   assets    http FileServer assets   vfsgen build tags go generate                      go generate    vfsgen     go generate       vfsgen Generate       assetsgenerate go               go generate go run assetgenerate go           filesystem                         build tags                                  http Dir                         filesystem         example com project data      build dev package data import  net http     Assets contains project assets  var Assets http FileSystem   http Dir  assets       dev           data Assets          http Dir  generate    assetsgenerate go       go generate go run  tags dev assetsgenerate go          build ignore package main import    log   example com project data   github com shurcooL vfsgen    func main     err    vfsgen Generate data Assets  vfsgen Options  PackageName   data   BuildTags    dev   VariableName   Assets      err    nil   log Fatalln err            dev          filesystem            dev  build tag        build tag              vfsgendev    vfsgendev               assets_generate go                  PATH     go  u github com shurcooL vfsgen cmd vfsgendev            go generate go run  tags   dev asset_generate go         ",
        "objectID": "post/Go如何嵌入静态资源",
        "date": "2019-10-11T16:54:16.000Z",
        "tags": [
            "vfsgen",
            "packr"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go如何生成swagger文档",
        "uri": "post/Go如何生成swagger文档",
        "content": "swagger Swagger           API              API                                      Swagger   Swagger  API                    SDK  API        swagger      swagger   2 0  info  version  1 0 0 title  Simple API description  simple API learn write OpenAPI Specification schemes  https host  simple api basePath   openapi101 paths     swag go swagger                          go     Swagger         Swag go swagger                                 swag     swag                                              go swagger     go swagger                   API                  go swagger           Swag     API                                           go swagger                                                                        go swagger                       Swag           go swagger            go swagger      Swag                             go swagger             2D    Swag             go swagger                            brew brew tap go swagger go swagger brew install go swagger go go  u github com go swagger go swagger cmd swagger                go swagger               openAPI                 openAPI                        swagger                            swagger          json   yaml         swagger generate spec  o   swagger json yaml     swagger       swagger validate   swagger json yaml                 yaml json        swagger spec  swagger json yaml  valid against swagger specification 2 0                                 swagger                                                          Swagger meta Swagger route Swagger params Swagger operation Swagger response Swagger model Swagger allOf Swagger strfmt Swagger discriminated Swagger ignore                    Swagger meta                                                           API      HTTP   HTTPS        JSON                                     swagger meta     SwaggerUI               JWT                        Package classification Petstore API        purpose application provide application    using plain go code define API       demonstrate possible comment annotations    available turn go code fully compliant swagger 2 0 spec       Terms Service        no TOS moment  use own risk no responsibility       Schemes  http  https    Host  localhost    BasePath   v2    Version  0 0 1    License  MIT http   opensource org licenses MIT    Contact  John Doe http   john doe com       Consumes       application json      application xml       Produces       application json      application xml       Security       api_key        SecurityDefinitions     api_key     type  apiKey    name  KEY    in  header    oauth2     type  oauth2    authorizationUrl   oauth2 auth    tokenUrl   oauth2 token    in  header    scopes     bar  foo    flow  accessCode       Extensions     x meta value  value    x meta array       value1      value2    x meta array obj       name  obj    value  field       swagger meta package classification                                                                                                                        Terms Service     API                       Consumes   API                mime                Produces   API                mime                Schemes   http https     Version           Host             BasePath   API          License            Contact              Security   api key     SecurityDefinitions             JWT     Extensions                 MIME                        yaml json                 swagger   2 0  consumes  application json application xml produces  application json application xml schemes  http https info  description   the purpose application provide application nthat using plain go code define API n nThis demonstrate possible comment annotations nthat available turn go code fully compliant swagger 2 0 spec  title   Petstore API   termsOfService   there no TOS moment  use own risk no responsibility  contact   name   John Doe   url   http   john doe com   email  john doe example com  license   name  MIT  url   http   opensource org licenses MIT   version  0 0 1 host  localhost basePath   v2 x meta value  value x meta array  value1 value2 x meta array obj  name  obj value  field            Swagger route             swagger operation  swagger route                        swagger route      API                           API                repos  owner     user  id      users search name ribice                      swagger operation          user    version     APIs      swagger route         ServeAPI serves API record store func TestSwagger c  gin Context       swagger route  pets PetsUsers listPets       Lists pets filtered parameters        will show available pets default     pets stock       Responses     default  genericError    200  someResponse    400  validationError        swagger route                                                                                                                                                                        swagger route            get        pets      url       PetsUsers                   listPets                Lists pets              swager route                        ",
        "objectID": "post/Go如何生成swagger文档",
        "date": "2019-11-27T15:45:15.000Z",
        "tags": [
            "go-swagger"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go生成和识别二维码",
        "uri": "post/Go生成和识别二维码与条形码",
        "content": "Go                            go qrcode             github           https   github com skip2 go qrcode                          http   www flysnow org     256 256              import  github com skip2 go qrcode  func main     qrcode WriteFile  http   www flysnow org   qrcode Medium 256    blog_qrcode png                             256 256               http   www flysnow org   func WriteFile content string  level RecoveryLevel  size int  filename string  error WriteFile                         content                      level              Low Medium High Highest  size       width height       filename            RecoveryLevel      int            type RecoveryLevel int const      Level L  7  error recovery  Low RecoveryLevel   iota    Level M  15  error recovery  Good default choice  Medium    Level Q  25  error recovery  High    Level H  30  error recovery  Highest   RecoveryLevel                                      PNG         PNG                                     Encode       PNG                        func Encode content string  level RecoveryLevel  size int     byte  error     WriteFile                 byte                                                                                      qrcode New        QRCode      QRCode                                       func main     qr err  qrcode New  http   www flysnow org   qrcode Medium  err    nil   log Fatal err    else   qr BackgroundColor   color RGBA 50 205 50 255  qr ForegroundColor   color White qr WriteFile 256    blog_qrcode png          QRCode BackgroundColor ForegroundColor       WriteFile             func New content string  level RecoveryLevel    QRCode  error     QRCode represents valid encoded QRCode  type QRCode struct      Original content encoded  Content string    QR Code type  Level RecoveryLevel VersionNumber int    User settable drawing options  ForegroundColor color Color BackgroundColor color Color     QRCode                                              go github com boombuler barcode          package main import    image png   os   github com boombuler barcode   github com boombuler barcode qr    func main     qrCode  _    qr Encode  http   blog csdn net wangshubo1989   qr M  qr Auto  qrCode  _   barcode Scale qrCode  256  256  file  _    os Create  qr2 png   defer file Close   png Encode file  qrCode              go github com tuotoo qrcode          package main import    fmt   os   github com tuotoo qrcode    func main     fi  err    os Open  qrcode png   err    nil   fmt Println err Error    return   defer fi Close   qrmatrix  err    qrcode Decode fi  err    nil   fmt Println err Error    return   fmt Println qrmatrix Content        https   www jianshu com p fc7bd26abcda https   www flysnow org 2017 09 29 go qrcode html https   www flysnow org 2017 09 29 go qrcode html",
        "objectID": "post/Go生成和识别二维码与条形码",
        "date": "2020-03-20T17:06:44.000Z",
        "tags": [
            "go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go实现HTTP长连接和短连接",
        "uri": "post/Go实现HTTP长连接和短连接",
        "content": "TCP         Server Client                                                                              TCP                                                            2MSL         1      TIME_WAIT             3 155KB                           6                                                                                                                                                      Go                   func  c  TCPConn  SetKeepAlive keepalive bool  error socket       SetDeadline SetReadDeadline SetWriteDeadline         func  c  IPConn  SetDeadline t time Time  error func  c  IPConn  SetReadDeadline t time Time  error func   IPConn  SetWriteDeadline func  c  IPConn  SetWriteDeadline t time Time  error HTTP       TCP     http                                       net http server go L1892   rw  e    l Accept   go c serve                                      serve        for       net http server go L1320 func  c  conn  serve     defer func      c hijacked     c close           w  err    c readRequest   err    nil     serverHandler c server  ServeHTTP w  w req                                                                                        defer              TCP     readRequest       HTTP        net http server go func  c conn  readRequest    w response  err error    d    c server ReadTimeout  d    0   c rwc SetReadDeadline time Now   Add d     d    c server WriteTimeout  d    0   defer func     c rwc SetWriteDeadline time Now   Add d         req  err   ReadRequest c buf Reader   err    nil   c lr N    0   return nil  errTooLarge   return nil  err     func ReadRequest b bufio Reader   req Request  err error       First line   index html HTTP 1 0 var s string s  err   tp ReadLine    err    nil   return nil  err   req Method  req RequestURI  req Proto  ok   parseRequestLine s  mimeHeader  err    tp ReadMIMEHeader            HTTP       ReadRequest                                         time Now   Add d              defer                Go  HTTP              Server       SetReadDeadline                                               func main     server      7373  netListen  err    net Listen  tcp   server  err    nil  Log  connect error     err  os Exit 1    Log  Waiting Client       for  conn  err    netListen Accept   err    nil  Log conn RemoteAddr   String     Fatal error     err  continue           10   conn SetReadDeadline time Now   Add time Duration 10  time Second   Log conn RemoteAddr   String     connect success                           10                Go  HTTP    SetKeepAlive GO      net TCPConn   SetKeepAlive     TCP keepalive   OS X   Linux             2       75      8 TCP keepalive              10    7200 8 75 Read       io EOF                                   SetKeepAlivePeriod                          OSX                    Linux                         30       SetKeepAlivePeriod OSX       10 30  30 8 75         linux   4 30  30 830           http Transport   DisableKeepAlives                    client                                                                                                                                                                                                                       30 40                 6 9           func handleConnection conn net Conn timeout int    buffer    make   byte  2048    n  err    conn Read buffer  err    nil   LogErr conn RemoteAddr   String      connection error     err  return   Data    buffer  n   messnager    make chan byte  postda   make chan byte         go HeartBeating conn messnager timeout        Client        go GravelChannel Data messnager  Log   receive data length   n  Log conn RemoteAddr   String     receive data string    string Data              GravelChannel  Client             func HeartBeating conn net Conn  readerChannel chan byte timeout int    select   case fk",
        "objectID": "post/Go实现HTTP长连接和短连接",
        "date": "2018-12-13T15:33:35.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go性能分析:pprof",
        "uri": "post/Go性能分析:pprof",
        "content": "pprof                                                                                                                                                                                                                                                                                             CPU       IO         Profiling                                        performance analysis     profiling                                          pprof   profile proto                                       profile proto     Protocol Buffer v3              callstack   symbolization                              stacktrace               go                          CPU Profiling CPU   Memory Profiling      Block Profiling      Mutex Profiling                  CPU   CPU                                    CPU                         CPU               CPU         Go runtime    10ms               goroutine                                                                                                                                                                Heap                  Stack                                  CPU                    1000       1                                                                                                 goroutine                       profile   CPU profile            goroutine                                                 goroutine                           channel             channel          channel       Lock          goroutine     sync Mutex                            CPU                                                             pprof   Go                            allocs   heap                          heap                   Report generation      Interactive terminal use         Web interface Web    profile    profile         profile                                                          profile               profile             profile                             Profiling                      go       runtime pprof   net http pprof                         runtime pprof                               pprof                    net http pprof             HTTP Server    pprof     HTTP                           runtime pprof                                                                      profiling                            runtime pprof    pprof                      CPU Profiling      pprof StartCPUProfile                  CPU profiling            w io Writer        StopCPUProfile                               main go                    f  err    os Create  cpuprofile      pprof StartCPUProfile f  defer pprof StopCPUProfile                           CPU profiling                    WriteHeapProfile       start   stop         f  err    os Create  memprofile  pprof WriteHeapProfile f  f Close         package main import    fmt   log   os   runtime pprof    func main     f  err    os Create  cpu profile prof   err    nil   log Fatal err    pprof StartCPUProfile f  fmt Println fibonacci 45   pprof StopCPUProfile     func fibonacci n int  int   n                                        weblist                                          NOTE      pprof          pprof   help    pprof     Memory Profiling          Profiling                     http          url        debug pprof profile     debug pprof heap    http   127 0 0 1 8080 debug pprof heap debug 1            heap profile  3190  77516056  54762  612664248    heap 1048576 1  29081600  1  29081600    0x89368e 0x894cd9 0x8a5a9d 0x8a9b7c 0x8af578 0x8b4441 0x8b4c6d 0x8b8504 0x8b2bc3 0x45b1c1 0x89368d github com syndtr goleveldb leveldb memdb   DB  Put 0x59d 0x894cd8 xxxxx storage internal memtable   MemTable  Set 0x88 0x8a5a9c xxxxx storage   snapshotter  AppendCommitLog 0x1cc 0x8a9b7b xxxxx storage   store  Update 0x26b 0x8af577 xxxxx config   config  Update 0xa7 0x8b4440 xxxxx naming   naming  update 0x120 0x8b4c6c xxxxx naming   naming  instanceTimeout 0x27c 0x8b8503 xxxxx naming   naming   xxxxx naming instanceTimeout  fm 0x63        runtime MemStats Alloc   2463648064 TotalAlloc   31707239480 Sys   4831318840 Lookups   2690464 Mallocs   274619648 Frees   262711312 HeapAlloc   2463648064 HeapSys   3877830656 HeapIdle   854990848 HeapInuse   3022839808 HeapReleased   0 HeapObjects   11908336 Stack   655949824   655949824 MSpan   63329432   72040448 MCache   38400   49152 BuckHashSys   1706593 GCSys   170819584 OtherSys   52922583 NextGC   3570699312 PauseNs    1052815 217503 208124 233034 1146462 456882 1098525 530706 551702 419372 768322 596273 387826 455807 563621 587849 416204 599143 572823 488681 701731 656358 2476770 12141392 5827253 3508261 1715582 1295487 908563 788435 718700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0  NumGC   31 Debu",
        "objectID": "post/Go性能分析:pprof",
        "date": "2020-01-30T21:54:05.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go调优"
        ]
    },
    {
        "title": "Go性能分析:trace",
        "uri": "post/Go性能分析:trace",
        "content": "trace           goroutines    go runtime                                        go                                                Golang   trace                          goroutine          goroutine           channel      IO                                                            go tool trace        pprof            Go                         goroutine                                                       CPU                          CPU                   goroutine         OS       goroutines                trace                                    go tool trace                                                 goroutine                                                        runtime     GC                           goroutine           go tool trace            PROCs                 goroutine                                                    GC                 goroutine                   goroutines       MARK      MARK        goroutine        runtime main goroutine         Go    GC      100                               go tool trace                                        go nuts                             Go 1 8                   GC                      go tool trace                                              CPU                                                                                        pub sub            goroutine                       map                                 map                             go tool trace              http                                                                                                                                                             goroutine                                                    goroutines                           4X CPU                               goroutines                              4                             goroutine                                                                   go tool trace        go tool trace                               CPU                            go tool pprof               CPU        go tool trace                                     view trace                                                Big O              trace      trace       runtime trace        trace Start trace Stop                   trace                  trace        debug pprof trace handler           web   trace              Go                                       trace Start trace Stop             import    os   runtime trace    func main     trace Start os Stderr  defer trace Stop   ch    make chan string  go func     ch trace out          trace   trace out      go tool trace trace out   trace       web app     127 0 0 1                host           go tool trace   http   8080  trace out             go tool trace trace out 2019 06 22 16 14 52 Parsing trace    2019 06 22 16 14 52 Splitting trace    2019 06 22 16 14 52 Opening browser  Trace viewer listening http   127 0 0 1 57321          View trace                                                                                            chrome     Goroutine analysis                  goroutines                            goroutine           mutex                goroutine        Network blocking profile        Synchronization blocking profile        Syscall blocking profile          Scheduler latency profile                               User defined tasks         User defined regions         Minimum mutator utilization    Mutator     Network Sync Syscall blocking profile       goroutines                   pprof     cpu                 Scheduler latency profile                                              Scheduler latency profile        Graph                                      trace          channel      Synchronization blocking profile  trace                  syscall                 pprof    cpu                        goroutine                                        Synchronization blocking profile           Goroutine analysis       Goroutine analysis                                Goroutine            Goroutine                                3   goroutine     runtime main runtime trace Start func1 main main func1                                              Goroutine                GC     GC                                       Goroutine                       Goroutine                                                                                                            Execution Time          3140ns     Network Wait Time            0ns     Sync Block Time            0ns     Blocking Syscall Time            0ns     Scheduler Wait Time            14ns     GC Sweeping   GC      0ns     GC Pause   GC      0ns   View trace         Goroutine                                                         1                                     shift                         WASD          2                                                                     3               Goroutine                   GC    GCWaiting      Runnable      Running             goroutines                    goroutines            4 OS                             Syscall InSyscall      Running            Threads   ",
        "objectID": "post/Go性能分析:trace",
        "date": "2020-02-10T16:53:58.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go调优"
        ]
    },
    {
        "title": "Go优化建议汇总",
        "uri": "post/Go优化建议汇总",
        "content": "1                 2                 copy       bytes Buffer   bytes Buffer            2          3                      1         object      gc             k  v    range m   k  v    k  v    copy capturing goroutine go func        use k v              k  v    range m   x    struct  k  v string   k  v     copy capturing goroutine go func        use x k x v                   x  k v2      1     4   byte                 byte                                   type X struct   buf   byte bufArray  16 byte    Buf usually does not grow beyond 16 bytes    func MakeX    X   x     X      Preinitialize buf backing array  x buf   x bufArray  0  return x   5                    const                            int8    6                            strings slices maps  chans            gc            1GB byte  slice           object                                 7   sync Pool            go1 9 go1 9 2     go tool pprof     BUG                             cd  GOROOT src cmd vendor github com google rm pprof git clone https   github com google pprof git       e82ee9addc1b6c8e1d667ed6de0194241e1e03b5   rm  GOROOT pkg darwin_amd64 cmd vendor github com google pprof cd  GOROOT src cmd pprof go build mv pprof  GOROOT pkg tool darwin_amd64 pprof             Go                  APIs                   Read    func  r  Reader  Read      byte  error  func  r  Reader  Read buf   byte   int  error      Read                  byte           byte                  Read                  GC                    strings vs   bytes Go     string            byte                 string      IO           byte          byte   string                             byte    string                           byte     bytes        strings            Split  Compare  HasPrefix  Trim        strings     bytes                byte    map   key    string    map   key                    byte                   var m map string string v  ok    m string bytes                             map                                   key    string bytes  val  ok    m key            Go                                          s    request ID s          client Addr   String   s          time Now   String   r   s var b bytes Buffer fmt Fprintf  b    s  v  v   request ID  client Addr    time Now    r   b String   r   fmt Sprintf   s  v  v   request ID  client Addr    time Now    b    make   byte  0  40  b   append b  request ID     b   append b       b   append b  client Addr   String       b   append b       b   time Now   AppendFormat b   2006 01 02 15 04 05 999999999  0700 MST   r   string b    go test  bench     examples concat          go 1 10 3 goos  darwin goarch  amd64 pkg  test benchmark BenchmarkConcatenate 8 2000000 873 ns op 272 B op 10 allocs op BenchmarkFprintf 8 1000000 1509 ns op 496 B op 13 allocs op BenchmarkSprintf 8 1000000 1316 ns op 304 B op 11 allocs op BenchmarkStrconv 8 2000000 620 ns op 165 B op 5 allocs op PASS go 1 11 goos  darwin goarch  amd64 pkg  test benchmark BenchmarkConcatenate 8 1000000 1027 ns op 271 B op 10 allocs op BenchmarkFprintf 8 1000000 1707 ns op 496 B op 12 allocs op BenchmarkSprintf 8 1000000 1412 ns op 304 B op 11 allocs op BenchmarkStrconv 8 2000000 707 ns op 165 B op 5 allocs op PASS         1 11                       Append                          1024                   1024          25          append            func main     b    make   int  1024  fmt Println  len    len b    cap    cap b   b   append b  99  fmt Println  len    len b    cap    cap b     output  len  1024 cap  1024 len  1025 cap  1280       append                                                           Before  var s   string _  v    range fn     s   append s  v    return s After  vals    fn   s    make   string  len vals   i  v    range vals   s i    v   return s Goroutines   Go                goroutines goroutine                              Go              goroutines                          goroutine       goroutine               2k  2048   1 000 000 goroutines    2GB                                                  goroutine           goroutine                                      goroutine          go      goroutine            goroutine                                             goroutine                  goroutine                                goroutine                 run Group  workgroup Group        Peter Bourgon great presentation design behing run Group GopherCon EU       Concurrency Made Easy      Concurrency Made Easy       Go                Go                  kqueue epoll windows IOCP      IO        goroutine                          IO channel     Go       IO        os File                         IO                                                      IO           IO                                                                                                                                       IO                 IO                  1       1                   N   1                                           IO                                        IO                                   IO                byte                                           GC       ",
        "objectID": "post/Go优化建议汇总",
        "date": "2020-02-01T15:48:07.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go调优"
        ]
    },
    {
        "title": "Go语言的浮点数计算",
        "uri": "post/Go语言的浮点数计算",
        "content": "case    case1  135 90 100         float32 var f1 float32   135 90 fmt Println f1   100     output 13589 999    float64 var f2 float64   135 90 fmt Println f2   100     output 13590           135 9 100                               100  int           1  package main import    fmt    func main        case  int64   float64 var c int64   987654321098765432 fmt Printf    f n   float64 c     output 987654321098765440    case  int float64 xx xx 100   var d float64   1129 6 var e int64   int64 d   100  fmt Println e    output 112959                case2  0 1 add 10 times        float32 var f3 float32   0    0  float64 var c int64   987654321098765432 fmt Printf    f n   float64 c     output 987654321098765440                 package main import    fmt   strconv    func main     var ff  e float64 e   100 00 ff    0 210615789 ff   FloatRound ff  4  fmt Println ff         0 2106 qq    ff   e fmt Println qq         21 060000000000002             func FloatRound f float64  n int  float64   format           strconv Itoa n     f  res  _    strconv ParseFloat fmt Sprintf format  f   64  return res       qq               21 06                                 package main import    fmt   strconv    func main     var ff  e float64 e   100 00 ff    0 210615789        qq    ff   e fmt Println qq         21 0615789        qq   FloatRound qq  4  fmt Println qq         21 0616             func FloatRound f float64  n int  float64   format           strconv Itoa n     f  res  _    strconv ParseFloat fmt Sprintf format  f   64  return res   float32 float64    float32   32      float64  64       float64                                     float64   32                                                                            float                      float32                    float                                 float64             GPU         float16                        GPU                long double      80       float64                            float32 float64                    package main import    fmt    func main     var float32   359 9 fmt Println a  fmt Println float64 a                    float32 float64                                        IEEE754 float 359 9  359 899993896484375     IEEE754 float64 359 9  359 8999999999999772626324556767940521240234375    IEEE754 float64 359 899993896484375  359 899993896484375                               float64 a  float64 359 899993896484375      359 899993896484375                        2                  package main import    fmt    func main     var float32   359 9 fmt Printf   b n   a  fmt Printf   e n   a  fmt Printf   f n   a  fmt Printf   g n   a  fmt Printf    15f n   a    11793203p 15 3 599000e 02 359 899994 359 9 359 899993896484375                                                                                            5                 5               5    5                    5                  5        0           5                                                               Golang                          import    fmt    func main     fmt Printf  9 8249     0 2f     n   9 8249  fmt Printf  9 82671     0 2f     n   9 82671  fmt Printf  9 8351     0 2f          n   9 8351  fmt Printf  9 82501     0 2f          n   9 82501  fmt Printf  9 8250     0 2f                  n   9 8250  fmt Printf  9 8350     0 2f                  n   9 8350         9 8249    9 82     9 82671    9 83     9 8351    9 84          9 82501    9 83          9 8250    9 82                  9 8350    9 84                             fmt                          import    fmt   strconv    func main     s    fmt Sprintf   0 6f   17 82671567890123456789987654324567898765432  f  _    strconv ParseFloat s  64  fmt Println s  f         17 826716 17 826716    Golang         14                  golang             15                                  float64          int             func Ceil func Ceil x float64  float64      x                  Ceil  0     0 Ceil  Inf     Inf Ceil NaN    NaN func Floor func Floor x float64  float64      x                  Floor  0     0 Floor  Inf     Inf Floor NaN    NaN func Trunc func Trunc x float64  float64   x                  Trunc  0     0 Trunc  Inf     Inf Trunc NaN    NaN func Round func Round x float64  float64   x             Round  0     0 Round  Inf     Inf Round NaN    NaN                              3                     package main import    fmt    func main        1690      1 69 b    1700      1 70 c      b        2873000   2 873 fmt Println c          fmt Println float64 c    1000000          float64      2       float64             n10    math Pow10 2  math Round a n10  n10                      math MaxFloat64   100     inf            0 005                   strconv ParseFloat fmt Sprintf    2f   a 0 005   64          Go   big            bigint project main go package main import    fmt   math   math big    func main        calculations bigInts  im    big NewInt math MaxInt64     im io    big NewInt 1956  ip    big NewInt 1  ip Mul im  in  Add ip  im  Div ip  io  fmt Printf  Big Int   v n   ip  iq    big NewInt 10000  ip Mod ip  iq  fmt Printf  Big Int   v ",
        "objectID": "post/Go语言的浮点数计算",
        "date": "2019-08-14T18:28:02.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go语言的可变参数详解",
        "uri": "post/Go语言的可变参数详解",
        "content": "0                                                                                                     names                                                   func toFullname names    stirng  string   return strings Join names                       toFullname  carl    sagan      output   carl sagan  toFullname  carl      output   carl  toFullname      output                                                           Go         fmt Println                                     func Prinln a    interface                            func Println params   interface                               fmt Println   interface    hello    world                     fmt Println  hello    world   fmt Println  hello   fmt Println                                                                                                       slice                    n                                       nil                             func toFullname names    string    string   return names      names s underlying array  nil                                                     Go          append                            append               func toFullname names    string    string   return append names   hey    what s up      toFullname      output   hey what s up                                                       names      string  carl    sagan   toFullname names        output   carl sagan               toFullname  carl    sagan                                                                                 names     2 string  carl    sagan   toFullname names              slice            arr         int 1  2  3  4  5  sum arr                           cannot use arr  type  5 int  type   int argument sum                                     dennis      string  dennis    ritchie   toFullname dennis                                  func toFullname names    string  string   names 0     guy  return strings Join names                       dennis           string  guy    ritchie           string  dennis    ritchie                                                                                                                        mr             names      string  carl    sagan                    append         string  mr                 toFullname           toFullname append   string  mr     names            output   mr  carl sagan              names   append   string  mr      carl    sagan   toFullname names              toFullname   string  mr     carl    sagan                         toFullname  mr     carl    sagan                                             func f nums    int    int   nums i    10 return nums       f                                                                           nums      int 23  45  67  nums2    f nums        nums   nums2                        nums     int 10  45  67  nums2     int 10  45  67                                                                   toFullname   string  rob    pike             toFullname  rob    pike                                     func ToIP parts    byte  string   parts   append parts  make   byte  4 len parts       return fmt Sprintf   d  d  d  d   parts 0   parts 1   parts 2   parts 3     ToIP          parts      parts               IP               0  ToIP 255     255 0 0 0 ToIP 10  1     10 1 0 0 ToIP 127  0  0  1    127 0 0 1                                               type identity                               string    string                    func PrintVariadic msgs    string     signature  func    string                  func PrintSlice msgs   string     signature  func   string                                    variadic    PrintVariadic    variadic func    string  slicey    PrintSlice    slice func   string                    slicey   variadic    error  type mismatch                                              func toFullname id int  names    string  string   return fmt Sprintf    02d   s   id  strings Join names          toFullname 1   carl    sagan      output    01  carl sagan                      func toFullname id int  names    string  age int  string       error                         slice      int 2  3  4  5  sum 1  slice                               arguments call sum  number    int     want     int                                  slice                                           int     int     int                                                                 Go         Printf                                         interface type                                     func Printf format string     interface     n int  err error              a             return Fprintf os Stdout  format  a       fmt Printf   d  s  f   1   string   3 14     output   1 string 3 14      Printf                   Printf                   format                func Printf format string      interface         format          Printf                                                              format                                Printf                                                                        nil         Printf                                                                 ",
        "objectID": "post/Go语言的可变参数详解",
        "date": "2019-01-15T20:46:21.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go语言检测一个文件的类型",
        "uri": "post/Go语言检测一个文件的类型",
        "content": "Web                                      png  gif jpg          pdf                                                                                            jpg               jpg                                          jpg                    Content Type     MIME            form            request           MIME                MIME                                                                                                        PNG             89504E47    Go     net http       http DetectContentType                               http DetectContentType             512                              MIME                 application octet stream            512           32                 http DetectContentType         MINE    package main import    os   fmt   net http    func main        Open File f  err    os Open  test pdf   err    nil   panic err    defer f Close      content contentType  err    GetFileContentType f  err    nil   panic err    fmt Println  Content Type      contentType    func GetFileContentType out  os File   string  error            512         buffer    make   byte  512  _  err    out Read buffer  err    nil   return     err   contentType    http DetectContentType buffer  return contentType  nil",
        "objectID": "post/Go语言检测一个文件的类型",
        "date": "2019-12-12T10:12:53.000Z",
        "tags": [
            "Content-Type"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go语言快速解析JSON:gjson",
        "uri": "post/Go语言快速解析JSON:gjson",
        "content": "GJSON   Go                  json                            json                json                    name last   age               package main import  github com tidwall gjson  const json     name    first   Janet   last   Prichard    age  47  func main     value    gjson Get json   name last   println value String      Prichard     GetMany              GetBytes    JSON     GJSON          GJSON Path                                                           JSON    name     first    Tom    last    Anderson     age  37   children     Sara   Alex   Jack     fav movie    Deer Hunter    friends       first    Dale    last    Murphy    age   44   nets     ig    fb    tw       first    Roger    last    Craig    age   68   nets     fb    tw       first    Jane    last    Murphy    age   47   nets     ig    tw          GJSON                                         name last  Anderson  name first  Tom  age 37 children   Sara   Alex   Jack   children 0  Sara  children 1  Alex  friends 1   first    Roger    last    Craig    age   68  friends 1 first  Roger      key                  0                     child  2  Jack  c ildren 0  Sara                              fav  movie  Deer Hunter            JSON                      friends   3 friends   age  44 68 47                                                                               like      not like   friends   last   Murphy   first  Dale  friends   last   Murphy    first   Dale   Jane   friends   age 45   last   Craig   Murphy   friends   first  D    last  Murphy  friends   first   D    last  Craig                             children      a    Alex  children     a      Sara   Jack           friends   nets      fb     first      Dale   Roger        v1 3 0                                 v1 3 0                                         vs                                             Arrays   Queries                         friends 0 first  Dale  friends 0 first  Dale  friends 0 first  Dale  friends 0 first  Dale  friends   3 friends   3 friends   last  Murphy       first    Dale    last    Murphy    age   44    first    Jane    last    Murphy    age   47   friends   last  Murphy    first   Dale   Jane   friends   last  Murphy    first friends   last  Murphy    0    friends   last  Murphy    0   first    Dale    last    Murphy    age   44  friends   last  Murphy         friends   last  Murphy      2               friends   last  Murphy         first    Dale    last    Murphy    age   44    first    Jane    last    Murphy    age   47      first     first                      Dale   Jane      first                first                             first       0     first    Dale    last    Murphy    age   44    0                      JSON                  reverse   JSON               children    children  reverse   Jack   Alex   Sara   children  reverse 0  Jack               reverse              ugly  JSON          pretty  JSON                                 JSON                  pretty    json          pretty   sortKeys  true     json         key               name     first   Tom   last   Anderson     age  37   children     Sara   Alex   Jack     fav movie    Deer Hunter    friends       first    Janet    last    Murphy    age   44      json         name      first    Tom    last    Anderson      age   37   children     Sara    Alex    Jack     fav movie    Deer Hunter    friends        first    Janet    last    Murphy    age   44        pretty        sortKeys  indent  prefix width                                          JSON             gjson AddModifier  case   func json  arg string  string   arg     upper    return strings ToUpper json    arg     lower    return strings ToLower json    return json     children  case upper    SARA   ALEX   JACK    children  case lower  reverse    jack   alex   sara        v1 3 0   GJSON                                                                          name first age  the_murphys  friends   last  Murphy    first             Murphy                             key       themurphys      key                           first                         first   Tom   age  37  the_murphys    Dale   Jane         GJSON  JSON  string number bool  null           json       Result          bool  JSON booleans float64  JSON numbers string  JSON string literals nil  JSON null          result Type    String  Number  True  False  Null  JSON result Str    holds string result Num    holds float64 number result Raw    holds raw json result Index    index raw value original json  zero means index unknown                 result Exists   bool result Value   interface   result Int   int64 result Uint   uint64 result Float   float64 result String   string result Bool   bool result Time   time Time result Array     gjson Result result Map   map string gjson Result result Get path string  Result result ForEach iterator func key  value Result  bool  result Less token Result  caseSensitive bool  bool result Value        interface        Go      boolean    bool number    float64 string    string null    nil array      interface   object    map string interface   result Arr",
        "objectID": "post/Go语言快速解析JSON:gjson",
        "date": "2019-12-23T19:38:12.000Z",
        "tags": [
            "gjson"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "go语言为什么没有min/max(int, int)函数",
        "uri": "post/go语言为什么没有min-max-int-int-函数",
        "content": "go  math      min max      float64             min max  go   math      min max      math Min float64  float64  float64 math Max float64  float64  float64                       math Min Max int  int   math Min Max int64  int64        go          min max                       https   mrekucci blogspot jp 2015 07 dont abuse mathmax mathmin html                float64     infinity not a number                          go                                     go                  func Min x  y int64  int64   x y   return x   return y       math Max   math Min        Go                                  math Min  math Max  math  package main import    fmt   math    func main     ints      int 1  2  3  4  5  max    0 _  n    range ints   max   int math Max float64 max   float64 n      fmt Println max                              max   int math Max float64 max   float64 n                                     float64                                         Go      Go  IEEE 754           32 float32 64 float64                                                     MaxFloat32 MaxFloat64                SmallestNonzeroFloat32 SmallestNonzeroFloat64        Go math                  float   float32 float64                  int32 int64                       IEEE 754                                    64     Go float64               int64          float64                            package main import  fmt  func main        int64 1  t n   fx    fy     Output     x  1152921504606846976 000000  y  1152921504606846976 000000    x    y    true             int3   float32",
        "objectID": "post/go语言为什么没有min-max-int-int-函数",
        "date": "2019-08-13T20:13:15.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go语言在Linux终端输出彩色字符",
        "uri": "post/Go语言在Linux终端输出彩色字符",
        "content": "Linux                                  ls                                                                                         ANSI Escape code                ASCII                      a  0x7       n  0x0A                                  e  0x1B        ESC       ESC       ESC     escape                                 ANSI Escape code    ANSI Escape code                     e 37 44 4 1m  e     ANSI Escape code             CSI Control Sequence Introducer 37 44 4 1                    37            44        4      1     m                 echo  e   e 37 44 4 1mMCC e 0m                       MCC  e        echo              e 0m            e     ANSI Escape code             CSI Control Sequence Introducer 0          m               e     16     0x1B   8      033               e 37 44 4 1mMCC e 0m  x1b 37 44 4 1mMCC x1b 0m  x1B 37 44 4 1mMCC x1B 0m  033 37 44 4 1mMCC 033 0m                                                                                                               0               1          3          4           5          8          30 37             1            38            5 n    8 256       2 r g b  24 RGB        40 47       1            48            5 n    8 256       2 r g b  24 RGB        90 97               1            100 107              1          1                                                                               30   40          31   41          32   42          33   43          34   44           35   45          36   46              37   47               90   100           91   101           92   102           93   103           94   104            95   105           96   106           97   107   8  256        e 31m     e 38 5 31m 8        e 31 5 1 4m               Go          Go          Linux                          fmt Printf   n  c 1 40 32m s c 0m n n   0x1B   testPrintColor   0x1B    0x1B            1     40       32       0m                              package main import    fmt    func main     fmt Println                                                               30 40       31 41       32 42       33 43       34 44       35 45        36 46        37 47                                                0           1         4          5       7         8     b    40  b",
        "objectID": "post/Go语言在Linux终端输出彩色字符",
        "date": "2019-04-18T13:13:00.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go语言MySQL中如何为单个事务设置隔离级别",
        "uri": "post/Go语言MySQL中如何为单个事务设置隔离级别",
        "content": "MySQL                                          mvcc                               MySQL   3                                  set global transaction isolation level repeatable read    session set tx_isolation    repeatable read   set session transaction isolation level repeatable read        set transaction isolation level repeatable read  Go    Go MySQL              3                   sql                      Go1 8      sql    API BeginTx        tx0  err    db BeginTx context Background     sql TxOptions  Isolation  sql LevelReadUncommitted        1 8               session      hack   tx1  err    db Begin   _  err   tx1 Exec  ROLLBACK   _  err   tx1 Exec  SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED   _  err   tx1 Exec  BEGIN   rows  err    tx1 Query  SELECT COUNT    USER   rows Close   tx1 Commit                   db                 db0  err    sql Open  mysql    root  test   db1  err    sql Open  mysql    root  test tx_isolation  read uncommitted                       read uncommitted         func main     db  err    sql Open  mysql    root  test   err    nil   panic err    db1  err    sql Open  mysql    root  test tx_isolation  read uncommitted    err    nil   panic err    tx0  err    db Begin   err    nil   panic err    _  err   tx0 Exec  insert user value  null       cc   err    nil   panic err    rows  err    db1 Query  select count    user   err    nil   panic err    rows Next     s    0 err   rows Scan  s  err    nil   panic err    fmt Println s    tx0 Rollback        https   www jianshu com p b324b368a210",
        "objectID": "post/Go语言MySQL中如何为单个事务设置隔离级别",
        "date": "2019-04-25T16:16:38.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中捕获panic信息到日志文件中",
        "uri": "post/Go中捕获panic信息到日志文件中",
        "content": "crash         Go             panic                         panic                                                                         err    execFunc   err    nil   outputToFile err               panic recover                                                                  linux    test    panic log                             windows             panic                         panic                      file    go   os Stdout   os Stderr   panic           windows    stdout stderr           unix                                        package main import    fmt    os     const panicFile     tmp panic log  func InitPanicFile   error   log Println  init panic file unix mode   file  err    os OpenFile panicFile  os ORDWR os OCREATE os O_APPEND  0666  err    nil   return err   os Stdout   file os Stderr   file return nil   func init     err    pc InitPanicFile   err    nil   println err      func testPanic     panic  test panic     func main     testPanic                 os Stdout   file   os Stderr   file                           tmp panic log          panic                    Rob                                  syscall Dup           InitPanicFile       func InitPanicFile   error   log Println  init panic file unix mode   file  err    os OpenFile panicFile  os ORDWR os OCREATE os O_APPEND  0666  err    nil   println err  return err   err   syscall Dup2 int file Fd     int os Stderr Fd      err    nil   return err   return nil            panic                  tail  f  tmp panic log panic  test panic goroutine 1  running                  bug          file             gc       file    runtime SetFinalizer f file    file  close                                            var globalFile  os File func InitPanicFile   error   log Println  init panic file unix mode   file  err    os OpenFile panicFile  os ORDWR os OCREATE os O_APPEND  0666  globalFile   file err    nil   println err  return err   err   syscall Dup2 int file Fd     int os Stderr Fd      err    nil   return err   return nil                        windows          syscall Dup2   windows          undefined  syscall Dup2 syscall Dup2 linux OSX thing  there s no windows equivalent              go  DLL       Go  windows dll                       DLL                 package main import    log   os   syscall    const   kernel32dll    kernel32 dll    const panicFile    C  panic log  var globalFile  os File func InitPanicFile   error   log Println  init panic file windows mode   file  err    os OpenFile panicFile  os OCREATE os OAPPEND  0666  globalFile   file err    nil   return err   kernel32    syscall NewLazyDLL kernel32dll  setStdHandle    kernel32 NewProc  SetStdHandle   sh    syscall STDERRORHANDLE v  _  err    setStdHandle Call uintptr sh   uintptr file Fd     v    0   return err   return nil   func init     err    pc InitPanicFile   err    nil   println err      func testPanic     panic  test panic     func main     testPanic                 windows    panic                     https   zhuanlan zhihu com p 36199704",
        "objectID": "post/Go中捕获panic信息到日志文件中",
        "date": "2019-04-22T10:36:47.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中的参数验证:validator",
        "uri": "post/Go中的参数验证:validator",
        "content": "validator   Web                                                                              API          Joi                                     Golang                                           reflect                                            strings Trim mobile               return nil  ErrEmptyParams   mobileRegex    regexp MustCompile  1 d 10     mobileRegex MatchString mobile    return nil  ErrInvalidMobile                                                                                         reflect                      Struct Tag                                                                        go playground validator           v9           v8                                                        type Test struct   Email string validate  email  Size int validate  max 10 min 1    err    validate Struct  Test  wrong_email   100   err    nil      handler error          Struct               Struct                     eqfield Field       Field     nefield Field        Field     gtfield Field       Field     gtefield Field         Field     ltfield Field       Field     ltefield Field         Field     eqcsfield Other Field       struct   Field     necsfield Other Field        struct   Field     gtcsfield Other Field       struct   Field     gtecsfield Other Field         struct   Field     ltcsfield Other Field       struct   Field     ltecsfield Other Field         struct   Field                   tag                                   Struct cross struct    field          6    eq  Equal     ne  Non Equal      gt  Great than     gte  Great equal       lt  Less than     lte  Less equal                                                type Test struct   StartAt time Time validate  required  EndAt time Time validate  required gtfield StartAt               Tag  required_with Field1 Field2    Field1    Field2         requiredwithall Field1 Field2    Field1   Field2          required_without Field1 Field2    Field1    Field2          requiredwithoutall Field1 Field2    Field1   Field2          required   golang                       int  0 string         require                            CommType int64 json  comm_type validate  exists            0                          CommType  int64 json  comm_type  validate  exists               nil   0   nil                      v8 v9         nil           v8 required   exists     required nil           exists       nil      v8   v9     v9  exists     require                    nil            v9                     nil         require                       package main import    fmt   gopkg in go playground validator v9       User contains user information type User struct   FirstName string validate  required  LastName string validate  required  Age uint8 validate  gte 0 lte 130  Email string validate  required email  FavouriteColor string validate  iscolor     alias  hexcolor rgb rgba hsl hsla  Addresses    Address validate  required dive required     person home cottage         Address houses users address information type Address struct   Street string validate  required  City string validate  required  Planet string validate  required  Phone string validate  required       use single instance Validate  caches struct info var validate  validator Validate func main     validate   validator New   validateStruct   validateVariable     func validateStruct     address     Address  Street   Eavesdown Docks   Planet   Persphone   Phone   none     user     User  FirstName   Badger   LastName   Smith   Age  135  Email   Badger Smith gmail com   FavouriteColor    000    Addresses     Address address        returns nil ValidationErrors     FieldError   err    validate Struct user  err    nil      check needed when code produce    invalid value validation interface nil    value including myself not usually code this  _  ok    err   validator InvalidValidationError   ok   fmt Println err  return   _  err    range err  validator ValidationErrors    fmt Println err Namespace    fmt Println err Field    fmt Println err StructNamespace       differ when custom TagNameFunc registered fmt Println err StructField       passing alt name ReportError below fmt Println err Tag    fmt Println err ActualTag    fmt Println err Kind    fmt Println err Type    fmt Println err Value    fmt Println err Param    fmt Println        create own error messages whatever language wish return      save user database   func validateVariable     myEmail     joeybloggs gmail com  errs    validate Var myEmail   required email   errs    nil   fmt Println errs     output  Key     Error Field validation    failed  email  tag return      email ok  move           validator         package main import    fmt   gopkg in go playground validator v9       MyStruct    type MyStruct struct   String string validate  is awesome       use single instance Validate  caches struct info var validate  validator Validate func main     validate   validator New                     Tag  validate RegisterValidation  is awesome   ValidateMyVal  s    MyStruct String   awesome   err    validate Struct s  err    nil   fmt Printf  Err s   n  v n   ",
        "objectID": "post/Go中的参数验证:validator",
        "date": "2019-12-14T16:36:40.000Z",
        "tags": [
            "validator",
            "GO"
        ],
        "categories": [
            "GO"
        ]
    },
    {
        "title": "Go中的基准测试",
        "uri": "post/Go中的基准测试",
        "content": "CPU                                                                                                                                        testing                                                N     func Fib n int  int   switch n   case 0  return 0 case 1  return 1 default  return Fib n 1    Fib n 2             testing                              _test go          test      func BenchmarkFib20 b  testing B    n    0  n old txt     fib test  test bench    test count 10   new txt   benchstat old txt new txt name old time op new time op delta Fib20 8 44 3 s   6  25 6 s   2   42 31   p 0 000 n 10 10                         1 2        3 5          5                                        p  p   0 05          0 05                          benchstat                         9           count 10      10            10                                                                b ResetTimer               func BenchmarkExpensive b  testing B    boringAndExpensiveSetup   b ResetTimer      HL n    0  n   1    m1 x    x   m2      x    2    m2  x    x    x    4     m4 return  x   h01     56   func BenchmarkPopcnt b  testing B       0    b N  i     popcnt uint64 i                               go test  bench     examples popcnt  goos  darwin goarch  amd64 BenchmarkPopcnt 8 2000000000 0 30 ns op PASS 0 3                    CPU                                                   benchmark    popcnt  popcnt                                                               popcnt                                     func BenchmarkPopcnt b  testing B       0    b N  i                      Go                   CPU                                                                                  Go                                               BenchmarkPopcnt                 var Result uint64 func BenchmarkPopcnt b  testing B    var r uint64    0    b N  i     r   popcnt uint64 i     Result   r                                  popcnt      r               r BenchmarkPopcnt        r                          r           Result    Result                            Result                                                                   func BenchmarkFibWrong b  testing B    Fib b N    func BenchmarkFibWrong2 b  testing B    n    0  n   b N  n     Fib n                              testing        CPU          profile      cpuprofile  FILE   CPU         FILE   memprofile  FILE            FILE   memprofilerate N         1 N   blockprofile  FILE             FILE                             go test  run XXX  bench    cpuprofile c p bytes   go tool pprof c p    https   github com sxs2473 go performane tuning",
        "objectID": "post/Go中的基准测试",
        "date": "2020-01-30T15:46:41.000Z",
        "tags": [
            "Go",
            "benchmark"
        ],
        "categories": [
            "Go调优"
        ]
    },
    {
        "title": "Go中的可寻址详解",
        "uri": "post/Go中的可寻址详解",
        "content": "Go            addressable        operand x type T  address operation  x generates pointer type  T x  operand addressable  is  either variable  pointer indirection  slice indexing operation  field selector addressable struct operand  array indexing operation addressable array  exception addressability requirement  x may  possibly parenthesized  composite literal  evaluation x cause run time panic  evaluation  x does too        x         T     x          T          x                                           addressable              x                                 x      pointer indirection     x slice       slice         s 1     struct      point X              a 0          literal   struct  X int   1      x              x               map                  type assertions          literal  composite literal  package         method             intermediate value                              pointer dereference    x   channel receive operations sub string operations sub slice operations                                                                    map                                                         Go map                                slice                       slice                                                              addressable      receiver              addressable                             addressable   map index                addressable    map index      _       for     range   reflect Value CanAddr   CanSet        reflect                       rpc                          reflect Value CanSet               CanSet CanAddr          struct   unexported     Set           CanAddr        reflect Value CanAddr     true     godoc         CanAddr reports whether value s address obtained Addr  values called addressable  value addressable element slice  element addressable array  field addressable struct  result dereferencing pointer  CanAddr returns false  calling Addr will panic            reflect Value CanAddr  true       addressable  slice                struct                   addressable  reflect Value addressable                                                                                         reflect Value               CanSet    true       SetXXX        reflect Value       func Indirect v Value  Value func  v Value  Elem   Value                                       reflect Value         v Elem     reflect Indirect v            interface    reflect Indirect v         v Elem                    v Elem   panic  reflect Indirect v               reflect Value    addressable          struct         x7 x9 x14 x15          package main import    fmt   reflect   time    func main     checkCanAddr     type S struct   X int Y string z int   func M   int   return 100   var x0   0 func checkCanAddr               v    reflect ValueOf x0  fmt Printf  x0   v  tcan addressable set   t   t n   x0  v CanAddr    v CanSet      false false var x1   1 v   reflect Indirect reflect ValueOf x1   fmt Printf  x1   v  tcan addressable set   t   t n   x1  v CanAddr    v CanSet      false false var x2    x1 v   reflect Indirect reflect ValueOf x2   fmt Printf  x2   v  tcan addressable set   t   t n   x2  v CanAddr    v CanSet      true true var x3   time Now   v   reflect Indirect reflect ValueOf x3   fmt Printf  x3   v  tcan addressable set   t   t n   x3  v CanAddr    v CanSet      false false var x4    x3 v   reflect Indirect reflect ValueOf x4   fmt Printf  x4   v  tcan addressable set   t   t n   x4  v CanAddr    v CanSet       true true var x5     int 1  2  3  v   reflect ValueOf x5  fmt Printf  x5   v  tcan addressable set   t   t n   x5  v CanAddr    v CanSet       false false var x6     int 1  2  3  v   reflect ValueOf x6 0   fmt Printf  x6   v  tcan addressable set   t   t n   x6 0   v CanAddr    v CanSet      false false var x7     int 1  2  3  v   reflect ValueOf x7  Index 0  fmt Printf  x7   v  tcan addressable set   t   t n   x7 0   v CanAddr    v CanSet      true true v   reflect ValueOf  x7 1   fmt Printf  x7 1   v  tcan addressable set   t   t n   x7 1   v CanAddr    v CanSet      true true var x8    3 int 1  2  3  v   reflect ValueOf x8 0   fmt Printf  x8   v  tcan addressable set   t   t n   x8 0   v CanAddr    v CanSet      false false    https   groups google com forum   topic golang nuts RF9zsX82MWw var x9    3 int 1  2  3  v   reflect Indirect reflect ValueOf x9  Index 0   fmt Printf  x9   v  tcan addressable set   t   t n   x9 0   v CanAddr    v CanSet      false false var x10    3 int 1  2  3  v   reflect Indirect reflect ValueOf  x10   Index 0  fmt Printf  x9   v  tcan addressable set   t   t n   x10 0   v CanAddr    v CanSet      true true var x11   S   v   reflect ValueOf x11  fmt Printf  x11   v  tcan addressable set   t   t n   x11  v CanAddr    v CanSet      false false var x12   S   v   reflect Indirect reflect ValueOf  x12   fmt Printf  x12   v  tcan addressable set   t   t n   x12  v CanAddr    v CanSet      true true var x13   S   v   reflect ValueOf x13  FieldByName  X   fmt Printf  x13   v  tcan addressable set   t   t n   x13  v CanAddr    v CanSet      false false var x14   S   ",
        "objectID": "post/Go中的可寻址详解",
        "date": "2018-12-12T20:02:18.000Z",
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中的内置函数",
        "uri": "post/Go中的内置函数",
        "content": "func new func new Type   Type     new                                            new                              golang              new  chan                make  chan          package main import    fmt   time    func main                    var ch   new chan int                1  ch   make chan int                   go func     fmt Println",
        "objectID": "post/Go中的内置函数",
        "date": "2019-04-04T17:19:42.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中的内置类型比较",
        "uri": "post/Go中的内置类型比较",
        "content": "https   golang org ref spec Assignability value x assignable variable type T   x assignable T   cases  x s type identical T  x s type V T identical underlying types least one V T not defined type  T interface type x implements T  x bidirectional channel value  T channel type  x s type V T identical element types  least one V T not defined type  x predeclared identifier nil T pointer  function  slice  map  channel  interface type  x untyped constant representable value type T                                    underlying types                         https   golang org ref spec Comparison_operators                                                                     b    false fmt Println c    d    false fmt Println c   d    true float64 var float64   1 0000000000000001 var b float64   1 000000000000000001 var c float64   1 000000000000001 var d float64   1 0000000000000000001 fmt Println a    b    true fmt Println a   b    false fmt Println c    d    false fmt Println c   d    true             float                   15               package main import    fmt   math    type Floater struct   Accuracy float64             15           func  f Floater  IsEqual a  b float64  bool   return math Abs a b    f Accuracy     0    1 a  b  1 a  b func  f Floater  Bccomp a  b float64  int8   math Abs a b    f Accuracy   return 0   math Max a  b       return 1   else   return  1     func main     f    Floater Accuracy  0 000000000001  var float64   1 0000000002 var b float64   1 0000000001 fmt Println f Bccomp a  b     1 fmt Println f Bccomp b  a      1 fmt Println f Bccomp a  a     0              hello  b     a c     a fmt Println b    c            nil         interface                 nil                                    Go    interface                  type             value               interface      w  nil                 nil                       interface      nil                w     nil        false fmt Println w    nil       false                          w    nil   w Write   byte  done  n        w     nil     panic    interface                    nil                                              interface                             Golang error              error      type error interface   Error   string   func New text string  error   return  errorString text    type errorString struct   text string   func  e  errorString  Error   string   return e text                  errorString    error       errorString   w1    errors New  ERR   w2    errors New  ERR   fmt Println w1    w2       false   w1              errorString    error      w1        errorString    w1            w2                                   w1 type    w2 type    w1 value    w2 value    w1 value   w2 value                                   false           New                                                 Golang    io EOF                    fmt Println errors New  EOF      io EOF      false      w1    errors New  ERR    w2    errors New  ERR                  reflect DeepEqual     w1    errors New  ERR   w2    errors New  ERR   fmt Println reflect DeepEqual w1 w2       true array                                  package main import    fmt    func main     var arr    3 int 1  2  3  var brr    3 int 1  2  3  fmt Println arr  brr    true   struct                          struct             struct         Struct values comparable fields comparable  Two struct values equal corresponding non blank fields equal         package main import  fmt  type T1 struct   name string   type T2 struct   name string   func main     v11    T1    foo    v12    T1    foo    v21    T2    foo    v22    T2    foo    fmt Printf  v11    v12  v n   v11    v12     output  v11    v12 true   fmt Printf  v11    v21  v n   v11    v21     compile error  invalid operation  v11    v21  mismatched types T1 T2    fmt Printf  v11    v22  v n   v11    v22     compile error  invalid operation  v11    v22  mismatched types T1 T2    fmt Printf  v12    v21  v n   v12    v21     compile error  invalid operation  v12    v21  mismatched types T1 T2    fmt Printf  v12    v22  v n   v12    v22     compile error  invalid operation  v12    v22  mismatched types T1 T2  fmt Printf  v21    v22  v n   v21    v22     output  v21    v22 true          struct                                       v1x v2x          T1     T2                            T1 T2            go                                         T1 T2                                package main import  fmt  type Int int func main     var v11 int   1 var v12 int   1 var v21 Int   1 var v22 Int   1 fmt Printf  v11    v12  v n   v11    v12     output  v11    v12 true   fmt Printf  v11    v21  v n   v11    v21     compile error  invalid operation  v11    v21  mismatched types int Int    fmt Printf  v11    v22  v n   v11    v22     compile error  invalid operation  v11    v22  mismatched types int Int    fmt Printf  v12    v21  v n   v12    v21     compile error  invalid operation  v12    v21  mismatched types int Int    fmt Printf  v12    v22  v n   v12    v22     compile error  invalid operation  v12    v22  mismatched types int Int  fmt Printf  v21    v22",
        "objectID": "post/Go中的内置类型比较",
        "date": "2019-08-16T16:25:53.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中的内置类型转换",
        "uri": "post/Go中的内置类型转换",
        "content": "T x          T    x        T      Conversion   Type     Expression                    operator",
        "objectID": "post/Go中的内置类型转换",
        "date": "2019-01-26T21:22:18.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中的熔断器:hystrix-Go",
        "uri": "post/Go中的熔断器:hystrix-go",
        "content": "Hystrix                                                                     n                                                                                               Hystrix         Hystrix                                                                                                                                                                                                                    hystrix                                                                  Netflix   Java   https   github com Netflix Hystrix   Hystrix                               Go                       hystrix Go  my_command   func   error      talk services return nil    nil                                    Go                                                                         https   github com Netflix Hystrix wiki How it Works hystrix Go  my_command   func   error      talk services return nil    func err error  error      when services down return nil           Go    goroutine                        output    make chan bool  1  errors    hystrix Go  my_command   func   error      talk services output",
        "objectID": "post/Go中的熔断器:hystrix-go",
        "date": "2019-11-03T17:13:27.000Z",
        "tags": [
            "hystrix",
            "go"
        ],
        "categories": [
            "GO"
        ]
    },
    {
        "title": "Go中的限流器time-rate",
        "uri": "post/Go中的限流器time-rate",
        "content": "11                                                                                                golang        golang org x time rate                                            800ms    1   token      1   token           token      limiter    rate NewLimiter rate Every time Duration 800  time Millisecond   1              Allow  Wait  Reserve Allow        token    token    false      1   token    true Wait            1   token Reserve     token    Allow       Reserve   OK                  token      Wait           err    limiter Wait context Background     err    nil   panic err       business logic Constants const Inf   Limit math MaxFloat64  Inf                  burst     const InfDuration   time Duration 1 0   return   time Sleep r Delay    Act                                                       wait                    allow                                       ReserveN                       context      cancel       WaitN  func   Limiter  SetBurst func  lim  Limiter  SetBurst newBurst int  SetBurst SetBurstAt time Now   newBurst      func   Limiter  SetBurstAt func  lim  Limiter  SetBurstAt now time Time  newBurst int  SetBurstAt              func   Limiter  SetLimit func  lim  Limiter  SetLimit newLimit Limit  SetLimit SetLimitAt time Now   newLimit      func   Limiter  SetLimitAt func  lim  Limiter  SetLimitAt now time Time  newLimit Limit  SetLimitAt                Reserve Wait     SetLimitAt                      Limit Burst  func   Limiter  Wait func  lim  Limiter  Wait ctx context Context   err error  Wait WaitN ctx 1      func   Limiter  WaitN func  lim  Limiter  WaitN ctx context Context  n int   err error  WaitN     lim  n        WaitN       Limiter  n          n                  Context           lim        Context                 Inf          type Reservation type Reservation struct      contains filtered unexported fields   Reserve                      Reserve                     func   Reservation  Cancel func  r  Reservation  Cancel   Cancel CancelAt time Now        func   Reservation  CancelAt func  r  Reservation  CancelAt now time Time  CancelAt           Reserve               Reserve          Reserve          func   Reservation  Delay func  r  Reservation  Delay   time Duration Delay DelayFrom time Now        func   Reservation  DelayFrom func  r  Reservation  DelayFrom now time Time  time Duration DelayFrom  Reservation      Reservation                               InfDuration                  Reservation        func   Reservation  OK func  r  Reservation  OK   bool                                OK false  Delay  InfDuration  Cancel                 Limter          Allow  Reserve  Wait         Wait Wait Wait WaitN                package main import    context   fmt   golang org x time rate   time    func main     l    rate NewLimiter 1  3                                     burst  c  _    context WithCancel context TODO      l Wait c  fmt Println time Now   Format  04 05 000           25 08 243 25 08 243 25 08 243 25 09 248 25 10 248 25 11 248 Allow Allow AllowN            false package main import    fmt   golang org x time rate   time    func main     l    rate NewLimiter 1  3                                     burst    l AllowN time Now    1    fmt Println time Now   Format  04 05 000      else   time Sleep 1   time Second   10  fmt Println time Now   Format  Second 04 05 000          Reserve Reserve ReserveN             Reservation                 package main import    fmt   golang org x time rate   time    func main     l    rate NewLimiter 1  3                                     burst    r    l ReserveN time Now    1  s    r Delay   time Sleep s  fmt Println s  time Now   Format  04 05 000        ReserveN         Reserve    Delay               package main import    bytes   fmt   io   time   golang org x time rate    type reader struct   r io Reader limiter  rate Limiter      Reader returns reader rate limited    given token bucket  token bucket    represents one byte  func NewReader r io Reader  l  rate Limiter  io Reader   return  reader  r  r  limiter  l      func  r  reader  Read buf   byte   int  error    n  err    r r Read buf  n",
        "objectID": "post/Go中的限流器time-rate",
        "date": "2019-10-29T11:04:24.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中的HTTP操作总结",
        "uri": "post/Go中的HTTP操作总结",
        "content": "http Get GET        URL           HTTP          URL                GET            1024      POST       login action name hyddd password idontknow verify  E4 BD A0 E5 A5 BD                                                 BASE64        E4 BD A0 E5 A5 BD    XX  XX     16     ASCII  func httpGet         get    resp  err    http Get  http   www 01happy com demo accept php id 1   err    nil      handle error   defer resp Body Close       response body  err    ioutil ReadAll resp Body  err    nil      handle error   fmt Println string body       http client       import  net http      clt    http Client   resp  err    clt Get  http   wwww baidu com   http Post                       application x www form urlencoded    post                                        strings NewReader  name cjb age 12 sex man      url Values  func httpPost     data    url Values  name    cjb     age    12    sex    man    body    strings NewReader data Encode    resp  err    http Post  http   www 01happy com demo accept php    application x www form urlencoded   body  err    nil   fmt Println err    defer resp Body Close   body  err    ioutil ReadAll resp Body  err    nil      handle error   fmt Println string body           import    net http   net url        var r http Request r ParseForm   r Form Add  xxx    xxx   body    strings NewReader r Form Encode    http Post  xxxx    application x www form urlencoded   body           http client post                     http client                     DefaultClient      DefaultClient              http client post    import    net http   net url        data    url Values  start    0     offset    xxxx    body    strings NewReader data Encode    clt    http Client   resp  err    clt Post  xxxxxxx    application x www form urlencoded   body     import    net http   net url        var r http Request r ParseForm   r Form Add  xxx    xxx   body    strings NewReader r Form Encode    clt    http Client   clt Post  xxxx    application x www form urlencoded   body  http PostForm    http PostForm      http Post            application x www form urlencoded func  c Client  PostForm url string  data url Values   resp Response  err error    return c Post url   application x www form urlencoded   strings NewReader data Encode                     url Values    type Values mapstringstring        func httpPostForm     resp  err    http PostForm  http   www 01happy com demo accept php   url Values  key     Value     id     123     err    nil      handle error   defer resp Body Close   body  err    ioutil ReadAll resp Body  err    nil      handle error   fmt Println string body        import    net http   net url        data    url Values  start    0     offset    xxxx    clt    http Client   clt PostForm  xxxx   data  http  Client Do                                       http NewRequest                    cookie           http Do         Content Type application x www form urlencoded post                                         strings NewReader  name cjb age 12 sex man   func httpDo     client     http Client   req  err    http NewRequest  POST    http   www 01happy com demo accept php   strings NewReader  name cjb    err    nil      handle error   req Header Set  Content Type    application x www form urlencoded   req Header Set  Cookie    name anny   resp  err    client Do req  defer resp Body Close   body  err    ioutil ReadAll resp Body  err    nil      handle error   fmt Println string body                             http Transport package main import    fmt   io ioutil   net http   strings   time    var timeout   time Duration 20   time Second  func dialTimeout network  addr string   net Conn  error    return net DialTimeout network  addr  timeout    func main     tr     http Transport               Dial  dialTimeout             ResponseHeaderTimeout  time Second   2    client     http Client  Transport  tr               Timeout  timeout    req  _    http NewRequest  GET    http   www haiyun me   nil  req Header Set  Connection    keep alive   res  err    client Do req  err    nil   return   defer res Body Close   body  _    ioutil ReadAll res Body  fmt Println string body   k  v    range res Header   fmt Println k  strings Join v                    ip     HTTP PROXY proxyUrl  err    url Parse  http   host port   tr     http Transport  Proxy  http ProxyURL proxyUrl           IP ief  err    net InterfaceByName  eth0   addrs  err    ief Addrs   addr     net TCPAddr  IP  addrs 0    net IPNet  IP    dia    net Dialer LocalAddr  addr  tr     http Transport  Dial  dia Dial    http Client Head    head        http client  Head        Head issues HEAD specified URL  response one    following redirect codes  Head follows redirect calling    Client s CheckRedirect function        301  Moved Permanently     302  Found     303  See Other     307  Temporary Redirect  func  c Client  Head url string   resp Response  err error    req  err    NewRequest  HEAD   url  nil  err    nil   return nil  err   return c doFollowingRedirects req  shouldRedirectGet        post   post               mime multipart          form  package main import    ",
        "objectID": "post/Go中的HTTP操作总结",
        "date": "2018-11-15T18:26:03.000Z",
        "tags": [
            "Go",
            "HTTP"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中的interface{}比较方法",
        "uri": "post/Go中的interface-比较方法",
        "content": "DeepEqual                  func main    m1  map string interface    a   1    b  2   c  3   m2  map string interface    a  1   c   3    b  2   fmt Println reflect DeepEqual m1  a   m2  a   reflect DeepEqual m1  a   m2  a      fmt Println reflect DeepEqual m1  b   m2  b   reflect DeepEqual m1  b   m2  b              Running    reflect DeepEqual m1  a   m2  a   false reflect DeepEqual m1  b   m2  b   true                       switch type             go           interface         interface                    nil                                              interface                             Golang error              error      type error interface   Error   string   func New text string  error   return  errorString text    type errorString struct   text string   func  e  errorString  Error   string   return e text                  errorString    error       errorString   w1    errors New  ERR   w2    errors New  ERR   fmt Println w1    w2       false   w1              errorString    error      w1        errorString    w1            w2                                   w1 type    w2 type    w1 value    w2 value    w1 value   w2 value                                   false           New                                                 Golang    io EOF                    fmt Println errors New  EOF      io EOF      false      w1    errors New  ERR    w2    errors New  ERR                  reflect DeepEqual     w1    errors New  ERR   w2    errors New  ERR   fmt Println reflect DeepEqual w1 w2       true",
        "objectID": "post/Go中的interface-比较方法",
        "date": "2019-08-26T13:21:07.000Z",
        "tags": [
            "interface"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中的Json编解码总结",
        "uri": "post/Go中的Json编解码总结",
        "content": "map json  javascript      golang             golang map  key value     struct        json      json      go                             golang   encoding json        json             json        Marshal                                json    type Account struct   Email string password string Money float64   func main     account    Account  Email   rsj217 gmail com   password   123456   Money  100 5    rs  err    json Marshal account  err    nil  log Fatalln err    fmt Println rs  fmt Println string rs              Marshal                   byte        password        json      json     Account       123 34 69 109 97 105 108 34 58 34 114 115 106 50 49 55 64 103 109 97 105 108 46 99 111 109 34 44 34 77 111 110 101 121 34 58 49 48 48 46 53 125    Email   rsj217 gmail com   Money  100 5                        slice   map                    map key       value            package main import    encoding json   fmt    type User struct   Name string Age int Roles   string Skill map string float64   func main     skill    make map string float64  skill  python     99 5 skill  elixir     90 skill  ruby     80 0 user    User  Name   rsj217   Age  27  Roles    string  Owner    Master    Skill  skill    rs  err    json Marshal user  err    nil   log Fatalln err    fmt Println string rs            Name   rsj217    Age  27   Roles     Owner    Master      Skill     elixir  90   python  99 5   ruby  80          slice map    json              value                  key   string             golang                 type Account struct   Email string password string Money float64   type User struct   Name string Age int Roles   string Skill map string float64 Account Account   func main        user    User  Name  rsj217   Age  27  Roles    string  Owner    Master    Skill  skill  Account account                 Name   rsj217    Age  27   Roles     Owner    Master      Skill     elixir  90   python  99 5   ruby  80     Account     Email   rsj217 gmail com    Money  100 5               Account    key value       golang                                           type User struct       Extra   interface     extra      interface   123   hello world   user    User      Extra  extra               Extra    123   hello world                           value                           nil    json   null type User struct   Name string Age int Roles   string Skill map string float64 Account Account Extra   interface   Level map string interface     func main         level    make map string interface    level  web      Good  level  server     90 level  tool     nil user    User  Name   rsj217   Age  27  Roles    string  Owner    Master    Skill  skill  Account  account  Level  level                     Extra  null   Level     server  90   tool  null   web   Good           Extra               null   Level               StructTag                   Level    keyserver                                                    json                               golang   struct tag                   type Account struct   Email string json  email  Password string json  pass_word  Money float64 json  money    func main     account    Account  Email   rsj217 gmail com   Password   123456   Money  100 5    rs  err    json Marshal account            struct tag    Aaccount              email      password                     email   rsj217 gmail com   pass_word   123456   money  100 5                              marshal                      json                                          json        struact tag                  _            tag          type Account struct   Email string json  email  Password string json     Money float64 json  money          email   rsj217 gmail com   money  100 5      Password                       json    omitempty                                                    omitempty  type Account struct   Email string json  email  Password string json  password omitempty  Money float64 json  money    func main     account    Account  Email   rsj217 gmail com   Password      Money  100 5            password      json     string   golang                        json     struct tag string                    json                             string    type Account struct   Email string json  email  Password string json  password omitempty  Money float64 json  money string    func main     account    Account  Email   rsj217 gmail com   Password   123   Money  100 50                  money   100 5   money             html     json Marshal  json            func main     testMap    map string string   demo   https   xxx xxx com a 1 b 2    bytes  err    json Marshal testMap  err    nil   panic err    fmt Println string bytes             demo   https   xxx xxx com a 1 u0026b 2     json Marshal   func Marshal v interface       byte  error    e    newEncodeState   err    e marshal v  encOpts escapeHTML  true   err    nil   return nil  err   buf    append   byte nil   e Bytes       e Reset   encodeStatePool Put e  return buf  nil   json Marshal    escapeHtml  true                   String values encode JSON strings coerced valid UTF 8     replacing invalid bytes Uni",
        "objectID": "post/Go中的Json编解码总结",
        "date": "2018-11-15T18:25:06.000Z",
        "tags": [
            "Json"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中的make和new的区别",
        "uri": "post/Go中的make和new的区别",
        "content": "new T       T     new T      T                   T                   T        T       T          p1    new int  fmt Printf  p1       v  n    p1      int  0xc42000e250  fmt Printf  p1 point       v  n     p1    0 var p2  int    0 p2    i fmt Printf  p2       v  n    p2      int  0xc42000e278  fmt Printf  p2 point       v  n     p2    0           new int             int         0     int                               slice map channel      slice map channel      make T  args             T              T              T           T                                    var s1   int s1    nil   fmt Printf  s1 nil       v  n    s1       int nil    s2    make   int  3  s2    nil   fmt Printf  s2 nil       v  n    s2    else   fmt Printf  s2 not nill       v  n    s2      int 0  0  0    slice      nil       slice         slice   slice              array             slice       int            0 0 0  map   channel        var m1 map int string m1    nil   fmt Printf  m1 nil       v  n    m1    map int string nil    m2    make map int string  m2    nil   fmt Printf  m2 nil       v  n    m2    else   fmt Printf  m2 not nill       v  n    m2  map int string     var c1 chan string c1    nil   fmt Printf  c1 nil       v  n    c1     chan string  nil    c2    make chan string  c2    nil   fmt Printf  c2 nil       v  n    c2    else   fmt Printf  c2 not nill       v  n    c2    chan string  0xc420016120           new         struct                new        struct         type Foo struct   name string age int           var foo1 Foo fmt Printf  foo1       v n    foo1    main Foo age 0  name     foo1 age   1 fmt Println foo1 age    struct literal     foo2    Foo   fmt Printf  foo2       v n    foo2    main Foo age 0  name     foo2 age   2 fmt Println foo2 age          foo3     Foo   fmt Printf  foo3       v n    foo3     main Foo age 0  name     foo3 age   3 fmt Println foo3 age    new     foo4    new Foo  fmt Printf  foo4       v n    foo4     main Foo age 0  name     foo4 age   4 fmt Println foo4 age           new     var foo5  Foo   new Foo  fmt Printf  foo5       v n    foo5     main Foo age 0  name     foo5 age   5 fmt Println foo5 age  foo1   foo2           Foo      foo1     var    Foo   filed               foo2              foo3 foo4   foo5           Foo     Foo     x        x   filed      m x m     x  m      go           foo1 age   foo3 age        go                     struct literal              new                new       new                                                           var  new            var global  int func f     var x int x   1 global    x   func g     y    new int   y   1   f    x                             global                   Go         x       f         g         y                        y      g                 y                       Go   GC                    new                                                                            Go                                                                                                                                                                      https   sanyuesha com 2017 07 26 go make and new",
        "objectID": "post/Go中的make和new的区别",
        "date": "2018-12-26T21:26:14.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中的map和slice查询性能对比",
        "uri": "post/Go中的map和slice查询性能对比",
        "content": "map    slice                       O 1     O n   package main import    fmt   math rand   time    const maxSize   50 const tests   20000000 const findMult   1   9999999999    100   1  hit rate  1   100  hit rate  type lst   int func  l lst  has xxxx int  bool   _     range l      xxxx   return true     return false   type mp map int struct   func  m mp  has xxxx int  bool   _  ok    m xxxx  return ok   func main     rand Seed time Now   UnixNano    size    1  size 0   rand Int     fmt Printf   d t v n   size  sliceDuration mapDuration          1  209 706862ms 2  286 768577ms 3  253 643371ms 4  184 176088ms 5  188 898868ms 6  194 644208ms 7  113 719066ms 8  501 892168ms 9  34 573439ms 10  380 242983ms 11  216 931934ms 12  631 616472ms 13  135 392189ms 14  229 107952ms 15  114 9351ms 16  373 97338ms 17  287 007278ms 18  34 734517ms 19  237 892748ms 20  222 025115ms 21  140 869821ms 22 13 382928ms 23  341 238616ms 24  281 6694ms 25 70 841324ms 26 63 31161ms 27  179 818415ms 28  30 357644ms 29 39 261291ms 30  50 066403ms 31  75 68084ms 32 113 281835ms 33 119 597633ms 34 222 476972ms 35  89 222024ms 36 95 265413ms 37 164 569075ms 38 150 392782ms 39 247 403261ms 40 365 580116ms 41 284 544515ms 42 275 936162ms 43 330 8626ms 44 428 790859ms 45 94 745088ms 46 388 334553ms 47 189 708983ms 48 387 604493ms 49 308 960719ms 25        slice    map                      slice       map          golang map    hash       hash           hash     hash                 map    O 1                   hash              map                 https   blog csdn net jeffrey11223 article details 78450938 https   golangnote com topic 224 html",
        "objectID": "post/Go中的map和slice查询性能对比",
        "date": "2019-08-26T15:21:06.000Z",
        "tags": null
    },
    {
        "title": "Go中的nil解析",
        "uri": "post/Go中的nil解析",
        "content": "nil             builtin builtin go     nil predeclared identifier representing zero value    pointer  channel  func  interface  map  slice type     Type pointer  channel  func  interface  map  slice type var nil Type    Type purposes documentation only  stand in    Go type  represents type given function    invocation  type Type int                                                          golang                nil     nil                  nil   nil       package main import  fmt  func main     nil    123 fmt Println nil     123 var _ map string int   nil   cannot use nil  type int  type map string int assignment        Go                            false    0               interface slice channel map     nil      struct                nil      nil                      s    nil            var s Student   nil  s    new Student      new      Student      fmt Println  s    nil   s    nil    false   fmt Println  s    nil         cannot convert nil type Student fmt Printf   T n   s     test Student fmt Printf   T n    s    test Student type Student struct   func  s  Student  speak     fmt Println  I student      type IStudent interface   speak       struct           nil    nil            Student    s3    nil       s3    Student   var s3 Student   nil        cannot use nil type Student assignment var s3  Student   nil fmt Println  s3    nil   s3    nil    true fmt Printf   T n   s3     test Student nil                               nil         package main func main            _     struct    nil  _     int nil  _   map int bool nil  _   chan string nil  _    func    nil  _   interface   nil         var _  struct     nil var _   int   nil var _ map int bool   nil var _ chan string   nil var _ func     nil var _ interface     nil   nil          nil                            nil           package main import    fmt    func main     var m map int string var ptr  int var sl   int fmt Printf   p n   m    0x0 fmt Printf   p n   ptr     0x0 fmt Printf   p n   sl     0x0         nil       nil           nil    non nil                 nil              package main import    fmt   unsafe    func main     var p  struct     nil fmt Println  unsafe Sizeof  p        8 var s   int   nil fmt Println  unsafe Sizeof  s        24 var m map int bool   nil fmt Println  unsafe Sizeof  m        8 var c chan string   nil fmt Println  unsafe Sizeof  c        8 var f func     nil fmt Println  unsafe Sizeof  f        8 var interface     nil fmt Println  unsafe Sizeof         16                          64         Go       32                       Go                  nil                           int   string     nil       nil    nil        package main import    fmt    func main     fmt Println nil  nil        tmp sandbox318449491 main go 8  invalid operation  nil    nil  operator    not defined nil    go                 nil                 nil   typed nil  type package main import    fmt    func main     fmt Printf   T   nil  print nil        tmp sandbox379579345 main go 9  use untyped nil print                  nil                           nil        package main import    fmt    func main     var m map int string var ptr  int fmt Printf m    ptr    invalid operation  m    ptr  mismatched types map int string  int           nil        Go                                                                       nil                                                    interface                  channel         channel                                          nil     interface               false             interface      interface        interface                 interface                false     type IntPtr  int    IntPtr        int var _   IntPtr nil       int  nil     Go          interface      var _    interface    nil       int  nil     false      channel                    channel   var _    chan int  nil      chan     method               receiver       nil            method                   package main import  fmt  type interface   M     type T struct   S string   func  t  T  M     t    nil   fmt Println     return   fmt Println t S    func main     var var t  T   t describe i  i M      T  hello   describe i  i M     func describe i I    fmt Printf    v   T  n   i  i           main T     hello    main T  hello      M     return               main T  panic  runtime error  invalid memory address nil pointer dereference  signal SIGSEGV  segmentation violation code 0xffffffff addr 0x0 pc 0xc8971  goroutine 1  running   main   T  M 0x0  0x0   tmp sandbox104196984 main go 18  0x31 main main    tmp sandbox104196984 main go 27  0x60      interface     interface nil      interface     nil        interface   nil            func nilReturn    string error    return nil nil   cannot use nil type string return argument     error       error        map nil key map key       interface slice channel map  key   nil  package main import    fmt    func main     mmap    make map  string int 4  a   a  mmap  a    1 mmap nil    99 fmt Println mmap    map 0xc042008220 1  99       https   blog keyboardman me 2018 05 12 nil in go",
        "objectID": "post/Go中的nil解析",
        "date": "2019-06-04T14:31:13.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中的slice和map的比较方法",
        "uri": "post/Go中的slice和map的比较方法",
        "content": "slice map                          reflect                          slice   map string string                             reflect        reflect      func StringSliceReflectEqual a  b   string  bool   return reflect DeepEqual a  b    func StringMapReflectEqual a  b   map string string  bool   return reflect DeepEqual a  b                  reflect  reflect DeepEqual     a b               func StringSliceEqual a  b   string  bool   len a     len b    return false    a    nil      b    nil    return false   i  v    range   v    b i    return false     return true   func StringMapEqual a  b   map string string  bool   len a     len b    return false    a    nil      b    nil    return false   i  v    range   v    b i    return false     return true                       false      slice    nil    nil   false           slice          false       true       a    nil      b    nil    return false                                                        reflect DeepEqual           int        int nil  map string string    nil Benchmark          Golang reflect                                reflect             reflect    Benchmark                 string    Benchmark StringSliceEqual func BenchmarkEqual b  testing B    sa      string  q    w    e    r    t   sb      string  q    w    a    s    z    x   b ResetTimer   n    0  n   b N  n     StringSliceEqual sa  sb      Benchmark StringSliceReflectEqual func BenchmarkDeepEqual b  testing B    sa      string  q    w    e    r    t   sb      string  q    w    a    s    z    x   b ResetTimer   n    0  n   b N  n     StringSliceReflectEqual sa  sb              b ResetTimer                                                    go test  bench     Benchmark                       3 43           reflect    208                  map string string       https   www jianshu com p 80f5f5173fca",
        "objectID": "post/Go中的slice和map的比较方法",
        "date": "2019-08-26T13:21:13.000Z",
        "tags": [
            "slice",
            "map"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中的SQL操作总结",
        "uri": "post/Go中的SQL操作总结",
        "content": "database sql database sql golang                                                               database sql      type                  DB        sql DB                           golang                                                              go       Results                     sql Rows                 sql Row                                    sql Result  Statements    sql Stmt    sql       DDL DML    sql        prepare              sql DB         warming         sql          mysql           go sql driver mysql                           go                                           sql Open                                        DSN        tcp     unix socket                      tcp IP         charset utf8                      _  github com go sql driver mysql                                  Ping                     const   userName    root  password    123456  ip    127 0 0 1  port    3306  dbName    loginserver      Db       var DB  sql DB             public func InitDB                    tcp IP         charset utf8  path    strings Join   string userName       password    tcp   ip       port        dbName    charset utf8                              _  github com go sql driver mysql  DB  _   sql Open  mysql   path               DB SetConnMaxLifetime 100                  DB SetMaxIdleConns 10         err    DB Ping    err    nil  fmt Println  opon database fail   return   fmt Println  connnect success                                   sql Close        defer                                Exec      sql          func main     db  err    sql Open  mysql    root  tcp 127 0 0 1 3306  test parseTime true   err    nil  log Fatal err    defer db Close   _  err   db Exec  CREATE TABLE NOT EXISTS test hello world varchar 50     err    nil  log Fatalln err                                     func main     db  err    sql Open  mysql    root  tcp 127 0 0 1 3306  test parseTime true       rs  err    db Exec  INSERT test hello world  VALUES   hello world     err    nil  log Fatalln err    rowCount  err    rs RowsAffected   err    nil  log Fatalln err    log Printf  inserted  d rows   rowCount        Exec                     sql Result       LastInsertId           id            id        0                         func main     db  err    sql Open  mysql    root  tcp 127 0 0 1 3306  test parseTime true       rows  err    db Query  SELECT world test hello   err    nil  log Fatalln err    rows Next    var s string err   rows Scan  s  err   nil  log Fatalln err    log Printf  found row containing  q   s    rows Close          Query    select           sql Rows            Next       Scan     s                                          database sql                                         database sql                  sql DB        sql DB                                                                              goroutines                  Close            sql DB              Open   Close                             sql DB                                                           Open   Close        sql DB                    sql DB                                           TIME_WAIT     TCP                               database sql                   database sql          go sql driver mysql   _                                     namespace          sql Open                                                                                                              Exec Query                                                                                                                             Rows                            database sql                                                                                                                       INSERT LOCK TABLES         INSERT                                                                                                    Golang1 1            db SetMaxIdleConns N                         Golang1 2 1           db SetMaxOpenConns N                         bug      db SetMaxOpenConns N  1 2                 db SetMaxIdleConns N                                                     azure          db SetMaxIdleConns 0                                                         db Ping                      db Exec                           Result                                     db Query               sql Rows                   Clonse                    db QueryRow              sql Row     Scan                    db Begin              sql Tx       Commit    Rollback                                sql Open     sql DB          db Ping         db  err    sql Open  driverName    dataSourceName   err    nil  log Fatalln err    defer db Close   err   db Ping   err    nil  log Fatalln err       Ping                                                              log Fatalln err                                                                 database sql                          database sql       10                                                                10                                                go                  1 2                1 2         bug                        db Set",
        "objectID": "post/Go中的SQL操作总结",
        "date": "2018-12-20T15:40:47.000Z",
        "tags": [
            "Go",
            "Mysql"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中读文件的方式比较",
        "uri": "post/Go中读文件的方式比较",
        "content": "golang                              ioutil ReadFile               byte        err    nil       func ReadFile filename string     byte  error          func read4 path string   _ err    ioutil ReadFile path  err    nil panic err     os Open ioutil ReadAll   os Open                         ioutil ReadAll r io Reader        io Reader       Read                    Read                                                  O_RDONLY                        PathError   func Open name string    File  error                  Open Create               os OAPPEND os OCREATE os O_WRONLY        0666                        I O   func OpenFile name string  flag int  perm FileMode    File  error    os Open     ioutil ReadAll          func read3 path string   fi err    os Open path  err    nil panic err   defer fi Close   _ err   ioutil ReadAll fi    os Open os Read        os Open  os OpenFile           File                                                  b                                                                 0 io EOF func  f  File  Read b   byte   n int  err error        off          b                           n           len b              error          err  io EOF func  f  File  ReadAt b   byte  off int64   n int  err error         Read      func read1 path string blocksize int   fi err    os Open path  err    nil  panic err    defer fi Close   block    make   byte blocksize  for  n err    fi Read block  err    nil    err    io EOF panic err   0   n  break      os Open bufio Reader bufio      IO       io Reader io Writer         Reader Writer                      I O                   bufio       Reader                   io Reader                       type Reader struct       NewReader            buffer Reader          4096     NewReaderSize rd 4096  func NewReader rd io Reader   Reader              buffer size   16  Reader      io Reader           Reader      Reader func NewReaderSize rd io Reader  size int   Reader           buffer          func  b  Reader  Buffered   int   Discard        n                   0 500  panic  too large file  500MB    RandFile    random1 txt  filesizeMB  RandFile    random2 txt  filesizeMB  RandFile    random3 txt  filesizeMB  RandFile    random4 txt  filesizeMB  fmt Printf  Created 4 files  file size  d MB   filesizeMB    package main import   fmt   os   flag   io   io ioutil   bufio   time   strconv    func read1 path string blocksize int   fi err    os Open path  err    nil  panic err    defer fi Close   block    make   byte blocksize  for  n err    fi Read block  err    nil    err    io EOF panic err   0   n  break      func read2 path string blocksize int   fi err    os Open path  err    nil panic err   defer fi Close   r    bufio NewReader fi  block    make   byte blocksize  for  n err    r Read block  err    nil    err    io EOF panic err   0   n  break      func read3 path string   fi err    os Open path  err    nil panic err   defer fi Close   _ err   ioutil ReadAll fi    func read4 path string   _ err    ioutil ReadFile path  err    nil panic err     func main    flag Parse   file1       random1 txt  file2       random2 txt  file3       random3 txt  file4       random4 txt  blocksize _   strconv Atoi flag Arg 0   var start end time Time start   time Now   read1 file1 blocksize  end   time Now   fmt Printf  file Read   cost time  v n  end Sub start   start   time Now   read2 file2 blocksize  end   time Now   fmt Printf  bufio Read   cost time  v n  end Sub start   start   time Now   read3 file3  end   time Now   fmt Printf  ioutil ReadAll   cost time  v n  end Sub start   start   time Now   read4 file4  end   time Now   fmt Printf  ioutil ReadFile   cost time  v n  end Sub start       1     4KB              ioutil ReadAll       2     1KB bufio   ioutil ReadAll   os  Read   3     32KB           Read       bufio               ioutil         4     16                    Read                golang                                        buffer                  f Read           syscall Read        bufio NewReader f     NewReaderSize f  defaultBufSize   defaultBufSize 4096      bufio NewReaderSize f 32768                 make   byte  size  ioutil ReadAll f     readAll r  bytes MinRead   bytes MinRead 512       bytes NewBuffer make   byte  0  512    bytes Buffer                        ioutil ReadFile path    readAll f  n bytes MinRead    n            10 9   0 93GB  n        NewBuffer                     n 0          1G     ioutil ReadAll f              ReadFile                   NewBuffer                                    4KB     bufio NewReader f     4KB bufio NewReaderSize f         Reader      ioutil ReadAll             ioutil ReadFile",
        "objectID": "post/Go中读文件的方式比较",
        "date": "2018-11-26T14:27:18.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中获取程序所在目录",
        "uri": "post/Go中获取程序所在目录",
        "content": "1  package main import    fmt   log   os   path filepath    func main     dir  err    filepath Abs filepath Dir os Args 0    err    nil   log Fatal err    fmt Println dir      2  package main import    fmt   os   path filepath    func main     ex  err    os Executable   err    nil   panic err    exPath    filepath Dir ex  fmt Println exPath      3  package main import    fmt   os    func main     pwd  err    os Getwd   err    nil   fmt Println err  os Exit 1    fmt Println pwd      4  package main import    fmt   path filepath    func main     fmt Println filepath Abs",
        "objectID": "post/Go中获取程序所在目录",
        "date": "2019-01-25T15:47:00.000Z",
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中接口的类型转换与判断",
        "uri": "post/Go中接口的类型转换与判断",
        "content": "Go                                                                 Go                                         T x           x       T  Point p      Point p    Point  p     p converted Point",
        "objectID": "post/Go中接口的类型转换与判断",
        "date": "2019-01-28T19:22:50.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "GO中使用select实现带优先级的channel队列",
        "uri": "post/GO中使用select实现带优先级的channel队列",
        "content": "Go        channel      select case",
        "objectID": "post/GO中使用select实现带优先级的channel队列",
        "date": "2019-01-09T20:39:44.000Z",
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中文件及文件夹相关操作",
        "uri": "post/Go中文件及文件夹相关操作",
        "content": "UNIX                  everything file                                                      Go    reader writer                      reader             writer               dev                                          package main import    log   os    var   newFile  os File err error   func main     newFile  err   os Create  test txt   err    nil   log Fatal err    log Println newFile  newFile Close              package main import    log   os    var   fileInfo  os FileInfo err error   func main                error fileInfo  err    os Stat  test txt   err    nil   os IsNotExist err    log Fatal  File does not exist        log Println  File does exist  File information    log Println fileInfo    Truncate   package main import    log   os    func main               100                 100                       null                 100                              100             0        err    os Truncate  test txt   100  err    nil   log Fatal err             package main import    fmt   log   os    var   fileInfo os FileInfo err error   func main                      fileInfo  err   os Stat  test txt   err    nil   log Fatal err    fmt Println  File name    fileInfo Name         fmt Println  Size bytes    fileInfo Size         fmt Println  Permissions    fileInfo Mode           fmt Println  Last modified    fileInfo ModTime             fmt Printf  System interface type   T n   fileInfo Sys    fmt Printf  System info    v n n   fileInfo Sys          Sys                syscall Stat_t    stat lstat           struct stat   os FileInfo                    syscall Stat_t                                         Stat_t      syscall Timespec                       helper function  func timespecToTime ts syscall Timespec  time Time   return time Unix int64 ts Sec   int64 ts Nsec                         Linux   func main     finfo  _    os Stat filename     Sys      interface                         linux   syscall Stat_t statt    finfo Sys     syscall Statt  fmt Println stat_t     atime ctime mtime                      man 2 stat fmt Println timespecToTime stat_t Atim   fmt Println timespecToTime stat_t Ctim   fmt Println timespecToTime stat_t Mtim             Windows     fileInfo  _    os Stat  test log   fileSys    fileInfo Sys     syscall Win32FileAttributeData  nanoseconds    fileSys CreationTime Nanoseconds             createTime    nanoseconds 1e9     nanoseconds    fileSys LastWriteTime Nanoseconds             lastWriteTime    nanoseconds 1e9     fileSys    fileInfo Sys     syscall Win32FileAttributeData  nanoseconds    fileSys LastAccessTime Nanoseconds             lastAccessTime   nanoseconds 1e9     fmt Println lastAccessTime  fmt Println lastWriteTime  fmt Println createTime         package main import    log   os    func main     originalPath       test txt  newPath     test_new txt  err    os Rename originalPath  newPath  err    nil   log Fatal err         Rename                         exec Command  linux mv        package main import    log   os    func main     err    os Remove  test txt   err    nil   log Fatal err              package main import    log   os    func main                                   file  err    os Open  test txt   err    nil   log Fatal err    file Close      OpenFile                       permission mode               file  err   os OpenFile  test txt   os O_APPEND  0666  err    nil   log Fatal err    file Close                                             OpenFile              os OCREATE os OAPPEND       os OCREATE os OTRUNC os O_WRONLY    os O_RDONLY          os O_WRONLY          os O_RDWR          os O_APPEND           Append     os O_CREATE                   os O_TRUNC                 os OEXCL     OCREATE               os O_SYNC       I O               package main import    log   os    func main                            error                error     error                 file  err    os OpenFile  test txt   os O_WRONLY  0666  err    nil   os IsPermission err    log Println  Error  Write permission denied        file Close            file  err   os OpenFile  test txt   os O_RDONLY  0666  err    nil   os IsPermission err    log Println  Error  Read permission denied        file Close                  package main import    log   os   time    func main          Linux         err    os Chmod  test txt   0777  err    nil   log Println err               err   os Chown  test txt   os Getuid    os Getgid    err    nil   log Println err             twoDaysFromNow    time Now   Add 48   time Hour  lastAccessTime    twoDaysFromNow lastModifyTime    twoDaysFromNow err   os Chtimes  test txt   lastAccessTime  lastModifyTime  err    nil   log Println err                             inode                                                                                symbolic link                                                                                    package main import    os   log   fmt    func main                                                                         err    os Link  original txt    original_also txt   err    nil   log Fatal err    fmt Println  creating sym      Create s",
        "objectID": "post/Go中文件及文件夹相关操作",
        "date": "2019-01-25T14:43:50.000Z",
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中写文件的方式比较",
        "uri": "post/Go中写文件的方式比较",
        "content": "ioutil WriteFile        byte   data filename         perm func WriteFile filename string  data   byte  perm os FileMode  error     package main import    io ioutil   fmt    func main     content      byte  hello golang                 err    ioutil WriteFile  output txt   content  0666  err    nil   fmt Println  ioutil WriteFile error     err      os Open os Wirte   os Open                                                                               b       f                n   len b         err func  f  File  Write b   byte   n int  err error     off       f     b    func  f  File  WriteAt b   byte  off int64   n int  err error       Write                     func  f  File  WriteString s string   n int  err error       WriteString  j                                                  os OpenFile                                  func WriteWithFileWrite name content string   fileObj err    os OpenFile name os ORDWR os OCREATE os O_TRUNC 0644  err    nil   fmt Println  Failed open file  err Error    os Exit 2    defer fileObj Close   _ err    fileObj WriteString content  err    nil   fmt Println  Successful writing file os OpenFile  File WriteString method   content    contents      byte content  _ err    fileObj Write contents  err    nil   fmt Println  Successful writing thr file os OpenFile  File Write method   content           os OpenFile name string  flag int  perm FileMode                   flag           const   ORDONLY int   syscall ORDONLY           os Open     OWRONLY int   syscall OWRONLY           ORDWR int   syscall ORDWR             OAPPEND int   syscall OAPPEND                     OCREATE int   syscall OCREAT                 OEXCL int   syscall OEXCL     O_CREATE                   OSYNC int   syscall OSYNC       I O               OTRUNC int   syscall OTRUNC                         os OpenFile io WriteString  io     WriteString               Writer           s  w        byte    w     WriteString              w Write        func WriteString w Writer  s string   n int  err error    Writer      type Writer interface   Write p   byte   n int  err error            io WriteString            func WriteWithIo name content string    fileObj err    os OpenFile name os ORDWR os OCREATE os O_APPEND 0644  err    nil   fmt Println  Failed open file  err Error    os Exit 2    _ err    io WriteString fileObj content  err    nil   fmt Println  Successful appending file os OpenFile io WriteString   content      bufio Write  bufio      Writer                        Writer               NewWriter  NewWriterSize            type Writer struct      contains filtered unexported fields     NewWriterSize NewWriter              Writer      4096  func NewWriter w io Writer   Writer             Writer   func NewWriterSize w io Writer  size int   Writer   Writer                p      buffer                 nn",
        "objectID": "post/Go中写文件的方式比较",
        "date": "2018-11-26T17:33:49.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中新建文件的权限与设置不符的原因与解决方案",
        "uri": "post/Go中新建文件的权限与设置不符的原因与解决方案",
        "content": "Golang                                                     func main     err    os MkdirAll  g10guang t1 t2   0666  err    nil   fmt Println err      output  mkdir g10guang t1  permission denied g10guang               t1            ls  l      g10guang       drw rw r   2 g10guang g10guang 4096 Feb 8 13 23 g10guang Linux                       Linux              Linux                      umask      umask   002    umask      umask       g10guang                 g10guang    cd g10guang           cd  permission denied  g10guang                 cd           cd                         x Linux                            os MkdirAll                     x        w                   vim                                              vim                                                                                         Netrw Directory Listing  netrw v155     home g10guang Templates blog   Sorted name   Sort sequence            h    c    cpp            o    obj    info    swp    ba   Quick Help   help   go dir D delete R rename s sort by x special                                                                                          git   sass cache  _posts  _site  g10guang github io   gitignore  gitmodules 404 html Gemfile Gemfile lock _config yml about md index md                        xxx                                                                            umask             umask       umask                         umask             umask       umask import    os   fmt   syscall    func main     mask    syscall Umask 0        0000     defer syscall Umask mask           umask err    os MkdirAll  g10guang t1 t2   0766  err    nil   fmt Println err                           import    os   fmt    func main     err    os MkdirAll  g10guang t1 t2   0777  err    nil   fmt Println err    os Chmod  g10guang   0777  os Chmod  g10guang t1   0777  os Chmod  g10guang t1 t2   0777    golang                                 Linux          Linux             Python  java                                 Golang                           https   zhuanlan zhihu com p 33692995",
        "objectID": "post/Go中新建文件的权限与设置不符的原因与解决方案",
        "date": "2018-11-23T15:43:28.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中map的使用方式",
        "uri": "post/Go中map的使用方式",
        "content": "map                      map       var m map string string m  a    sssss          panic  assignment entry nil map         make         m  make map string string  m  a    sssss  key key   map  key                      Go           Key                                  struct            key                            slice map function Key                         Key                Key                   package main import  fmt  type _key struct     type point struct   x int y int   type pair struct   x int y int   type Sumer interface   Sum   int   type Suber interface   Sub   int   func  p  pair  Sum   int   return p x   p y   func  p  point  Sum   int   return p x   p y   func  p pair  Sub   int   return p x   p y   func  p point  Sub   int   return p x   p y   func main     fmt Println  key      key       key      key       output  true fmt Println  point      point       point x  1  y  2     point x  1  y  2      output  true fmt Println   point       point        point x  1  y  2      point x  1  y  2      output  false fmt Println   2 point       2 point        2 point point x  1  y  2   point x  2  y  3       2 point point x  1  y  2   point x  2  y  3      output  true var Sumer    pair x  1  y  2  var a1 Sumer    pair x  1  y  2  var b Sumer    point x  1  y  2  fmt Println  Sumer byptr    Sumer byptr        b     output  false fmt Println  Sumer sametype    Sumer sametype        a1     output  false var c Suber   pair x  1  y  2  var d Suber   point x  1  y  2  var d1 point   point x  1  y  2  fmt Println  Suber byvalue    Suber byvalue     c    d     output  false fmt Println  Suber byvalue    point byvalue     d    d1     output  true ci1    make chan int  1  ci2    ci1 ci3    make chan int  1  fmt Println  chan int    chan int     ci1    ci2     output  true fmt Println  chan int    chan int     ci1    ci3     output  false                           chan               Go            Pointer values comparable  Two pointer values equal point variable value nil  Pointers distinct zero size variables may may not equal              nil                        Channel values comparable  Two channel values equal created call value nil Channel      make      nil     Interface values comparable  Two interface values equal identical dynamic types equal dynamic values value nil                                         nil     value x non interface type X value t interface type T comparable when values type X comparable X implements T  equal t s dynamic type identical X t s dynamic value equal x           X   x       T       T   t  t         X                   Struct values comparable fields comparable  Two struct values equal corresponding non blank fields equal                                    Array values comparable values array element type comparable  Two array values equal corresponding elements equal                                  Go             struct            struct     map key    struct                   slice        map key                                     runtime  _type             runtime type go   map  slice  array                    maptype slicetype arraytype   type _type struct   size uintptr ptrdata uintptr hash uint32 tflag tflag align uint8 fieldalign uint8 kind uint8 alg  typeAlg gcdata  byte str nameOff ptrToThis typeOff       type chantype struct   typ _type elem  _type dir uintptr       type slicetype struct   typ _type elem  _type                           alg  typeAlg runtime alg go           hash equal              type typeAlg struct      function hashing objects type     ptr object  seed     hash hash func unsafe Pointer  uintptr  uintptr    function comparing objects type     ptr object A  ptr object B         equal func unsafe Pointer  unsafe Pointer  bool   runtime alg go         hash func  equal func     func strhash a unsafe Pointer  h uintptr  uintptr   x      stringStruct  a  return memhash x str  h  uintptr x len     func strequal p  q unsafe Pointer  bool   return  string  p      string  q           hash func  equal func                  hash                   map key         runtime hashmap go  mapaccess1    func mapaccess1 t maptype  h hmap  key unsafe Pointer  unsafe Pointer       alg    t key alg hash    alg hash key  uintptr h hash0      1 m    uintptr 1    sys PtrSize 8   8   top   minTopHash   top    minTopHash        uintptr 0     bucketCnt  i         k    add unsafe Pointer b   dataOffset i uintptr t keysize   alg equal key  k       3 v    add unsafe Pointer b   dataOffset bucketCntuintptr t keysize  iuintptr t valuesize       return v             mapaccess1                             key   hash      key hash    hash       bucket      key    map value        key   equal                 map  key             hash func  equal func   key                    map            m    make map interface   interface    m _key       value  v  ok    m _key    ok   fmt Println   v   v     output  value   value value           package main import  fmt  type user struct   name string age int school map string school   type school struct   Teacher string Name string   func main     s    map ",
        "objectID": "post/Go中map的使用方式",
        "date": "2019-08-16T19:29:21.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中Map类型Chan类型和Slice类型在函数中的传递",
        "uri": "post/Go中Map类型Chan类型和Slice类型在函数中的传递",
        "content": "int                                                                  int                                                                   func main     i  10 ip   i fmt Printf              p n   ip  modify ip  fmt Println  int            i    func modify ip  int   fmt Printf                   p n   ip   ip 1                               0xc42000c028                 0xc42000c038 int           1                                                                                                                                                          i   10          0xc420018070                  i            i   ip    ip                                  0xc42000c028           ip modify                          ip               0xc42000c038     0xc42000c028  0xc42000c038                        0xc420018070   0xc420018070     i                i                 Go   Golang                 Go                            modify                   0xc42000c028           Map         m1  func main     m    make map int int  mdMap m  fmt Println m    func mdMap m map int int    m 1    100 m 2    200       map 2 200 1 100          m2  func main     var m map int int mdMap m  fmt Println m    func mdMap m map int int    m   make map int int  m 1    100 m 2    200           map                 Go                                        https   blog 1257321977 cos ap beijing myqcloud com 1046505 20170905155707241 1391630050 png                    m               Blog      Map types reference types  pointers slices          Map                Slice                                                                                  m1       mdMap              m         map         m          map   m   m                 m   map           m2       mdMap    m                    map           m    map         m    Slice          Slice  s1  func main     s    make   int  2  mdSlice s  fmt Println s    func mdSlice s   int    s 0    1 s 1    2   s2  func main     var s   int mdSlice s  fmt Println s    func mdSlice s   int    s   make   int  2  s 0    1 s 1    2         s1      1 2  s2               Slice     Map            Slice                  s1    s3  func main     s    make   int  2  mdSlice s  fmt Println s    func mdSlice s   int    s   append s  1  s   append s  2         slice                       0 0                slice            slice                             append             main               main              Slice      func mdSlice s    int    s   append s  1  s   append s  2                                                Chan    chan      map                         func makechan t chantype  size int64  hchan              chan          map     make       hchan",
        "objectID": "post/Go中Map类型Chan类型和Slice类型在函数中的传递",
        "date": "2019-01-10T20:17:20.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中mysql驱动的DSN解析",
        "uri": "post/Go中mysql驱动的DSN解析",
        "content": "DSN               PEAR DB                         username  password     dbname  param1 value1     paramN valueN  DSN        username password protocol address  dbname param value  databasename                DSN    dbname               dbname         DSN               Config FormatDSN            DSN     Password Password                   Protocol                  net Dial             Unix          TCP         net Dial func Dial network  address string   Conn  error  Dial                   tcp   tcp4    IPv4   tcp6    IPv6   udp   udp4    IPv4   udp6    IPv6   ip    ip4    IPv4   ip6    IPv6   unix   unixgram   unixpacket     TCP UDP          host port         IP        IP                              IPv6                 2001 db8    1  80    fe80    1 zone  80       RFC 4007      IPv6        JoinHostPort SplitHostPort                 TCP          IP    Dial        IP               Dial  tcp    golang org http   Dial  tcp    192 0 2 1 http   Dial  tcp    198 51 100 1 80   Dial  udp     2001 db8  1  domain   Dial  udp     fe80  1 lo0  53   Dial  tcp     80     IP         ip   ip4   ip6                         host         IP         IPv6                                  0   255            Dial  ip4 1    192 0 2 1   Dial  ip6 ipv6 icmp    2001 db8  1   Dial  ip6 58    fe80  1 lo0     TCP UDP IP                IP      80   0 0 0 0 80          80   TCP UDP      0 0 0 0        IP           Unix                Address   TCP UDP          host  port    port             host   IPv6                net JoinHostPort net SplitHostPort             Unix        MySQL Server socket         var run mysqld mysqld sock  tmp mysql sock                     true TRUE True 1                            false FALSE False 0  allowAllFiles Type  bool Valid Values  true  false Default  false allowAllFiles true        LOAD DATA LOCAL INFILE                allowCleartextPasswords Type  bool Valid Values  true  false Default  false allowCleartextPasswords true                      PAM                                                                     MySQL Server      TLS   SSL IPsec       allowNativePasswords Type  bool Valid Values  true  false Default  true allowNativePasswords false      MySQL        allowOldPasswords Type  bool Valid Values  true  false Default  false allowOldPasswords true                                    old_passwords wiki    charset Type  string Valid Values  Default  none                 charset  SET NAMES                          charset failes                utf8mb4  MySQL 5 5 3    utf8       charset utf8mb4 utf8      charset                                     collation    collation Type  string Valid Values  Default  utf8mb4generalci                           charset   collation                                                   SHOW COLLATION  utf8mb4generalciMySQL 5 5     collat  ion   utf8generalci     MySQL                           ucs2   utf16   utf16le   utf32             clientFoundRows Type  bool Valid Values  true  false Default  false clientFoundRows true   UPDATE                 columnsWithAlias Type  bool Valid Values  true  false Default  false   columnsWithAlias true    sql Rows Columns                     SELECT u id users u   columnsWithAlias true    u id      id  interpolateParams Type  bool Valid Values  true  false Default  false   interpolateParams true          db Query   db Exec                                    interpolateParams false                                         BIG5 CP932 GB2312 GBK S  JIS                       SQL      loc Type  string Valid Values  Default  UTC   time Time        parseTime true   Local                   time LoadLocation          time Time          MySQL timezone         timezone              DSN        param    url QueryEscape ed               2F   US Pacific loc US 2FPacific  func QueryEscape func QueryEscape s string  string QueryEscape               URL     func LoadLocation func LoadLocation name string    Location  error  LoadLocation         Location           UTC   LoadLocation  UTC       Local   LoadLocation  Local             IANA                     America   New_York   LoadLocation                        Unix   LoadLocation   ZONEINFO              zip            Unix                 GOROOT   lib   time   zoneinfo zip  maxAllowedPacket Type  decimal number Default  4194304                    4 MiB             maxAllowedPacket 0           maxallowedpacket          multiStatements Type  bool Valid Values  true  false Default  false                                SQL                                 multiStatements                     parseTime Type  bool Valid Values  true  false Default  false parseTime true      DATE DATETIME time Time     byte  string         0000 00 00 00 00 00     time Time  readTimeout Type  duration Default  0   O                  ms   s   m   h           30s   0 5m   1m30s   rejectReadOnly Type  bool Valid Values  true  false Default  false rejectReadOnly true                                   mysql                                                                                                      MySQL                                ",
        "objectID": "post/Go中mysql驱动的DSN解析",
        "date": "2019-06-11T16:15:20.000Z",
        "tags": [
            "Go",
            "Mysql"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Go中TrimLeft和TrimPrefix的区别",
        "uri": "post/Go中TrimLeft和TrimPrefix的区别",
        "content": "package main import    fmt   strings    func main     str      some key  fmt Println strings TrimLeft str    some      key Program exited                package main import    fmt   strings    func main     str      some sugar  fmt Println strings TrimLeft str    some      ugar Program exited                           TrimLeft    func TrimLeft func TrimLeft s string  cutset string  string TrimLeft returns slice string s leading Unicode code points contained cutset removed          TrimPrefix     TrimPrefix returns s without provided leading prefix string  s doesn t start prefix  s returned unchanged              cutset                   package main import    fmt   strings    func main     nodeOnlinePrefix      nodesli  kvs      string    nodes online 1ebbaa95eba5     nodes online d39d0dd1c159     nodes online d66b00076d8c     nodes      string   _  v    range kvs   str    fmt Sprintf   s   v  fmt Printf  online node key  s n   str  n    strings TrimLeft str  nodeOnlinePrefix  fmt Printf  online node node  s n   n  nodes   append nodes  strings TrimSpace n     fmt Printf  online nodes   v n   nodes    online node key  nodes online 1ebbaa95eba5 online node node 1ebbaa95eba5 online node key  nodes online d39d0dd1c159 online node node 39d0dd1c159 online node key  nodes online d66b00076d8c online node node 66b00076d8c online nodes   1ebbaa95eba5 39d0dd1c159 66b00076d8c       cutset          TrimLeft               cutset                         1112345111   TrimLeft  1112345111    1         2345111       TrimRight  1112345111    1       1112345   Trim  1112345111    1                  2345    cutset                                                                1       TrimPrefix  1112345111    1                    TrimSuffix     https   wrfly kfd me posts go trimleft and trimprefix",
        "objectID": "post/Go中TrimLeft和TrimPrefix的区别",
        "date": "2019-10-21T20:07:38.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "GoKit脚手架:GoKit-CLI",
        "uri": "post/GoKit脚手架:GoKit-CLI",
        "content": "Go     go kit                                           go kit                                                       bug       Users Bugs Notificator             go github com go kit kit go github com kujtimiihoxha kit         kit new service users kit new service bugs kit new service notificator                                                    users  package service import  context          type UsersService interface   Create ctx context Context  email string  error   bugs  package service import  context     bug   type BugsService interface                  Create ctx context Context  bug string  error   notifcator  package service import  context          type NotificatorService interface                  SendEmail ctx context Context  email string  content string  error     HTTP                                                       cmd             kit generate service users   dmw kit generate service bugs   dmw  dmw                             go kit         HTTP                                             Dockerfile go kit CLI       docker compose            kit generate docker         Dockerfile          docker compose yml             create      docker compose Dockerfiles     go   watcher      Go                                                 8800 8801 8802             curl  XPOST http   localhost 8800 create  d    email    test      GRPC                       REST API     gRPC                  protoc   protobuf   kit generate service notificator  t grpc   dmw         pb                      Notificator         gRPC            notificator pkg grpc pb notificator pb                syntax    proto3   package pb  service Notificator   rpc SendEmail  SendEmailRequest  returns  SendEmailReply     message SendEmailRequest   string email   1  string content   2    message SendEmailReply   string id   1                   endpoint      kit       compile sh           protoc     cd notificator pkg grpc pb   compile sh      notificator pb go                                  UUID                                               id   notificator pkg service service go  import    context  uuid  github com satori go uuid       NotificatorService describes service  type NotificatorService interface      Add methods SendEmail ctx context Context  email string  content string   string  error    type basicNotificatorService struct   func  b  basicNotificatorService  SendEmail ctx context Context  email string  content string   string  error    id  err    uuid NewV4   err    nil   return     err   return id String    nil   notificator pkg service middleware go  func  l loggingMiddleware  SendEmail ctx context Context  email string  content string   string  error    defer func     l logger Log  method    SendEmail    email   email   content   content      return l next SendEmail ctx  email  content    notificator pkg endpoint endpoint go    SendEmailResponse    SendEmail       type SendEmailResponse struct   Id string E0 error json  e0       MakeSendEmailEndpoint    SendEmail       func MakeSendEmailEndpoint s service NotificatorService  endpoint Endpoint   return func ctx context Context  request interface     interface    error    req    request  SendEmailRequest  id  e0    s SendEmail ctx  req Email  req Content  return SendEmailResponse Id  id  E0  e0   nil            TODO grep  R  TODO  notificator            gRPC              notificator pkg grpc handler go  func decodeSendEmailRequest _ context Context  r interface     interface    error    req    r   pb SendEmailRequest  return endpoint SendEmailRequest Email  req Email  Content  req Content   nil   func encodeSendEmailResponse _ context Context  r interface     interface    error    reply    r  endpoint SendEmailResponse  return  pb SendEmailReply Id  reply Id   nil        SendEmail                                                      Docker Compose                                           etcd            etcd                         go kit                eureka consul   zookeeper          Docker Compose                   docker compose yml  etcd  image   quay io coreos etcd v3 1 7  restart  always ports   23791 2379   23801 2380  environment  ETCD_NAME  infra ETCDINITIALADVERTISEPEERURLS   http   etcd 2380  ETCDINITIALCLUSTER  infra http   etcd 2380 ETCDINITIALCLUSTER_STATE  new ETCDINITIALCLUSTER_TOKEN  secrettoken ETCDLISTENCLIENT_URLS   http   etcd 2379 http   localhost 2379  ETCDLISTENPEER_URLS   http   etcd 2380  ETCDADVERTISECLIENT_URLS   http   etcd 2379    etcd         notificator cmd service service go  registrar  err    registerService logger  err    nil   logger Log err  return   defer registrar Deregister   func registerService logger log Logger    sdetcd Registrar  error    var   etcdServer    http   etcd 2379  prefix     services notificator   instance    notificator 8082  key   prefix   instance   client  err    sdetcd NewClient context Background      string etcdServer   sdetcd ClientOptions    err    nil   return nil  err   registrar    sdetcd NewRegistrar client  sdetcd Service  Key  key  Value  instance     logger  registrar Register   return registrar  nil  ",
        "objectID": "post/GoKit脚手架:GoKit-CLI",
        "date": "2020-04-11T14:58:53.000Z",
        "tags": [
            "GoKit"
        ],
        "categories": [
            "GoKit"
        ]
    },
    {
        "title": "GoKit脚手架:truss",
        "uri": "post/GoKit脚手架:truss",
        "content": "Go kit        truss    truss       Go kit             http grpc          truss     grpc http      proto            1   truss go  u  d github com metaverse truss cd  GOPATH src github com metaverse truss dependencies 2   echo proto          general  use proto2  the current default protocol buffers    version   recommend use proto3 gRPC lets use    full range gRPC supported languages  avoiding compatibility    issues proto2 clients talking proto3 servers vice versa  syntax    proto3      package name determines name directories truss creates    package echo  truss will create directory  echo service   package echo  import  github com metaverse truss deftree googlethirdparty annotations proto   service Echo      Echo  echos  incoming string rpc Echo  EchoRequest  returns  EchoResponse    option  google api http         fields  In  query parameters http request unless otherwise specified get    echo  additional_bindings      Trailing slashes different routes get    echo             Louder  echos  incoming string Loudness additional exclamation marks rpc Louder  LouderRequest  returns  EchoResponse    option  google api http      custom   kind   HEAD     Loudness accepted http path path    louder  Loudness     additional_bindings   post    louder  Loudness      fields  In  located body http json request body                LouderGet Louder  pulls fields Loudness  i e  In  query params instead POST rpc LouderGet  LouderRequest  returns  EchoResponse    option  google api http         Loudness accepted http path get    louder  Loudness          message EchoRequest   string   1    message LouderRequest      string echo back string   1     Loudness number exclamations marks add echoed string int32 Loudness   2    message EchoResponse   string   1    3   truss  truss echo proto                             echo service       cmd         echo         main go       handlers         handlers go         hooks go         middlewares go       svc       client         grpc           client go         http         client go       endpoints go       server         run go       transport_grpc go       transport_http go     echo pb go     echo proto     go mod     go sum svc                         handlers handlers go  endpoint               cmd echo                      echo pb go  RPC                echo proto   golang          handlers         truss                     4  handlers                              Metrics            5  handlers handlers go             6 Run Service           grpc http                 grpc    grpc gateway  swagger        handlers            handlers            unexported helper     handlers     Truss  handlers handlers go            proto      rpc         truss                 NAME service                    NAME service                         endpoint svc endpoint go     Code generated truss  NOT EDIT     Rerunning truss will overwrite file     Version  8907ffca23    Version Date  2019 11 27      21 28 21  UTC package svc    file contains methods individual endpoints services     request response types serve endpoints  encoders    decoders types  supported transport serialization    formats  import    context   fmt   github com go kit kit endpoint  pb  test       Endpoints collects endpoints compose add service  It s    meant used helper struct  collect endpoints    single parameter        server  it s useful functions need operate per endpoint    basis  example  pass Endpoints function produces    http Handler  method  endpoint  wired specific path   It    probably mistake design invoke Service methods    Endpoints struct server         client  it s useful collect individually constructed endpoints    single type implements Service interface  example     construct individual endpoints using transport http NewClient  combine Endpoints  return caller Service  type Endpoints struct   EchoEndpoint endpoint Endpoint LouderEndpoint endpoint Endpoint LouderGetEndpoint endpoint Endpoint      Endpoints func  e Endpoints  Echo ctx context Context  pb EchoRequest   pb EchoResponse  error    response  err    e EchoEndpoint ctx  in  err    nil   return nil  err   return response   pb EchoResponse   nil   func  e Endpoints  Louder ctx context Context  pb LouderRequest   pb EchoResponse  error    response  err    e LouderEndpoint ctx  in  err    nil   return nil  err   return response   pb EchoResponse   nil   func  e Endpoints  LouderGet ctx context Context  pb LouderRequest   pb EchoResponse  error    response  err    e LouderGetEndpoint ctx  in  err    nil   return nil  err   return response   pb EchoResponse   nil      Endpoints func MakeEchoEndpoint s pb EchoServer  endpoint Endpoint   return func ctx context Context  request interface     response interface    err error    req    request   pb EchoRequest  v  err    s Echo ctx  req  err    nil   return nil  err   return v  nil     func MakeLouderEndpoint s pb EchoServer  endpoint Endpoint   return func ctx context Context  request interface     response interface    err error    req    request   pb LouderRequest  v  err    s Louder ctx  req  err    nil   return nil  err  ",
        "objectID": "post/GoKit脚手架:truss",
        "date": "2020-04-09T17:16:58.000Z",
        "tags": [
            "Gokit",
            "truss"
        ],
        "categories": [
            "GoKit"
        ]
    },
    {
        "title": "GoKit使用:监控功能",
        "uri": "post/GoKit使用:监控功能",
        "content": "API                API               API API                                          API                API                               API                                   API                                           API                  API     Prometheus       Grafana             docker compose     go kit    prometheus   metric prometheus                      service      ServiceMiddleware            go kit      Service  Prometheus          instrument go              metricMiddleware           Service            requestCount requestLatency type metricMiddleware struct   Service requestCount metrics Counter requestLatency metrics Histogram         Service         Metric                      Metrics        func Metrics requestCount metrics Counter  requestLatency metrics Histogram  ServiceMiddleware   return func next Service  Service   return metricMiddleware  next  requestCount  requestLatency                            Service                                1                                func  mw metricMiddleware  Add a  b int   ret int    defer func beign time Time    lvs      string  method    Add   mw requestCount With lvs     Add 1  mw requestLatency With lvs     Observe time Since beign  Seconds      time Now    ret   mw Service Add a  b  return ret   func  mw metricMiddleware  Subtract a  b int   ret int    defer func beign time Time    lvs      string  method    Subtract   mw requestCount With lvs     Add 1  mw requestLatency With lvs     Observe time Since beign  Seconds      time Now    ret   mw Service Subtract a  b  return ret   func  mw metricMiddleware  Multiply a  b int   ret int    defer func beign time Time    lvs      string  method    Multiply   mw requestCount With lvs     Add 1  mw requestLatency With lvs     Observe time Since beign  Seconds      time Now    ret   mw Service Multiply a  b  return ret   func  mw metricMiddleware  Divide a  b int   ret int  err error    defer func beign time Time    lvs      string  method    Divide   mw requestCount With lvs     Add 1  mw requestLatency With lvs     Observe time Since beign  Seconds      time Now    ret  err   mw Service Divide a  b  return     main go                             fieldKeys      string  method   requestCount    kitprometheus NewCounterFrom stdprometheus CounterOpts  Namespace   test   Subsystem   arithmetic_service   Name   request_count   Help   Number requests received       fieldKeys  requestLatency    kitprometheus NewSummaryFrom stdprometheus SummaryOpts  Namespace   test   Subsystem   arithemetic_service   Name   request_latency   Help   Total duration requests microseconds       fieldKeys    Metrics   Service        svc   Metrics requestCount  requestLatency  svc      Prometheus              API   metrics  http Handle   metrics   promhttp Handler                  https   juejin im post 5c6eb58a6fb9a049dd80e575",
        "objectID": "post/GoKit使用:监控功能",
        "date": "2019-10-29T16:19:40.000Z",
        "tags": [
            "Gokit"
        ],
        "categories": [
            "GoKit"
        ]
    },
    {
        "title": "GoKit使用:结合Gin框架",
        "uri": "post/GoKit使用:结合Gin框架",
        "content": "service go type Service interface   Status ctx context Context   string  error    type statusService struct   func NewService   Service   return statusService     func  statusService  Status ctx context Context   string  error    return  ok   nil   endpoints go type statusRequest struct   type statusResponse struct   Status string json  status    type Endpoints struct   StatusEndpoint endpoint Endpoint   func MakeStatusEndpoint svc Service  endpoint Endpoint   return func ctx context Context  request interface     interface    error    _   request  statusRequest  s  err    svc Status ctx  err    nil   return statusResponse s   err   return statusResponse s   nil     transport go func decodeStatusRequest ctx context Context  r  http Request   interface    error    var req statusRequest return req  nil   type errorer interface   error   error   func encodeResponse ctx context Context  w http ResponseWriter  response interface    error   err  ok    response  errorer  ok    err error      nil   encodeError ctx  w  err error    return nil   w Header   Set  Content Type    application json charset utf 8   return json NewEncoder w  Encode response    func encodeError ctx context Context  w http ResponseWriter  err error    err    nil   panic  encodeError nil error     w Header   Set  Content Type    application json charset utf 8   json NewEncoder w  Encode map string interface     error   err Error         server gofunc NewHTTPServer ctx context Context  endpoints Endpoints   gin Engine   router    gin Default   router Use commonMiddlewar    disk    router Group   disks     v1    disk Group   v1     v1 GET   status   func ctx  gin Context    httptransport NewServer endpoints StatusEndpoint  decodeStatusRequest  encodeResponse         return router   func commonMiddlewar   gin HandlerFunc   return func ctx  gin Context    ctx Writer Header   Add  Context Type    application json       main go func main     ctx    context Background   srv    NewService   errChan    make chan error  go func     c    make chan os Signal  1  signal Notify c  syscall SIGINT  syscall SIGTERM  errChan",
        "objectID": "post/GoKit使用:结合Gin框架",
        "date": "2020-03-15T16:36:48.000Z",
        "tags": [
            "Gokit"
        ],
        "categories": [
            "GoKit"
        ]
    },
    {
        "title": "GoKit使用:链路追踪Zipkin",
        "uri": "post/GoKit使用:链路追踪Zipkin",
        "content": "trace   trace       zipkin      reporter    http NewReporter  http   localhost 9411 api v2 spans                  for select   defer reporter Close       trace    zkTracer  err    opzipkin NewTracer reporter      grpc   before finalizer         trace     zkServerTrace    zipkin GRPCServerTrace zkTracer      options     trace bookListHandler    grpctransport NewServer  bookListEndPoint  decodeRequest  encodeResponse  zkServerTrace                      trace    package main import    grpc test pb   context  grpctransport  github com go kit kit transport grpc   github com go kit kit endpoint   google golang org grpc   net   github com go kit kit sd etcdv3   github com go kit kit log   time   golang org x time rate   github com go kit kit ratelimit  opzipkin  github com openzipkin zipkin go   github com openzipkin zipkin go reporter http   github com go kit kit tracing zipkin   math rand    type BookServer struct   bookListHandler grpctransport Handler bookInfoHandler grpctransport Handler       grpc  GetBookInfo  GetBookInfo          BookServer   Handler ServeGRPC   go kit   func  s BookServer  GetBookInfo ctx context Context  book BookInfoParams    book BookInfo  error    _  rsp  err    s bookInfoHandler ServeGRPC ctx  in  err    nil   return nil  err   return rsp   book BookInfo  err       grpc  GetBookList  GetBookList          BookServer   Handler ServeGRPC   go kit   func  s BookServer  GetBookList ctx context Context  book BookListParams    book BookList  error    _  rsp  err    s bookListHandler ServeGRPC ctx  in  err    nil   return nil  err   return rsp   book BookList  err       bookList EndPoint func makeGetBookListEndpoint   endpoint Endpoint   return func ctx context Context  request interface     interface    error    rand Seed time Now   Unix    randInt    rand Int63n 200  time Sleep  time Duration randInt    time Millisecond                 bl    new book BookList  bl BookList   append bl BookList   book BookInfo BookId 1 BookName  21   php    bl BookList   append bl BookList   book BookInfo BookId 2 BookName  21   java    return bl nil         bookInfo EndPoint func makeGetBookInfoEndpoint   endpoint Endpoint   return func ctx context Context  request interface     interface    error    rand Seed time Now   Unix    randInt    rand Int63n 200  time Sleep  time Duration randInt    time Microsecond                 req    request   book BookInfoParams  b    new book BookInfo  b BookId   req BookId b BookName    21   php  return b nil     func decodeRequest _ context Context  req interface     interface    error    return req  nil   func encodeResponse _ context Context  rsp interface     interface    error    return rsp  nil   func main     var     etcd     etcdServer    127 0 0 1 2379            prefix     services book                 instance    127 0 0 1 50051              key   prefix   instance          val value   instance ctx   context Background            serviceAddress     50051      etcd      options    etcdv3 ClientOptions  DialTimeout  time Second   3  DialKeepAlive  time Second   3        etcd   client  err    etcdv3 NewClient ctx    string etcdServer   options  err    nil   panic err             registrar    etcdv3 NewRegistrar client  etcdv3 Service  Key  key  Value  value     log NewNopLogger               registrar Register   reporter    http NewReporter  http   localhost 9411 api v2 spans   defer reporter Close   zkTracer  err    opzipkin NewTracer reporter  zkServerTrace    zipkin GRPCServerTrace zkTracer  bookServer    new BookServer  bookListEndPoint    makeGetBookListEndpoint           1r s limiter    rate NewLimiter rate Every time Second   1   100000      DelayingLimiter     bookListEndPoint           endPoint bookListEndPoint   ratelimit NewDelayingLimiter limiter  bookListEndPoint  bookListHandler    grpctransport NewServer  bookListEndPoint  decodeRequest  encodeResponse  zkServerTrace    bookServer bookListHandler   bookListHandler bookInfoEndPoint    makeGetBookInfoEndpoint       DelayingLimiter     bookListEndPoint           endPoint bookInfoEndPoint   ratelimit NewDelayingLimiter limiter  bookInfoEndPoint  bookInfoHandler    grpctransport NewServer  bookInfoEndPoint  decodeRequest  encodeResponse  zkServerTrace    bookServer bookInfoHandler   bookInfoHandler ls  _    net Listen  tcp   serviceAddress  gs    grpc NewServer grpc UnaryInterceptor grpctransport Interceptor   book RegisterBookServiceServer gs  bookServer  gs Serve ls       trace   trace       trace     kitzipkin GRPCClientTrace reporter    http NewReporter  http   localhost 9411 api v2 spans   defer reporter Close   zkTracer  err    opzipkin NewTracer reporter  zkClientTrace    zipkin GRPCClientTrace zkTracer      span  span    parentSpan    zkTracer StartSpan  bookCaller   defer parentSpan Flush   ctx   opzipkin NewContext context Background    parentSpan       package main import    context   github com go kit kit sd etcdv3   time   github com go kit kit sd   github com go kit kit log   github com go kit kit endpoint   io   github com go kit kit sd lb   fmt   google golang org grpc   github com afex hystrix go hystrix  ",
        "objectID": "post/GoKit使用:链路追踪Zipkin",
        "date": "2019-10-30T14:57:53.000Z",
        "tags": [
            "Gokit"
        ],
        "categories": [
            "GoKit"
        ]
    },
    {
        "title": "GoKit使用:日志功能",
        "uri": "post/GoKit使用:日志功能",
        "content": "Gokit                 var logger log Logger   logger   log NewLogfmtLogger os Stderr             logger   log With logger   ts   log DefaultTimestampUTC  logger   log With logger   caller   log DefaultCaller                                   logger   log With logger   caller   log DefaultCaller          service         service      ServiceMiddleware   Middleware   service go              ServiceMiddleware define service middleware type ServiceMiddleware func Service  Service             loggings go     loggingMiddleware        Service      logger              loggingMiddleware new type    contains Service interface logger instance type loggingMiddleware struct   Service logger log Logger         LoggingMiddleware                         ServiceMiddleware  ServiceMiddleware    Service         Service                LoggingMiddleware logging middleware func LoggingMiddleware logger log Logger  ServiceMiddleware   return func next Service  Service   return loggingMiddleware next  logger                 loggingMiddleware  Service                                                        logging go      package main import    github com go kit kit log   time       loggingMiddleware new type    contains Service interface logger instance type loggingMiddleware struct   Service logger log Logger      LoggingMiddleware logging middleware func LoggingMiddleware logger log Logger  ServiceMiddleware   return func next Service  Service   return loggingMiddleware next  logger      func  mw loggingMiddleware  Add a  b int   ret int    defer func beign time Time    mw logger Log   function    Add    a   a   b   b   result   ret   took   time Since beign       time Now    ret   mw Service Add a  b  return ret   func  mw loggingMiddleware  Subtract a  b int   ret int    defer func beign time Time    mw logger Log   function    Subtract    a   a   b   b   result   ret   took   time Since beign       time Now    ret   mw Service Subtract a  b  return ret   func  mw loggingMiddleware  Multiply a  b int   ret int    defer func beign time Time    mw logger Log   function    Multiply    a   a   b   b   result   ret   took   time Since beign       time Now    ret   mw Service Multiply a  b  return ret   func  mw loggingMiddleware  Divide a  b int   ret int  err error    defer func beign time Time    mw logger Log   function    Divide    a   a   b   b   result   ret   took   time Since beign       time Now    ret  err   mw Service Divide a  b  return     main     main go   LoggingMiddleware          svc                              package main import    fmt   github com go kit kit log  kithttp  github com go kit kit transport http   net http   os   os signal   syscall    func main     errChan    make chan error  var svc Service svc   ArithmeticService        var logger log Logger   logger   log NewLogfmtLogger os Stderr  logger   log With logger   ts   log DefaultTimestampUTC  logger   log With logger   caller   log DefaultCaller       add logging middleware svc   LoggingMiddleware logger  svc       endpoint    MakeArithmeticEndpoint svc  options      kithttp ServerOption  kithttp ServerErrorHandler transport NewLogErrorHandler logger    kithttp ServerErrorEncoder kithttp DefaultErrorEncoder     http Handle   calculate   kithttp NewServer  endpoint  decodeArithmeticRequest  encodeArithmeticResponse  options        go func     fmt Println  Http Server start port 9000   errChan",
        "objectID": "post/GoKit使用:日志功能",
        "date": "2019-10-28T17:59:10.000Z",
        "tags": [
            "Gokit"
        ],
        "categories": [
            "GoKit"
        ]
    },
    {
        "title": "GoKit使用:熔断与限流",
        "uri": "post/GoKit使用:熔断与限流",
        "content": "gokit   go  golang org x time rate                gokit     endpoint Middleware          function           Endpoint             Middleware chainable behavior modifier endpoints  type Middleware func Endpoint  Endpoint   go     instrument go               bkt   endpoint Middleware       TakeAvaiable                                    instrument go     NewTokenBucketLimitterWithBuildIn      x time rate        package main import    context   errors   github com go kit kit endpoint   golang org x time rate    var ErrLimitExceed   errors New  Rate limit exceed       NewTokenBucketLimitterWithBuildIn   x time rate        func NewTokenBucketLimiter bkt  rate Limiter  endpoint Middleware   return func next endpoint Endpoint  endpoint Endpoint   return func ctx context Context  request interface     response interface    err error     bkt Allow     return nil  ErrLimitExceed   return next ctx  request               golang org x time rate                3           Endpoint      main             add ratelimit refill every second set capacity 3 rateBucket    rate NewLimiter rate Every time Second 1   3  endpoint   NewTokenBucketLimiter rateBucket  endpoint         gokit       import kitratelim  github com go kit kit ratelimit    add ratelimit refill every second set capacity 3 rateBucket    rate NewLimiter rate Every time Second 1   3  endpoint   kitratelim NewErroringLimiter rateBucket  endpoint     go kit         gobreaker handy hystrix go hystrix java             go kit hystrix      go kit hystrix Middleware    Hystrix  Middleware          endPoint   Hystrix endPoint hystrix     commanName     Hystrix       run      fallback   nil    hystrix   Timeout    command           1000   MaxConcurrentRequests command           10 SleepWindow          SleepWindow                          5000   RequestVolumeThreshold        10                                20 ErrorPercentThreshold               RequestVolumeThreshold                        50 RequestVolumeThreshold ErrorPercentThreshold       import  github com go kit kit circuitbreaker  commandName     my endpoint  hystrix ConfigureCommand commandName  hystrix CommandConfig  Timeout  1000   30  ErrorPercentThreshold  1  SleepWindow  10000  MaxConcurrentRequests  1000  RequestVolumeThreshold  5     breakerMw    circuitbreaker Hystrix commandName                 reqEndPoint   breakerMw reqEndPoint             circuitbreaker Hystrix   gokit   breakerMw    circuitbreaker Hystrix commandName            reqEndPoint   breakerMw reqEndPoint  circuitbreaker Hystrix         Hystrix returns endpoint Middleware implements circuit    breaker pattern using afex hystrix go package        When using circuit breaker  please configure commands separately        https   godoc org github com afex hystrix go hystrix    information  func Hystrix commandName string  endpoint Middleware   return func next endpoint Endpoint  endpoint Endpoint   return func ctx context Context  request interface     response interface    err error    var resp interface   err    hystrix Do commandName  func    err error    resp  err   next ctx  request  return err    nil   err    nil   return nil  err   return resp  nil       client      func main     commandName     my endpoint  hystrix ConfigureCommand commandName  hystrix CommandConfig  Timeout  1000   30  ErrorPercentThreshold  1  SleepWindow  10000  MaxConcurrentRequests  1000  RequestVolumeThreshold  5     breakerMw    circuitbreaker Hystrix commandName            reqEndPoint   breakerMw reqEndPoint             endPoint       req    struct        1",
        "objectID": "post/GoKit使用:熔断与限流",
        "date": "2019-10-28T19:54:31.000Z",
        "tags": [
            "Gokit"
        ],
        "categories": [
            "GoKit"
        ]
    },
    {
        "title": "GoKit使用:三层架构",
        "uri": "post/GoKit使用:三层架构",
        "content": "Go kit                   Transport Endpoint Service Transport                          HTTP gRPC                NATS               Go                 Go kit    HTTP gRPC NATS AMQP Thrift            Go kit                                                  HTTP gRPC    Go kit    Endpoint                   Go kit           RPC       RPC   Go                                 RPC                HTTP gRPC                                           Service            Go kit                                              HTTP gRPC                                Go kit                                                                          Go kit    Proto               add proto        pb3                 go kit      syntax    proto3   package pb     Add service definition  service Add      Sums two integers  rpc Sum  SumRequest  returns  SumReply        Concatenates two strings rpc Concat  ConcatRequest  returns  ConcatReply          sum request contains two parameters  message SumRequest   int64   1  int64 b   2       sum response contains result calculation  message SumReply   int64 v   1       Concat request contains two parameters  message ConcatRequest   string   1  string b   2       Concat response contains result concatenation  message ConcatReply   string v   1           Add          Sum   Concat                                     add pb go    protoc add proto   go_out plugins grpc   Service    service go          package server import  context    interface type AddService interface   Sum _ context Context  a  b int   v int  Concat _ context Context  a  b string   v string      service struct type addService struct     returns implementation func New   AddService   return addService     func  addService  Sum _ context Context  a  b int   v int    return   b   func  addService  Concat _ context Context  a  b string   v string    return   b   Endpoint Request     http                                   Service                                                                      Response                                                                      Endpoint Endpoint      http Handler       gokit         Service          Endpoint       Endpoint       Service             ArithmeticRequest         ArithmeticResponse    MakeEndpoint    svc Service            service        endpoints go         endpoint             Endpoints     Service     GRPC             package server import    context   github com go kit kit endpoint      all endpoints required AddService  type Endpoints struct   SumEndpoint endpoint Endpoint ConcatEndpoint endpoint Endpoint   type sumRequest struct   int B int   type sumResponse struct   V int      MakeSumEndpoint returns endpoint invokes Sum AddService    server func MakeSumEndpoint svc AddService  endpoint Endpoint   return func ctx context Context  request interface     interface    error    req    request  sumRequest  v    svc Sum ctx  req A  req B  return sumResponse v   nil        Sum implements AddService   for client func  e Endpoints  Sum ctx context Context  a  b int  int   req    sumRequest A a  B b  res  err    e SumEndpoint ctx  req  err    nil   return sumResponse 0  V   return res  sumResponse  V   type concatRequest struct   string B string   type concatResponse struct   V string      MakeConcatEndpoint returns endpoint invokes Sum AddService    server func MakeConcatEndpoint svc AddService  endpoint Endpoint   return func ctx context Context  request interface     interface    error    req    request  concatRequest  v    svc Concat ctx  req A  req B  return concatResponse v   nil        Concat implements AddService   for client func  e Endpoints  Concat ctx context Context  a  b string  string   req    concatRequest A a  B b  res  err    e ConcatEndpoint ctx  req  err    nil   return concatResponse  error   V   return res  concatResponse  V   Transport Transport                Endpoint            Endpoint                               Transport                                ArithmeticRequest                    ArithmeticResponse   HTTP    http             http handler      encode   decode     http_transport go package server import    context   encoding json  httptransport  github com go kit kit transport http   net http    func MakeHTTPHandler endpoints Endpoints  http Handler   m    http NewServeMux   m Handle   sum   httptransport NewServer  endpoints SumEndpoint  DecodeHTTPSumRequest  EncodeHTTPResponse     m Handle   concat   httptransport NewServer  endpoints ConcatEndpoint  DecodeHTTPConcatRequest  EncodeHTTPResponse     return m   func DecodeHTTPSumRequest _ context Context  r  http Request   interface    error    var request sumRequest err    json NewDecoder r Body  Decode  request   err    nil   return nil  err   return request  nil   func DecodeHTTPConcatRequest _ context Context  r  http Request   interface    error    var request concatRequest err    json NewDecoder r Body  Decode  request   err    nil   return nil  err   return request  nil   func EncodeHTTPResponse _ context Context  w http ResponseWriter  response interface    error   return json NewEncoder w  Encode respo",
        "objectID": "post/GoKit使用:三层架构",
        "date": "2020-03-14T15:55:21.000Z",
        "tags": [
            "Gokit"
        ],
        "categories": [
            "GoKit"
        ]
    },
    {
        "title": "GoKit使用:注册发现",
        "uri": "post/GoKit使用:注册发现",
        "content": "server       1        2        package main import    context   github com go kit kit log   github com go kit kit sd   github com go kit kit sd etcdv3   time    func Register    registar sd Registrar    var     etcd     etcdServer    127 0 0 1 2379            prefix     services arithmetic                 instance    127 0 0 1 9000              key   prefix   instance          val value   instance ctx   context Background       etcd      options    etcdv3 ClientOptions  DialTimeout  time Second   3  DialKeepAlive  time Second   3        etcd   client  err    etcdv3 NewClient ctx    string etcdServer   options  err    nil   panic err             registrar    etcdv3 NewRegistrar client  etcdv3 Service  Key  key  Value  value     log NewNopLogger               registrar Register   return   client client         endpoint      etcd                      Add           go kit     kit sd Endpointer                             Endpointer listens service discovery system yields set    identical endpoints demand  error indicates problem connectivity    service discovery system  within system itself  Endpointer    may yield no endpoints without error  type Endpointer interface   Endpoints      endpoint Endpoint  error       NewEndpointer creates Endpointer subscribes updates Instancer src    uses factory f create Endpoints  src notifies error  Endpointer    keeps returning previously created Endpoints assuming good  unless    behavior disabled via InvalidateOnError option  func NewEndpointer src Instancer  f Factory  logger log Logger  options    EndpointerOption   DefaultEndpointer               Endpointer                    factory          Endpoint            Endpointer                                                       go kit     kit sd lb        RoundRibbon    Retry       endpoint   go  discover enpoints go          endpoint                            endpoint Endpoint                 package main import    context   github com go kit kit endpoint   github com go kit kit log   github com go kit kit sd   github com go kit kit sd etcdv3   github com go kit kit sd lb   time       MakeDiscoverEndpoint   etcd Client      Endpoint                  func MakeDiscoverEndpoint ctx context Context  factory sd Factory logger log Logger  endpoint Endpoint   var             prefix     services arithmetic            duration   500   time Millisecond          etcdServer    127 0 0 1 2379    options    etcdv3 ClientOptions  DialTimeout  time Second   3  DialKeepAlive  time Second   3             client  err    etcdv3 NewClient ctx    string etcdServer   options  err    nil   panic err                    Watch  etc prefix                 instancer  err    etcdv3 NewInstancer client  prefix  logger  err    nil   panic err        etcd             factory  sd Factory endpointer    sd NewEndpointer instancer  factory  logger      RoundRibbon      balancer    lb NewRoundRobin endpointer                       endpoint Endpoint retry    lb Retry 1  duration  balancer  return retry     factory  discover     go  factory go   sd Factory             endpoint   endpoint                go kit    kithttp Client        enc dec method path  endpoint Endpoint                          package main import    context   encoding json   errors   github com go kit kit endpoint   github com go kit kit sd  kithttp  github com go kit kit transport http   io   net http   net url   strconv   strings        instance   path    tgt    enc dec tgt endpoint Endpoint func SumFactory _ context Context  method  path string  sd Factory   return func instance string   endpoint endpoint Endpoint  closer io Closer  err error     strings HasPrefix instance   http     instance    http       instance   tgt  err    url Parse instance  err    nil   return nil  nil  err     path     enc   tgt Path   path var   enc kithttp EncodeRequestFunc dec kithttp DecodeResponseFunc   enc  dec   EecodeHTTPSumRequest  DecodeHTTPSumResponse     path enc dec tgt endpoint Endpoint return kithttp NewClient method  tgt  enc  dec  Endpoint    nil  nil     NewRoundRobin sd NewEndpointer   endpointer   endpoint Endpoint               prefix    instancer        sd NewEndpointer   Endpoint                                     endpoints  _    endpointer Endpoints   fmt Println        len endpoints        endpoint    endpoints 0                 endpoints     NewRoundRobin                        balancer Endpoint     endpoint Endpoint     RoundRibbon      balancer    lb NewRoundRobin endpointer  balancer Endpoint   Gokit                       seeds                 balancer    lb NewRandom endpointer time Now   UnixNano    balancer Endpoint                         main go  main go   etcd     endpoint          package main import    context   time   fmt   github com go kit kit log   os    func main              var logger log Logger   logger   log NewLogfmtLogger os Stderr  logger   log With logger   ts   log DefaultTimestampUTC  logger   log With logger   caller   log DefaultCaller    ctx    context Background       Endpoint     calculate    sd Factory factory    SumFactory ctx   GET    sum   SumDiscoverEndpoint    MakeD",
        "objectID": "post/GoKit使用:注册发现",
        "date": "2019-10-28T17:12:19.000Z",
        "tags": [
            "Gokit"
        ],
        "categories": [
            "GoKit"
        ]
    },
    {
        "title": "GoKit源码:服务注册与发现",
        "uri": "post/GoKit源码:注册发现",
        "content": "etcdv3         client go         doc go     example_test go     instancer go          instancer_test go     integration_test go     registrar go         registrar_test go              client go instancer go registrar go client go type Client interface         value  key   GetEntries prefix string     string  error    watch     key WatchPrefix prefix string  ch chan struct           Register s Service  error        Deregister s Service  error   etcd LeaseID   int64   type client struct     etcd     v3  api cli  clientv3 Client ctx context Context   etcd key value      kv clientv3 KV    etcd watcher      watcher clientv3 Watcher    watcher context wctx context Context    watcher cancel func wcf context CancelFunc    leaseID will 0  clientv3 NoLease  lease not created leaseID clientv3 LeaseID   etcdKeepAlive       hbch",
        "objectID": "post/GoKit源码:注册发现",
        "date": "2019-09-02T17:43:22.000Z",
        "tags": [
            "GoKit",
            "etcd"
        ],
        "categories": [
            "GoKit"
        ]
    },
    {
        "title": "Golang 超大文件读取的两个方案",
        "uri": "post/Golang-超大文件读取的两个方案",
        "content": "log          100G                      func ReadFile filePath string    byte  content  err    ioutil ReadFile filePath  err    nil   log Println  Read error     return content                                                                                                                                bufio    ReadString   ReadLine    ReadString func ReadString filename string  error   f  _    os Open filename  defer f Close   r    bufio NewReader f    line  err    r ReadString   n   err    nil   err    io EOF  fmt Println line          io EOF line       EOF             return nil   return err   fmt Println line      ReadLine ReadLine                                  isPrefix    true                                 isPrefix                false                           ReadLine       nil line        nil err           nil      4096 ReadLine              ReadString      ReadBytes   ReadBytes      copy           func ReadLine filename string    f  _    os Open filename  defer f Close   r    bufio NewReader f    _  err    readLine r  err    nil   break                     4096    func readLine r  bufio Reader   string  error    line  isprefix  err    r ReadLine   isprefix    err    nil   var bs   byte bs  isprefix  err   r ReadLine   line   append line  bs       return string line   err                                                       func ReadBigFile fileName string  handle func   byte   error   f  err    os Open fileName  err    nil   fmt Println  can t opened file   return err   defer f Close   s    make   byte  4096    switch nr  err    f Read s      true   case nr 0  handle s 0 nr       return nil       http   www voidcn com article p dzsrqswp bnv html https   golangcaff com articles 110 two schemes for reading golang super large files orderby votecount",
        "objectID": "post/Golang-超大文件读取的两个方案",
        "date": "2018-11-27T10:37:47.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Golang的单引号、双引号与反引号",
        "uri": "post/Golang的单引号、双引号与反引号",
        "content": "Go                  Go                            Java String C   std  string  python3 str              Go          UTF 8                               Go                                                                                                                              HTML                 Golang        rune        byte                 Unicode code point                      go                  utf 8       Unicode    package main import  fmt  func main     str     Hello       utf 8      0  Unicode       Unicode   _  ch1    range str   fmt Println ch1                               go              byte                                                                  byte      Unicode UTF 8               go                         package main import    fmt   reflect    func main     str     Hello       utf 8      0  Unicode       Unicode   _  ch1    range str   ctype  reflect TypeOf ch1  fmt Printf   s   ctype      uint8 uint8 uint8 uint8 uint8 uint8 uint8 uint8 uint8 uint8 uint8 uint8               Unicode   int32 int32 int32 int32 int32 int32 int32 int32          ch    uint8    byte    ch1    int32    rune   go         utf 8                               for range   range            utf 8   rune                                                                               package main import    fmt    func main     str     Hello                 _  ch1    range str   fmt Printf   q  ch1                 go          fmt Println                                _  ch2    range str   fmt Println string ch2                                                                                                                                                                                                                    Windows                                                                           HTML   JSON                          const GoUsage    Go tool managing Go source code  Usage  go command  arguments                       A  str   abc   123  B  str   abc   123  C  str   123   abc  D  str  123 abc E  str  123  abc  F  str  123  abc       BDF            Go             JavaScript                          Java      char        string     Go             string       byte           rune                                                                                                                                         ASCII            a     b     f     n     r     t      v                           rune                                                                                     xhh     h                              ooo         o   0 7         377                  255                               Unicode               https   blog csdn net benben_2015 article details 78904860",
        "objectID": "post/Golang的单引号、双引号与反引号",
        "date": "2019-04-14T16:45:01.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Golang读写Excel",
        "uri": "post/Golang读写Excel",
        "content": "Excelize   Go           Office Excel         ECMA 376 Office OpenXML                 Microsoft Excel trade  2007          XLSX               Excelize                                    Excel                                                     Go     1 10           API         godoc org                   go github com 360EntSecGroup Skylar excelize    Excel            Excel          package main import    fmt   github com 360EntSecGroup Skylar excelize    func main     f    excelize NewFile              index    f NewSheet  Sheet2              f SetCellValue  Sheet2    A2    Hello world    f SetCellValue  Sheet1    B2   100                 f SetActiveSheet index                err    f SaveAs    Book1 xlsx   err    nil   fmt Println err         Excel          Excel        package main import    fmt   github com 360EntSecGroup Skylar excelize    func main     f  err    excelize OpenFile    Book1 xlsx   err    nil   fmt Println err  return                    cell  err    f GetCellValue  Sheet1    B2   err    nil   fmt Println err  return   fmt Println cell        Sheet1        rows  err    f GetRows  Sheet1   _  row    range rows   _  colCell    range row   fmt Print colCell    t     fmt Println         Excel            Excelize                                                     package main import    fmt   github com 360EntSecGroup Skylar excelize    func main     categories    map string string  A2    Small    A3    Normal    A4    Large    B1    Apple    C1    Orange    D1    Pear   values    map string int  B2   2   C2   3   D2   3   B3   5   C3   2   D3   4   B4   6   C4   7   D4   8  f    excelize NewFile   k  v    range categories   f SetCellValue  Sheet1   k  v    k  v    range values   f SetCellValue  Sheet1   k  v    err    f AddChart  Sheet1    E1     type   col3DClustered   series     name   Sheet1  A 2   categories   Sheet1  B 1  D 1   values   Sheet1  B 2  D 2     name   Sheet1  A 3   categories   Sheet1  B 1  D 1   values   Sheet1  B 3  D 3     name   Sheet1  A 4   categories   Sheet1  B 1  D 1   values   Sheet1  B 4  D 4     title    name   Fruit 3D Clustered Column Chart     err    nil   fmt Println err  return                 err   f SaveAs    Book1 xlsx   err    nil   fmt Println err        Excel         package main import    fmt  _  image gif  _  image jpeg  _  image png   github com 360EntSecGroup Skylar excelize    func main     f  err    excelize OpenFile    Book1 xlsx   err    nil   fmt Println err  return           err   f AddPicture  Sheet1    A2      image1 png       err    nil   fmt Println err                            err   f AddPicture  Sheet1    D2      image2 jpg     xscale   0 5   yscale   0 5   err    nil   fmt Println err                            err   f AddPicture  Sheet1    H2      image3 gif     xoffset   15   yoffset   10   printobj   true   lockaspect_ratio   false   locked   false   err    nil   fmt Println err            err   f Save   err    nil   fmt Println err         https   gitee com xurime excelize",
        "objectID": "post/Golang读写Excel",
        "date": "2019-09-05T18:06:03.000Z",
        "tags": [
            "Go",
            "Excel"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Golang如何获取MySQL的各类型数据",
        "uri": "post/Golang如何获取MySQL的各类型数据",
        "content": "DSN    DSN     loc                       uri  xiaoju  tcp 127 0 0 1 3306  test charset utf8 loc Asia 2FShanghai parseTime true     parseTime                     MySQL    datetime       golang    time Time   string datetime       string       time Parse layout  value    time Time   var lastLoginTime string err   rows Scan  lastLoginTime  loginTime  _    time Parse  2006 01 02 15 04 05   lastLoginTime  fmt Println loginTime        2015 05 22 13 22 51  0000 UTC    UTC                 time ParseInLocation layout  value  loc        DefaultTimeLoc    time Local loginTime  err    time ParseInLocation  2006 01 02 15 04 05   lastLoginTime  DefaultTimeLoc          int   4                             between     mysql                              datetime   8                                    Just stores stored retrieves thing stored         It nothing deal TIMEZONE Conversion                                datetime                    datetime         now                     datetime                                      datetime                    timestamp   4                                  TIMESTAMP     1970   2037            1968 01 01      DATETIME DATE         TIMESTAMP                     0    UTC      stores number milliseconds                                        CURRENT_TIMESTAMP                                         timestamp      timestamp                    timestamp                                              timestamp                    timestamp                                    timestamp             UTC GMT     UTC     GMT                        GMT UTC         UTC            UTC         UTC                                       0800  UTC     0800              1     UTC                0800  2  UTC   Unix            UTC      1970 01 01  0 00 00             UTC      1970                         Unix         https   segmentfault com a 1190000011016366 https   www jianshu com p 444bf0fddcd7 https   reading developerlearning cn discuss 2019 06 19 gorm mysql timestamp",
        "objectID": "post/Golang如何获取MySQL的各类型数据",
        "date": "2019-10-23T13:57:52.000Z",
        "tags": [
            "Go",
            "Mysql"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Golang事务使用的正确方法",
        "uri": "post/Golang事务使用的正确方法",
        "content": "defer  panic    Commit      Rollback                  tx   defer  panic      tx package main import    database sql   x log v7    func logRollback tx  sql Tx    err    tx Rollback   err    tx ErrTxDone    err    nil   log Error       func main     tx  err    sql DB Begin   err    nil   log Error   return   defer sql Rollback tx         defer     Commit check  err  rollback    doSomething                       tx Commit                         result  err    tx Exec query1   err    nil   log Error   return   doSomething   row  err    tx Query query2   err    nil     tx Rollback             defer log Error   return   err    tx Commit    err    nil   log Error   return                                rollback                                      commit         rollback              tag      commit   tag 1   tag 1    rollback package main import    database sql   x log v7    func logRollback tx  sql Tx    err    tx Rollback   err    tx ErrTxDone    err    nil   log Error       func main     tx  err    sql DB Begin   err    nil   log Error   return   defer logRollback tx  result  err    tx Exec query1   err    nil   log Error   return   doSomething   row  err    tx Query query2   err    nil   log Error   return   err    tx Commit    err    nil   log Error   return                             defer tx Rollback                   tx Commit       tx Rollback                          tx Rollback                          func DoSomething    err error    tx  _    db Begin   defer tx Rollback   _  err   tx Exec       err    nil   return   _  err   tx Exec       err    nil   return          err   tx Commit   return         1                              defer                         func DoSomething    err error    tx  _    db Begin   defer tx Rollback   _  err   tx Exec       err    nil   return   _  err   tx Exec       err    nil   return          err   tx Commit   return     err    DoSomething    err    nil              2                                  func DoSomething    err error    tx  _    db Begin   defer tx Rollback   for  _  err   tx Exec       err    nil   return   _  err   tx Exec       err    nil   return            err   tx Commit   return                                                        func DoSomething    err error    tx  err    db Begin   err    nil   return     defer func     p    recover    p    nil   tx Rollback   panic p     re throw panic Rollback       _  err   tx Exec       err    nil     tx Rollback             defer return   _  err   tx Exec       err    nil     tx Rollback   return          err   tx Commit   return",
        "objectID": "post/Golang事务使用的正确方法",
        "date": "2019-06-06T16:35:08.000Z",
        "tags": [
            "Go",
            "Mysql"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Golang中的闭包",
        "uri": "post/Golang中的闭包",
        "content": "21                                                                Python Ruby   Lua                                                                                                          Wiki  Functional Programming     computer science  functional programming programming paradigm treats computation evaluation mathematical functions avoids state mutable data                                                                                                                                                                                                                                                                                                                                                                                                                                                             First class value                                                                                                                                                                                                                                                                                                            First class value                                                                                                                  package main import    fmt    func adder   func int  int   sum    0 innerfunc    func x int  int   sum    x return sum   return innerfunc   func main     pos  neg    adder    adder      0    0x0000000000401090 0x0000000000441fa0  gdb  symbol 0x0000000000401090 main main func1 section  text  root data example closures test           f             c                f                                   main main func1 f                                     main main func1                    gdb  r rax 0xc820000180 859530330496 rbx 0x489370 4756336      gdb  disassemble Dump assembler code function main main  0x0000000000401040   mov  fs 0xfffffffffffffff8  rcx 0x0000000000401049   cmp 0x10  rcx   rsp 0x000000000040104d   jbe 0x401086 0x000000000040104f   sub  0x10  rsp 0x0000000000401053   lea 0x88316  rip   rbx   0x489370 0x000000000040105a   mov  rbx 0x8  rsp     0x000000000040105f   movq  0x100   rsp  0x0000000000401067   mov 0x8  rsp   rbx 0x000000000040106c   mov  rbx  rdx 0x000000000040106f   mov   rdx   rbx 0x0000000000401072   callq   rbx 0x0000000000401074   movq  0x100   rsp  0x000000000040107c   callq 0x401000 0x0000000000401081   add  0x10  rsp 0x0000000000401085   retq 0x0000000000401086   callq 0x44b040 0x000000000040108b   jmp 0x401040 0x000000000040108d   int3 0x000000000040108e   int3 0x000000000040108f   int3 End assembler dump   gdb  p  rsp  2    void    0xc820039f38  gdb  x 1xg 0xc820039f38 0xc820039f38  0x0000000000000000  gdb  ni 0x0000000000401067 11 f 0x100   gdb  x 1xg 0xc820039f38 0xc820039f38  0x0000000000000100                       rbx        func1 f                    31         0x100    rsp               rsp                         0x0000000000000000    ni                           0x0000000000000100             gdb  ni 0x000000000040106c 11 f 0x100   gdb  ni 0x000000000040106f 11 f 0x100   gdb  disassemble Dump assembler code function main main  0x0000000000401040   mov  fs 0xfffffffffffffff8  rcx 0x0000000000401049   cmp 0x10  rcx   rsp 0x000000000040104d   jbe 0x401086 0x000000000040104f   sub  0x10  rsp 0x0000000000401053   lea 0x88316  rip   rbx   0x489370 0x000000000040105a   mov  rbx 0x8  rsp  0x000000000040105f   movq  0x100   rsp  0x0000000000401067   mov 0x8  rsp   rbx 0x000000000040106c   mov  rbx  rdx    0x000000000040106f   mov   rdx   rbx 0x0000000000401072   callq   rbx 0x0000000000401074   movq  0x100   rsp  0x000000000040107c   callq 0x401000 0x0000000000401081   add  0x10  rsp 0x0000000000401085   retq 0x0000000000401086   callq 0x44b040 0x000000000040108b   jmp 0x401040 0x000000000040108d   int3 0x000000000040108e   int3 0x000000000040108f   int3 End assembler dump   gdb  ni 0x0000000000401072 11 f 0x100   gdb  p  rbx  5   4198544  gdb  r rax 0xc820000180 859530330496 rbx 0x401090 4198544      gdb  x 1xg 0x401090 0x401090   0xfffff8250c8b4864          47          rbx              ni                         rbx                  func1           Go                                                func1 f                 rbx                                  Go                           package main func myFunc   func   int  foo    0 return func   int   foo   return foo     func main     bar    myFunc   value_1    bar   value_2    bar   println value_1     1 println value_2     2                       gdb        go build  gcflags   N  l  m  closure_func go command line arguments   closure_func go 5  func literal escapes heap   closure_func go 5  func literal escapes heap   closure_func go 4  moved heap  foo   closure_func go 6   foo escapes heap   gdb closure_func  gdb  b main main Breakpoint 1 0x4010d0  file  root data example closures closure_func go  line 11   gdb  r Starting program   root data example closures closure_func  New LWP 5367   New LWP 5368   New LWP 5370   New LWP 5369  Breakpoint 1  main main     root data example closures closure_func go 1",
        "objectID": "post/Golang中的闭包",
        "date": "2018-12-13T20:24:03.000Z",
        "categories": [
            "Go"
        ]
    },
    {
        "title": "grep命令详解",
        "uri": "post/grep命令详解",
        "content": "grep           grep            grep  options  pattern  file  grep                             grep                                    n                         c                   e           grep  e t  e f file1       t   f            grep      Unix              egrep grep        POSIX        POSIX                           fgrep                                                            fgrep",
        "objectID": "post/grep命令详解",
        "date": "2017-09-09T19:14:34.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "Groupcache的一致性哈希算法",
        "uri": "post/groupcache的一致性哈希算法",
        "content": "Copyright 2013 Google Inc  Licensed Apache License  Version 2 0  the  License    may not use file except compliance License  may obtain copy License http   www apache org licenses LICENSE 2 0 Unless required applicable law agreed writing  software distributed License distributed  AS IS  BASIS  WITHOUT WARRANTIES CONDITIONS KIND  either express implied  License specific language governing permissions limitations License        Package consistenthash provides implementation ring hash  package consistenthash import    hash crc32   sort   strconv    type Hash func data   byte  uint32 type Map struct   hash Hash replicas int keys   int    Sorted hashMap map int string   func New replicas int  fn Hash   Map   m     Map  replicas  replicas  hash  fn  hashMap  make map int string     m hash    nil   m hash   crc32 ChecksumIEEE   return m      Returns true no items available  func  m  Map  IsEmpty   bool   return len m keys     0      Adds keys hash  func  m  Map  Add keys    string    _  key    range keys      0    hash       Means cycled back first replica  idx    len m keys    idx   0   return m hashMap m keys idx        Map    type Map struct   hash Hash    hash    replicas int keys   int    Sorted hashMap map int string   Map               hash         key  hash keys                       hashmap                                                                                                                 replicas                  New   func New replicas int  fn Hash   Map   m     Map  replicas  replicas  hash  fn  hashMap  make map int string            CRC32   m hash    nil   m hash   crc32 ChecksumIEEE   return m   Add      Adds keys hash     Add                 key     IP func  m  Map  Add keys    string    _  key    range keys                     hash     m keys     m hashMap       key       0    hash                                                              Means cycled back first replica  idx    len m keys    idx   0      hash              return m hashMap m keys idx              Get       key                      key         H      h   h",
        "objectID": "post/groupcache的一致性哈希算法",
        "date": "2019-10-14T13:41:45.000Z",
        "tags": [
            "groupcache"
        ],
        "categories": [
            "groupcache"
        ]
    },
    {
        "title": "H-Index",
        "uri": "post/H-Index",
        "content": "LeetCode 274  H Index Given array citations  each citation non negative integer  researcher  write function compute researcher s h index  According definition h index Wikipedia   A scientist index h h his her N papers least h citations each  N   h papers no h citations each   example  given citations    3  0  6  1  5   means researcher 5 papers total received 3  0  6  1  5 citations respectively  researcher 3 papers least 3 citations remaining two no 3 citations each  h index 3  Note  several possible values h  maximum one taken h index             h        SCI             SCI                                             h      0                                                                     class Solution   public  int hIndex vector  citations    sort citations begin   citations end   greater              for int index 0 index citations index   return index    return citations size         LeetCode 275  H Index II Follow H Index  citations array sorted ascending order  optimize algorithm                  i            len i                                                  class Solution   public  int hIndex vector  citations    int left 0  len   citations size    right  len 1  mid  while left   len mid   right   mid   1  else left   mid   1    return len   left",
        "objectID": "post/H-Index",
        "date": "2017-06-24T19:51:15.000Z",
        "tags": [
            "Array",
            "Binary Search"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "head与tail命令详解",
        "uri": "post/head与tail命令详解",
        "content": "cat                                         10   10                 n   n              n   n                     n   m   head tai1               head head                                   10          n                                  head    tail       f      tail tail                                       10      tail      n                         n 2  tail",
        "objectID": "post/head与tail命令详解",
        "date": "2017-09-09T18:30:19.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "Header:Content-Disposition",
        "uri": "post/Header:Content-Disposition",
        "content": "Content Disposition Content Disposition            HTTP           HTTP                                                             Content Disposition              inline                                   attachment                                                 filename               attachment                   filename              Content Disposition                         Content Disposition  inline         Content Disposition  attachment                filename jpg Content Disposition  attachment  filename  filename jpg     multipart form data                                     multipart form data   Content Disposition                                                             form data           name              filename                            Content Disposition   multipart form data                Content Disposition  form data Content Disposition  form data  name  fieldName  Content Disposition  form data  name  fieldName   filename  filename jpg     https   juejin im post 5d521575f265da03ee6a4bda",
        "objectID": "post/Header:Content-Disposition",
        "date": "2019-12-11T20:47:09.000Z",
        "tags": [
            "Content-Disposition",
            "HTTP"
        ],
        "categories": [
            "HTTP"
        ]
    },
    {
        "title": "history命令详解",
        "uri": "post/history命令详解",
        "content": "bash shell                                                 history            bash                         HISTSIZE                                                                                                                             bash_history                      bash                 shell                    shell                bash_history                history    a",
        "objectID": "post/history命令详解",
        "date": "2017-09-08T12:55:02.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "http包解析",
        "uri": "post/http包解析",
        "content": "const   StatusContinue   100 StatusSwitchingProtocols   101 StatusOK   200 StatusCreated   201 StatusAccepted   202 StatusNonAuthoritativeInfo   203 StatusNoContent   204 StatusResetContent   205 StatusPartialContent   206 StatusMultipleChoices   300 StatusMovedPermanently   301 StatusFound   302 StatusSeeOther   303 StatusNotModified   304 StatusUseProxy   305 StatusTemporaryRedirect   307 StatusBadRequest   400 StatusUnauthorized   401 StatusPaymentRequired   402 StatusForbidden   403 StatusNotFound   404 StatusMethodNotAllowed   405 StatusNotAcceptable   406 StatusProxyAuthRequired   407 StatusRequestTimeout   408 StatusConflict   409 StatusGone   410 StatusLengthRequired   411 StatusPreconditionFailed   412 StatusRequestEntityTooLarge   413 StatusRequestURITooLong   414 StatusUnsupportedMediaType   415 StatusRequestedRangeNotSatisfiable   416 StatusExpectationFailed   417 StatusTeapot   418 StatusInternalServerError   500 StatusNotImplemented   501 StatusBadGateway   502 StatusServiceUnavailable   503 StatusGatewayTimeout   504 StatusHTTPVersionNotSupported   505   const DefaultMaxHeaderBytes   1  0     Body       ContentLength int64    TransferEncoding                       identity     TransferEncoding   string    Close                       Connection                 Response Write   ReadResponse           Close bool    Trailer            trailer     Header       Trailer Header    Request               Request Body   nil                    Client                Request  Request    TLS         TLS                   nil               TLS                    TLS  tls ConnectionState   Response    HTTP       func ReadResponse func ReadResponse r bufio Reader  req Request    Response  error  ReadResponse r       HTTP    req                                nil       GET           resp Body                        resp Trailer       trailer                         func   Response  ProtoAtLeast func  r  Response  ProtoAtLeast major  minor int  bool ProtoAtLeast        HTTP       major minor  func   Response  Cookies func  r Response  Cookies     Cookie Cookies          Set Cookie    cookie  func   Response  Location func  r Response  Location    url URL  error  Location      Location    URL                                    Location     nil  ErrNoLocation  func   Response  Write func  r  Response  Write w io Writer  error Write          w          TCPConn               StatusCode ProtoMajor ProtoMinor Request Method TransferEncoding Trailer Body ContentLength Header                         Body               type ResponseWriter type ResponseWriter interface      Header    Header        WriteHeader            WriteHeader Write                 Header   Header    WriteHeader     HTTP                             Write        WriteHeader http StatusOK     WriterHeader                WriteHeader int     Write        HTTP                        WriteHeader        WriteHeader http StatusOK       Header    Content Type                DetectContentType      512               Write   byte   int  error    ResponseWriter   HTTP       HTTP    type Flusher type Flusher interface      Flush                Flush     HTTP   ResponseWriter            Flusher      HTTP                       ResponseWriter       Flush           HTTP                               type CloseNotifier type CloseNotifier interface      CloseNotify                            CloseNotify    0      Body    ContentLength                Body nil     0      Body     ContentLength int64    TransferEncoding                       identity                                     chunked       TransferEncoding   string    Close                                       Close bool         Host  URL                  RFC 2616      Host      URL             Host       host port                 Host              Host               Request Write     URL   Host  Host string    Form            URL   query   POST PUT                  ParseForm                       Body    Form url Values    PostForm     POST PUT                  ParseForm                       Body    PostForm url Values    MultipartForm                               ParseMultipartForm                           Body    MultipartForm  multipart Form    Trailer                                Trailer          trailer        nil               trailer             Body                  Body     EOF  Trailer            nil                                              Trail                           nil         ContentLength     0  1     chunked                       Trailer                           EOF          Trailer           HTTP            HTTP trailer  Trailer Header    RemoteAddr  HTTP                                   ReadRequest                     HTTP              RemoteAddr  IP port                     RemoteAddr    RemoteAddr string    RequestURI                         URI       RFC 2616  Section 5 1          URI                      RequestURI string    TLS    HTTP                 TLS              ReadRequest              TLS       HTTP              TLS       TLS nil               TLS    TLS  tls ConnectionState   Reques",
        "objectID": "post/http包解析",
        "date": "2018-11-15T18:28:57.000Z",
        "tags": [
            "Go标准库"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "HTTP中的长连接与短连接",
        "uri": "post/HTTP中的长连接与短连接",
        "content": "HTTP   TCP IP      HTTP              TCP         IP   IP                TCP         IP                                            TCP                 HTTP        HTTP                                                                                 HTTP                     HTTP    TCP        HTTP    UDP                      HTTP 1 0                             HTTP                                   HTML       Web        Web    JavaScript        CSS               Web         HTTP       HTTP 1 1                         HTTP                 Connection keep alive                                    HTTP    TCP                                          Keep Alive                               Apache                              HTTP               TCP            HTTP                            HTTP                  HTTP                                          HTTP                  TCP   TCP                            TCP                                   HTTP              TCP                              TCP           TCP               server client                                                  3           4                              TCP          TCP       client server       server              client server      server  client                          close         client    close            server     client                                      client server                                                    TCP                     client server     server  client          Client server                                               TCP IP      TCP                                                                                                                                                                                       4                             TCP                                                                       TCP                       75            10            75                                                                                                                2   TCP                                                                                                                                                      TCP                                                                        TCP                                              client                 Client server                                   server             server                                             server                                                                                                                       TCP                              client server                                                                                         TCP                                                                      OK      TCP                                socket        socket               WEB   http                                 WEB",
        "objectID": "post/HTTP中的长连接与短连接",
        "date": "2018-12-13T13:43:21.000Z",
        "categories": [
            "HTTP"
        ]
    },
    {
        "title": "hystrix-go源码剖析",
        "uri": "post/hystrix-go源码剖析",
        "content": "Do Go          Do       runs function synchronous manner  blocking until either function succeeds    error returned  including hystrix circuit errors func Do name string  run runFunc  fallback fallbackFunc  error   runC    func ctx context Context  error   return run     var fallbackC fallbackFuncC fallback    nil   fallbackC   func ctx context Context  err error  error   return fallback err      return DoC context Background    name  runC  fallbackC       DoC runs function synchronous manner  blocking until either function succeeds    error returned  including hystrix circuit errors func DoC ctx context Context  name string  run runFuncC  fallback fallbackFuncC  error   done    make chan struct    1  r    func ctx context Context  error   err    run ctx  err    nil   return err   done                       Buckets          ReportEvent records command metrics tracking recent error rates exposing data dashboard  func  circuit  CircuitBreaker  ReportEvent eventTypes   string  start time Time  runDuration time Duration  error   len eventTypes     0   return fmt Errorf  no event types sent metrics     circuit mutex RLock   o    circuit open circuit mutex RUnlock   eventTypes 0      success     o   circuit setClose     var concurrencyInUse float64 circuit executorPool Max   0   concurrencyInUse   float64 circuit executorPool ActiveCount      float64 circuit executorPool Max    select   case circuit metrics Updates",
        "objectID": "post/hystrix-go源码剖析",
        "date": "2019-11-04T16:07:01.000Z",
        "tags": [
            "hystrix"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "ICMP协议详解",
        "uri": "post/ICMP协议详解",
        "content": "ip                               ICMP  Internet Control Message Protocol   ICMP                            ICMP           ICMP                     ICMP     IP                  IP      ICMP    IP                   IP         ICMP          ICMP       ICMP      ICMP    4                              4       ICMP                     ICMP     ICMP                                         ICMP           IP             IP                  ICMP         ICMP                                                                                                                                                                                                                                                                                                                                                ICMP                      4 28               IP             8          ICMP              ICMP        8         ICMP                       8                  TCP  UDP                TCP                       ICMP    IP                      ICMP              ICMP          ICMP                                 ICMP                      ICMP                127 0 0 0 0 0 0 0        ICMP           ICMP                 ICMP                                                   ICMP                                            ICMP                              ICMP           32               1900  1 1",
        "objectID": "post/ICMP协议详解",
        "date": "2017-07-30T17:29:26.000Z",
        "categories": [
            "网络"
        ]
    },
    {
        "title": "IEEE 754浮点数标准详解",
        "uri": "post/IEEE-754浮点数标准详解",
        "content": "Floating Point Number      Fixed Point Number                                                        55 00    00 55          4                                   4                                                                                                                                                          Base       Exponent                     666 66                 6 6666 10 2     6 6666       10     2                                                                                              666 66       0 66666 103 6 6666 102    66 666 101                                                             d dd d             e                           p          p              d    0             0         d 0  d 1 d 2  d p 1    e                              10                       12 34                  1 10  1  2 10  0  3 10   1  4 10   2             1 234 10 1                                              2       d     0   1            1001 101                  1 2  3  0 2  2  0 2  1  1 2  0  1 2   1  0 2   2  1 2   3              1 001101 2  3                                  1001 101                                             2                       2   101 11 3 4   10 111 7 8                                                 5                                          Go        package main import  fmt  func main     var f1 float32 34 6 var f2 float32 34 5 var f3 float32 34 0 fmt Printf  34 6 34 0  f n  f1 f3  fmt Printf  34 5 34 0  f n  f2 f3  return          34 6 34 0 0 599998 34 5 34 0 0 500000     34 6 34 0 0 599998             34 6                                       34 0                                                                                2            2         13 125                     13     2           1101           0 125     2              0 125 2 0 25     0 0 25 2 0 5     0 0 5 2 1     1           001   13 125 1101 001            1 101001 2  3                                               e  max      e  min            p                e  max    e  min   1                   log 2  e  max  e  min  1    log 2     p    1             1                  20    80           IEEE 754                                                                                                                                       1976   Intel        8086                                                                                      William Kahan                   8087       FPU             William Kahan                    KCS    Kahn Coonan Stone         Intel                Intel     KCS                 IEEE Institute Electrical Electronics Engineers                      KCS       IEEE            IEEE   1985               IEEE 754 IEEE Standard Binary Floating Point Arithmetic ANSI IEEE Std 754 1985             2            ANSI                   IEEE 754                            IBM System 370     IEEE   1987                     IEEE 854            ANSI    1989          IEC    IEEE 754 854       IEC 559 1989              IEC 60559                      IEC 60559    C99          IEC 60559  IEEE                S E M        V      V   1  S M 2 E    1             s Sign        s 0      s 1        0                        M Significand                1  2           0  1                Mantissa      Coefficient                  E Exponent   2                                                                 IEEE 754                              1        s        s  k       exp  e  k 1  e  1 e  0        E  n        frac f  n 1  f 1f 0         M                      0     exp                                  exp          0     0       1         255          8           0 255   255             2047                2                                                      Bias                                                    E e   Bias      e              e  k 1  e  1 e  0     Bias        2  k 1  1       127      1023                         126  127       1022  1023       frac           f    0 f    printf     include    fabs    int main      float f1   0 007  float f2   0 009  int res     fabs f1 f2    23  exponent    exponentRaw   bias var mantissa float64 index  bit    range binary 9 32    bit    49   position    index   1 bitValue    math Pow 2  float64 position   fractional    1   bitValue mantissa   mantissa   fractional     value     1   mantissa    math Pow 2  float64 exponent   fmt Printf  Sign   d Exponent   d   d  Mantissa   f Value   f n n   sign  exponentRaw  exponent  mantissa  value                      Starting Number  0 085000 Bit Pattern  0   0111 1011   010 1110 0001 0100 0111 1011 Sign  0 Exponent  123   4  Mantissa  0 360000 Value  0 085000                                               IEEE 754                 uf         64                IEEE 754                  uf                               IEEE 754       func IsInt bits uint32  bias int    exponent    int bits    23    bias   23 coefficient     bits     1   23    bias   23 coefficient     bits     1   23    bias   23 intTest     coefficient     1   23  exponent    exponentRaw   bias var mantissa float64 index  bit    range binary 9 32    bi",
        "objectID": "post/IEEE-754浮点数标准详解",
        "date": "2019-08-14T10:50:56.000Z",
        "categories": [
            "杂谈"
        ]
    },
    {
        "title": "if-then的测试功能",
        "uri": "post/if-then的测试功能",
        "content": "shell                 exit status   shell                 0 255                  shell                 Linux                                                                      shell                                       0                                          127  exit         shell                                              exit                        cat test13    bin bash testing exit status var1 10 var2 30 var3    var1    var2  echo answer  var3 exit 5                        exit        chmod u x test13     test13 answer 40   echo    5       exit            exit  var3             255           0 255    shell                         256               300         44                    if then             command commands fi bash shell if     if                       11   0             then                           then            bash shell               fi      if then          if then                                         bash shell                                  2        if then else       if then else                 command commands else commands fi                             if then             if then                            else         elif           if then    elif      if then    else    command1 commands elif command2 commands fi                                                   if then else      case             elif                 case                      case variable pattern1   pattern2  commands1   pattern3  commands2      default commands   esac case                                 shell                                                            if then else      case         cat test26 sh    bin bash using case command case  USER rich   barbara  echo  Welcome   USER  echo  Please enjoy visit    testing  echo  Special testing account    jessica  echo  Do not forget log off when you re done       echo  Sorry  not allowed here    esac       test26 sh Welcome  rich Please enjoy visit   case                                test   test      if then               test           test              0    if then            if then                     test                      if then          test           test condition condition test                 if then     test           test condition commands fi     test   condition                    else     bash shell                if then     test      condition   commands fi                                                 test                                   test                                        bash shell                test                                                                      shell                      shell                                sort                                     val1 baseball val2 hockey    val1    val2                                                        hockey               test           0 if                                        val1     val2                                 sort              test                              sort                        sort                                                ASCII          ASCII          sort                                                             n  z                                  shell                           Linux                d                                                             d  jump_directory    e                               e                          f                                     r          s                                     s                 w                   x                          O                   G                                  G                                nt                                           ot                                              if then                               condition1        condition2     condition1        condition2            AND               then                   if then      bash shell       if then                                                                     test                                                  expression    expression                     if                                  val1    2   90       val2    val1    2    echo  The square  val1  val2  fi                                                                     expression          expression   test                   test                  pattern matching                         20                  cat test24 sh    bin bash using pattern matching     USER    r     echo  Hello  USER  else echo  Sorry  not know you  fi     test24 sh 6 Hello rich                         r                           USER                r              shell   then",
        "objectID": "post/if-then的测试功能",
        "date": "2017-08-09T16:17:02.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "ifconfig和route和nslookup和host命令详解",
        "uri": "post/ifconfig和route和nslookup和host命令详解",
        "content": "ifconfig host nslookup route",
        "objectID": "post/ifconfig和route和nslookup和host命令详解",
        "date": "2017-09-09T21:29:11.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "int32_t,int64_t",
        "uri": "post/int32-t-int64-t",
        "content": "int                     C99                              16    char 1   8  short 2   16  int 2   16  long 4   32     2    32    char 1   8  short 2   16  int 4   32  long 4    long long 8       4    64    char 1    short 2    int 4    long 8        long long 8       8                                      long                       typedef signed char int8_t typedef short int int16_t  typedef int int32_t  __WORDSIZE    64 typedef long int int64_t  else extension typedef long long int int64_t   endif   int      intptr_t                                       64         8   32        4          if __WORDSIZE    64 typedef long int intptr_t   else typedef int intptr_t   endif         sizeof                                 ssizet sizet   sign sizet unsigned signed size computer word size               32     int   64    long               intptrt  uintptrt    stddef h           socket accept            sizet         accept   int     sizet   long int      BSD  sockt      C C   64     C C    64                               64                       64         long long _int64   VC   int64             printf   lld  a  printf   I64d  a   cout   a                 C C      64                gcc mingw32  g   mingw32  gcc Linux i386  g   linux i386  Microsoft Visual C   6 0                                          64                                                                                                long long        gcc g               VC6 0  __int64 Win32     64              Linux    lld   Linux i386        I64d   Win32       cout    C      VC6 0  cout   64            linux        long long IO  lld       win                    MS         __int64       Visual Studio   long long      MinGW      long long         IO   I64d    http   blog csdn net hongxdong article details 5559312",
        "objectID": "post/int32-t-int64-t",
        "date": "2017-06-23T20:27:13.000Z",
        "tags": null,
        "categories": [
            "C++"
        ]
    },
    {
        "title": "interface的mock:gomock",
        "uri": "post/interface的mock:gomock",
        "content": "GoMock  Golang                      interface Mock      Golang   testing                   GoMock       GoMock  mockgen        GoMock               mockgen      interface   Mock           func InOrder calls     Call  InOrder            func  ctrl  Controller  Call receiver interface    method string  args    interface      interface   Call   mock          func  c Call  After preReq Call   Call After     preReq      func  c Call  AnyTimes   Call     0     func  c Call  Do f interface    Call              func  c Call  MaxTimes n int  Call           n  func  c Call  MinTimes n int  Call           n  func  c Call  Return rets    interface    Call Return             func  c Call  SetArg n int  value interface    Call SetArg         n      func  c Call  Times n int  Call         n  func NewController t TestReporter   Controller        func WithContext ctx context Context  t TestReporter    Controller  context Context  WithContext                            func  ctrl  Controller  Call receiver interface    method string  args    interface      interface   Mock                func  ctrl  Controller  Finish                                            func  ctrl Controller  RecordCall receiver interface    method string  args    interface    Call  mock                func  ctrl Controller  RecordCallWithMethodType receiver interface    method string  methodType reflect Type  args    interface    Call  mock                func Any   Matcher       func AssignableToTypeOf x interface    Matcher AssignableToTypeOf                                     func Eq x interface    Matcher                        func Nil   Matcher   nil func Not x interface    Matcher                           go github com golang mock gomock            GOPATH src     github com golang mock            GoMock  mockgen            cd  GOPATH src github com golang mock mockgen go build                  mockgen   mockgen      GOPATH bin     mv mockgen  GOPATH bin         mockgen      mockgen            mockgen               bash  mockgen  command not found             PATH    GOPATH bin    mockgen   mockgen               source        mock        source     mockgen  source foo go  other options  reflect             mock                                   mockgen database sql driver Conn Driver                mock                       source    mockgen  source foo go  other options  reflect    mockgen database sql driver Conn Driver                        mock                                   interface              GOPATH                interface   interface                        Mock interface        mockgen      mock      mockgen          source          mock       destination    mock                                package      mock                        mock_              aux_files                              interface                  foo bar baz go   bar baz go     foo  source                             source                      interface       interface  mock   interface                    destination                                 mock                        mock      testing gmock mock_db import     import    testing     github com golang mock gomock   test mock db                   mock   Repository infra db go      package db type Repository interface   Create key string  value   byte  error Retrieve key string     byte  error  Update key string  value   byte  error Delete key string  error       mock     NewController      mock              mock                                                                                  ctrl    NewController t  defer ctrl Finish   mock                  mock                  ctrl    NewController t  defer ctrl Finish   mockRepo    mock_db NewMockRepository ctrl  mockHttp    mock_api NewHttpMethod ctrl         mock              map           map                         map           mock                 Add                  Remove             Retrieve         Create         Retrieve                mock               mockRepo EXPECT   Retrieve Any    Return nil  ErrAny  mockRepo EXPECT   Create Any    Any    Return nil  mockRepo EXPECT   Retrieve Any    Return objBytes  nil  objBytes                obj    Movie      objBytes  err    json Marshal obj         Create        Times     mockRepo EXPECT   Create Any    Any    Return nil  Times 5     Retrieve          mock    mockRepo EXPECT   Retrieve Any    Return objBytes1  nil  mockRepo EXPECT   Retrieve Any    Return objBytes2  nil  mockRepo EXPECT   Retrieve Any    Return objBytes3  nil  mockRepo EXPECT   Retrieve Any    Return objBytes4  nil  mockRepo EXPECT   Retrieve Any    Return objBytes5  nil                      mock                                After           InOrder           After              retrieveCall    mockRepo EXPECT   Retrieve Any    Return nil  ErrAny  createCall    mockRepo EXPECT   Create Any    Any    Return nil  After retrieveCall  mockRepo EXPECT   Retrieve Any    Return objBytes  nil  After createCall    InOrder              InOrder  mockRepo EXPECT   Retrieve Any    Return nil  ErrAny  mockRepo EXPECT   Create Any    Any    Return nil  mo",
        "objectID": "post/interface的mock:gomock",
        "date": "2020-01-07T15:59:29.000Z",
        "tags": [
            "Go",
            "gomock"
        ],
        "categories": [
            "Go测试"
        ]
    },
    {
        "title": "io包解析",
        "uri": "post/io包解析",
        "content": "Variables var EOF   errors New  EOF   EOF           Read    EOF                      EOF             EOF                 ErrUnexpectedEOF               var ErrClosedPipe   errors New  io  read write closed pipe           Pipe           ErrClosedPipe  var ErrNoProgress   errors New  multiple Read calls return no data error       io Reader            Read                           io Reader           var ErrShortBuffer   errors New  short buffer   ErrShortBuffer                       var ErrShortWrite   errors New  short write   ErrShortWrite                             var ErrUnexpectedEOF   errors New  unexpected EOF   ErrUnexpectedEOF                               EOF  type Reader type Reader interface   Read p   byte   n int  err error    Reader               Read    len p       p                     Read     n 0                                          nil               0             Reader             0        err    EOF err    nil          Read       0  EOF               n   0                              I O         EOF      Read       0    nil                             type Writer type Writer interface   Write p   byte   n int  err error    Writer               Write  len p       p                    0",
        "objectID": "post/io包解析",
        "date": "2018-11-15T18:32:33.000Z",
        "tags": [
            "Go标准库"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "ioutil包解析",
        "uri": "post/ioutil包解析",
        "content": "Variables var Discard io Writer   devNull 0  Discard   io Writer        Write                func NopCloser func NopCloser r io Reader  io ReadCloser NopCloser       Close    r    ReadCloser    func ReadAll func ReadAll r io Reader     byte  error  ReadAll r      EOF   error                       err nil  EOF           r  EOF          EOF          func ReadFile func ReadFile filename string     byte  error  ReadFile  filename                           err nil  EOF                         EOF          func WriteFile func WriteFile filename string  data   byte  perm os FileMode  error    filename                                             func ReadDir func ReadDir dirname string     os FileInfo  error    dirname                 func TempDir func TempDir dir  prefix string   name string  err error   dir            prfix                       dir      TempDir                os TempDir                                                     func TempFile func TempFile dir  prefix string   f  os File  err error   dir            prefix                      os File     dir      TempFile                os TempDir",
        "objectID": "post/ioutil包解析",
        "date": "2018-11-15T18:31:51.000Z",
        "tags": [
            "Go标准库"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "IP Address",
        "uri": "post/IP-Address",
        "content": "LeetCode 93  Restore IP Addresses Given string containing digits  restore returning possible valid IP address combinations  example  Given  25525511135   return   255 255 11 135    255 255 111 35     Order does not matter                      0 255   4     start  s       step         0        0 1 2 3 4       intermediate              result        IP    class Solution   public  vector restoreIpAddresses string s    vector result  string ip            dfs s  0  0  ip  result   return result    void dfs string s  int start  int step  string ip vector  result     start    s size      step    4             ip resize ip size     1           result push_back ip   return     s size     start    4   step    3  return                s size     start 4    t empty       t size     1    t 0      0      t size     3  return  Neither    char c   t     c  9   return  Neither     int val   stoi t    val 255  return  Neither     return  cnt    4    IP back              IPv4     Neither     else      Check IPv6  getline is  t            cnt   cnt   8    t empty      t size     4  return  Neither    char c   t       c     0     c    a     c    A     c",
        "objectID": "post/IP-Address",
        "date": "2017-06-24T20:28:40.000Z",
        "tags": [
            "String",
            "Backtracking"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "IP协议头详解",
        "uri": "post/IP协议头详解",
        "content": "IPv4  1      4   IP             IP                  IP      4   IPv4    2        4              15                   32   1 32    4                  5        0101     IP     5 x 4   20          1111        15            15 32     60    IP         4                           IP           4                IP               60                                        20          0101              3        8                                            4                                 16             2 16   1   65 535                                    IP                                             MTU  Maximum Transfer Unit     IP                                                   MTU                MTU  1 500                      MTU                             IP                 IP                                       IP                      IP                               576                      512                IP  60      4          576               576                                                                                                                 5     identification   16  IP                              1                           IP                                   MTU                                                                          6     flag   3                         MF  More Fragment  MF   1                 MF   0                              DF  Don t Fragment               DF   0          7       13                                                              8                         8   64         8        8                TTL  Time Live                                                                       R2              R                        TTL                 TTL                                   1    TTL  1  TTL                                                      1       TTL                                   TTL  1  TTL                          TTL             TTL                                                   255   TTL        1                                                 TTL                      9      8                                  IP                     10        16                                                                                                        IP                         IP          16                           16                                      16                                                          0                               4 15    IP                 11      IP     32                                4         2 3       12             IP            IP                                               IP                        13 IP                                                     1    40                         1        1                                                 0         4                       IP              IP                                                         IP            IP  IPv6  IP                             IPv6      IPv6                  PDU        IPv4       1 IPv6       IPv4      IPv6                    IPv4                                                    2        IPv6                               IPv6                          IPv4                             3                                                         IPv4            4                  5           IPv6                         6  IPv6    8             8           IPv4   4      IPv6         base header                 extension header          10 1                  IPv6                               payload        IPv4   IPv6                                          40                                                                                                    TTL                                                                                                              UDP                       TCP                                                                                          IPv6           8                    IPv6              1     version   4             IPv6    6   2       traffic class   8           IPv6                                3      flow label   20  IPv6                                             IPv6    flow                                                                                                                                                                   0     4         payload length   16     IPv6                                         64 KB  65535      5        next header   8      IPv4            IPv6                      IPv4                           IP               6  17           TCP UDP                                      6       hop limit   8                                             255                              1                         7       128           IP     8       128           IP         IPv4                                                                                                                 IPv6   IPv4                                                                                                          RFC 2460                                   ",
        "objectID": "post/IP协议头详解",
        "date": "2017-07-30T11:26:06.000Z",
        "categories": [
            "网络"
        ]
    },
    {
        "title": "IP协议详解",
        "uri": "post/IP协议详解",
        "content": "IP         IP TCP IP             STEV94 FORO10                    IP                      ARP  Address Resolution Protocol           ICMP  Internet Control Message Protocol          IGMP  Internet Group Management Protocol                   RARP  Reverse Address Resolution Protocol    ARP                                                                                                                                                                                                                                                                                                                                                                                                                                                            1                  repeater    2                   bridge    3                  router     4                    gateway                                                                                                                                                                         TCP IP                    IP                            4 3 a                                              IP  Internet Protocol                             internet                                                          IP                                       IP             IP  IP                           IP       IP                                                                                                  IP                     IP   IP                                          32      IP                         IP                  ICANN  Internet Corporation Assigned Names Numbers                         IP          ID     ID   ID                      ID                                 ID     Internet      5 IP                A  E   A  B  C                         1  2  3                1 3              0  10   110  A  B  C            3  2  1      D     4  1110                   4 6   IP     E     4  1111                             IP         A  B  C             RFC 1812                     IP                             IP      A    A                 7                  0           126   27  2    2      IP     0       this         0 IP                       127   01111111              loopback test                                  127 0 0 1  IP                                                   IP                      127               A        3        A           2 24  2   16 777 214   2       0         IP                            IP   5 6 7 8              5 0 0 0    1       all      1                   IP      2 32   4 294 967 296       A       2 31         IP     50   B    B          2         1 0          14                   14                2            0  1             2         B     128 0 0 0             B        128 1 0 0  COME06    B           214 1  16383  B                 216 2   65 534      2       0  1       B        23Q        IP     25   C    C    3              3   1 1 0    21         C     192 0 0 0            C        192 0 1 0  COME06    C            221 1  2097151     C           28   2  254   C        229       IP    12 5            IP     IP          ARPANET    IP             IP                 A              1 000       B                6                                         10BASE T             1 024              B      6   IP              2                                  B                                 C                  IP         IP                                                                                                                                 IP                                                                                                                                   IP                                                IP                    N                                                                IP                       1985   IP                    IP        IP                                       subnetting   RFC 950                                                                                subnet                                                                                        subnet id                        IP             IP                            IP             4 2                    IP         IP                                 IP                        IP                           4 18         B IP         145 13 0 0      145 13        145 13 X X                  Ri     4 18            4 19           8                   8             145 13 3 0 145 13 7 0  145 13 21 0                                0    145 13 0 0                                                     IP             IP                  IP                   IP                                        145 13 3 10          R                  145 13 3 0         IP                                       32  IP                                                  subnetmask    4 20    4 20 a  IP   145 13 3 10        IP       4 20 b      IP          4 20 c         IP                16        8            16    8             3         145 13 3 0         IP       145 13 0 0   ",
        "objectID": "post/IP协议详解",
        "date": "2017-07-29T17:28:42.000Z",
        "categories": [
            "网络"
        ]
    },
    {
        "title": "Journal与oplog",
        "uri": "post/journal与oplog",
        "content": "journal journal   MongoDB             MongoDB     mmapv1 wiredtiger mongorocks            journal  MongoDB                                 journal                     wiredtiger          journal    wiredtiger                            checkpoint storage syncPeriodSecs       1                                     checkpoint         1                 journal     journal                   journal                           Wiredtiger              checkpoint           journal            MongoDB    journal       2      storage journal enabled       journal storage journal commitInternalMs    journal          100ms              writeConcern    j  ture            journal     oplog oplog   MongoDB                oplog                         Primary Primary            oplog Secondary   Primary     Secondary     oplog                         oplog   MongoDB         capped collection          oplog              MongoDB       MongoDB                                                   oplog       3                                                                                                     oplog                                       MongoDB            3        wiredtiger               beginTransaction    writeDataToColleciton    writeCollectionIndex    writeOplog    commitTransaction    wiredtiger                      3         journal              checkpoint              journal         oplog   journal           oplog   journal   MongoDB                          oplog   MongoDB              oplog                                oplog      3         journal         https   mongoing com archives 3988",
        "objectID": "post/journal与oplog",
        "date": "2020-03-27T16:52:07.000Z",
        "tags": [
            "MongoDB"
        ],
        "categories": [
            "MongoDB"
        ]
    },
    {
        "title": "json包解析",
        "uri": "post/json包解析",
        "content": "func Compact func Compact dst  bytes Buffer  src   byte  error  src           dst  func HTMLEscape func HTMLEscape dst  bytes Buffer  src   byte  HTMLEscape    json   src     U 2028  U 2029      u003c  u003e  u0026  u2028  u2029         json         HTML                              HTML             json      func Indent func Indent dst  bytes Buffer  src   byte  prefix  indent string  error Indent   json           dst JSON                                                     dst                            JSON         src                              src               dst      src        dst       src          dst      package main import    bytes   encoding json   log   os    func main     type Road struct   Name string Number int   roads      Road    Diamond Fork   29     Sheep Creek   51     b  err    json Marshal roads  err    nil   log Fatal err    var bytes Buffer json Indent  out  b         t   out WriteTo os Stdout             Name    Diamond Fork      Number   29             Name    Sheep Creek      Number   51         func Marshal func Marshal v interface       byte  error  Marshal  v JSON    Marshal      v          Marshaler      nil   Marshal    MarshalJSON     JSON      MarshalJSON        encoding TextMarshaler  Marshal   MarshalText         JSON    nil                 UnmarshalJSON                Marshal                      json             Number       json                    UTF 8 JSON     Unicode                       u003c     u003e           JSON     HTML                    u0026         SetEscapeHTML false                        json      byte   base64      nil     null        JSON        struct                                             struct            struct      json                                                                 omitempty                 false 0 nil   nil                                                                                                 struct                  JSON      myName   Field int json  myName       JSON        myName                                 Field int json  myName omitempty       JSON      Field                                  Field int json   omitempty             Field int json          JSON           Field int json       string        JSON          JSON                          JavaScript                      Int64String int64 json   string                Unicode      ASCII                                                                         Go          JSON                                                                                  JSON       Go                                   Go                      1             JSON                                 2                                 3                                Go 1 1        Go 1 1                                                 JSON          JSON                       encoding TextMarshaler                      JSON                    UTF 8             encoding TextMarshalers                         nil      JSON                 nil      null JSON               JSON                Marshal  UnsupportedTypeError  JSON           Marshal               Marshal           Example func MarshalIndent func MarshalIndent v interface    prefix  indent string     byte  error  MarshalIndent Marshal applies Indent format output  JSON element output will begin new line beginning prefix followed one copies indent according indentation nesting    Example func Unmarshal func Unmarshal data   byte  v interface    error Unmarshal parses JSON encoded data stores result value pointed v  v nil not pointer  Unmarshal returns InvalidUnmarshalError  Unmarshal uses inverse encodings Marshal uses  allocating maps  slices  pointers necessary  following additional rules  unmarshal JSON pointer  Unmarshal first handles case JSON JSON literal null  case  Unmarshal sets pointer nil  Otherwise  Unmarshal unmarshals JSON value pointed pointer  pointer nil  Unmarshal allocates new value point to  unmarshal JSON value implementing Unmarshaler interface  Unmarshal calls value s UnmarshalJSON method  including when input JSON null  Otherwise  value implements encoding TextUnmarshaler input JSON quoted string  Unmarshal calls value s UnmarshalText method unquoted form string  unmarshal JSON struct  Unmarshal matches incoming object keys keys used Marshal  either struct field name its tag   preferring exact match accepting case insensitive match  default  object keys don t corresponding struct field ignored  see Decoder DisallowUnknownFields alternative   unmarshal JSON interface value  Unmarshal stores one interface value  bool  JSON booleans float64  JSON numbers string  JSON strings   interface    JSON arrays map string interface    JSON objects nil JSON null unmarshal JSON array slice  Unmarshal resets slice length zero appends element slice  special case  unmarshal empty JSON array slice  Unmarshal replaces slice new empty slice  unmarshal JSON array Go array  Unmarshal decodes JSON array elements corresponding Go array elements  Go array smaller JSON array  additional JSON array elements discarded  JSON array smaller",
        "objectID": "post/json包解析",
        "date": "2018-11-23T16:22:15.000Z",
        "tags": [
            "Go标准库"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "kill命令详解",
        "uri": "post/kill命令详解",
        "content": "kill   kill                kill                  SIGTERM 15                        SIGKILL 9                        ps   job         kill             a                            l          l               p   kill                          s             u                                                9    SIGKILL                                   HUP 1      INT 2      Ctrl   C  QUIT 3      Ctrl      TERM 15    KILL 9      CONT 18     STOP    fg bg    STOP 19      Ctrl   Z  killall   Linux    killall              kill processes name        kill        PID                             ps      grep       killall                      killall       PID     kill                     Firefox                 kill   killall firefox      killall         Z      scontext      e           I       g             i                  l              q          s          v             w          help          version           1           killall nginx killall  9 bash 2         ps aux  grep httpd    httpd killall  I  9 httpd             3              linux         root xkht test     w 21 53 52 35 days  5 06  2 users  load average  0 22  0 32  0 34 USER TTY LOGIN  IDLE JCPU PCPU root pts 0 122 71 227 215 21 49 0 00s 0 02s 0 00s w root pts 2 122 71 227 215 21 49 16 00s 0 01s 0 01s  bash  root xkht test     pkill  9  t pts 2                          pkill   killall pkill                   killall    pkill  pgrep                     pkill                                    kill         PID     kill Firefox             pkill firefox                               pkill fire    pkill             o                      n                      P              g         t                                      grep            kill        kill  l 1  SIGHUP 2  SIGINT 3  SIGQUIT 4  SIGILL 5  SIGTRAP 6  SIGABRT 7  SIGBUS 8  SIGFPE 9  SIGKILL 10  SIGUSR1 11  SIGSEGV 12  SIGUSR2 13  SIGPIPE 14  SIGALRM 15  SIGTERM 16  SIGSTKFLT 17  SIGCHLD 18  SIGCONT 19  SIGSTOP 20  SIGTSTP 21  SIGTTIN 22  SIGTTOU 23  SIGURG 24  SIGXCPU 25  SIGXFSZ 26  SIGVTALRM 27  SIGPROF 28  SIGWINCH 29  SIGIO 30  SIGPWR 31  SIGSYS 34  SIGRTMIN 35  SIGRTMIN 1 36  SIGRTMIN 2 37  SIGRTMIN 3 38  SIGRTMIN 4 39  SIGRTMIN 5 40  SIGRTMIN 6 41  SIGRTMIN 7 42  SIGRTMIN 8 43  SIGRTMIN 9 44  SIGRTMIN 10 45  SIGRTMIN 11 46  SIGRTMIN 12 47  SIGRTMIN 13 48  SIGRTMIN 14 49  SIGRTMIN 15 50  SIGRTMAX 14 51  SIGRTMAX 13 52  SIGRTMAX 12 53  SIGRTMAX 11 54  SIGRTMAX 10 55  SIGRTMAX 9 56  SIGRTMAX 8 57  SIGRTMAX 7 58  SIGRTMAX 6 59  SIGRTMAX 5 60  SIGRTMAX 4 61  SIGRTMAX 3 62  SIGRTMAX 2 63  SIGRTMAX 1 64  SIGRTMAX        1   31      UNIX                      32   63                                                                        SIGRTMIN         1  SIGHUP                                              session                         Linux                 Session                                     Session      Linux                         SIGHUP                                                      wget   SIGHUP               Linux   wget                                              2  SIGINT      interrupt          INTR      Ctrl C                    3  SIGQUIT  SIGINT      QUIT      Ctrl              SIGQUIT      core                       4  SIGILL                                                        5  SIGTRAP         trap       debugger    6  SIGABRT   abort         7  SIGBUS                alignment                         4      SIGSEGV                                                8  SIGFPE                                       0             9  SIGKILL                                                        10  SIGUSR1        11  SIGSEGV                                   12  SIGUSR2        13  SIGPIPE                         FIFO                                    SIGPIPE      Socket             Socket             14  SIGALRM                         alarm         15  SIGTERM      terminate      SIGKILL                               shell  kill                        SIGKILL  17  SIGCHLD                                         wait                                                             SIGCHILD           wait                            init        18  SIGCONT       stopped                         handler      stopped                                 19  SIGSTOP    stopped            terminate  interrupt                                      20  SIGTSTP                            SUSP       Ctrl Z        21  SIGTTIN                              SIGTTIN                  22  SIGTTOU    SIGTTIN                     23  SIGURG         out of band    socket     24  SIGXCPU   CPU               getrlimit setrlimit        25  SIGXFSZ                         26  SIGVTALRM            SIGALRM              CPU    27  SIGPROF    SIGALRM SIGVTALRM          CPU             28  SIGWINCH            29  SIGIO                           30  SIGPWR Power failure 31  SIGSYS                                        SIGKILL SIGSTOP               SIGILL SIGTRAP               SIGABRT SIGBUS SIGFPE SIGILL SIGIOT SIGQUIT SIGSEGV SIGTRAP SIGXCPU SIGXFSZ               SIGALRM SIGHUP SIGINT SIGKILL SIGPIPE SIGPOLL SIGPROF SIGSYS ",
        "objectID": "post/kill命令详解",
        "date": "2018-11-15T18:33:14.000Z",
        "tags": [
            "Shell"
        ],
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "Kingshard的SQL黑名单功能介绍",
        "uri": "post/Kingshard的SQL黑名单功能介绍",
        "content": "kingshard SQL                kingshard                kingshard   SQL       kingshard                  SQL               DBA         SQL   SQL                   SQL           SQL                   SQL     SQL    delete mytable     where   SQL           kingshard        log        SQL DB                    SQL         SQL                  select count    mytable xxxx   SQL                  IO           kingshard     SQL                 blacklistsqlfile   Users flike blacklist      blacklist  SQL      kingshard               SQL        SQL              SQL                             kingshard            SQL           SQL              SQL           SELECT c t id 1 select c t id   SELECT   prices rt_5min id 1 select   prices rt_5min id   select null  5 001  5001  foo select         foo select hello  nhello hello foo select            foo select  hello  select   select   t  base nid   1412    1410    1411    select   t  base nid in      select   foo  5  b  5  8 9  9   10  select   foo in     b in     select   foo limit 5 select   foo limit   select   foo limit 5  10 select   foo limit      select   foo limit 5 offset 10 select   foo limit   offset   INSERT t  ts  VALUES  NOW    insert t  ts  values     insert foo a  b  c  values 2  4  5  insert foo a  b  c  values     CALL foo 1  2  3  call foo LOAD DATA INFILE   tmp foo txt  db tbl load data infile   db tbl administrator command  Init DB administrator command  Init DB use foo use         blacklist    SQL  select count    testshardhash id     select count    testshardrange SELECT   WORLD DELETE WORLD   kingshard   SQL      mysql  select   world  ERROR 1105  HY000   sql blacklist  mysql  select   world   0                      b                     10   23     45   565                   2 rows set  0 00 sec  mysql  delete world  ERROR 1105  HY000   sql blacklist  mysql  delete world  10  Query OK  1 row affected  0 00 sec      SQL     SQL                     kingshard        SQL mysql  select count    testshardhash id  1                 count                     24                1 row set  0 02 sec  mysql  select count    testshardhash id   1  ERROR 1105  HY000   sql blacklist   sysbench       blacklist kingshad                                https   github com flike kingshard blob master README_ZH md",
        "objectID": "post/Kingshard的SQL黑名单功能介绍",
        "date": "2020-03-26T10:54:28.000Z",
        "tags": [
            "Kingshard"
        ],
        "categories": [
            "Kingshard"
        ]
    },
    {
        "title": "Kingshard管理端介绍",
        "uri": "post/kingshard管理端介绍",
        "content": "kingshard                                DB        kingshard          root        admin                       admin server opt k v  values action k1 v1           kingshard    opt          k        v          admin node opt node k v  values action nodeName k1 v1          node   opt          node      node k        v                   DB        slave node1 admin node opt node k v  values  add   node1   slave   127 0 0 1 3306      node1    slave        slave     master admin node opt node k v  values  del   node1   slave   127 0 0 1 3306       slave        admin node opt node k v  values  down   node1   slave   127 0 0 1 3306       slave        admin node opt node k v  values  up   node1   slave   127 0 0 1 3306     master        admin node opt node k v  values  down   node1   master   127 0 0 1 3306     master        admin node opt node k v  values  up   node1   master   127 0 0 1 3306     kingshard      kingshard     mysql  admin server opt k v  values  show   proxy   config                                        Key   Value                                       Addr   127 0 0 1 9696     User_List   root kingshard     LogPath          LogLevel   debug     LogSql       SlowLogTime   10     Nodes_Count   2     Nodes_List   node1 node2     ClientConns   32     ClientQPS   15     ErrLogTotal   12     SlowLogTotal   26                                     6 rows set  0 00 sec  ClientConns        ClientQPS     QPS   ErrLogTotal kingshard              SlowLogTotal kingshard                node   mysql  admin server opt k v  values  show   node   config                                                                                                                                                       Node   Address   Type   State   LastPing   MaxConn   IdleConn   CacheConns   PushConnCount   PopConnCount                                                                                                                                                      node1   127 0 0 1 3306   master     2015 08 07 15 54 44  0800 CST   512   509   2   6301447   6300936     node2   192 168 59 103 3307   master     2015 08 07 15 54 44  0800 CST   512   509   2   6301447   6300936                                                                                                                                                    2 rows set  0 00 sec     schema   mysql  admin server opt k v  values  show   schema   config                                                                                                               User   DB   Table   Type   Key   Nodes_List   Locations   TableRowLimit                                                                                                              kingshard   kingshard     default     node1     0     kingshard   kingshard   testshardhash   hash   id   node1  node2   4  4   0     kingshard   kingshard   testshardrange   range   id   node1  node2   4  4   10000     root   kingshard     default     node1     0                                                                                                            3 rows set  0 00 sec        ip mysql  admin server opt k v  values  show   allow_ip   config                       AllowIP                      127 0 0 1     192 168 10 1                    2 rows set  0 00 sec        sql mysql  admin server opt k v  values  show   black_sql   config                                        BlackListSql                                       select   sbtest1     select   sbtest1 limit                                       2 rows set  0 00 sec    kingshard      kingshard               root                               root      sql     admin server opt k v  values  change   log_sql   off      sql     admin server opt k v  values  change   log_sql   on       sql        ms admin server opt k v  values  change   slowlogtime   50          IP    IP IP  admin server opt k v  values  add   allow_ip   192 168 14 0 24    admin server opt k v  values  add   allow_ip   192 168 15 1          IP admin server opt k v  values  del   allow_ip   127 0 0 1          sql   admin server opt k v  values  add   black_sql   select count    sbtest1         sql   admin server opt k v  values  del   black_sql   select count    sbtest1           admin server opt k v  values  save   proxy   config                kingshard                                         1   kingshard              kingshard       2  kingshard  USR1   kingshard               kill  USR1 pidofkingshard   LVS Keepalived    kingshard     admin server opt k v  values  show   proxy   status      kingshard     online     offline     admin server opt k v  values  change   proxy   online   Web API             restful  API      kingshard Web Server IP     127 0 0 1 9797 web    admin    admin API       node      slave   slave   slave     master     proxy     proxy     proxy schema   proxy          proxy          proxy          proxy black_sql   proxy black_sql   proxy black_sql   proxy slow sql     proxy slow sql      proxy slow sql      proxy      node    Action GET URL http   127 0 0 1 9797 api v1 nodes status           node   ",
        "objectID": "post/kingshard管理端介绍",
        "date": "2020-03-26T10:12:53.000Z",
        "tags": [
            "Kingshard"
        ],
        "categories": [
            "Kingshard"
        ]
    },
    {
        "title": "Kingshard集群与监控",
        "uri": "post/kingshard集群与监控",
        "content": "ks lvs            ks      ks    LVS      ks    keepalived     ks              ks                                    mysql         LVS       LVS       ks     admin server opt k v  values  show   proxy   status            online   LVS      ks          offline          LVS   real server       LVS       ks  LVS       admin server opt k v  values  change   proxy   offline           LVS           real server     offline         ks                            ks                  keepalived       keepalived           real server     admin server opt k v  values  show   proxy   status            online   keepalived  IP    ks                  offline          keepalived   ks        IP    ks                       admin server opt k v  values  change   proxy   offline               ks                  IP       ks                             ks                prometheus      prometheus                      Prometheus          tar xvfz prometheus   tar gz cd prometheus     prometheus   yml       yml                        kingshard   9708    prometheus          http   localhost 8080 metrics                                       prometheus   prometheus  config file prometheus yml         golang                     idle            idle               cache      HELP idleConn db idle connection TYPE idleConn gauge idleConn addr  10 10 60 189 3306  type  master   384 idleConn addr  10 10 60 189 3307  type  slave   384 idleConn addr  10 10 60 189 3308  type  slave   384 cache            cache               idle                      HELP cacheConns db cache connection TYPE cacheConns gauge cacheConns addr  10 10 60 189 3306  type  master   128 cacheConns addr  10 10 60 189 3307  type  slave   128 cacheConns addr  10 10 60 189 3308  type  slave   128 maxConn               maxConn   HELP maxConn max connection config TYPE maxConn gauge maxConn addr  10 10 60 189 3306  type  master   512 maxConn addr  10 10 60 189 3307  type  slave   512 maxConn addr  10 10 60 189 3308  type  slave   512 pushConnCount                                  HELP pushConnCount db pushConnCount TYPE pushConnCount gauge pushConnCount addr  10 10 60 189 3306  type  master   512 pushConnCount addr  10 10 60 189 3307  type  slave   512 pushConnCount addr  10 10 60 189 3308  type  slave   512 popConnCount                                  HELP popConnCount db popConnCount TYPE popConnCount gauge popConnCount addr  10 10 60 189 3306  type  master   0 popConnCount addr  10 10 60 189 3307  type  slave   0 popConnCount addr  10 10 60 189 3308  type  slave   0    https   github com flike kingshard blob master README_ZH md",
        "objectID": "post/kingshard集群与监控",
        "date": "2020-03-26T10:16:49.000Z",
        "tags": [
            "Kingshard"
        ],
        "categories": [
            "Kingshard"
        ]
    },
    {
        "title": "Kingshard架构设计和功能实现",
        "uri": "post/Kingshard架构设计和功能实现",
        "content": "kingshard   kingshard    Go     MySQL Proxy   kingshard                    MySQL          DBA  kingshard       MySQL       kingshard      MySQL   80           1         SQL           MySQL                    DB   DB              slave slave                              java php python C C   Go SDK mysql prepare         DB            SQL            SQL            IP               IP    kingshard   IP                lastinsertid                  kingshard                   Web API       kingshard                               2  sharding         hash range                                                     count sum max min              join                join          order by group by limit        sql                                                  insert delete update replace   node      kingshard          1       kingshard  Go         Go        Go                      kingshard      kingshard                                                            goroutine                          MySQL                                                                                          SQL    kingshard         SQL                SQL      SQL               SQL         DB                        DB     SQL       DB    DB      goroutine  SQL    DB                         kingshard                kingshard          2            kingshard                SQL         SQL           SQL                 SQL    select name stu id report pdf 2                                    report         TCP                       TCP           TCP                                     TCP socket                                  TCP payload   TCP              TCP payload                                                                                          payload              maximum segment size    MSS  TCP      Nagle                                                                                          TCP                                                                        GO   Sockets API                  func  c  TCPConn  SetNoDelay noDelay bool  error      Go           true                     false                               2 1                       proxy server server go    newClientConn   backend backend_conn go  ReConnect       client kingshard      kingshard MySQL                                   sysbench                            OLTP test statistics  queries performed  read  160174 write  0 other  0 total  160174 transactions  160174  21291 68 per sec   deadlocks  0  0 00 per sec   read write requests  160174  21291 68 per sec   operations  0  0 00 per sec   Test execution summary  total time  7 5228s total number events  160174 total time taken event execution  119 9655 per request statistics  min  0 26ms avg  0 75ms max  10 78ms approx  95 percentile  1 13ms Threads fairness  events  avg stddev   10010 8750 38 65 execution time  avg stddev   7 4978 0 00        QPS  21291 68 21670 85 21463 44       MySQL   77               18                    Go     pprof kingshard                Go                                                                         Go                  kingshard        1      1 1                         OS      Ubuntu 14 04 LTS   CPU  Common KVM CPU   2 40GHz  4   RAM  8GB   DISK  500GB   kingshard master     Mysql  v5 6 25   Sysbench  v0 5  2          kingshard  SQL     DB  SQL                      maxconnslimit   kingshard            3        3 1 kingshard                4         kingshard           A   sysbench    B   kingshard      C         D                                  kingshard               kingshard   sysbench v0 5            sysbench 4                    time sysbench   test  data home test_user software sysbench sysbench tests db oltp lua     mysql host host     mysql port 9696     mysql user kingshard     mysql password kingshard     mysql db kingshard     oltp tables count 1     oltp table size 1000000     num threads 50     max requests 1000000     report interval 1   prepare         sbtest1     100w         CREATE TABLE sbtest1   id int 10  unsigned NOT NULL AUTO_INCREMENT  k int 10  unsigned NOT NULL DEFAULT  0   c char 120  NOT NULL DEFAULT     pad char 60  NOT NULL DEFAULT     KEY xid  id   KEY k_1  k    ENGINE InnoDB AUTOINCREMENT 1000001 DEFAULT CHARSET utf8 MAXROWS 1000000  4 1 kingshard   DB       sysbench    kingshard  SQL     DB  SQL         kingshard Mysql          QPS   SQL            sysbench    SQL   select update insert delete           4 1     4 1 1 kingshard   DB         host port           kingshard  SQL   DB  time sysbench   test  data home test_user software sysbench sysbench tests db select lua     mysql host host     mysql port 9696     mysql user kingshard     mysql password kingshard     mysql db kingshard     oltp tables count 1     oltp table size 1000000     num threads 16     max requests 1000000     report interval 1     max time 20   run   sysbench                           100w  select         num threads                  kingshard     DB         QPS QPS                 kingshard     DB           sql                                                     QPS ",
        "objectID": "post/Kingshard架构设计和功能实现",
        "date": "2020-03-24T17:13:47.000Z",
        "tags": [
            "Kingshard"
        ],
        "categories": [
            "Kingshard"
        ]
    },
    {
        "title": "Kingshard使用指南",
        "uri": "post/Kingshard使用指南",
        "content": "MySQL                                     MySQL                             MySQL                                          slave                                                        5            delete                   MySQL IO                                                                           MySQL                                             host                                 MySQL   IO               DBA      slave                                                       MySQL    MySQL                               DB       MySQL              MySQL                     SQL                       MySQL       SQL                    SQL            SQL      DB                                                                     kingshard   5                  kingshard                                                               kingshard       addr   0 0 0 0 9696   kingshard              user_list  user   kingshard password   kingshard  kingshard web API    web_addr   0 0 0 0 9797    API        web_user   admin web_password   admin log    debug info warn error     error log_level   debug   SQL      on   SQL      off log_sql                SQL      slowlogtime ms  SQL           SQL   slowlogtime   100                       log_path    Users flike log sql                sql   kingshard      blacklistsqlfile   Users flike blacklist       IP    kingshard          kingshard IP      allow_ips  127 0 0 1 kingshard                 kingshard  utf8         proxy_charset  utf8mb4   node    mysql                          nodes    node     name   node1                 kingshard     DB  maxconnslimit    maxconnslimit   16 kingshard   node mysql        master slave            user   kingshard password   kingshard master       master   127 0 0 1 3306 slave             slave   192 168 0 12 2 192 168 0 13 3  kingshard 300       mysql kingshard     mysql downafternoalive   300 name   node2 maxconnslimit   16 user   kingshard password   kingshard master   192 168 59 103 3307 slave   downafternoalive  100          schema_list    schema       user  kingshard       node   nodes   node1 node2         SQL       node  default  node1 shard        db db   kingshard       table  testshardhash       key  id       node nodes   node1  node2        type  hash           node1 4      node2 4     locations   4 4        db db   kingshard       table  testshardrange       key  id       type  range       node nodes   node1  node2            node1 4      node2 4     locations   4 4                                10000       1   id  0 10000    2 10000 20000      tablerowlimit  10000                 kingshard            hash range  kingshard                db            tablename 4d          4        tablename0000 tablename0102          SQL               sharding     schema     kingshard       schemas            schema          db     schemas        nodes              rules sharding     rules           default              shard default           SQL       node  hash hash      range range             Go                  Google  git clone https   github com flike kingshard git src github com flike kingshard cd src github com flike kingshard source   dev sh          kingshard   bin kingshard  config etc ks yaml     1  kingshard   SIGINT SIGTERM SIGQUIT              kingshard                  kingshard          kingshard    supervisor   2  kingshard    yaml               yaml         tab                            yaml lint             3        bin kingshard  v   kingshard commit hash          kingshard     4  etc           ks yaml unshard yaml              ks yaml               unshard yaml                     MySQL                     Master    MySQL                            hash range           hash        range                        node1 node2    4          node1 testshardhash0000   SQL          SQL     node1   testshardhash0000  testshardhash0001  testshardhash0002  testshardhash0003 node2   testshardhash0004  testshardhash0005  testshardhash0006  testshardhash_0007  CREATE TABLE testshardhash_0000   id bigint 64  unsigned NOT NULL  str varchar 256  DEFAULT NULL  f double DEFAULT NULL  e enum  test1   test2   DEFAULT NULL  u tinyint 3  unsigned DEFAULT NULL  tinyint 4  DEFAULT NULL  PRIMARY KEY  id    ENGINE InnoDB DEFAULT CHARSET utf8              SQL              SQL                     select      node           node  kingshard           node                              node      mysql  insert testshardhash id str f e u i  values 15  flike  3 14  test2  2 3   Query OK  1 row affected  0 01 sec  mysql  mysql  insert testshardhash id str f e u i  values 7  chen  2 1  test1  32 3   Query OK  1 row affected  0 01 sec  mysql  insert testshardhash id str f e u i  values 17  github  2 5  test1  32 3   Query OK  1 row affected  0 00 sec  mysql  insert testshardhash id str f e u i  values 18  kingshard  7 3  test1  32 3   Query OK  1 row affected  0 01 sec     SQL        2015 09 02 18 48 24   INFO   127 0 0 1 55003  192 168 59 103 3307 insert testshardhash_0007 id  str  f  e  u  i  values  15   flike   3 14   test2   2  3  2015 09 02 18 49 05   INFO   127 0 0 1",
        "objectID": "post/Kingshard使用指南",
        "date": "2020-03-25T00:10:16.000Z",
        "tags": [
            "Kingshard"
        ],
        "categories": [
            "Kingshard"
        ]
    },
    {
        "title": "KMP算法详解",
        "uri": "post/KMP算法详解",
        "content": "kmp                O f      n m   f   O                        a                b                O nm  kmp      O m               O n m        next     next                     next i   P 0    P i   1                      0                                                                                         i   6                     ABCDAB                 AB    i   6   D             i   2   C                AB     AB  ABCDAB             2               i   5           i   1                             B                              KMP                             void getNext int  next  string  needle int lenb    int   0  j    1  next 0     1   i   lenb   1     j     1    needle i     needle j   j   next j    next                i    j                     AAAAB    4 A  0123                  i 1 j 1              i       i j     j            j        needle i     needle j   next i    next j   else next i    j              while   j     1                  j         1     P i     P j              else    j   next j  j          j            1    j   next 0    P i     P j                                        next            next      O      f             next                   next                   f  i                O        i 1       i 1           i 2       i 1                      i                next i     next i                 next                 int findAppearance string haystack  int lena  string needle int lenb     haystack empty    return needle empty     0    1   needle empty    return 0  int next lenb   1            1 getNext next  needle lenb      needle next  int   0  j   0   i    lena     kmp   i      j        j     1    haystack i     needle j   j   next j     i    j   j    lenb  return   j   i         j            return  1        kmp       O n m",
        "objectID": "post/KMP算法详解",
        "date": "2017-06-28T21:17:06.000Z",
        "categories": [
            "算法"
        ]
    },
    {
        "title": "libevent源码剖析(八)",
        "uri": "post/libevent源码剖析-八",
        "content": "libevent                        libevent I O   Signal  Timer               Signal              1         socket pair                                libevent     socket pair                Socket pair    socket      socket    socket    socket                socket pair                                         Libevent       evutil_socketpair       socket pair                    2             event_base Socket pair       libevent           Signal                        socket pair  socket libevent event_base       persist           socket       socket               event_base                  Libevent                      signal             signal           I O     Epoll    epoll_dispatch              res   epoll_wait epollop  epfd  events  epollop  nevents  timeout    res     1     errno    EINTR    eventwarn  epollwait    return   1     evsignal_process base       signal   return  0     else  base  sig evsignal_caught    evsignal_process base       signal                   1 libevent            socket                        2 libevent    I O       I O   dispatch          dispatch     eventbaseloop          3 evsignal_info    Libevent Signal           evsignal_info         evsignal h          struct evsignal_info   struct event ev_signal  int evsignalpair 2   int evsignaladded  volatile sigatomict evsignal_caught  struct event_list evsigevents NSIG   sigatomict evsigcaught NSIG    ifdef HAVE_SIGACTION struct sigaction   sh_old   else evsighandlert   sh_old   endif int sholdmax                        evsignal   socket pair  socket eventbase         event     evsignalpair socket pair             evsignaladded   ev_signal           evsignal_caught             volatile                   evsigvents NSIG     evsigevents signo        signo       evsigcaught NSIG                 evsigcaught signo      signo        sh_old      signal          signo   event                  evsignalinfo         socket pair   evsignal                                                      4      signal     signal     evsignaladd struct event  ev       libevent               evsignalhandler                        ev       signo      signo         signo        evsignal_handler        evsignal         evsignal       ev   signo event      signo         signal                                                       signal       sigaction        signal          evsignalhandler                           eventbase            static void evsignal_handler int sig    int save_errno   errno                 evsignal_base    NULL    eventwarn   s  received signal  d  no base configured   func_  sig   return           sig         event     evsignal_base  sig evsigcaught sig     evsignalbase  sig evsignalcaught   1   ifndef HAVE_SIGACTION signal sig  evsignal_handler              endif      socket          event_base I O                   send evsignalbase  sig evsignal_pair 0    a   1  0   errno   save_errno            5         libevent signal                    socket pair           Signal                  http   blog csdn net sparkliang article details 5011400",
        "objectID": "post/libevent源码剖析-八",
        "date": "2017-06-25T17:01:43.000Z",
        "tags": null,
        "categories": [
            "Libevent"
        ]
    },
    {
        "title": "libevent源码剖析(二)",
        "uri": "post/libevent源码剖析-二",
        "content": "libevent      Reactor         Reactor             libevnet         Reactor                              1 Reactor                                                                  Reactor                                              API            Reactor                           Reactor            Reactor                               Libevent   Libevent                        Libevent                 I O                      Reactor                                     xx                     HR                                                     Reactor   HR                                                               HR        2 Reactor      Reactor                                                  Reactor                                                                      Reactor         CPU         reactor                          3 Reactor       Reactor               Reactor                     Reactor                        1      Linux        Windows   Socket  Handle                                 I O    2  event demultiplexer                   I O         select epoll                         event demultiplexer           event demultiplexer                                                                  libevent     select poll epoll    libevent     eventop                 I O                         3  Reactor      Reactor              event demultiplexer                                                  libevent    event_base          Reactor     class Reactor   public  int registerhandler EventHandler  pHandler  int event   int removehandler EventHandler  pHandler  int event   void handle_events timeval  ptv             4  Event Handler                                       Reactor                                        libevent    event             Event Handler               class Event_Handler   public  virtual void handle_read     0  virtual void handle_write     0  virtual void handle_timeout     0  virtual void handle_close     0  virtual HANDLE get_handle     0            class Event_Handler   public     events maybe read write timeout close  etc virtual void handle_events int events    0  virtual HANDLE get_handle     0            4 Reactor           Reactor              Reactor                             5         Reactor               Reactor                libevent                  libevent              http   blog csdn net sparkliang article details 4957744",
        "objectID": "post/libevent源码剖析-二",
        "date": "2017-06-25T17:00:51.000Z",
        "tags": null,
        "categories": [
            "Libevent"
        ]
    },
    {
        "title": "libevent源码剖析(九)",
        "uri": "post/libevent源码剖析-九",
        "content": "libevent I O   Timer       Signal   Timer              Libevent                            1               I O   select   epoll_wait                            timeout     I O            timeout             Timer              I O timeout      I O            Timer            Timer           I O               event c eventbaseloop                        base  eventcountactive      flags   EVLOOP_NONBLOCK          Timer    evsel  dispatch        timeoutnext base   tvp     else                      evsel  dispatch     evutil_timerclear  tv                 select   epoll_wait       I O   res   evsel  dispatch base  evbase  tv_p                                  timeout_process base   timeout_next                                       static int timeoutnext struct eventbase base  struct timeval  tv_p    struct timeval now  struct event  ev  struct timeval tv   tv_p                     ev   minheaptop  base  timeheap      NULL                        NULL          I O      tv_p   NULL  return  0               gettime base   now            evtimeout   now  evtimeout   now  tv   return  0     2 Timer    Libevent      Timer    key                  min_heap h                                        O lgN  N              key           O 1                         Libevent                                                                   size                       Heap size      new                  1        shift_up            new     _child   size  while _child 0          parent    child 1  2       parent if Heap _parent  key 0          parent    hole 1  2       parent if Heap _parent  key   new key  break               Heap hole    Heap parent       parent     hole   parent      hole   parent   Heap hole    new           new   hole      size            1                                         libevent  minheapshiftup                           minheapshiftdown               3  5  8  7  12      2                            libevent                                                3          I O   wait          Timer        libevent",
        "objectID": "post/libevent源码剖析-九",
        "date": "2017-06-25T17:01:53.000Z",
        "tags": null,
        "categories": [
            "Libevent"
        ]
    },
    {
        "title": "libevent源码剖析(六)",
        "uri": "post/libevent源码剖析-六",
        "content": "libevent        event               libevent                 libevent       event_base libevent                   libevent event     1        event_base   Reactor                    Reactor      libevent       event_base               event internal h     struct event_base   const struct eventop  evsel  void  evbase  int event_count     counts number total events    int eventcountactive     counts number active events    int event_gotterm     Set terminate loop    int event_break     Set terminate loop immediately       active event management    struct event_list   activequeues  int nactivequeues     signal handling info    struct evsignal_info sig  struct event_list eventqueue  struct timeval event_tv  struct min_heap timeheap  struct timeval tv_cache                         evsel evbase                        evsel evbase                           evsel  add evbase  ev          evbase     class  add instance  ev  instance  class         evsel       static const struct eventop  eventops              libevent      I O demultiplex        eventop     eventops     select poll kequeue epoll                evbase      eventop          eventop                    event internal h     struct eventop   const char  name  void  init  struct event_base            int  add  void   struct event             int  del  void   struct event             int  dispatch  struct event_base   void   struct timeval            void  dealloc  struct event_base   void                   set need reinitialize event base    int need_reinit           libevent    I O demultiplex                                                   epoll libevent   5                 eventop 5        5             epoll  I O demultiplex                activequeues            libevent                          activequeues priority                      priority     event  eventqueue              event     sig                           timeheap                             eventtv tvcache libevent                                       2       event_base     eventbase            libevent           eventinit       eventbasenew                          libevent                event_base            timer mini heap            I O  demultiplexer                                         3          Reactor                                                                          Libevent              int event_add struct event ev  const struct timeval timeout   int event_del struct event  ev   int eventbaseloop struct event_base  base  int loops   void event_active struct event  event  int res  short events   void eventprocessactive struct event_base  base                      libevent                                 timer heap                I O Signal     eventopadd delete              eventop  Signal    Signal                         1            int event_add struct event ev  const struct timeval tv     ev           tv          ev   ev  evbase       ev  evevents          ev              tv  NULL             ev   timer                                                     libevent                                    int event_add struct event ev  const struct timeval tv    struct eventbase  base   ev  evbase          event_base const struct eventop  evsel   base  evsel  void  evbase   base  evbase     base     I O        timer     timer heap                                     I O                                                                        tv    NULL      ev  evflags   EVLISTTIMEOUT      minheapreserve  base  timeheap  1   minheapsize  base  timeheap       1  return   1      ENOMEM    errno             ev                evbase       ev  evevents    EVREAD EVWRITE EVSIGNAL        ev  evflags    EVLISTINSERTED EVLIST_ACTIVE      res   evsel  add evbase  ev    res     1            event        eventqueueinsert base  ev  EVLIST_INSERTED                  res     1    tv    NULL    struct timeval now     EVLIST_TIMEOUT  event                ev  evflags   EVLISTTIMEOUT  eventqueueremove base  ev  EVLIST_TIMEOUT                             ev  evflags   EVLISTACTIVE      ev  evres   EVTIMEOUT         ev_callback       0  ev  evncalls    ev  evpncalls     ev  ev_pncalls   0    eventqueueremove base  ev  EVLIST_ACTIVE                 timer     gettime base   now   evutiltimeradd  now  tv   ev  evtimeout   eventqueueinsert base  ev  EVLIST_TIMEOUT     return  res     eventqueueinsert                          eventqueueremove                              void eventqueueinsert struct event_base base  struct event ev  int queue       ev                    ev  ev_flags   queue     queue   EVLIST_ACTIVE  return           ev  ev_flags    queue       queue   switch  queue    case EVLIST_INSERTED     I O Signal             TAILQINSERTTAIL  base  eventqueue  ev  ev_next   break  case EVLIST_ACTIVE                 base  eventcountactive    TAILQINSERTTAIL base  activequeues ev  evpri   ev  evactive_next   break  case EVLIST_TIMEOUT              minheappush  base  timeheap  ev   break      2              int event_del struct event  ev           ev   I O    I O  demultiplexer         Signal     Signal   ",
        "objectID": "post/libevent源码剖析-六",
        "date": "2017-06-25T17:01:26.000Z",
        "tags": null,
        "categories": [
            "Libevent"
        ]
    },
    {
        "title": "libevent源码剖析(七)",
        "uri": "post/libevent源码剖析-七",
        "content": "libevent Reactor    event_base             libevent                                                                   1        Libevent I O                             libevent                           Libevent                            libevent                              2         Libevent           eventbaseloop                        eventbaseloop                   eventbaseloop                                   int eventbaseloop struct event_base  base  int flags    const struct eventop  evsel   base  evsel  void  evbase   base  evbase  struct timeval tv  struct timeval  tv_p  int res  done            base  tvcache tvsec   0     evsignalbase         signal      signal   eventbase    base  sig evsignaladded  evsignal_base   base  done   0    done                                 eventloopexitcb    event_gotterm        eventbaseloopbreak    event_break    base  event_gotterm    base  event_gotterm   0  break     base  event_break    base  event_break   0  break                       MONOTONIC                      timeoutcorrect      last wait time            eventcountactive      flags   EVLOOPNONBLOCK     timeoutnext base   tvp     else                    I O demultiplexer                    libevent                     evutil_timerclear  tv                         event_haveevents base     eventdebug    s  no events registered    func_    return  1          last wait time    time cache gettime base   base  event_tv   base  tvcache tvsec   0         I O demultiplexer    I O events    epoll_wait   select       evsel  dispatch        signal event I O event         res   evsel  dispatch base  evbase  tv_p    res     1  return   1       time cache          gettime base   base  tv_cache        heap  timer events     timer event heap              timeout_process base        eventprocessactive            event                              priority                                                               base  eventcountactive    eventprocessactive base     base  eventcountactive     flags   EVLOOP_ONCE   done   1    else  flags   EVLOOP_NONBLOCK  done   1                   base  tvcache tvsec   0  eventdebug    s  asked terminate loop    func_    return  0     3 I O Timer      Libevent Timer Signal          I O  demultiplex                                         Timer       I O                     I O   select   epoll_wait                            timeout     I O            timeout             Timer              I O timeout      I O            Timer            Timer           I O         Reactor Proactor           Windows  IOCP    Timer         ACE                POSA vol2   Reactor                                   O lgN  N              key           O 1         Timer                 libevent          4 I O Signal      Signal            Signal        I O        Timer        Signal                                                                          Signal          event callback                I O              I O    Timer                  libevent                 Signal           I O                                                  pipe  5       libevent          libevent        I O                                http   blog csdn net sparkliang article details 4987751",
        "objectID": "post/libevent源码剖析-七",
        "date": "2017-06-25T17:01:35.000Z",
        "tags": null,
        "categories": [
            "Libevent"
        ]
    },
    {
        "title": "libevent源码剖析(三)",
        "uri": "post/libevent源码剖析-三",
        "content": "1                                                                  libevent        2                  libevnet                      livevent                            1      libevent           struct eventbase   base   eventinit                  Reactor       libevent            2      event              evtimerset  ev  timercb  NULL             eventset  ev   1  0  timercb  NULL   event_set        void event_set struct event ev  int fd  short event  void  cb  int  short  void    void arg  ev        event    fd  event                         event   fd             EVREAD  EVWRITE  EV_SIGNAL  cb           fd    event                         eventbase              eventset  fd  event arg  arg    cb                  fd              event_add             event                   event handler  libevent        event         libevent     event                  3   event   event_base eventbaseset base   ev           event      event_base     4              event_add  ev  timeout                     event_add           timeout              Reactor  register_handler          5                        eventbasedispatch base   3                    struct event ev  struct timeval tv  void time_cb int fd  short event  void  argc    printf  timer wakeup n    event_add  ev   tv      reschedule timer   int main     struct eventbase  base   eventinit    tv tv_sec   10     10s period tv tv_usec   0  evtimerset  ev  timecb  NULL   event_add  ev   tv   eventbasedispatch base     4              libevent        libevent                             1              event                       2 3  2   libevent     event        libevent          key         Signal I O   libevent          wait list               3      eventbasedispatch                   select             libevent              tv   tv  select                          select                   I O    Libevent                                                5         libevent                libevent             libevent                libevent        Reactor    Reactor                                http   blog csdn net sparkliang article details 4957820",
        "objectID": "post/libevent源码剖析-三",
        "date": "2017-06-25T17:00:59.000Z",
        "tags": null,
        "categories": [
            "Libevent"
        ]
    },
    {
        "title": "libevent源码剖析(十)",
        "uri": "post/libevent源码剖析-十",
        "content": "Libevent                                 I O           Windows Linux Unix                                                     1       Libevent    I O               eventop                                event internal h     struct eventop   const char  name  void  init  struct event_base            int  add  void   struct event             int  del  void   struct event             int  dispatch  struct event_base   void   struct timeval            void  dealloc  struct event_base   void                   set need reinitialize event base    int need_reinit      libevent    I O demultiplex                                                   epoll libevent   5                 eventop 5        5             epoll  I O demultiplex     2   I O demultiplex   Libevent      I O demultiplex             eventops                                     order preference    static const struct eventop  eventops        ifdef HAVEEVENTPORTS  evportops   endif  ifdef HAVEWORKINGKQUEUE  kqops   endif  ifdef HAVE_EPOLL  epollops   endif  ifdef HAVE_DEVPOLL  devpollops   endif  ifdef HAVE_POLL  pollops   endif  ifdef HAVE_SELECT  selectops   endif  ifdef WIN32  win32ops   endif NULL      libevent                  I O demultiplex          eventbasenew     base  evbase   NULL   i   0  eventops i      base  evbase  i      base  evsel   eventops i   base  evbase   base  evsel  init base          libevent          I O demultiplex                       Linux   epoll         epoll c  eventops  epollops      const struct eventop epollops      epoll   epoll_init  epoll_add  epoll_del  epoll_dispatch  epoll_dealloc  1    need reinit         epollops                         eventop                      static void epollinit  struct eventbase    static int epoll_add  void   struct event    static int epoll_del  void   struct event    static int epolldispatch struct eventbase   void   struct timeval     static void epolldealloc  struct eventbase   void            epoll        eventop init dispatch               epoll      epollinit         epolldispatch     C                 C                       epollops  epoll            epoll c                libevent                    epoll       eventop                 3        I O demultiplex                    OK                 Libevent           I O demultiplex                          http   blog csdn net sparkliang article details 5105392",
        "objectID": "post/libevent源码剖析-十",
        "date": "2017-06-25T17:02:01.000Z",
        "tags": null,
        "categories": [
            "Libevent"
        ]
    },
    {
        "title": "libevent源码剖析(十二)",
        "uri": "post/libevent源码剖析-十二",
        "content": "Libevent                         CPU                      libevent                         1            CPU              CPU                                            1                         1   event                        libevent  event_add       libevent                                                       1                             libevent                                                2            Libevent              libevent                   signal                                                                                                                             2 1                                                                    PPT           PPT                PPT             2 2                                                                     PPT              PPT                                PPT         PPT                                                                      PPT                                                                                                               PPT                       2 3                                                                                                                                                                                        PPT     PPT         push            PPT                             PPT                                                   PPT         PPT                                                          push             2 2                                               bug                                          3            3    memcached Memcached          libevent                                                        4        libevent                 libevent                    memcached  libevent           http   blog csdn net sparkliang article details 5130822",
        "objectID": "post/libevent源码剖析-十二",
        "date": "2017-06-25T17:02:21.000Z",
        "tags": null,
        "categories": [
            "Libevent"
        ]
    },
    {
        "title": "libevent源码剖析(十三)",
        "uri": "post/libevent源码剖析-十三",
        "content": "libevent                                                  libevent                   libevent       2                             1   libevent    base1     1   libevent    base2     base1     SIGALRM      base2     SIGINT          base1   base2                 1   2     eventbaseloop       eventbaseloop base1  eventbaseloop base2       base2  sig evsignaladded   base2  sig evsignaladded  evsignalbase   base1  evsignalbase   base2  while  done  while  done          evsel  dispatch     evsel  dispatch                      1     eventbaseloop      evsignal_base   base1            2     eventbaseloop      evsignal_base   base2          evsignal_base      base2      ALARM            static void evsignal_handler int sig        evsignal_base  sig evsigcaught sig     evsignalbase  sig evsignalcaught   1     Wake notification mechanism    send evsignalbase  sig evsignal_pair 0    a   1  0            base2      ALARM            ALARM      base1     base2    ALARM    event                        libevent                       libevent      memcached       libevent     signal                  API               http   blog csdn net sparkliang article details 5306809",
        "objectID": "post/libevent源码剖析-十三",
        "date": "2017-06-25T17:02:30.000Z",
        "tags": null,
        "categories": [
            "Libevent"
        ]
    },
    {
        "title": "libevent源码剖析(十一)",
        "uri": "post/libevent源码剖析-十一",
        "content": "Libevent                                                                            1       Libevent                      detectmonotonic          clockgettime           monotonic      static void detect_monotonic void     if defined HAVECLOCKGETTIME     defined CLOCK_MONOTONIC  struct timespec ts   clockgettime CLOCKMONOTONIC   ts     0  use_monotonic   1         monotonic    endif   Monotonic         boot                 Monotonic        usemonotonic   1   usemonotonic                           2         eventbase  tvcache                 gettime                 static int gettime struct event_base base  struct timeval tp         tv_cache               base  tvcache tvsec     tp   base  tv_cache  return  0            monotonic   clock_gettime  monotonic    if defined HAVECLOCKGETTIME     defined CLOCK_MONOTONIC   use_monotonic    struct timespec ts   clockgettime CLOCKMONOTONIC   ts      1  return   1   tp  tvsec   ts tvsec  tp  tvusec   ts tvnsec   1000  return  0      endif                 return  evutil_gettimeofday tp  NULL        tv_cache                                        evutilgettimeofday              Linux         gettimeofday   Windows      gettimeofday       ftime                       tvcache                   eventbase_loop         int eventbaseloop struct event_base  base  int flags              base  tvcache tvsec   0  while  done   timeout_correct base   tv                eventtv tvcache                    eventtv eventtv                  1 base  tvcache tvsec   0       I O     res   evsel  dispatch base  evbase  tv_p        tv_cache               2    tvcache tvcache                                 base  tvcache tvsec   0  return  0       eventtv   dispatch          I O                    tvcache      gettime                        tv_cache         tvcache dispatch                        I O         eventtv             eventtv    tvcache        eventtv    tvcache                                                  2    1                 gettime       tv_cache       3            monotonic          boot                                       monotonic                           MS   7                  5     3        2                                       timeout_correct      static void timeoutcorrect struct eventbase base  struct timeval tv    struct event   pev  unsigned int size  struct timeval off   use_monotonic     monotonic             return  gettime base  tv      tv event_tv         base  event_tv    tv  return              evutiltimersub  base  eventtv  tv   off                pev   base  timeheap p  size   base  timeheap n     size     0    pev    struct timeval evtv      pev  evtimeout  evutiltimersub evtv   off  ev_tv     base  eventtv    tv       eventtv tv_cache                                                                                                                                     eventtv      tvcache    4           libevent                                                                evutil h             http   blog csdn net sparkliang article details 5105470",
        "objectID": "post/libevent源码剖析-十一",
        "date": "2017-06-25T17:02:12.000Z",
        "tags": null,
        "categories": [
            "Libevent"
        ]
    },
    {
        "title": "libevent源码剖析(四)",
        "uri": "post/libevent源码剖析-四",
        "content": "1                                                                         2         Libevent                                                           libevent      I O                                     libevent                                test               1         event h                   event     2       xxx internal h                             3 libevent   event c event           4    I O          epoll c  epoll     select c  select     devpoll c  dev poll     kqueue c  kqueue     5        min heap h            key        6      signal c           7        evutil h  evutil c              socket pair                   8    log h log c log     9       evbuffer c buffer c libevent         10        compat sys        queue h libevent                        libeventtime h                        11       http evdns    libevent   http      dns     3         libevent               libevent     event       http   blog csdn net sparkliang article details 4957885",
        "objectID": "post/libevent源码剖析-四",
        "date": "2017-06-25T17:01:08.000Z",
        "tags": null,
        "categories": [
            "Libevent"
        ]
    },
    {
        "title": "libevent源码剖析(五",
        "uri": "post/libevent源码剖析-五",
        "content": "libevent     event   libevent event     1 libevent    event Libevent        event driven           event        event  Reactor                       Reactor                                       event          event h     struct event   TAILQENTRY  event  evnext  TAILQENTRY  event  evactive_next  TAILQENTRY  event  evsignal_next  unsigned int minheapidx     managing timeouts    struct eventbase  evbase  int ev_fd  short ev_events  short ev_ncalls  short ev_pncalls    Allows deletes callback    struct timeval ev_timeout  int ev_pri     smaller numbers higher priority    void  ev_callback  int  short  void arg   void  ev_arg  int ev_res     result passed event callback    int ev_flags                         ev_events event              3     I O    EVWRITE EVREAD      EV_TIMEOUT     EV_SIGNAL      EV_PERSIST           Libevent        define EV_TIMEOUT 0x01  define EV_READ 0x02  define EV_WRITE 0x04  define EV_SIGNAL 0x08  define EV_PERSIST 0x10    Persistant event                                     I O              libevent  event     3            evnext evactivenext evsignal_next              libevent                              libevent             I O Signal   ev_next   I O                            evsignalnext  signal   signal          evactivenext libevent             active list      active list     evactivenext    event active list      minheapidx ev_timeout    timeout      event             libevent                              evbase                eventbase               ev_fd   I O               signal           evcallback event       evbase                          void  ev_callback  int fd  short events  void arg      fd   evfd events   evevents arg   ev_arg  ev_arg void                  event     eb_flags libevent    event                       define EVLIST_TIMEOUT 0x01    event time    define EVLIST_INSERTED 0x02    event           define EVLIST_SIGNAL 0x04          define EVLIST_ACTIVE 0x08    event        define EVLIST_INTERNAL 0x10            define EVLIST_INIT 0x80    event      evncalls           evcallback       1  evpncalls        evncalls   NULL  ev_res               2 libevent event     event     3                       libevent event                         event         libevent       active event list priority     priority event        libevent                    cbcallback                          cbcallback       3             libevent             event        libevent       eventset    eventbaseset    eventpriority_set                void event_set struct event  ev  int fd  short events  void  callback  int  short  void    void  arg  1     ev                       1    2          EVREAD EVPERSIST  EVWRITE  EVSIGNAL   3              arg  4              event_base      int eventbaseset struct event_base base  struct event ev    event ev      event_base  libevent     eventbase  currentbase        ev     currentbase              eventbase             libevent             event     event_base  int eventpriorityset struct event  ev  int pri    event ev                     ev                 1  4         libevent   event     libevent        libevent event             libevent                     event_base     http   blog csdn net sparkliang article details 4974876",
        "objectID": "post/libevent源码剖析-五",
        "date": "2017-06-25T17:01:17.000Z",
        "tags": null,
        "categories": [
            "Libevent"
        ]
    },
    {
        "title": "libevent源码剖析(一)",
        "uri": "post/libevent源码剖析-一",
        "content": "1    Libevent                                                           libevent                                       Libevent  C      MS      c                              c      2 Libevent             Libevent                event driven                   ACE                          Windows Linux  BSD Mac Os      I O        epoll poll dev poll select kqueue     I O                     Libevent                    memcached Vomit Nylon Netchat    Libevent         1 4 13             3         libevent                        Libevent                                  c                                                                  libevent                                                         Libevent         Reactor     Reactor     libevent                         Reactor       http   blog csdn net sparkliang article details 4957667",
        "objectID": "post/libevent源码剖析-一",
        "date": "2017-06-25T17:00:40.000Z",
        "tags": null,
        "categories": [
            "Libevent"
        ]
    },
    {
        "title": "Linux:too many open files问题及解决方式",
        "uri": "post/Linux-too-many-open-files问题及解决方式",
        "content": "shell                          shell           ulimit  a                   lsof  n awk   print  2   sort uniq  c sort  nr more               9928   id  cat  proc 9928 limits shell      ulimit  n        ulimit  n 1000       shell                      1000  Linux               ulimit               root          ulimit  HSn 4096       H        S        n                                     warnning       warning                                    root     etc security limits conf   ulimit  n       root      root   ulimit  n        root                             ulimit                                root  shell A   ulimit  SHn 65535          A   nginx       shell A A       65535               root   shell B   ulimit  n   1024     self       PID           ulimit  n                          ulimit  n limits conf           root     etc security limits conf                 user soft nofile 2048 user hard nofile 65536   user                 nofile               hard soft user           root             soft            soft                hard                     soft        hard       root       hard      proc sys fs file max     etc security limits conf   root         etc security limits conf    http   www cnblogs com zhangboyu p 7452738 html utmcampaign studygolang com utmmedium studygolang com utm_source studygolang com",
        "objectID": "post/Linux-too-many-open-files问题及解决方式",
        "date": "2018-11-20T17:15:36.000Z",
        "tags": [
            "Linux"
        ],
        "categories": [
            "Linux"
        ]
    },
    {
        "title": "Linux操作系统的组成和基本功能",
        "uri": "post/Linux操作系统的组成和基本功能",
        "content": "Linux     4         shell              shell                                                                                               TCP IP     Linux                   CPU                                        shell shell                                                              shell                            shell                                                 Linux                  EXT2 EXT3 FAT FAT32 VFAT ISO9660            Linux                                   XWindow      Internet              CPU",
        "objectID": "post/Linux操作系统的组成和基本功能",
        "date": "2017-06-25T05:42:46.000Z",
        "tags": null,
        "categories": [
            "Linux内核"
        ]
    },
    {
        "title": "linux端口连通性测试",
        "uri": "post/linux端口连通性测试",
        "content": "telnet telnet windows              linux       telnet      telnet ip port 1   telnet          root localhost     telnet 10 0 250 3 80 Trying 10 0 250 3    telnet  connect address 10 0 250 3  Connection refused            2           root localhost     telnet localhost 22 Trying   1    Connected localhost     Connected       Escape character       SSH 2 0 OpenSSH_5 3 Protocol mismatch  Connection closed foreign host  ssh ssh linux                          ssh  v  p port username ip  v               p      username     1          root localhost     ssh 10 0 250 3  p 80 ssh  connect host 10 0 250 3 port 80  Connection refused  root localhost     ssh 10 0 250 3  p 80  v OpenSSH_5 3p1  OpenSSL 1 0 1e fips 11 Feb 2013 debug1  Reading configuration data  etc ssh ssh_config debug1  Applying options   debug1  Connecting 10 0 250 3  10 0 250 3  port 80  debug1  connect address 10 0 250 3 port 80  Connection refused ssh  connect host 10 0 250 3 port 80  Connection refused 2          root localhost     ssh      p     C  root localhost     ssh      p  v OpenSSH_ p  OpenSSL   e fips Feb debug  Reading configuration data  etc ssh ssh_config debug  Applying options   debug  Connecting           port   debug  Connection established  debug  permanentlysetuid    debug  identity file  root  ssh identity type   debug  identity file  root  ssh identity cert type   debug  identity file  root  ssh id_rsa type   debug  identity file  root  ssh id_rsa cert type   debug  identity file  root  ssh id_dsa type   debug  identity file  root  ssh id_dsa cert type    C    v       wget wget linux                  wget ip port 1           root localhost     wget                http        Connecting         failed  Connection refused  2          root localhost     wget                http         Connecting         connected  HTTP request sent  awaiting response    curl       curl       URL           Linux curl     URL                           http              url       1                2       curl 1 1 1 1 8000 xxx        nc   nc          nc  v  w 10  IP   z  PORT   v            w             u     UDP    z   0                      1      8080   nc  v  w 10  z 192 168 0 100 8080 Connection 192 168 0 100 8080 port  tcp http  succeeded   2   20 25             nc  v  w 2  z 192 168 0 100 20 25 nc  connect 192 168 0 100 port 20  tcp  failed  Connection refused nc  connect 192 168 0 100 port 21  tcp  failed  Connection refused Connection 192 168 0 100 22 port  tcp ssh  succeeded  nc  connect 192 168 0 100 port 23  tcp  failed  Connection refused nc  connect 192 168 0 100 port 24  tcp  failed  Connection refused nc  connect 192 168 0 100 port 25  tcp  failed  Connection refused  3   1 65535                  v      nc  w 1  z 192 168 0 100 1 65535 Connection 192 168 0 100 22 port  tcp ssh  succeeded  Connection 192 168 0 100 80 port  tcp http  succeeded  Connection 192 168 0 100 2121 port  tcp scientia ssdb  succeeded  Connection 192 168 0 100 4004 port  tcp pxc roid  succeeded  Connection 192 168 0 100 8081 port  tcp tproxy  succeeded  Connection 192 168 0 100 11211 port  tcp    succeeded",
        "objectID": "post/linux端口连通性测试",
        "date": "2018-11-21T16:01:15.000Z",
        "tags": [
            "Shell"
        ],
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "Linux进程管理",
        "uri": "post/Linux进程管理",
        "content": "Linux                    PCB                                                          Linux                                                                                                                                                                                                                                Linux                                                                                                                        Linux                                                                 R  task_running                       CPU                             task_struct              CPU                     CPU                      CPU                 CPU                 CPU         RUNNING                       READY         linux     TASK_RUNNING    S  task_interruptible                                     socket                    task_struct                                                                   ps                             task_interruptible                CPU                                CPU          D  task_uninterruptible              task_interruptible                                     CPU                                                           uninterruptible sleep                      kill      D          kill    kill  9    kill  15                 reboot    uninterruptible sleep           IO     IO   IO     IO          IO                 ps                IO                                          task_uninterruptible                                                                                                                              read                  read                                        taskuninterruptible                                              taskuninterruptible            ps             T taskstopped tasktraced                   sigstop               taskstopped            taskuninterruptible           sigstop sigkill                     signal                              sigcont        taskstopped     taskrunning                 tasktraced                                           gdb                             tasktraced                                        taskstopped tasktraced                   tasktraced      taskstopped           tasktraced         sigcont                 ptrace      ptracecont ptracedetach      ptrace                               taskrunning    Z  taskdead   exitzombie                 Linux                                                                                                                                                                                      TASKDEAD                            taskstruct                     task_struct                  taskstruct    taskstruct                                        shell                                     if                                taskstruct                  taskstruct                   pid taskstruct                   taskstruct                                                                                wait         wait4 waitid                            wait                  task_struct              SIGCHLD      clone                               SIGCHLD        wait waitpid                                         task_struct                       init                                                                                                                                                                 1                           1    1    pid 1      init             linux                    init                                  init                              waitid               init                                         taskinterruptible             taskrunning                                        SIGCHLD            SIGCHLD                    waitpid                              wait         SIGCHLD                                                                   1   init init                               kill  9 ps  ef   grep  Process Name    awk    print  3        Process Name    zombie                     skill  t TTY       TTY      tty          ps           tty                                                         FCFS                                                                                                                          FCFS                                                                                                 SJ P F                                           SJF                                                  SPF                                                                                                                                                                                 a                                                                                    RP                                                                                                                                                                                                                                                                                                                                            ",
        "objectID": "post/Linux进程管理",
        "date": "2017-06-25T05:42:58.000Z",
        "tags": null,
        "categories": [
            "Linux内核"
        ]
    },
    {
        "title": "Linux历史上线程的3种实现模型",
        "uri": "post/Linux历史上线程的3种实现模型",
        "content": "Linux   Linux             LinuxThreads  LinuxThreads                  SUSV3 Pthreads                                   IBM   NGPT Next Generation POSIX Threads        LinuxThreads        LinuxThreads               NPTL Native POSIX Threads Library          NGPT 2002 NGPT             Linux    NPTL         3         M 1              1 1              M N            x y x y  x       y        Kernel Scheduling Entity        CPU        LinuxThreads NPTL             NGPT                                                                                                                                                                IO                                 IO               IO                                                                                                                                                                                                                                                                                         1 1 M 1                                                                                                                                  NPTL",
        "objectID": "post/Linux历史上线程的3种实现模型",
        "date": "2017-06-25T14:19:38.000Z",
        "tags": null,
        "categories": [
            "Linux内核"
        ]
    },
    {
        "title": "Linux内核的组成部分",
        "uri": "post/Linux内核的组成部分",
        "content": "Linux      5             SCHED         MM           VFS         NET          IPC    1                              4                                                                                              TASK_UNINTERRUPTIBLE                                                 TASK_INTERRUPTIBLE                                                                                                                                                  int kernel_thread int fn  void   void  arg unsigned long flags   2                                   CPU           MMU   Linux                           Linux 2 6         MMU   CPU        Linux         4GB       0 3GB        3 4GB                  I O                     3        Linux         VFS                                                                     super block                   inode                   dentry            4                                                                                                                        5        Linux                                                                                                                                                                                                                                                              NFS            RAMDISK                                              swapd",
        "objectID": "post/Linux内核的组成部分",
        "date": "2017-06-25T05:43:32.000Z",
        "tags": null,
        "categories": [
            "Linux内核 "
        ]
    },
    {
        "title": "Linux内核时钟系统和定时器实现",
        "uri": "post/Linux内核时钟系统和定时器实现",
        "content": "Linux             Linux 2 6 16                                         RTC  HPET PIT                   HZ                            tick       HZ  1              tick                     HZ 250    tick   1 HZ        tick 4ms  cat  boot config uname  r   grep  CONFIG_HZ   CONFIG_HZ 250                        tick                        timer wheel                       wiki   core infrastructure support high resolution timers accepted mainline kernel  in 2 6 21           Linux 2 6 16             timer wheel                         timer wheel        tick              linux    ms                                              Linux 2 6 16                       hrtimer       Linux 2 6 16            hrtimer                                        tick                                   tick    tick      timer wheel          jiffies wall time            process                          tick                                     hrtimer high resolution timer  hrtimer            time wheel         timer wheel    ms      hrtimer    ns    Timer wheel                  hrtimer              tick                      hrtimer                                      Timer                     Timer                                             tick                      hrtimer              tick             tick   dynamic tick            tick       hrtimer            tick                           tick             tick          dynamic tick                            tickless           tick                kernel      1 Linux 2 6 16                                                        closk source device                       RTC Real Time Clock  TSC Time Stamp Counter  HPET ACPI PM Timer PIT                  pc           high resolution mode          low resolution mode          clock event device          one shot                                     timer wheel   hrtimer  timer                              hrtimer   tick                                          hrtimer                        hrtimer                 https   github com torvalds linux blob master kernel time hrtimer c timers currently used for    itimers   POSIX timers   nanosleep   precise in kernel timing       API        linux                                       API      itimer POSIX            API sleep      itimer POSIX                            API    alarm   sleep   usleep   nanosleep   alarm alarm                         SIGALRM                          include unsigned int alarm unsigned int seconds   return 0          alarm        Glibc alarm        itimer            itimer   hrtimer       alarm         alarm   setitimer      https   github com lattera glibc blob master sysdeps unix alarm c unsigned int alarm  seconds  unsigned int seconds         _setitimer  ITIMERREAL   new   old  int getitimer int which  struct itimerval  curr_value   int setitimer int which  const struct itimerval  new_value  struct itimerval  old_value         struct itimerval   struct timeval it_interval     next value         struct timeval it_value     current value           struct timeval   timet tvsec     seconds    susecondst tvusec     microseconds                 API                          3 itimer                                          3                                                                                                             ITIMER_REAL           alarm        SIGALRM     ITIMER_VIRT                       SIGVTALRM     ITIMER_PROF                           SIGPROF    Linux 2 6 16    itimer           timer wheel                                            itimer                        setitimer getitimer      timer wheel                https   github com torvalds linux blob master kernel time timer c add_timer   del_timer   init_timer    Linux 2 6 16    itimer      timer wheel                         hrtimer             https   github com torvalds linux blob master kernel time itimer c                                                                       BUG               ITIMER_REAL                                                                   POSIX 1 2001       POSIX 1 2008            POSIX   API timergettime  timersettime       alarm               ITIMERREAL                              setitimer                                        Unix          alarm ITIMERREAL                include  include  include  include void sig_handler int signo    std  cout temp  return 0    POSIX    POSIX              itimer                          ITIMERREAL  ITIMERPROF  ITIMER_VIRT  itimer POSIX                 timer  itimer              SIGALRM SIGVTALRM SIGPROF         POSIX                                                itimer  us   POSIX     ns    POSIX         API    int timercreate clockidt clockid  struct sigevent evp  timert timerid   int timersettime timert timerid  int flags  const struct itimerspec value  struct itimerspect ovalue   int timergettime timert timerid struct itimerspec  value   int timergetoverrun timert timerid   int timerdelete  timert timerid         itimerspec         itimer itimerval               ns      struct itimerspec   struct timespec it_interval",
        "objectID": "post/Linux内核时钟系统和定时器实现",
        "date": "2019-10-21T11:44:32.000Z",
        "tags": [
            "定时器"
        ],
        "categories": [
            "Linux内核"
        ]
    },
    {
        "title": "linux平台下防火墙iptables原理",
        "uri": "post/linux平台下防火墙iptables原理",
        "content": "iptables   netfilter iptables    iptables   Linux                Linux                                                        NAT      iptables      rules                                                                                              TCP UDP ICMP        HTTP FTP SMTP              iptables                        accept     reject     drop                             iptables netfilter                Iptables netfilter                       iptables    netfilter   iptables  Linux              sbin iptables            netfilter   Linux               netfilter           5                                                                                                                                                                                                                                                               NAT DNAT                                                             hook functions           PREROUTING       INPUT          FORWARD        OUTPUT        POSTROUTING        NetFilter                                         iptables                          PREROUTING           IP                                      INPUT       INPUT                                     OUTPUT      POSTROUTING                                          FORWARD      POSTROUTING     SNAT DNAT          IP                                        IP       iptables    NAT        SNAT                                                                IP              IP          iptables                              192 168 10 0   IP           172 16 100 1             iptables  t nat  A POSTROUTING  s 192 168 10 0 24  j SNAT   to source 172 16 100 1                                  172 16 100 1  IP       172 16 100 1                                                       IP                              MASQUERADE                                                   iptables  t nat  A POSTROUTING  s 192 168 10 0 24  j MASQUERADE                       DNAT                                                            ip         ip                                                   iptables  t nat  A PREROUTING  d 192 168 10 18  p tcp   dport 80  j DNAT   todestination 172 16 100 2                          PREROUTING      iptables          tables         iptables   4    filter  nat  mangle  raw                                     chains                                                             iptables                                                               iptables                            iptables                       Iptables                REHL4           REHL5                                                                                                                             1 RAW      PREROUTING  OUTPUT                                        RAW         RAW         NAT   ip_conntrack                          2 filter                                                     filter                  Filter                 iptables      filter         filter    INPUT            RORWARD            OUTPUT              filter                                  3 nat            NAT                   NAT    iptables              NAT    PREROUTING              POSTROUTING              OUTPUT                   4 mangle                      2 4 18   linux           INPUT            RORWARD            OUTPUT             POSTROUTING              PREROUTING                   INPUT                   OUTPUT                   FORWARD                   PREROUTING                                              POSTROUTING                                                        Raw  mangle  nat  filter                                          PREROUTING                                                              Internet           web                 INPUT                                    Apache                                   PREROUTING                                               QQ                FORWARD                    POSTROUTING                                                           DNS         OUTPUT                    POSTROUTING                          http   www cnblogs com ggjucheng archive 2012 08 19 2646466 html http   blog csdn net reyleon article details 12976341",
        "objectID": "post/linux平台下防火墙iptables原理",
        "date": "2017-06-25T14:20:52.000Z",
        "tags": null,
        "categories": [
            "网络"
        ]
    },
    {
        "title": "Linux启动过程详解",
        "uri": "post/Linux启动过程详解",
        "content": "http   blog chinaunix net uid 26495963 id 3066282 html          BIOS BIOS    Basic Input Output System                             IBM PC                   BIOS      1975     CP M         BIOS                                    BIOS   BIOS                              BIOS    CPU                              PnP                                             MBR          0          MBR    Master Boot Record             512                                  BIOS       MBR         0 7c00                          Boot Loader             lilo  grub          Boot Loader Boot Loader                                                                                                Boot Loader       Grub Lilo spfdisk    Loader     Grub          lilo spfdisk               grub        menu lst grub lst                                    grub                                         Uncompressing Linux                    OK  booting kernel                       start_kernel                           Linux           Linux            Linux                        init  inittab                            sbin init        etc inittab                      etc inittab            Linux              id 5 initdefault       Linux       5  Linux           0    1       2             3             4        5       X Window         6                   init    rc sysinit           Linux                etc rc d rc sysinit                  PATH         etc sysconfig network    swap      proc              etc rc d     rc sysinit                                   etc modules conf    etc modules d                                                   rc0 d rc6 d                                         etc rc d rc local                                       script will executed init scripts  put own initialization stuff don t want full Sys V style init stuff  rc local            Linux                                           bin login                           username password",
        "objectID": "post/Linux启动过程详解",
        "date": "2017-06-25T05:10:23.000Z",
        "tags": null,
        "categories": [
            "Linux内核 "
        ]
    },
    {
        "title": "Linux文件系统浅析",
        "uri": "post/Linux文件系统浅析",
        "content": "Linux                 tree       Ubuntu   tree sudo apt get install tree             Linux                      C  D  E                  Linux           Linux                                                 Linux                                                         Linux                                     Linux                                                              fdisk         df          du                                                                               home  var  usr local                                                                                            SSD                                                             Heads                                Track                                    Cylinders                               Sector                                             Linux     fdisk                                                     255 heads       255    3263 cylinders            3263     63sectors track          63            Sector size   512bytes                  255   3263   63         512bytes   26839088640byte     26 8G              IO                                                                                           IO        IO                                              1W                   60 1000 10000 6ms         0 6ms                    ms               3 15ms                                                              IO                                         IO                                1M                             size                          block                          IO          Mount                                                                                  mount point                                                                Mount          mount   fnrsvw    t vfstype    o options  device dir                                                  etc fstab                 mount                                                                                                mount                        etc fstab         Linux                 C      SHELL                                                                                   dev                   ls  l  file  stat                              Linux      ext2 ext3             inode                  inode     Inode                                            inode   inode                                   Sector        512      0 5KB                                                              block                                       4KB       sector     block                                                                                 inode              inode                                  User ID     Group ID                           ctime inode         mtime              atime                            inode      block        stat          inode    stat demo txt                      inode                                    inode                                        inode    inode                                                      inode  inode table    inode          inode         128   256   inode                   1KB  2KB     inode      1GB       inode      128    1KB     inode   inode table       128MB       12 8            inode               df  i         inode               sudo dumpe2fs  h  dev hda   grep  Inode size              inode        inode                                                                   inode     100W inode         100W    inode      inode    inode         inode                     Linux              inode                    inode                                                               inode        inode     inode        inode            block         ls  i             inode       ls  i demo txt     Linux       directory                                               dirent                                     inode     ls                  ls  etc ls  i                inode    ls  i  etc                   inode     inode        ls  l                     ls  l  etc touch                                             256Byte           inode size                 ls  l                  df  i                                   4KB               inode                 4K       block size    dumpe2fs                                      1k                             block                                    block          4KB             block              8          1k         1 block    4k    inode    256byte                                  Linux                                   255byte                                                                                 block                                                                                      block                                                                               2Byte                              IO         block size                     2Byte               4KB       IO                2Byte               2byte                                                             inode              inode             Linux               inode                     ",
        "objectID": "post/Linux文件系统浅析",
        "date": "2017-06-25T14:24:05.000Z",
        "tags": null,
        "categories": [
            "Linux内核"
        ]
    },
    {
        "title": "Linux系统内存管理",
        "uri": "post/Linux系统内存管理",
        "contentlinux                0             linux            linux  elf                0x08048000                                                                                                                min 2                32        2 32   4GB       4G 64         16777216T                    32 Linux        0 3G      3 4G           32          64               Linux               0                          Linux         0 4G 2 32   Linux    4G                1G        0xC0000000 0xFFFFFFFF                      3G         0x00000000 0xBFFFFFFF                                          Linux                                    4G                          3G                                3G                                                                            0xc0000003        0 3 0xc0000004        0 4                                   0xC0000000                        0xC0000000                   Linux      PAGE_OFFSET                               0xc0000000   0xffffffff              0 0   0 40000000      1G           8G               1G       7G                                    0 0   0 40000000      8G            0 40000001                              0xc0000000   0xffffffff                      0 40000000                  0xc0000000   0xfffffff              x86                ZONEDMA ZONENORMAL  ZONEHIGHMEM ZONEHIGHMEM                                x86               ZONE_DMA      16MB            I O   DMA            DMA         DMA              MMU                                                 DMA  ZONE_NORMAL 16MB 896MB                    ZONE_HIGHMEM 896MB                             HIGH_MEM        0xF8000000   0xFFFFFFFF 896MB 1024MB            128MB                                 896MB         0xF8000000   0xFFFFFFFF                                                             PTE                                                                             2G        1MB              0 80000000   0x800FFFFF          1MB                      0xF8700000   0xF87FFFFF   1MB                0 80000000   0x800FFFFF                  0 80000000   0x800FFFFF        0xF8700000   0xF87FFFFF                       0xF8700000   0xF87FFFFF                                                                                                                                                3G                      64                  64 Linuxinux                                  Linux                                                                                                                                                                   256        1MB      256                                               512                            512                         256            512                             1024                  1024     256               768      512    512             256    256          1024                             Linux             4KB           11                 1 2 4 8 16 32 64 128 256 512 1024               1024       4MB                                         i      num      2 i       address      2 i                          2  i 1  2 i          2 i                                          ",
        "objectID": "post/Linux系统内存管理",
        "date": "2017-06-25T14:22:07.000Z",
        "tags": null,
        "categories": [
            "Linux内核"
        ]
    },
    {
        "title": "Linux用户态与内核态",
        "uri": "post/Linux用户态与内核态",
        "content": "Unix Linux                   Linuxhell                                                                                                          Shell             Shell             Shell          Shell                      Shell                                   Shell                                                            shell                                                 Shell                                                                                                      Unix Linux                                                                                  Intel X86   CPU   0 3                Linux          0 3                                                                                                                                                       C           malloc         sbrk             malloc  sbrk                             printf       wirte                                                                             CPU                                                                                                      CPU          CPU",
        "objectID": "post/Linux用户态与内核态",
        "date": "2017-06-25T05:43:20.000Z",
        "tags": null,
        "categories": [
            "Linux内核"
        ]
    },
    {
        "title": "Linux运行级别",
        "uri": "post/Linux运行级别",
        "content": "0 6                 ect inittab         init                       etc rc d        Linux  7          0                                                              rc0 d                                                                           DOS    Linux         DOS                        Linux        Linux                              Linux            Linux           shutdown                       Ctrl   Alt   Del           1                            rc1 d                                       Linux                                                                             2                                     3     rc2 d                   3                                     rc3 d                4       rc4 d                                                     rc3 d                rc  d                        5   Linux     XWindow                           named     3               6                rc6 d                                                0    rc0 d                         halt           halt               6                      etc rc d init d                   service    etc rc d  7   rcN d         7      rcN d                              etc rc d init d    service          K nn     S nn       nn                               rcN d                         K                     S                               etc initttab        5  3          3                          startx xinit               runlevel           init N   init 3        init 5     GUI     init0    init 6           init 0         init 6                        Linux     3 5    3                5        X Window                                           root                             GRUB    e      kernel        e          single       b            passwd root     root",
        "objectID": "post/Linux运行级别",
        "date": "2017-06-25T05:43:44.000Z",
        "tags": null,
        "categories": [
            "Linux内核"
        ]
    },
    {
        "title": "list操作总结",
        "uri": "post/list操作总结",
        "content": "default  1  explicit list  const allocatortype  alloc   allocatortype     fill  2  explicit list  size_type n   list  sizetype n  const valuetype  val  const allocatortype  alloc   allocatortype     range  3  template list  InputIterator first  InputIterator last  const allocatortype  alloc   allocatortype     copy  4  list  const list  x   list  const list  x  const allocator_type  alloc   move  5  list  list   x   list  list   x  const allocator_type  alloc   initializer list  6  list  initializer_list il  const allocatortype  alloc   allocatortype           copy  1  list  operator   const list  x   move  2  list  operator   list   x   initializer list  3  list  operator   initializer_list il                  assign                                  range  1  template void assign  InputIterator first  InputIterator last   fill  2  void assign  sizetype n  const valuetype  val   initializer list  3  void assign  initializer_list il        include  include int main      std  list first  std  list second  first assign  7 100      7 ints value 100 second assign  first begin   first end        copy first int myints    1776 7 4   first assign  myints myints 3      assigning array std  cout  include int main      std  list   mylist  mylist emplace_front 10  a    mylist emplace_front 20  b    mylist emplace_front 30  c    std  cout  include int main      std  list mylist  2 100      two ints value 100 mylist push_front  200   mylist push_front  300   std  cout   iterator it mylist begin    it  mylist end      it  std  cout  include int main      std  list mylist  mylist push_back  100   mylist push_back  200   mylist push_back  300   std  cout void emplace_back  Args      args    include  include int main      std  list   mylist  mylist emplace_back 10  a    mylist emplace_back 20  b    mylist emplace_back 30  c    std  cout  include int main      std  list mylist  int myint  std  cout   myint  mylist push_back  myint      myint   std  cout  include int main      std  list mylist  int sum  0   mylist push_back  100   mylist push_back  200   mylist push_back  300     mylist empty      sum  mylist back    mylist pop_back      std  cout iterator emplace  const_iterator position  Args      args        include  include int main      std  list   mylist  mylist emplace   mylist begin    100   x     mylist emplace   mylist begin    200   y     std  cout iterator insert  const_iterator position  InputIterator first  InputIterator last   move  4  iterator insert  constiterator position  valuetype   val   initializer list  5  iterator insert  constiterator position  initializerlist il        include  include  include int main      std  list mylist  std  list  iterator it     set initial values   int i 1  myvector  2 30   mylist insert  it myvector begin   myvector end        1 10 20 30 30 20 2 3 4 5      std  cout  include int main      std  list mylist  std  list  iterator it1 it2     set values   int i 1   include int main      std  list first  3 100      three ints value 100 std  list second  5 200      five ints value 200 first swap second   std  cout   iterator it first begin    it  first end    it    std  cout   iterator it second begin    it  second end    it    std  cout  include int main      std  list mylist     set initial content   int i 1  i  iterator it mylist begin    it  mylist end      it  std  cout  include int main      std  list mylist  std  list  iterator it  mylist push_back  100   mylist push_back  200   mylist push_back  300   std  cout  include int main      std  list mylist1  mylist2  std  list  iterator it     set initial values   int i 1   include int main      int myints     17 89 7 14   std  list mylist  myints myints 4   mylist remove 89   std  cout   iterator it mylist begin    it  mylist end      it  std  cout void remove_if  Predicate pred                   Predicate pred  true                                               pred   i    i               true                  list  remove_if  include  include    predicate implemented function  bool single_digit  const int  value    return  value mylist  myints myints 8      15 36 7 17 20 39 4 1 mylist removeif  singledigit      15 36 17 20 39 mylist removeif  isodd        36 20 std  cout   iterator it mylist begin    it  mylist end      it  std  cout void unique  BinaryPredicate binary_pred    1                                                                                    2                                                                    binary_pred   i   i 1              i                         true   i                       include  include  include    binary predicate implemented function  bool sameintegralpart  double first  double second    return   int first   int second          binary predicate implemented class  struct is_near   bool operator    double first  double second    return  fabs first second  mylist  mydoubles mydoubles 10   mylist sort       2 72  3 14  12 15  12 77  12 77     15 3  72 25  72 25  73 0  73 35 mylist unique       2 72  3 14  12 15  12 77    15 3  72 25  73 0  73 35 mylist unique  sameintegralpart      2 72  3 14  12 15 ",
        "objectID": "post/list操作总结",
        "date": "2017-07-15T11:56:15.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "lsof命令详解",
        "uri": "post/lsof命令详解",
        "content": "lsof                               TCP UDP                            lsof                    root       linux                                                          TCP            UDP                                                                                                                lsof                                a               c                g   GID        d               d               D                 n     NFS      i            4 6          ip    p                 u   UID        h          v            command PID USER FD type DEVICE SIZE NODE NAME init 1 root cwd DIR 8 2 4096 2   init 1 root rtd DIR 8 2 4096 2   init 1 root txt REG 8 2 43496 6121706  sbin init init 1 root mem REG 8 2 143600 7823908  lib64 ld 2 5 so init 1 root mem REG 8 2 1722304 7823915  lib64 libc 2 5 so init 1 root mem REG 8 2 23360 7823919  lib64 libdl 2 5 so init 1 root mem REG 8 2 95464 7824116  lib64 libselinux so 1 init 1 root mem REG 8 2 247496 7823947  lib64 libsepol so 1 init 1 root 10u FIFO 0 17 1233  dev initctl migration 2 root cwd DIR 8 2 4096 2   migration 2 root rtd DIR 8 2 4096 2   migration 2 root txt unknown  proc 2 exe ksoftirqd 3 root cwd DIR 8 2 4096 2   ksoftirqd 3 root rtd DIR 8 2 4096 2   ksoftirqd 3 root txt unknown  proc 3 exe migration 4 root cwd DIR 8 2 4096 2   migration 4 root rtd DIR 8 2 4096 2   migration 4 root txt unknown  proc 4 exe ksoftirqd 5 root cwd DIR 8 2 4096 2   ksoftirqd 5 root rtd DIR 8 2 4096 2   ksoftirqd 5 root txt unknown  proc 5 exe events 0 6 root cwd DIR 8 2 4096 2   events 0 6 root rtd DIR 8 2 4096 2   events 0 6 root txt unknown  proc 6 exe events 1 7 root cwd DIR 8 2 4096 2   lsof             COMMAND       PID       USER       FD                          cwd txt  TYPE       DIR REG DEVICE        SIZE      NODE                 NAME                   cwd   current work dirctory                                           txt                                        sbin init    lnn library references  AIX   er FD information error  see NAME column   jld jail directory  FreeBSD   ltx shared library text  code data   mxx  hex memory mapped type number xx  m86 DOS Merge mapped file  mem memory mapped file  mmap memory mapped device  pd parent directory  rtd root directory  tr kernel trace file  OpenBSD   v86 VP ix mapped file  0        1        2                                     u                     r                  w                            unknow                     unknow                            N for Solaris NFS lock unknown type  r for read lock part file  R for read lock entire file  w for write lock part file           W for write lock entire file           u for read write lock length  U for lock unknown type  x for SCO OpenServer Xenix lock part file  X for SCO OpenServer Xenix lock entire file  space if no lock        DIR       CHR         BLK        UNIX  UNIX       FIFO       FIFO      IPv4       IP       DEVICE         SIZE       NODE                 NAME                        lsof         lsof                   lsof                                                                                    cat  proc sys fs file max     lsof   wc  l            lsof  path to file            lsof                           lsof                              lsof  path to file1  path to file2                  lsof  D  usr lib    D   lsof                     grep     lsof   grep   usr lib          D                                 lsof  u pkrumins  u            pkrumins                     lsof  u rms root          rms root                       u        lsof  u rms  u root               lsof  c apache  c        apache                           lsof   grep foo                lsof  c foo                    lsof  c apa        apa                     c    lsof  c apache  c python        apache python                          lsof  u pkrumins  c apache                                       pkrumins    apache                             lsof  a  u pkrumins  c bash  a                               pkrumins    bash            root              lsof  u  root   root                 lsof     root                     PID           lsof  p 1  p          id                        pid  lsof  p 450 980 333                pid  lsof  p  1                p                     lsof  i lsof  i                 TCP UDP          TCP     lsof  i tcp      i         tcp tcp     lsof     TCP sockets         UDP     lsof  i udp   udp lsof     UDP socket                 lsof  i  25  25  i       lsof    TCP UDP 25              etc services                   lsof  i  smtp       udp       lsof  i udp 53              tcp       lsof  i tcp 80               lsof  a  u hacker  i    a  u  i       lsof                   NFS           lsof  N          N   NFS      UNIX Socket   lsof  U           U   UNIX           id    lsof  g 1234                          PGID 1234                          lsof  d 2              2                       lsof  d 0 2           0 1 2      d                              lsof  d mem txt                     lsof  d txt            pid lsof  t  i  t       PID        i                ",
        "objectID": "post/lsof命令详解",
        "date": "2018-11-15T18:36:39.000Z",
        "tags": [
            "Shell"
        ],
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "main函数执行前、后执行的代码",
        "uri": "post/main函数执行前、后执行的代码",
        "content": "main    main                      1       2    static   global      data     3                short int long  0 bool FALSE    NULL      bss     4            C            5  main      argc argv    main          main      main                       main               class simpleClass   public  simpleClass      cout fn2      fn3      fn4                                                         main                               fn4      fn3      fn2      fn1                              main                                          include void fn1 void    printf  next  n      void fn2 void    printf  executed       void fn3 void    printf  is       void fn4 void    printf  This       int main void                main                                     main                                  atexit fn1   atexit fn2   atexit fn3   atexit fn4                              puts  This executed first     return 0",
        "objectID": "post/main函数执行前、后执行的代码",
        "date": "2017-07-19T15:00:12.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "malloc/free的用法详解",
        "uri": "post/malloc-free的用法详解",
        "content": "malloc     malloc    memory allocation            extern void  malloc unsigned int num_bytes            num_bytes                                    NULL             free            void  malloc int size       malloc          size               void    void            C C     void                         void                                                     char  int                                                                   NULL                malloc free                                                                                                          malloc         void                  void                                       free   free            void free void  FirstByte          malloc                                        ptr                                    malloc         free                                                                                                                                                                                        free                                     malloc                       malloc                          3            struct memcontrolblock   int is_available  int size                    malloc                                                                                                                               free                                                                           sizeof struct memcontrolblock                               4         void free void  firstbyte    struct memcontrolblock  mcb     Backup given pointer find memcontrolblock    mcb   firstbyte   sizeof struct memcontrolblock      Mark block available    mcb  is_available   1     That  s It  We  re done     return                                                  malloc free          malloc        STL                    128k    brk     malloc            brk          _enddata               128k  mmap                                              free           brk      A        B     mmap     C    free mmap     C    C                      free brk   A A                  A             brk   B   A B       128k  A B                               C      malloc free                  brk mmap munmap              malloc   128k   brk    128k   mmap        brk   mmap                 brk                                 brk                       mmap                      mmap                                         128k  brk   128k  mmap     malloc  128k      brk      _edata                                                                                                             1       mmap                 libc 2 2 93 so                            _edata   glibc                     A malloc 30K          2 malloc     brk      _edata       30K                     _edata 30K                 _edata 30K            A                            A                         A                   malloc   A                 A                                                                       B malloc 40K          3      malloc  128k      mmap                                  0           C malloc 200K          4        malloc               128K   MMMAPTHRESHOLD            _edata        mmap                                brk                        mmap                 D malloc 100K          5      free C    C                      free B      7    B                        _edata           D             B                      40K      malloc     B               free D      8    B D         140K                            128K   MTRIMTHRESHOLD                trim        free                128K           9    calloc   void  calloc unsigned n unsigned size               n    size                                  NULL   malloc    calloc                        malloc                   realloc   extern void realloc void mem_address  unsigned int newsize                            memaddress         memaddress             newsize                                     mem_address                                          http   blog csdn net maybe3is3u5 article details 51984744 http   blog csdn net eroswang article details 4265024",
        "objectID": "post/malloc-free的用法详解",
        "date": "2017-09-02T15:45:26.000Z",
        "categories": [
            "C++ "
        ]
    },
    {
        "title": "map和multimap操作总结",
        "uri": "post/map和multimap操作总结",
        "content": "map      empty  1  explicit map  const keycompare  comp   keycompare    const allocatortype  alloc   allocatortype     explicit map  const allocator_type  alloc   range  2  template map  InputIterator first  InputIterator last  const keycompare  comp   keycompare    const allocatortype    allocatortype     copy  3  map  const map  x   map  const map  x  const allocator_type  alloc   move  4  map  map   x   map  map   x  const allocator_type  alloc   initializer list  5  map  initializer_list il  const keycompare  comp   keycompare    const allocatortype  alloc   allocatortype           copy  1  map  operator   const map  x   move  2  map  operator   map   x   initializer list  3  map  operator   initializer_list il                      emplace   template pair emplace  Args      args                                  args      value_type                                                                                    1                                                             args  allocator_traits    construct                insert                     emlpace_hint   template iterator emplacehint  constiterator position  Args      args                                                                                 include  include int main      std  map mymap  auto   mymap end      mymap emplace_hint it  b  10   mymap emplace_hint it  a  12   mymap emplace_hint mymap end    c  14   std  cout  include int main      std  map mymap  std  map  iterator it  mymap  a   50  mymap  b   100  mymap  c   150  mymap  d   200    mymap find  b     it    mymap end    mymap erase  it      print content  std  cout   second   second   second  include int main      std  map mymap  char c  mymap   a   101  mymap   c   202  mymap   f   303   c  a   c0  std  cout  include int main      std  map mymap  std  map  iterator itlow itup  mymap  a   20  mymap  b   40  mymap  c   60  mymap  d   80  mymap  e   100  itlow mymap lower_bound   b       itlow points b itup mymap upper_bound   d       itup points e  not d   mymap erase itlow itup      erases  itlow itup     print content   std  map  iterator it mymap begin    it  mymap end      it  std  cout first   second  include int main      std  map mymap  std  map  iterator itlow itup  mymap  a   20  mymap  b   40  mymap  c   60  mymap  d   80  mymap  e   100  itlow mymap lower_bound   b       itlow points b itup mymap upper_bound   d       itup points e  not d   mymap erase itlow itup      erases  itlow itup     print content   std  map  iterator it mymap begin    it  mymap end      it  std  cout first   second equalrange  const keytype  k  const  pair equalrange  const keytype  k                         k key            map                                                                         map  equal_range  include  include int main      std  map mymap  mymap  a   10  mymap  b   20  mymap  c   30  std  pair  iterator std  map  iterator  ret  ret   mymap equal_range  b    std  cout first   second first   second  include int main      std  multimap mymultimap  std  multimap  iterator it itlow itup  mymultimap insert std  make_pair  a  10    mymultimap insert std  make_pair  b  121    mymultimap insert std  make_pair  c  1001    mymultimap insert std  make_pair  c  2002    mymultimap insert std  make_pair  d  11011    mymultimap insert std  make_pair  e  44    itlow   mymultimap lower_bound   b       itlow points b itup   mymultimap upper_bound   d       itup points e  not d     print range  itlow itup    it itlow  it  itup    it  std  cout    include int main      std  multimap mymultimap  std  multimap  iterator it itlow itup  mymultimap insert std  make_pair  a  10    mymultimap insert std  make_pair  b  121    mymultimap insert std  make_pair  c  1001    mymultimap insert std  make_pair  c  2002    mymultimap insert std  make_pair  d  11011    mymultimap insert std  make_pair  e  44    itlow   mymultimap lower_bound   b       itlow points b itup   mymultimap upper_bound   d       itup points e  not d     print range  itlow itup    it itlow  it  itup    it  std  cout   equalrange  const keytype  k  const  pair equalrange  const keytype  k                         k key                                                                key_comp       k                  false                                     include  include int main      std  multimap mymm  mymm insert std  pair  a  10    mymm insert std  pair  b  20    mymm insert std  pair  b  30    mymm insert std  pair  b  40    mymm insert std  pair  c  50    mymm insert std  pair  c  60    mymm insert std  pair  d  60    std  cout   iterator  std  multimap  iterator  ret  ret   mymm equal_range ch   std  cout     std  multimap  iterator it ret first  it  ret second    it  std  cout second  std  cout     n     return 0",
        "objectID": "post/map和multimap操作总结",
        "date": "2017-07-16T21:21:42.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "map排序相关讨论",
        "uri": "post/map排序相关讨论",
        "content": "map                        key     value                                    map                      map        string     Key        int     value                                                                                                                                             map   Key    Value                   map            Map Key               map                                 key               key           include  include using namespace std  typedef pair PAIR  ostream  operator namescoremap  namescoremap  LiMin     90  namescoremap  ZiLinMi     79  namescoremap  BoB     92  namescoremap insert make_pair  Bing  99    namescoremap insert make_pair  Albert  86     map  iterator iter   namescoremap begin    iter    namescoremap end      iter    cout   class Allocator   allocator     class map                       Key   Value      Allocator                                      class Compare   less      class             less  less stl                                                  function object                                                         operator                  less     template struct less   binary_function   bool operator    const T  x  const T  y  const  return x struct greater   binary_function   bool operator    const T  x  const T  y  const  return x y      map    less                           Compare map        Key less                                          string less           map             Compare         less   greater   include  include  include using namespace std  typedef pair PAIR  ostream  operator   namescoremap  namescoremap  LiMin     90  namescoremap  ZiLinMi     79  namescoremap  BoB     92  namescoremap insert make_pair  Bing  99    namescoremap insert make_pair  Albert  86     map  iterator iter   namescoremap begin    iter    namescoremap end      iter    cout namescoremap  namescoremap  LiMin     90  namescoremap  ZiLinMi     79  namescoremap  BoB     92  namescoremap insert make_pair  Bing  99    namescoremap insert make_pair  Albert  86     map  iterator iter   namescoremap begin    iter    namescoremap end      iter    cout struct pair   typedef T1 first_type  typedef T2 second_type  T1 first  T2 second  pair     first T1     second T2       pair const T1  x  const T2  y    first x   second y     template pair  const pair  p    first p first   second p second        pair                              first   second   key   value           pair    inline bool operator  x  const pair  y    return x first   y first                    __y first PAIR  bool operator PAIR  bool cmpbyvalue const PAIR  lhs  const PAIR  rhs    return lhs second void sort   RandomAccessIterator first  RandomAccessIterator last    template void sort   RandomAccessIterator first  RandomAccessIterator last  Compare comp                sort   map                        Compare        map                                key value          sort                                                                                           value         map            unordered_map  map  include  include  include  include  include using namespace std  typedef pair PAIR  ostream  operator namescoremap  namescoremap  LiMin     90  namescoremap  ZiLinMi     79  namescoremap  BoB     92  namescoremap insert make_pair  Bing  99    namescoremap insert make_pair  Albert  86       map      vector  vector namescorevec namescoremap begin    namescoremap end     sort namescorevec begin    namescorevec end    CmpByValue        sort namescorevec begin    namescorevec end    cmpbyvalue    int   0     namescorevec size      i    cout  include using namespace std  typedef struct tagStudentInfo   int nID  string strName   StudentInfo   PStudentInfo         classs sort   Public  Bool operator    StudentInfo const  A  StudentInfo const  B  const   if A nID   B nID  return true  if A nID    B nID  return A strName compare B strName    0  return false          unordered map          hash     map key           map         unordered map  map",
        "objectID": "post/map排序相关讨论",
        "date": "2017-07-21T15:22:43.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "MemStats与GCStats",
        "uri": "post/MemStats与GCStats",
        "content": "runtime    MemStats                                     GC                runtime MemStats  runtime mstats go                    runtime memstats    runtime MemStats                                              memStats     runtime MemStats   runtime ReadMemStats memStats         gcstats  gcstats     debug GCStats PauseQuantiles  make   time Duration  100   debug ReadGCStats gcstats        open falcon               github com niean goperfcounter               bases     runtime    debug            runtime MemStats  debug GCStats          ReadMemStats                 stopTheWorld  Russ Cox    use ReadMemStats internally Google  not sure period it s something you re talking  maybe once minute  forget   Stopping world not huge problem  stopping world long time is  ReadMemStats stops world fixed  short amount time  So calling every 10 20 seconds fine  Don t word it  measure long takes decide whether you re willing give every 10 20 seconds  expect 1 1000th time  10 ms   refer  https   groups google com forum   searchin golang nuts ReadMemStats golang nuts mTnw5k4pZdo rpK69Fns2MsJ     https   github com rcrowley go metrics      go metrics runtime go L 68  runtime ReadMemStats  memStats     takes 50 200us                        1                          https   toutiao io posts p8iu03 preview",
        "objectID": "post/MemStats与GCStats",
        "date": "2020-02-11T23:59:16.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go调优"
        ]
    },
    {
        "title": "mongo-go-driver使用总结",
        "uri": "post/mongo-go-driver使用总结",
        "content": "main     main go   bson mongo mongo options   package main import    context   fmt   log   go mongodb org mongo driver bson   go mongodb org mongo driver mongo   go mongodb org mongo driver mongo options       will using Trainer type later program type Trainer struct   Name string Age int City string   func main        Rest code will go                 Trainer                    Go   bson    type Post struct   ID primitive ObjectID  _id  Title string bson  title  Body string Tags   string bson  tags json  tags  Comments uint64 bson  comments omitempty  CreatedAt time Time bson  created_at  UpdatedAt time Time bson  updated_at                      body                  key         ID    bson          Tags                  bson json     Key                                  bson       bson           omitempty                 ID     MongoDB    _id  ObjectId minsize                   MongoDB  32        int32  truncate                 MongoDB double   float32  inline          struct            Post                    _  err    col InsertOne ctx   Post  ID  primitive NewObjectID    Title   post   tags    string  mongodb    Body  blog post  CreatedAt  time Now                    _id    ObjectId  5c71f03ccfee587e4212ad90     title     post    body     blog post    tags       mongodb      comments    NumberLong 0    created_at    ISODate  2019 02 24T01 15 40 329Z     updated_at    null                                                            primitive NewObjectID         ObjectID                     Go       MongoDB   MongoDB Go            mongo Connect       MongoDB           options ClientOptions     mongo Connect                                                                      main              Set client options clientOptions    options Client   ApplyURI  mongodb   localhost 27017      Connect MongoDB client  err    mongo Connect context TODO    clientOptions  err    nil   log Fatal err       Check connection err   client Ping context TODO    nil  err    nil   log Fatal err    fmt Println  Connected MongoDB             MongoClient  err    mongo NewClient  options ClientOptions  Auth   options Credential  AuthSource  Authsource  Username  Username  Password  Password     Hosts  Hosts     err    nil   log Fatal  MongoDB        err  return   err   MongoClient Connect context TODO    err    nil   log Fatal err  return               main            trainers  test           collection    client Database  test   Collection  trainers                  trainers              MongoDB                                                                     client Disconnect    err   client Disconnect context TODO    err    nil   log Fatal err    fmt Println  Connection MongoDB closed    mongodb           opt SetLocalThreshold 3   time Second        mongo      3   opt SetMaxConnIdleTime 5   time Second                     opt SetMaxPoolSize 200             opt SetReadPreference want              opt SetReadConcern readconcern Majority                                     opt SetWriteConcern wc                 mongod    Go   BSON                     Go Driver   BSON           MongoDB  JSON       BSON       JSON           JSON                      BSON     JSON           int long date floating point decimal128                         Go Driver       BSON      D   Raw    D   D          Go       BSON            MongoDB         D          D D  BSON                    BSON D        BSON               Raw D          _  err    col InsertOne ctx  bson D    title    post 2      tags     string  mongodb       body   blog post 2     created_at   time Now                               _id    ObjectId  5c71f03ccfee587e4212ad8f     title     post 2    tags       mongodb      body     blog post 2    created_at    ISODate  2019 02 24T01 15 40 328Z                       MongoDB            map        E E  D BSON        D   M M BSON                   BSON               BSON              D          _  err    col InsertOne ctx  bson M   title    post    tags     string  mongodb     body   blog post   created_at   time Now                                  _id    ObjectId  5c71f03ccfee587e4212ad8e     body     blog post    created_at    ISODate  2019 02 24T01 15 40 326Z     title     post    tags       mongodb                       bson M               A  BSON                BSON   A        BSON               RawArray Array          bson A   bar   world  3 14159 bson D    qux  12345    Raw   Raw    byte              Raw                      BSON                         D           bson     bson       tag      bson type BeforeCond struct   int64 bson   lt    type DeleteCond struct   BeforeCond BeforeCond bson  timePoint startTime    delCond    DeleteCond  BeforeCond  BeforeCond  Before  time Now   Unix         type FindByJobName struct   JobName string bson  jobName    cond    FindByJobName  JobName   hello     bson       bson            bson     a  bson M     x  A     Bson2Odj a  x  func Bson2Odj val interface    obj interface    error     bson   byte data  err    bson Marshal val  err    nil   return err       byte     err   bson Unmarshal data  obj  err    nil   ret",
        "objectID": "post/mongo-go-driver使用总结",
        "date": "2019-07-16T16:38:41.000Z",
        "tags": [
            "Go",
            "MongoDB"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "MongoDB的事务机制介绍",
        "uri": "post/MongoDB的事务机制介绍",
        "content": "MongoDB     4 2                                                                                                            ACID     journal                                                                       MongoDB                                                           MongoDB                     WriteConcern  j  ture    MongoDB                     crash MongoDB                      j  true                 crash recovery                    MongoDB                 MongoDB               readConcern majority                    readConcern  snapshot                      WriteConcern ReadConcern                    MongoDB                                                                                                                4 0                4 2                      MongoDB                                                             Abort                                                                                                                         MongoDB 4 2              60                                       chunk          chunk                                        readConcern",
        "objectID": "post/MongoDB的事务机制介绍",
        "date": "2020-03-27T16:00:16.000Z",
        "tags": [
            "MongoDB"
        ],
        "categories": [
            "MongoDB"
        ]
    },
    {
        "title": "MongoDB的事务实现解析",
        "uri": "post/MongoDB的事务实现解析",
        "content": "Session Session   MongoDB 3 6                               Session                      MongoDB             mongod                                OperationContext                                                              Session                                               Session           lsid   4 0                              lsid       Session   ID     logic session id txnNmuber                  Session         stmtIds             insert     insert             ID                         MongoDB Driver       Driver     Session     lsid       Session        Driver            lsid               txnNumber         Session lsid        startSession     server                                    MongoDB            startTransaction    txnNumber       Driver      Driver        Session   txnNumber      server                         MongoDB   startSession                   Session             causalConsistency       causal consistency         true           MongoDB      read own write       readConcern  writeConcern  readPreference                  read preference retryWrites      true         MongoDB                              MongoDB                oplog oplog                                  16MB                     oplog                oplog            lsid txnNumber              applyOps       ts    Timestamp 1530696933  1    t    NumberLong 1    h    NumberLong  4217817601701821530     v    2   op     c    ns     admin  cmd    wall    ISODate  2018 07 04T09 35 33 549Z     lsid       id    UUID  e675c046 d70b 44c2 ad8d 3f34f2019a7e     uid    BinData 0  47DEQpj8HBSa  TImW 5JCeuQeRkm5NMpJWZG3hSuFU        txnNumber    NumberLong 0    stmtId    0   prevOpTime       ts    Timestamp 0  0    t    NumberLong  1      o       applyOps         op     i    ns     test coll2    ui    UUID  a49ccd80 6cfc 4896 9740 c5bff41e7cce     o       id    ObjectId  5b3c94d4624d615ede6097ae     x    20000         op     i    ns     test coll3    ui    UUID  31d7ae62 fe78 44f5 ba06 595ae3b871fc     o       id    ObjectId  5b3c94d9624d615ede6097af     x    20000                          Batch         oplog    Batch     OplogTruncateAfterPoint      Batch     oplog          local replset oplogTruncateAfterPoint        Batch      oplog   local oplog rs       oplog                      OplogTruncateAfterPoint     oplog                  crash          oplogTruncateAfterPoint        oplog                       oplog                             oplog                      oplog        ID            ApplyThrough      Batch       oplog                                          ApplyThrough           Batch      oplog    oplog     oplog                                    oplog      Snapshot                                 WiredTiger           3 x     MongoDB     WiredTiger                     oplog               MongoDB                                MongoDB    oplog              WiredTiger        ID             2                    MongoDB            WiredTiger                       WiredTier 3 0         transaction timestamp             WTSESSION  timestamptransaction        WiredTiger      commit timestmap               read  as of  timestamp     read  as of  timestamp         oplog                 oplog            oplog          4 0              wttxnvisible    current transaction given ID   timestamp     static inline bool wttxnvisible  WTSESSIONIMPL session  uint64t id  const wttimestamp_t timestamp      txnvisibleid session  id   return  false      Transactions read writes  regardless timestamps      FISSET  amp session  gt txn  WTTXNHASID   amp  amp  id    session  gt txn id  return  true    ifdef HAVE_TIMESTAMPS   WT_TXN  txn    amp session  gt txn     Timestamp check       FISSET txn  WTTXNHASTS_READ     timestamp    NULL  return  true   return  _wttimestampcmp timestamp   amp txn  gt readtimestamp   lt   0      else WT_UNUSED timestamp   return  true    endif                                                                         MongoDB           oplog               MongoDB Server      WiredTiger               cache     WiredTiger WT                    WiredTiger cache evict          WT page    N                       wttxnvisibleall     page     evict      wtpagecanevict     3 x                 oplog         WT            MongoDB      MongoDB                    4 0                                                WT cache evict                  evict        cache stuck            WT cache    MongoDB 4 0                              abort                        transactionLifetimeLimitSeconds    60s                        1000               oplog      16mb       MongoDB          oplog                      Read timestamp   oldest timestamp Read timestamp    WiredTiger                           MongoDB                                         WT cache          WiredTiger      oldest timestamp         MongoDB            Read timestamp                        WiredTiger      oldest timestamp           MongoDB             oldest timestamp     WT cache             Rollback   stable timestamp   3 x     MongoDB            Server                       oplog   ",
        "objectID": "post/MongoDB的事务实现解析",
        "date": "2020-03-27T18:47:35.000Z",
        "tags": [
            "MongoDB"
        ],
        "categories": [
            "MongoDB"
        ]
    },
    {
        "title": "MongoDB的文档模型设计三部曲",
        "uri": "post/MongoDB的文档模型设计三部曲",
        "content": "MongoDB                                                                                 1 1   1 N   N N                        1 1                                                     16MB          1 N                                            16MB                   N N                                                   1 1                                     5MB 10MB                                              N N                                                                       DB                              id            lookup                                                                                                                         MB    16MB                                             MongoDB                  MongoDB        lookup           lookup   left outer join   lookup      from",
        "objectID": "post/MongoDB的文档模型设计三部曲",
        "date": "2020-03-28T10:27:52.000Z",
        "tags": [
            "MongoDB"
        ],
        "categories": [
            "MongoDB"
        ]
    },
    {
        "title": "MongoDB分片集群机制及原理",
        "uri": "post/MongoDB分片集群机制及原理",
        "content": "10TB       1 2                                                                     mongos                                                            2                         config          MongoDB                                          mongod                 1024                                                                                                           MongoDB                                                                                                              chunk1 chunk2       chunk                                                                                                                                                                                                                                       Zone                                                                                                                                                                                3TB       2TB                                                      CPU RAM                                                                        index stats                                                     MongoDB                60                    shard key                           doc   shardkey      MongoDB          Chunk    n       64MB                                Shard   n chunk   Cluster   n                             Cardinality                                                                                                                          MongoDB                                                     15 65          15",
        "objectID": "post/MongoDB分片集群机制及原理",
        "date": "2020-03-29T16:14:17.000Z",
        "tags": [
            "MongoDB"
        ],
        "categories": [
            "MongoDB"
        ]
    },
    {
        "title": "MongoDB复制集机制及原理",
        "uri": "post/MongoDB复制集机制及原理",
        "content": "MongoDB                                                                                                                                                                                                                 3                        PRIMARY                           SECONDARY                                                            primary secondry     1                       secondry                                                                     oplog           oplog                  tailable             oplog                                                           5                                                                    RAFT                                      50               7                                                    oplog                                                         v                       priority                          0                                                           hidden                                     0                                                                   slaveDelay        n                                                        12          12",
        "objectID": "post/MongoDB复制集机制及原理",
        "date": "2020-03-28T22:58:32.000Z",
        "tags": [
            "MongoDB"
        ],
        "categories": [
            "MongoDB"
        ]
    },
    {
        "title": "multimap中查找方法",
        "uri": "post/multimap中查找方法",
        "content": "multimap                                            find count   count             find                              lowerbound key  upperbound key  lower_bound key               k       upper_bound key               k         equal_range key          pair   first     lowerbound key  second     upperbound key       include  include  include using namespace std  int main     multimap m_map  string s        string s1        mmap insert makepair s 50    mmap insert makepair s 55    mmap insert makepair s 60    mmap insert makepair s1 30    mmap insert makepair s1 20    mmap insert makepair s1 10    multimap  iterator m  multimap  iterator beg end      1 m   m_map find s   for int k   0 k    m_map count s  k   m    coutfirstsecondfirstsecondfirstsecond",
        "objectID": "post/multimap中查找方法",
        "date": "2017-08-01T00:09:24.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "multipart包解析",
        "uri": "post/multipart包解析",
        "content": "type File type File interface   io Reader io ReaderAt io Seeker io Closer   File            multipart                                             os File  type FileHeader type FileHeader struct   Filename string Header textproto MIMEHeader                 FileHeader    multipart                func   FileHeader  Open func  fh  FileHeader  Open    File  error  Open               type Part type Part struct                   Go http Header         foo bar     Foo Bar                 Content Transfer Encoding      quoted printable           map           Read        Header textproto MIMEHeader                 Part  multipart           func   Part  FileName func  p  Part  FileName   string   Part  Content Disposition          func   Part  FormName func  p  Part  FormName   string   p Content Disposition    form data                    func   Part  Read func  p  Part  Read d   byte   n int  err error  Read                                func   Part  Close func  p  Part  Close   error type Form type Form struct   Value mapstringstring File mapstring FileHeader   Form       multipart     File                    FileHeader      Open       Value                       func   Form  RemoveAll func  f  Form  RemoveAll   error   Form           type Reader type Reader struct                   Reader MIME multipart           Reader                Seek  func NewReader func NewReader r io Reader  boundary string   Reader        MIME   r    multipart              Content Type     boundary         mime ParseMediaType          Example msg     mail Message  Header  mapstringstring   Content Type     string  multipart mixed  boundary foo       Body  strings NewReader     foo r nFoo  one r n r nA section r n       foo r nFoo  two r n r nAnd another r n       foo   r n      mediaType  params  err    mime ParseMediaType msg Header Get  Content Type    err    nil   log Fatal err    strings HasPrefix mediaType   multipart      mr    multipart NewReader msg Body  params  boundary      p  err    mr NextPart   err    io EOF   return   err    nil   log Fatal err    slurp  err    ioutil ReadAll p  err    nil   log Fatal err    fmt Printf  Part  q   q n   p Header Get  Foo    slurp      Output  Part  one    A section  Part  two    And another  func   Reader  ReadForm func  r Reader  ReadForm maxMemory int64   f Form  err error  ReadForm    multipart     Content Disposition     form data          maxMemory                             func   Reader  NextPart func  r Reader  NextPart    Part  error  NextPart  multipart                        io EOF  type Writer type Writer struct                   Writer      multipart    func NewWriter func NewWriter w io Writer   Writer NewWriter                Writer     w  func   Writer  FormDataContentType func  w  Writer  FormDataContentType   string     w   HTTP multipart   Content Type     multipart form data    func   Writer  Boundary func  w  Writer  Boundary   string      Writer     func   Writer  SetBoundary func  w  Writer  SetBoundary boundary string  error SetBoundary    Writer              boundary                   boundary       ascii         1 69      func   Writer  CreatePart func  w  Writer  CreatePart header textproto MIMEHeader   io Writer  error  CreatePart       header      multipart                Writer                         func   Writer  CreateFormField func  w  Writer  CreateFormField fieldname string   io Writer  error  CreateFormField            CreatePart    func   Writer  CreateFormFile func  w  Writer  CreateFormFile fieldname  filename string   io Writer  error  CreateFormFile CreatePart                         form data   func   Writer  WriteField func  w  Writer  WriteField fieldname  value string  error WriteField    CreateFormField      value  func   Writer  Close func  w  Writer  Close   error Close    multipart              io Writer",
        "objectID": "post/multipart包解析",
        "date": "2018-11-15T18:37:14.000Z",
        "tags": [
            "Go标准库"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "MySQL各种超时参数的含义",
        "uri": "post/MySQL各种超时参数的含义",
        "content": "show variables   timeout                                          timeout                     MySQL   none    show variables   timeout                                                  Variable_name   Value                                                 connect_timeout   10     delayedinserttimeout   300     innodbflushlogattimeout   1     innodblockwait_timeout   120     innodbrollbackon_timeout       interactive_timeout   172800     lockwaittimeout   31536000     netreadtimeout   30     netwritetimeout   60     rplsemisyncmastertimeout   10000     rplstopslave_timeout   31536000     slavenettimeout   10     wait_timeout   172800                                               13 rows set  0 00 sec         global session           MySQL 5 6 30                                          MySQL               MySQL                                                                    MySQL            waittimeout interactivetimeout                         python                    connect_timeout    10S wait_timeout    8    28800  interactive_timeout    8    28800  netreadtimeout    30S netwritetimeout    60S handshake                     MySQL                                  TCP            MySQL                 connect_timeout                         TCP established                     MySQL Server 10 10 20 96         Client 10 10 20 51  Client 10 10 20 51         MySQL Server 10 10 20 96  MySQL Server 10 10 20 96         Client 10 10 20 51                      established                      MySQL                      waittimeout interactivetimeout              MySQL server    wait_timeout    Client         MySQL server    interactive_timeout    Client                           netreadtimeout netwritetimeout                        client server                           client       MySQL Server netreadtimeout  client HOST  DNS  IP                                            connect_timeout                  connect_timeout The number seconds mysqld server waits connect packet responding Bad handshake  default value 10 seconds  connect_timeout      session      global       mysql                connect_timeout 5 MySQL   none    set global connect_timeout 5  Query OK  0 rows affected  0 00 sec  MySQL   none      mysql              authenticate         telnet    mysql   telnet      mysql       root localhost     time telnet 127 0 0 1 3306 Trying 127 0 0 1    Connected 127 0 0 1  Escape character       N 5 6 30 log wA k    S 9 A Z O9pJmysqlnativepasswordConnection closed foreign host  real 0m5 022s        5S       user 0m0 000s sys 0m0 010s   mysql         connect_timeout 10S MySQL   none    set global connect_timeout 10  Query OK  0 rows affected  0 00 sec  MySQL   none      telnet      root localhost     time telnet 127 0 0 1 3306 Trying 127 0 0 1    Connected 127 0 0 1  Escape character       N 5 6 30 log gZoA3 6 S  D iu3 n uafmysqlnativepasswordConnection closed foreign host  real 0m10 012s user 0m0 000s sys 0m0 002s             MySQL             authenticate       connect_timeout    interactivetimeout waittimeout interactivetimeout waittimeout         sleep                                 sleep     waittimeout  interactivetimeout    client_interactive        MySQL               waittimeout The number seconds server waits activity noninteractive connection closing it  thread startup  session waittimeout value initialized global waittimeout value global interactivetimeoutvalue  depending type client  as defined CLIENTINTERACTIVE connect option mysqlreal_connect     interactivetimeout The number seconds server waits activity interactive connection closing it  interactive client defined client uses CLIENTINTERACTIVE option mysqlrealconnect                    interactivetimeout        waittimeout                    mysqlrealconnect        CLIENT_INTERACTIVE             mysql                 jdbc                                      waittimeout          waittimeout   interactive_timeout                                        wait_timeout      Q1                  A1 wait_timeout       wait_timeout    mysql  select variablename variablevalue informationschema sessionvariables variablename   interactivetimeout   wait_timeout                                               variablename   variablevalue                                              INTERACTIVE_TIMEOUT   28800     WAIT_TIMEOUT   28800                                            2 rows set  0 03 sec  mysql  set session WAIT_TIMEOUT 10  Query OK  0 rows affected  0 00 sec           10s     mysql  select variablename variablevalue informationschema sessionvariables variablename   interactivetimeout   wait_timeout    ERROR 2013  HY000   Lost connection MySQL server during query        10s                  interactive_timeout    mysql  select variablename variablevalue informationschema sessionvariables variablename   interactivetimeout   wait_timeout                                               variablename   variablevalue                                              INTERACTIVE_TIMEOUT   28800     WAIT_TIMEOUT   28800                                            2 rows set  0 06 sec  m",
        "objectID": "post/MySQL各种超时参数的含义",
        "date": "2019-07-03T19:05:49.000Z",
        "categories": [
            "Mysql"
        ]
    },
    {
        "title": "MySQL批量SQL插入性能优化",
        "uri": "post/MySQL批量SQL插入性能优化",
        "content": "MySQL InnoDB                insert               1   SQL                   INSERT insert_table  datetime  uid  content  type  VALUES   0    userid0    content0   0   INSERT insert_table  datetime  uid  content  type  VALUES   1    userid1    content1   1        INSERT insert_table  datetime  uid  content  type  VALUES   0    userid0    content0   0     1    userid1    content1   1                            SQL                   insert  mysql                 mysql               MySQL binlog innodb                                       SQL         SQL               IO                                 SQL           1  1  1             values                                                             insert          IPS insert per second      RPS effect rows per second          values number        1 10 50 100 200 500 1000 5000 10000              values number              1777s  53s      values number            values number  200    10000 values number     2               values numbers    QPS                  1 s  RPS              level              5000 values number                  QPS    RPS          values number      QPS          insert                     values number      50   values       97  insert     36                                                    50 100                                      2              n values number                               n   n                     1s                          values number               1s       values           2                                                    batch insert    insert         values number                                        2                     START TRANSACTION  INSERT insert_table  datetime  uid  content  type  VALUES   0    userid0    content0   0   INSERT insert_table  datetime  uid  content  type  VALUES   1    userid1    content1   1       COMMIT                          INSERT    MySQL                                                                                           1  1  1      3                                  datetime        INSERT insert_table  datetime  uid  content  type  VALUES   1    userid1    content1   1   INSERT insert_table  datetime  uid  content  type  VALUES   0    userid0    content0   0   INSERT insert_table  datetime  uid  content  type  VALUES   2    userid2    content2  2        INSERT insert_table  datetime  uid  content  type  VALUES   0    userid0    content0   0   INSERT insert_table  datetime  uid  content  type  VALUES   1    userid1    content1   1   INSERT insert_table  datetime  uid  content  type  VALUES   2    userid2    content2  2                                           InnoDB   B tree                                                       B tree                                                                                1  1  1  10  100                                    4                         INSERT                                                      1                          innodb_buffer                                                                                                                         SQL                   SQL       SQL       maxallowedpacket          1M       8M                          MySQL innodblogbuffer_size           innodb                                                     https   segmentfault com a 1190000008890065",
        "objectID": "post/MySQL批量SQL插入性能优化",
        "date": "2019-08-29T14:13:48.000Z",
        "categories": [
            "Mysql"
        ]
    },
    {
        "title": "Mysql主键设计",
        "uri": "post/Mysql主键设计",
        "content": "MySQL       MySQL                                                    Email                             Email                  Email                                                                                                                                                                                                                                                                                                                                                                                      unique      MySQL                                                                                                                                                create table test   name varchar 19   id number  value varchar 10   primary key  name id       name id         test                name               ID                                                                                                                                                                                                                                                                                                                                                                  UNIQUE                          UNIQUE      UNIQUE                 UNIQUE              ORACLE      PRIMARY KEY                      NOT NULL     PRIMARY KEY            UNIQUED                       PRIMARY KEY                            primary key   unique   not null unique                                             person_Info            column            unique           Primary Key Unique Key                                                                                                                                                                  MySQL                                                                                                                                          Web                                                                  INT BIGINT           insert                         VARCHAR CHAR UUID                                                                                    Natural Key                                                                                                                                                                                                                                                                                                                                                                                                                         8                 int 4    bigint 8                    8     bigint   8                  bigint             code     12345678    id    12345678                        int    bigint                    int   datetime                                                                                                                                                            int    bigint                                                                              RMB     RXB                                                                                                                                                                      ISBN NoySQL5 1 22   InnoDB                                      AUTO INC LOCKING                             SQL                              autoincrement      innoDB                autoincrement                                                    SQL     5 1 22   InnoDB                   innodbautoinclock_mode  0                   insert  AUTO inc locking        1       simple insert                              bulk insert               2     insert like                                           Statement   Replication                 Row Replication             Create Table  CREATE TABLE tmpauto",
        "objectID": "post/Mysql主键设计",
        "date": "2019-06-30T16:36:54.000Z",
        "categories": [
            "Mysql"
        ]
    },
    {
        "title": "N皇后问题",
        "uri": "post/N皇后问题",
        "content": "LeetCode 51  N Queens n queens puzzle problem placing n queens n n chessboard no two queens attack other  Given integer n  return distinct solutions n queens puzzle  solution contains distinct board configuration n queens  placement   Q      indicate queen empty space respectively  example  exist two distinct solutions 4 queens puzzle       Q        Solution 1     Q    Q         Q         Q       Solution 2  Q          Q     Q                                                                       vis                vis                                              i    c i     c i n     class Solution   vector   vvs  public  vector   solveNQueens int n    vector vi n                                  vector   vis 3 vector n n    solveNQueens vi  n  0 vis   return vvs    private  void solveNQueens vector  vi  int n  int c  vector   vis     vi           n  N N    c       c  if c    n                vector vs n  string n              for int   0    vis 3 vector n n    int cnt 0  solveNQueens cnt  n  0 vis   return cnt    private  void solveNQueens int  cnt  int n  int c  vector   vis     vi           n  N N    c       c  if c    n         cnt    for int   0    n    i         if  vis0   vis1   vis2             vis                                          i    c i     c i n     vis0 vis1 vis2 1  solveNQueens cnt  n  c   1 vis      dfs vis0 vis1 vis2 0",
        "objectID": "post/N皇后问题",
        "date": "2017-06-24T22:08:30.000Z",
        "tags": [
            "Backtracking"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "NATS:高性能轻量级消息队列浅析",
        "uri": "post/NATS-高性能轻量级消息队列浅析",
        "content": "NATS                                   Publish Subscribe     Golang      NATS          fast      dial tone      small footprint      QoS at least once at most once                  flexible                Pure pub sub        Cluster mode server          Auto pruning subscribers         Text based protocol          Multiple qualities service   QoS                                      NATS                    Publish Subscribe       Request Reply       Queue Subscribers   Publish Subscribe Publish Subscribe          Publisher                    Subscriber                           NATS                                 subscriber     subscriber                     QoS     NATS Streaming                     NATS Streaming        QoS                     Request Reply publisher                 subscriber                                                        Requestor         Queueing subscriber                       subscriber                                                    subscriber              subscriber    Nats  API publish subscribe             package main import    flag   log   runtime   strings   github com nats io nats    func usage     log Fatalf  Usage  nats sub   s server     tls    t   n     func printMsg m  nats Msg  int    log Printf     d  Received   s     s  n   i  m Subject  string m Data     func main     var urls   flag String  s    nats   0 0 0 0 4222    The nats server URLs  separated comma    var tls   flag Bool  tls   false   Use Secure Connection   log SetFlags 0  flag Usage   usage flag Parse   args    flag Args   len args    subject                      nats  options          server url   tls                package main import    flag   log   strings   github com nats io nats    func usage     log Fatalf  Usage  nats pub   s server   s      tls   n    nats   0 0 0 0 4222     func main               server URL var urls   flag String  s    nats   0 0 0 0 4222    The nats server URLs  separated comma           TLS       var tls   flag Bool  tls   false   Use TLS Secure Connection              log SetFlags 0  flag Usage   usage flag Parse   args    flag Args   len args     nc Subscribe  aa  ccc   func m Msg             aa bb ccc        aa  ccc        aa jcakscba ccc   BUT       aa XXX YYY ccc                             server                                nc Subscribe  aa     func m  Msg              nc Subscribe  aa   gg   func m  Msg                                                      aa     subject                  nats server            server                server           server   var servers    nats   localhost 1222  nats   localhost 1223  nats   localhost 1224        nc  err    nats Connect servers            connect         options     options",
        "objectID": "post/NATS-高性能轻量级消息队列浅析",
        "date": "2019-04-25T15:14:52.000Z",
        "tags": [
            "NATS"
        ],
        "categories": [
            "NATS"
        ]
    },
    {
        "title": "NATS Streaming浅析",
        "uri": "post/NATS-Streaming浅析",
        "content": "NATS                     NATS                                                                                                                                                                                       NATS                NATS Streaming                NATS                                      NATS Streaming       NATS     NATS Streaming                           NATS              NATS Streaming    Go                               NATS     NATS Streaming                 NATS     gnatsd       NATS Streaming    NATS                                                       NATS Streaming                                   NATS                NATS      NATS Streaming                                     NATS Streaming                reply to                                                                CRC32                                                        IEEE CRC32              NATS Streaming                                                                               NATS Streaming                                                                                                               NATS Streaming           MaxPubAcksInFlight                                                                                             NATS Streaming                MaxInFlight                             NATS Streaming                                                                                                                                                                                                        30                                                                                                           ID                                   NATS Streaming       NATS Streaming                NATS                         NATS Streaming         store                    nats streaming server     store file     dir   data     max_msgs 0     max_bytes 0        NATS Streaming          store Store type  MEMORY FILE  default  MEMORY    dir FILE store type  root directory   max_msgs Max number messages per channel  0 unlimited    max_bytes Max messages total size per channel  0 unlimited        NATS Streaming                                                                             NATS Streaming          NATS                4222                 NATS Streaming         NATS           nats streaming                           exporter         prometheus        curl localhost 9222 streaming serverz    cluster_id      NATS CLUSTER ID     server_id    2DTn1aiWKHXcrTWScNMYbB    version    0 11 2    go    go1 11 1    state    CLUSTERED    now    2019 03 13T08 05 32 976885437Z    start_time    2019 03 13T07 54 17 961989986Z    uptime    11m15s    clients   0   subscriptions   0   channels   0   total_msgs   0   total_bytes   0          curl localhost 9222 streaming storez    cluster_id      NATS CLUSTER ID     server_id    2DTn1aiWKHXcrTWScNMYbB    now    2019 03 13T08 08 49 634481176Z    type    RAFT_FILE    limits      max_channels   100   max_msgs   1000000   max_bytes   1024000000   max_age   0   max_subscriptions   1000   MaxInactivity   0     total_msgs   0   total_bytes   0   client   curl localhost 9222 streaming clientsz    cluster_id      NATS CLUSTER ID     server_id    2DTn1aiWKHXcrTWScNMYbB    now    2019 03 13T08 10 38 048664063Z    offset   0   limit   1024   count   0   total   0   clients        channel     curl localhost 9222 streaming channelsz    cluster_id      NATS CLUSTER ID     server_id    2DTn1aiWKHXcrTWScNMYbB    now    2019 03 13T08 11 22 338425862Z    offset   0   limit   1024   count   0   total   0    Nats    NATS Streaming Server         NATS Server      NATS      NATS Streaming          NATS Streaming Server             NATS Server  NATS Streaming Server             NATS Streaming                             Close              Go         pb        Protocol Buffers             RPC    orderservice          Order    HTTP API                    OrderCreated              eventstore     gRPC    CreateEvent        Event Store  eventstore   gRPC      NATS Streaming             Event Store     NATS Streaming                             Event Sourcing                           Event Store       CockroachDB         restuarantservice   NATS Streaming            orderservice       evenstore        order notification          NATS Streaming      order notification              orderquery store1   NATS        NATS Streaming     order notification    QueueGroup   NATS                                         Event Store                                                  CQRS                                                   CockroachDB                                        orderquery store2   NATS Streaming        NATS Streaming order notification         QueueGroup     orderquery store1 orderquery store2                                       Event Store                   QueueGroup       orderquery store1 orderquery store2   store                      CockroachDB         CockroachDB      Go                  Subscribe subscribe             Queue Group       topic             durable subscription   client id dura",
        "objectID": "post/NATS-Streaming浅析",
        "date": "2019-04-24T17:05:20.000Z",
        "tags": [
            "NATS"
        ],
        "categories": [
            "NATS"
        ]
    },
    {
        "title": "Nested List",
        "uri": "post/Nested-List",
        "content": "LeetCode 341  Flatten Nested List Iterator Given nested list integers  implement iterator flatten it  element either integer  list   whose elements may integers lists  Example 1  Given list   1 1  2  1 1    calling next repeatedly until hasNext returns false  order elements returned next be   1 1 2 1 1   Example 2  Given list  1  4  6     calling next repeatedly until hasNext returns false  order elements returned next be   1 4 6              interface allows creating nested lists     not implement it  speculate its implementation class NestedInteger   public     Return true NestedInteger holds single integer  rather nested list  bool isInteger   const       Return single integer NestedInteger holds  holds single integer    result undefined NestedInteger holds nested list int getInteger   const       Return nested list NestedInteger holds  holds nested list    result undefined NestedInteger holds single integer const vector  getList   const        class NestedIterator   public  NestedIterator vector  nestedList     int   nestedList size     1     0    i                   s push nestedList i      int next         NestedInteger t   s top    s pop    return t getInteger      bool hasNext       s empty           NestedInteger t   s top                   false   t isInteger    return true                 true  s pop                       int   t getList   size     1     0    i             list           s push t getList   i        return false    private  stack s         NestedIterator object will instantiated called such  NestedIterator i nestedList    i hasNext    cout  getList   const                          class Solution   public  NestedInteger deserialize string s    if s 0          return NestedInteger stoi s                                   stack stk                                                            NestedInteger  NestedInteger  ret   NULL       int idx   0  for int i 0  iadd NestedInteger stoi s substr idx  i idx      if s i                                          add           NestedInteger  cur   stk top    stk pop    if  stk empty    stk top    add  cur     idx     1                  return  ret",
        "objectID": "post/Nested-List",
        "date": "2017-06-24T16:10:30.000Z",
        "tags": [
            "Stack"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "netstat命令详解",
        "uri": "post/netstat命令详解",
        "content": "Netstat                                Interface Statistics  masquerade          Multicast Memberships               netstat         Active Internet connections  w o servers  Proto Recv Q Send Q Local Address Foreign Address State tcp 0 2 210 34 6 89 telnet 210 34 6 96 2873 ESTABLISHED tcp 296 0 210 34 6 89 1165 210 34 6 84 netbios ssn ESTABLISHED tcp 0 0 localhost localdom 9001 localhost localdom 1162 ESTABLISHED tcp 0 0 localhost localdom 1162 localhost localdom 9001 ESTABLISHED tcp 0 80 210 34 6 89 1161 210 34 6 10 netbios ssn CLOSE Active UNIX domain sockets  w o servers  Proto RefCnt Flags Type State I Node Path unix 1     STREAM CONNECTED 16178  000000dd unix 1     STREAM CONNECTED 16176  000000dc unix 9     DGRAM 5292  dev log unix 1     STREAM CONNECTED 16182  000000df       netstat                  Active Internet connections     TCP      Recv Q   Send Q   0A                      0                                        Active UNIX domain sockets     Unix                                    Proto          RefCnt               Types         State           Path                           a  all             LISTEN    t  tcp    tcp      u  udp    udp      n                        l       Listen             p               r             e          uid   s            c             netstat       LISTEN LISTENING       a   l                                      netstat  a netstat  a   Active Internet connections  servers established  Proto Recv Q Send Q Local Address Foreign Address State tcp 0 0 localhost 30037   LISTEN udp 0 0  bootpc    Active UNIX domain sockets  servers established  Proto RefCnt Flags Type State I Node Path unix 2   ACC   STREAM LISTENING 6135  tmp  X11 unix X0 unix 2   ACC   STREAM LISTENING 5140  var run acpid socket      tcp    netstat  at netstat  at Active Internet connections  servers established  Proto Recv Q Send Q Local Address Foreign Address State tcp 0 0 localhost 30037   LISTEN tcp 0 0 localhost ipp   LISTEN tcp 0 0  smtp    LISTEN tcp6 0 0 localhost ipp        LISTEN      udp    netstat  au netstat  au Active Internet connections  servers established  Proto Recv Q Send Q Local Address Foreign Address State udp 0 0  bootpc    udp 0 0  49119    udp 0 0  mdns                Sockets         netstat  l netstat  l Active Internet connections  only servers  Proto Recv Q Send Q Local Address Foreign Address State tcp 0 0 localhost ipp   LISTEN tcp6 0 0 localhost ipp        LISTEN udp 0 0  49119            tcp    netstat  lt netstat  lt Active Internet connections  only servers  Proto Recv Q Send Q Local Address Foreign Address State tcp 0 0 localhost 30037   LISTEN tcp 0 0  smtp    LISTEN tcp6 0 0 localhost ipp        LISTEN         udp    netstat  lu netstat  lu Active Internet connections  only servers  Proto Recv Q Send Q Local Address Foreign Address State udp 0 0  49119    udp 0 0  mdns            UNIX    netstat  lx netstat  lx Active UNIX domain sockets  only servers  Proto RefCnt Flags Type State I Node Path unix 2   ACC   STREAM LISTENING 6294 private maildrop unix 2   ACC   STREAM LISTENING 6203 public cleanup unix 2   ACC   STREAM LISTENING 6302 private ifmail unix 2   ACC   STREAM LISTENING 6306 private bsmtp                         netstat  s netstat  s Ip  11150 total packets received 1 invalid addresses 0 forwarded 0 incoming packets discarded 11149 incoming packets delivered 11635 requests sent Icmp  0 ICMP messages received 0 input ICMP message failed  Tcp  582 active connections openings 2 failed connection attempts 25 connection resets received Udp  1183 packets received 4 packets unknown port received           TCP   UDP         netstat  st    su netstat  st netstat  su   netstat       PID       netstat  p netstat  p                    PID         netstat        debugging                       netstat  pt Active Internet connections  w o servers  Proto Recv Q Send Q Local Address Foreign Address State PID Program name tcp 1 0 ramesh laptop loc 47212 192 168 185 75 www CLOSE_WAIT 2109 firefox tcp 0 0 ramesh laptop loc 52750 lax www ESTABLISHED 2109 firefox   netstat                  host  port user                      netstat  n                                    netstat  an                            netsat  a   numeric ports netsat  a   numeric hosts netsat  a   numeric users      netstat    netstat              netstat  c Active Internet connections  w o servers  Proto Recv Q Send Q Local Address Foreign Address State tcp 0 0 ramesh laptop loc 36130 101 101 181 225 ama www ESTABLISHED tcp 1 1 ramesh laptop loc 52564 101 11 169 230 www CLOSING tcp 0 0 ramesh laptop loc 43758 server 101 101 43 2 www ESTABLISHED tcp 1 1 ramesh laptop loc 42367 101 101 34 101 www CLOSING              Address Families  netstat  verbose                netstat  no support  AF IPX  system  netstat  no support  AF AX25  system  netstat  no support  AF X25  system  netstat  no support  AF NETROM  system           netstat  r netstat  r Kernel IP routing table Destination Gateway Genmask Flags MSS Window irtt Iface 192 168 1 0   255 255 255 0 U 0 0 0 eth2 link local   255 255 0 0 U 0 0 0 eth2 default 19",
        "objectID": "post/netstat命令详解",
        "date": "2017-06-25T14:23:11.000Z",
        "tags": null,
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "new/delete用法详解",
        "uri": "post/new-delete用法详解",
        "content": "new                new             new                                                     new                                                                               1       new          2       new               3       new                      1   2                           2                            3                             new int                                 int  a   new int      int            a int  a   new int 5                   5                              new                                                           int  a   new int 100            100            int   a   new int5              delete              int  a   new int  delete a        int           int  a   new int 5   delete   a      int     delete                                      delete                                                                                     new              malloc calloc                                                                                      new                           int  p   new int SIZE     p    0         p       return  1           p    0            C        new                           p    0                          p    0           new                      new              try   int  p   new int SIZE             catch   const bad_alloc  e     return  1          C               new              int  p   new  std  nothrow  int          new                       p    0                     return  1",
        "objectID": "post/new-delete用法详解",
        "date": "2017-06-24T13:58:33.000Z",
        "categories": [
            "C++ "
        ]
    },
    {
        "title": "new和malloc的区别",
        "uri": "post/new和malloc的区别",
        "content": "1            new          free store               malloc                  C    new               new                                                             C    malloc          free                               new                  operator new                                operator new                new               new            new  place_address  type place_address                               new     new        operator new            void   operator new  size_t void                 operator new   operator new                         new      place_address                 2         new                                           new              malloc          void             void                                                            C                  3             new           bac_alloc        NULL malloc         NULL     C         malloc               int    int  malloc   sizeof  int     if NULL    a          else          C    C                 C    int     new int    if NULL    a          else                         new      NULL          if                                         try   int  a   new int      catch  bad_alloc          4              new                                     malloc                 class A        ptr   new A    ptr    A   malloc sizeof A                  sizeof A            malloc                            5                 new                      operator new         operator new                                                                                        delete                                    operator delete  operator delete                  new delete                            malloc     6        C     new   delete               ptr   new A 10      10 A     new           delete        delete    ptr  new                                                   delete    new                                  malloc                                                                                     int   ptr    int   malloc  sizeof int  10         10 int      7         opeartor new  operator delete             operator new   operator delete   8                    void   operator new size_t   void   operator new  void   operator delete  void    noexcept  void   operator delete   void  0 noexcept                void   operator new sizet  nothrowt   noexcept  void   operator new  void   operator delete  void   nothrow_t   noexcept  void   operator delete   void  0 nothrow_t   noexcept                                                                              operator new  operator delete        new delete                   malloc free        8                malloc                          realloc                  realloc                                                                                                           new                  9              operator new                                          new handler new_handler         namespace std   typedef void   new_handler                                                   setnewhandler                  namespace std   newhandler setnewhandler newhandler p   throw      setnewhandler    newhandler      operator new                             setnewhandler                      newhandler      malloc                              malloc  NULL  malloc new    operator new  operator delete       malloc  malloc         new      operator new  operator delete                    void   operator new  sieze_t size    if void   mem   malloc size  return mem  else throw bad_alloc      void operator delete void  mem  noexcept   free mem",
        "objectID": "post/new和malloc的区别",
        "date": "2017-06-24T13:15:15.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "NSQ:异步消息队列浅析",
        "uri": "post/NSQ-异步消息队列浅析",
        "content": "NSQ   NSQ             nsqd                         nsqlookupd                          nsqadmin    Web                               utilities                  nsqstat nsqtail nsqtofile nsqtohttp nsqtonsq to_nsq nsqlookupd            nsqd              nsqadmin  nsqd      nsqlookupd                      nsqlookupd         topic         nsqd        topic     channel        nsqlookupd            tcp     4160   nsqd     http     4161   nsqadmin                     nsqlookupd                 Nsq       nsqlookupd                nsqlookupd                    nsqlookupd             nsqd     nsqd naqadmin             http             nsqd      nsqd nsqd                                                message          nsqd       tcp   4150    http   4151        https        nsqd                  topic    channel                     channel        channel            message                        message           nsqd                                          nsqd   channel         message        message         topic channel                             topic channel                   channel meteics                          channel           message                     nsqadmin     WEB UI                             nsqadmin               topic channel                                           message            topic channel          nsqadmin           nsqlookupd nsqadmin   nsqlookupd           nsqlookupd    nsqadmin        http   127 0 0 1 4171  utilities                 nsqstat nsqtail nsqtofile nsqtohttp nsqtonsq to_nsq nsq_stat         topic     channel         stats          nsq_tail          topic     channel      stdout    tail 1       nsqtofile         topic     channel                        nsqtohttp         topic     channel     HTTP requests  GET POST          nsqtonsq                       nsqd    TCP  to_nsq     stdin                 TCP          nsqd           NSQ                                                                                                               Job                                                                  nsqlookupd           TLS                                  JSON Protocol Buffers MsgPacek                                                  TCP                                         HTTP                   StatsD                nsqadmin                                                   NSQ                                                      mem queue size                         mem queue size     0                          nsq                                           NSQ                                             idempotent                                                               NSQ                      re queue   timeout        FIN      REQ                           NSQ                                          nsqd                                                                                  nsqd                                                                                                                                                                                       requeues                                                                                                                                                         nsqlookupd            nsqlookupd                                                                             nsqd                                1                                                                                                                                                                                                                                nsqlookupd                                 nsqd                                       nsqlookupd                                  nsqd      nsqlookupd     TCP                  nsqlookupd          nsqd                  HTTP  lookup                               nsqlookup       NSQ                                              NSQ             nsqd        TCP                                                                                            NSQ                                                nsqlookupd                                                   nsqlookupd       response                                                                                          RDY                              nsqd                   RDY   0                                            RDY                100             100                               RDY                RDY       max in flight   25            RDY               nsqd                   NSQ   TCP       push                            0   RDY                     RDY              NSQ                             nsqd                             nsqd                                RDY                                                                        IO                                         nsqd                                                                                              NSQ                                                                                                      NSQ                             nsqd  ",
        "objectID": "post/NSQ-异步消息队列浅析",
        "date": "2019-04-22T18:34:24.000Z",
        "tags": [
            "NSQ"
        ],
        "categories": [
            "NSQ"
        ]
    },
    {
        "title": "numeric库操作总结",
        "uri": "post/numeric-库操作总结",
        "content": "accumulate    template T accumulate  InputIterator first  InputIterator last  T init   template T accumulate  InputIterator first  InputIterator last  T init  BinaryOperation binary_op   template T accumulate  InputIterator first  InputIterator last  T init     first  last    init   init   first     or  init binaryop init first  binaryop version   first    return init          accumulate example  include    std  cout  include    std  minus  include    std  accumulate int myfunction  int x  int y   return x 2 y   struct myclass   int operator   int x  int y   return x 3 y     myobject  int main      int init   100  int numbers      10 20 30   std  cout      std  cout OutputIterator adjacent_difference  InputIterator first  InputIterator last  OutputIterator result   template OutputIterator adjacent_difference   InputIterator first  InputIterator last  OutputIterator result  BinaryOperation binary_op    template OutputIterator adjacent_difference  InputIterator first  InputIterator last  OutputIterator result     first  last    typename iteratortraits  valuetype val prev  result   prev   first     first  last    val    first    result   val   prev     or    result   binary_op val prev  prev   val      result    return result          adjacent_difference example  include    std  cout  include    std  multiplies  include    std  adjacent_difference int myop  int x  int y   return x y   int main      int val      1 2 3 5 9 11 12   int result 7   std  adjacent_difference  val  val 7  result   std  cout      std  cout T inner_product  InputIterator1 first1  InputIterator1 last1  InputIterator2 first2  T init   template T inner_product  InputIterator1 first1  InputIterator1 last1  InputIterator2 first2  T init  BinaryOperation1 binary_op1  BinaryOperation2 binary_op2   template T inner_product  InputIterator1 first1  InputIterator1 last1  InputIterator2 first2  T init     first1  last1    init   init    first1   first2      or  init   binaryop1  init  binaryop2 first1 first2      first1    first2    return init          inner_product example  include    std  cout  include    std  minus  std  divides  include    std  inner_product int myaccumulator  int x  int y   return x y   int myproduct  int x  int y   return x y   int main      int init   100  int series1      10 20 30   int series2      1 2 3   std  cout    std  divides     std  cout OutputIterator partial_sum  InputIterator first  InputIterator last  OutputIterator result   template OutputIterator partial_sum  InputIterator first  InputIterator last  OutputIterator result  BinaryOperation binary_op   template OutputIterator partial_sum  InputIterator first  InputIterator last  OutputIterator result     first  last    typename iteratortraits  valuetype val    first   result   val     first  last    val   val   first     or  val   binary_op val first     result   val      result    return result    iota template void iota  ForwardIterator first  ForwardIterator last  T val   template void iota  ForwardIterator first  ForwardIterator last  T val     first  last     first   val    first    val",
        "objectID": "post/numeric-库操作总结",
        "date": "2017-09-03T11:30:37.000Z",
        "tags": null,
        "categories": [
            "STL"
        ]
    },
    {
        "title": "OLTP与OLAP的介绍",
        "uri": "post/OLTP与OLAP的介绍",
        "content": "OLTP on line transaction processing        OLAP On Line Analytical Processing  OLTP                                      OLAP                                             OLTP                                         OLAP             SQL         I O           OLTP OLTP          Online Transaction Processing                                                           Transaction  Execute SQL                      Transaction               Select                    OLTP                    eBay             OLTP     OLTP              CPU        CPU                                                                                                                                                   decode              CPU                                                                  OLTP                 IOPS         OLTP             db file sequential read                                     IOPS                OLTP             Cache   B tree     Cache                        Web cache Oracle data buffer OLTP                                                                                    MV                                            OLTP                SQL                                        SQL                 SQL       I O     SQL                                        hot block                  Oracle                Latch                  latch                                                                                                                                                        OLAP OLAP          Online Analytical Processing          DSS                                                                                                          MB s                               Cache                     db file scattered read direct path read write                        4Gb        OLAP                       OLAP                                                                                                                                                                                                                       Oracle 10g   RAC                             select              RAC        OLAP            BIND                                                    OLAP                                        OLTP                                OLTP                                          SQL                OLAP                                   SQL      group by              allrows                             firstrows             OLAP                        SQL   hint     Select a   table a                          OLTP          OLAP                                         where                                                                                                                                                                                                    OLTP                   OLAP                  OLAP      MV               DML   OLTP               Library Cache     OLAP                         OLAP                  CPU        I O                                                                                                                         I O                   I O       OLAP   SQL                                             https   blog csdn net zhangzheng0413 article details 8271322",
        "objectID": "post/OLTP与OLAP的介绍",
        "date": "2019-07-19T17:34:37.000Z",
        "categories": [
            "杂谈"
        ]
    },
    {
        "title": "open/read/write和fopen/fread/fwrite的区别",
        "uri": "post/open-read-write和fopen-fread-fwrite的区别",
        "content": "open                                      fopen C                      fopen ANSI C    C                        API UNIX    fopen  open         open read write       fopen fread fwrite C                              open read write                                 fopen fread fwrite          FILE                                        open read write fopen fread fwrite        fopen fread fwrite                                         FILE                                                                                                                                                                                                                                                                                           IO       fopen  fclose  fread  fwrite  fgetc  fgets  fputc  fputs  freopen  fseek  ftell  rewind                                                                            UNIX                                    ANSI                                                IO       open  close  read  write  getc  getchar  putc  putchar          open     fopen                  8k     read write      2K               4                   fread fwrite                                    read write  4      fread fwrite    1       read write  4       write       buffer               buffer                       fwrite                                                         write           fwrite   write      write                          open fopen        fopen              read write                 open                                 fopen           open               open      fopen                       read write          fread  fwrite                                       read  write                    open     fopen",
        "objectID": "post/open-read-write和fopen-fread-fwrite的区别",
        "date": "2017-06-25T14:21:12.000Z",
        "tags": null,
        "categories": [
            "Linux编程"
        ]
    },
    {
        "title": "operator=的正确写法",
        "uri": "post/operator-的正确写法",
        "content": "reference  this                         int x  y  z  x   y   z   15                                         x    y    z   15      15     z           z      y           y      X                        reference               classes                 class Widget   public  Widget   operator  const Widget  rhs        return  this                                                        operator                class                    bitmap   class Bitmap          class Widget   private  Bitmap  pb            heap              operator                                                 operator     this          rhs              delete           bitmap     rhs bitmap                 operator             identitytest                                          new Bitmap                     Bitnap copy          Widget                 Bitmap                                         operator                                                                     exception safety         copy swap           swap     swap                                           swap                   namespace std   template   std   swap        void swap  T  a  T  b         b       T temp a     b  b   temp          swap                              a   temp  b   a   temp   b                           swap                                                                     pimpl    pimpl  pointer implementation              Widget class                   op          op     operator       assignment version     operator      operator       stand alone     operator                        operator            operator                  c class Rational   public      Rational  operator   const Rational  rhs   Rational  operator   const Rational  rhs         operator     operator      operator  const Rational  lhs  const Rational  rhs    return Rational lhs     rhs       operator     operator        const Rational operator  const Rational  lhs  const Rational  rhs    return Rational lhs     rhs                    operator        operator    operator                                    operator                 operator         public           operator                         operator                                     template const T operator  const T  lhs  const T  rhs    return T lhs     rhs               template const T operator  const T  lhs  const T  rhs    return T lhs     rhs                              operator                     operator                                      operator                                                    operator                                  operator          operator                                                            Rational a  b  c  d  result      result     b   c   d          result   a  result    b  result    c  result    d           debug         80                                                                                  operator      debug               operator                    operator                                                         operator             operator       template const T operator  const T  lhs  const T  rhs    return T lhs     rhs        T lhs     T                       lhs               rhs      operator            operator                              template const T operator  const T  lhs  const T  rhs    T result lhs         lhs   result   return result    rhs     rhs                                                           result              operator                                                            return T lhs     rhs                                                       result                                                                                                                                        operator       operator         operator                                                       operator                                        1     local      2     base classes     copying",
        "objectID": "post/operator-的正确写法",
        "date": "2017-08-31T12:10:49.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "os:exec包解析",
        "uri": "post/os-exec包解析",
        "content": "exec             os StartProcess         stdin   stdout         I O              C                 os exec         shell          glob          shell                          C    exec           glob                            path filepath    Glob                package os   ExpandEnv                Unix          Windows           golang org godoc org   Go Playground        ErrNotFound ErrNotFound                        var ErrNotFound   errors New  executable file not found  PATH   func LookPath                             foo            foo                                                   func LookPath file string   string  error  LookPath    PATH                file                                PATH                        package main import    fmt   log   os exec    func main     path  err    exec LookPath  l s   err    nil   log Fatal  installing ls future     fmt Printf  ls available  s n   path    type Cmd Cmd                      Run Output   CombinedOutput     Cmd       type Cmd struct      Path path command run        field set non zero    value  Path relative  evaluated relative    Dir  Path string    Args holds command line arguments  including command Args 0      Args field empty nil  Run uses  Path         typical use  Path Args set calling Command  Args   string    Env specifies environment process     entry form  key value      Env nil  new process uses current process s    environment     Env contains duplicate environment keys  last    value slice duplicate key used  Env   string    Dir specifies working directory command     Dir empty string  Run runs command    calling process s current directory  Dir string    Stdin specifies process s standard input     Stdin nil  process reads null device  os DevNull      Stdin  os File  process s standard input connected    directly file     Otherwise  during execution command separate    goroutine reads Stdin delivers data command    pipe  case  Wait does not complete until goroutine    stops copying  either reached end Stdin     EOF read error  writing pipe returned error  Stdin io Reader    Stdout Stderr specify process s standard output error        either nil  Run connects corresponding file descriptor    null device  os DevNull         Stdout Stderr writer  type compared        one goroutine time will call Write  Stdout io Writer Stderr io Writer    ExtraFiles specifies additional open files inherited    new process  does not include standard input  standard output     standard error  non nil  entry becomes file descriptor 3 i  ExtraFiles    os File    SysProcAttr holds optional  operating system specific attributes     Run passes os StartProcess os ProcAttr s Sys field  SysProcAttr  syscall SysProcAttr    Process underlying process  once started  Process  os Process    ProcessState contains information exited process     available call Wait Run  ProcessState  os ProcessState    contains filtered unexported fields   func Command func Command name string  arg    string   Cmd      Cmd                               Path   Args                Command        LookPath                                Cmd   Args             arg         arg               Command  echo   hello   Args0                   package main import    bytes   fmt   log   os exec   strings    func main     cmd    exec Command  tr    a z    A Z   cmd Stdin   strings NewReader  some input   var bytes Buffer cmd Stdout    out err    cmd Run   err    nil   log Fatal err    fmt Printf  in caps   q n   out String      func CommandContext func CommandContext ctx context Context  name string  arg    string   Cmd CommandContext   Command                                                os Process Kill    package main import    context   os exec   time    func main     ctx  cancel    context WithTimeout context Background    100 time Millisecond  defer cancel   err    exec CommandContext ctx   sleep    5   Run    err    nil      will fail 100 milliseconds  5 second sleep    will interrupted      func   Cmd  CombinedOutput func  c  Cmd  CombinedOutput      byte  error  CombinedOutput                       package main import    fmt   log   os exec    func main     cmd    exec Command  sh     c    echo stdout  echo 1  2 stderr   stdoutStderr  err    cmd CombinedOutput   err    nil   log Fatal err    fmt Printf   s n   stdoutStderr    func   Cmd  Output func  c  Cmd  Output      byte  error                                ExitError       c Stderr          ExitError Stderr   package main import    fmt   log   os exec    func main     out  err    exec Command  date   Output   err    nil   log Fatal err    fmt Printf  The date  s n   out    func   Cmd  Run func  c  Cmd  Run   error                                      stdin stdout   stderr                                         ExitError                   package main import    log   os exec    func main     cmd    exec Command  sleep    1   log Printf  Running command waiting finish      err    cmd Run   log Printf  Command finished error   v   err    func   Cmd  Start func   Cmd  Start                           Wait                   package main import    log  ",
        "objectID": "post/os-exec包解析",
        "date": "2018-11-15T18:40:11.000Z",
        "tags": [
            "Go标准库"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "os包解析",
        "uri": "post/os包解析",
        "content": "Package os                              Go       Unix                                                     Open   Stat                           PathError                   os                                     syscall            OpenFile                                const   ORDONLY int   syscall ORDONLY             OWRONLY int   syscall OWRONLY             ORDWR int   syscall ORDWR             OAPPEND int   syscall OAPPEND                   OCREATE int   syscall OCREAT                  OEXCL int   syscall OEXCL     O_CREATE             OSYNC int   syscall OSYNC            I O OTRUNC int   syscall OTRUNC                                Open        flag             const   SEEK_SET int   0             seek SEEK_CUR int   1             seek SEEK_END int   2             seek     Seek                 const   PathSeparator                       PathListSeparator                        const DevNull     dev null  DevNull               Unix          dev null   Windows    NUL   Variables var   ErrInvalid   errors New  invalid argument   ErrPermission   errors New  permission denied   ErrExist   errors New  file already exists   ErrNotExist   errors New  file does not exist                       var   Stdin   NewFile uintptr syscall Stdin     dev stdin   Stdout   NewFile uintptr syscall Stdout     dev stdout   Stderr   NewFile uintptr syscall Stderr     dev stderr     Stdin Stdout Stderr                           var Args   string Args                       func Chdir func Chdir dir string  error Chdir           dir                  PathError     func Mkdir func Mkdir name string  perm FileMode  error Mkdir                          PathError         func MkdirAll func MkdirAll path string  perm FileMode  error MkdirAll                                nil           perm                    path             MkdirAll         nil         func Chmod func Chmod name string  mode FileMode  error Chmod                                                 PathError                           Unix            ModeSetuid ModeSetgid   ModeSticky     Windows                  0200                                                    0400            0600     9           ModeAppend ModeExclusive   ModeTemporary   package main import    log   os    func main     err    os Chmod  some filename   0644   err    nil   log Fatal err      func Chown func Chown name string  uid  gid int  error Chown           uid   gid                       uid   gid              PathError       Windows              PathError    syscall EWINDOWS     func Chtimes func Chtimes name string  atime time Time  mtime time Time  error Chtimes                    Unix utime     utimes                                              PathError     package main import    log   os   time    func main     mtime    time Date 2006  time February  1  3  4  5  0  time UTC  atime    time Date 2007  time March  2  4  5  6  0  time UTC  err    os Chtimes  some filename   atime  mtime   err    nil   log Fatal err           func Setenv func Setenv key  value string  error Setenv    key                  func Clearenv func Clearenv   Clearenv           func Environ func Environ     string Environ    key   value                    func Getenv func Getenv key string  string Getenv                                                  LookupEnv   package main import    fmt   os    func main     fmt Printf   s lives  s  n   os Getenv  USER    os Getenv  HOME      func Expand func Expand s string  mapping func string  string  string                     var       var     os ExpandEnv s      os Expand s os Getenv   func ExpandEnv func ExpandEnv s string  string ExpandEnv                       var       var                  package main import    fmt   os    func main     fmt Println os ExpandEnv   USER lives   HOME        func Executable func Executable    string  error                                                                                                   path   filepath EvalSymlinks                                                     nacl           func Exit func Exit code int  Exit            code           0      0             defer                func Getegid func Getegid   int Getegid             ID     Windows       1  func Geteuid func Geteuid   int Geteuid                   Windows       1  func Getgid func Getgid   int Getgid         ID   Windows      1  func Getgroups func Getgroups      int  error  Getgroups             ID       Windows       syscall EWINDOWS      os user                func Getpid func Getpid   int Getpid          ID   func Getppid func Getppid   int Getppid           ID   func Getuid func Getuid   int Getuid                 Windows       1  func Lchown func Lchown name string  uid  gid int  error Lchown           uid   gid                       uid   gid              PathError       Windows              PathError    syscall EWINDOWS     func Getpagesize func Getpagesize   int Getpagesize                func Getwd func Getwd    dir string  err error  Getwd                                         Getwd         func Hostname func Hostname    name string  err error                       ",
        "objectID": "post/os包解析",
        "date": "2018-11-15T18:41:03.000Z",
        "tags": [
            "Go标准库"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "Pacific Atlantic Water Flow",
        "uri": "post/Pacific-Atlantic-Water-Flow",
        "content": "LeetCode 417  Pacific Atlantic Water Flow sequence number called arithmetic consists least three elements difference two consecutive elements same  example  arithmetic sequence  1  3  5  7  9 7  7  7  7 3   1   5   9 following sequence not arithmetic  1  1  2  5  7 zero indexed array consisting N numbers given  slice array pair integers  P  Q  0   A    int count   0  int addend   0   int   2    A size    i     A i   1    A i     A i   2    A i   1   count      addend  else addend   0  return count",
        "objectID": "post/Pacific-Atlantic-Water-Flow",
        "date": "2017-06-24T15:34:21.000Z",
        "tags": [
            "Array",
            "DP"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "Package:httptest(1.13)",
        "uri": "post/package:httptest(1.13)",
        "content": "Constants DefaultRemoteAddr           ResponseRecorder          RemoteAddr          const DefaultRemoteAddr    1 2 3 4  func NewRequest1 7 func NewRequest method  target string  body io Reader   http Request NewRequest                         http Handler         target       RFC 7230            request target                  URL    target       URL    URL       host name              example com    target      https   TLS              nil      dummy value   Request Proto     HTTP 1 1     method                       body         nil         body       bytes Reader     strings Reader       bytes Buffer       Request ContentLength               NewRequest    panic              panic                                 HTTP          net http     NewRequest     type ResponseRecorder ResponseRecorder   http ResponseWriter                    type ResponseRecorder struct      Code HTTP response code set WriteHeader        Note Handler calls WriteHeader Write     end 0  rather implicit    http StatusOK  implicit value  use Result    method  Code int    HeaderMap contains headers explicitly set Handler     internal detail        Deprecated  HeaderMap exists historical compatibility    not used  access headers returned handler     use Response Header map returned Result method  HeaderMap http Header    Body buffer Handler s Write calls sent     nil  Writes silently discarded  Body  bytes Buffer    Flushed whether Handler called Flush  Flushed bool    contains filtered unexported fields   Example package main import    fmt   io   io ioutil   net http   net http httptest    func main     handler    func w http ResponseWriter  r  http Request    io WriteString w   Hello World      req    httptest NewRequest  GET    http   example com foo   nil  w    httptest NewRecorder   handler w  req  resp    w Result   body  _    ioutil ReadAll resp Body  fmt Println resp StatusCode  fmt Println resp Header Get  Content Type    fmt Println string body     func NewRecorder func NewRecorder    ResponseRecorde NewRecorder         ResponseRecorder  func   ResponseRecorder  Flush func  rw  ResponseRecorder  Flush   Flush  http Flusher         Flush    rw Flushed  func   ResponseRecorder  Header func  rw  ResponseRecorder  Header   http Header Header  http ResponseWriter                                         Result        Response  Header  func   ResponseRecorder  Result 1 7 func  rw ResponseRecorder  Result   http Response Result                             StatusCode     Header     Body       Trailer                                         DeepEqual  Response Header                  snapshot headers                            Response Header    Result             Response Body          nil     Body Read          io EOF            Result                 func   ResponseRecorder  Write func  rw  ResponseRecorder  Write buf   byte   int  error  Write    http ResponseWriter   buf      nil      rw Body  func   ResponseRecorder  WriteHeader func  rw  ResponseRecorder  WriteHeader code int  WriteHeader    http ResponseWriter  func   ResponseRecorder  WriteString 1 6 func  rw  ResponseRecorder  WriteString str string   int  error  WriteString    io StringWriter    buf      nil      rw Body  type Server Server   HTTP                             HTTP    type Server struct   URL string    base URL form http   ipaddr port no trailing slash Listener net Listener    TLS optional TLS configuration  populated new config    TLS started  set unstarted server StartTLS    called  existing fields copied new config  TLS  tls Config    Config may changed calling NewUnstartedServer    Start StartTLS  Config  http Server    contains filtered unexported fields   Example package main import    fmt   io ioutil   log   net http   net http httptest    func main     ts    httptest NewServer http HandlerFunc func w http ResponseWriter  r  http Request    fmt Fprintln w   Hello  client       defer ts Close   res  err    http Get ts URL  err    nil   log Fatal err    greeting  err    ioutil ReadAll res Body  res Body Close   err    nil   log Fatal err    fmt Printf   s   greeting    func NewServer func NewServer handler http Handler   Server NewServer           Server            Close       func NewTLSServer func NewTLSServer handler http Handler   Server NewTLSServer         TLS      Server            Close       package main import    fmt   io ioutil   log   net http   net http httptest    func main     ts    httptest NewTLSServer http HandlerFunc func w http ResponseWriter  r  http Request    fmt Fprintln w   Hello  client       defer ts Close   client    ts Client   res  err    client Get ts URL  err    nil   log Fatal err    greeting  err    ioutil ReadAll res Body  res Body Close   err    nil   log Fatal err    fmt Printf   s   greeting    func NewUnstartedServer func NewUnstartedServer handler http Handler   Server NewUnstartedServer           Server                Start StartTLS               Close       func   Server  Certificate 1 9 func  s Server  Certificate   x509 Certificate Certificate                   TLS    null  func   Server  Client1 9 func  s Server  Client   http Cli",
        "objectID": "post/package:httptest(1.13)",
        "date": "2020-01-28T18:56:15.000Z",
        "tags": [
            "Go标准库"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "package:sync(1.13)",
        "uri": "post/package:sync(1.13)",
        "content": "type Cond Cond                      goroutines        Cond       Locker L      Mutex   RWMutex               Wait        Cond               Cond              type Cond struct               L    L Locker                 func NewCond func NewCond l Locker   Cond NewCond Locker l      Cond  func   Cond  Broadcast func  c  Cond  Broadcast   Broadcast      c goroutine                        c L     func   Cond  Signal func  c  Cond  Signal   Signal    c                                  c L     func   Cond  Wait func  c  Cond  Wait   Wait    c L                   Wait         c L                    Goroutine                  Goroutine                 Wait   Broadcast  Signal                Wait               c L           Wait                                      c L Lock    condition     c Wait         use condition     c L Unlock   type Locker Locker                  type Locker interface   Lock   Unlock     type Map Map   Go map  interface     interface         goroutine                                        Map                   Go                                         map    Map                 1                                  2    goroutine                                     RWMutex   Gomap     Map             map                    map  type Map struct      contains filtered unexported fields   func   Map  Delete 1 9 func  m  Map  Delete key interface    Delete        func   Map  Load 1 9 func  m  Map  Load key interface     value interface    ok bool  Load                      nil ok       map       func   Map  LoadOrStore 1 9 func  m  Map  LoadOrStore key  value interface     actual interface    loaded bool  LoadOrStore                                            true         false  func   Map  Range 1 9 func  m  Map  Range f func key  value interface    bool  Range                 f   f  false  range       Range      Map            key                    key   Range    Range         key         f         false Range        map      O N   func   Map  Store 1 9 func  m  Map  Store key  value interface    Store  key value  type Mutex                                         type Mutex struct      contains filtered unexported fields   func   Mutex  Lock func  m  Mutex  Lock   Lock m              goroutine             func   Mutex  Unlock func  m  Mutex  Unlock   Lock m              m                    goroutine       goroutine             goroutine     type Once Once               type Once struct      contains filtered unexported fields   package main import    fmt   sync    func main     var once sync Once onceBody    func     fmt Println  Only once     done    make chan bool     0    10  i     go func     once Do onceBody  done",
        "objectID": "post/package:sync(1.13)",
        "date": "2019-01-09T20:06:49.000Z",
        "tags": [
            "Go标准库"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "package:url(1.13)",
        "uri": "post/package:url(1.13)",
        "content": "func PathEscape func PathEscape s string  string PathEscape                URL            XX              func PathUnescape func PathUnescape s string   string  error  PathUnescape  PathEscape           AB    3                   0xAB                          PathUnescape QueryUnescape                         func QueryEscape func QueryEscape s string  string QueryEscape   s             URL     func QueryUnescape func QueryUnescape s string   string  error  QueryUnescape     QueryEscape             AB    0xAB                                        type Error type Error struct   Op string URL string Err error   Error                  URL     func   Error  Error func  e  Error  Error   string func   Error  Temporary func  e  Error  Temporary   bool func   Error  Timeout func  e  Error  Timeout   bool func   Error  Unwrap 1 13 func  e  Error  Unwrap   error type EscapeError type EscapeError string func  EscapeError  Error func  e EscapeError  Error   string type InvalidHostError type InvalidHostError string func  InvalidHostError  Error func  e InvalidHostError  Error   string type URL type URL struct   Scheme string Opaque string              User  Userinfo             Host string    host host port Path string    path  relative paths may omit      RawPath string    encoded path hint  see EscapedPath method   added Go 1 5 ForceQuery bool    append query       even RawQuery empty  added Go 1 7 RawQuery string                    Fragment string                        URL          URL       URL    URL        scheme   userinfo  host path  query scheme       URL          scheme opaque query                      47 6f 2f    Go           Path           URL       2f                        URL      URL                    RawPath                 Path          URL String    EscapedPath                   EscapedPath       u  err    url Parse  http   bing com search q dotnet   err    nil   log Fatal err    u Scheme    https  u Host    google com  q    u Query   q Set  q    golang   u RawQuery   q Encode   fmt Println u  Output  https   google com search q golang package main import    fmt   log   net url    func main        Parse   String preserve original encoding  u  err    url Parse  https   example com foo 2fbar   err    nil   log Fatal err    fmt Println u Path  fmt Println u RawPath  fmt Println u String      Putput   foo bar  foo 2fbar https   example com foo 2fbar func Parse func Parse rawurl string   url  URL  err error  Parse    rawurl   URL     rawurl       a path  without host      starting scheme                                                 func ParseRequestURI func ParseRequestURI rawurl string   url  URL  err error  ParseRequestURI    rawurl   URL          rawurl    HTTP                 URL            URL   fragment                               func   URL  EscapedPath func  u  URL  EscapedPath   string EscapedPath       u Path                       escapedPath u Path          u RawPath     EscapedPath   u RawPath           String RequestURI    EscapedPath                EscapedPath       u RawPath  package main import    fmt   log   net url    func main     u  err    url Parse  http   example com path spaces   err    nil   log Fatal err    fmt Println u EscapedPath      output   path 20with 20spaces func   URL  Hostname func  u  URL  Hostname   string   u Host            Host       IPv6    Hostname         IPv6    IPv6             package main import    fmt   log   net url    func main     u  err    url Parse  https   example org 8000 path   err    nil   log Fatal err    fmt Println u Hostname    u  err   url Parse  https    2001 0db8 85a3 0000 0000 8a2e 0370 7334  17000   err    nil   log Fatal err    fmt Println u Hostname      output  example org 2001 0db8 85a3 0000 0000 8a2e 0370 7334 func   URL  IsAbs func  u  URL  IsAbs   bool IsAbs  URL     URL          scheme  package main import    fmt   net url    func main     u    url URL Host   example com   Path   foo   fmt Println u IsAbs    u Scheme    http  fmt Println u IsAbs      false true func   URL  MarshalBinary func  u  URL  MarshalBinary    text   byte  err error  package main import    fmt   log   net url    func main     u  _    url Parse  https   example org   b  err    u MarshalBinary   err    nil   log Fatal err    fmt Printf   s n   b    output  https   example org func   URL  Parse func  u URL  Parse ref string   URL  error  Parse           URL    URL                     nilerr        ResolveReference    package main import    fmt   log   net url    func main     u  err    url Parse  https   example org   err    nil   log Fatal err    rel  err    u Parse   foo   err    nil   log Fatal err    fmt Println rel  _  err   u Parse   foo   _  ok    err   url Error    ok   log Fatal err      output  https   example org foo func   URL  Port func  u  URL  Port   string port  u Host port            u Host              Port        package main import    fmt   log   net url    func main     u  err    url Parse  https   example org   err    nil   log Fatal err    fmt Println u Port    u  err   url Parse  https   example org 8080   err    nil   log Fatal err    fmt Println",
        "objectID": "post/package:url(1.13)",
        "date": "2018-11-15T18:38:36.000Z",
        "tags": [
            "Go标准库"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "package:validator.v9",
        "uri": "post/package:validator.v9",
        "content": "package validator import  gopkg in go playground validator v9  Package validator                                                                      https   github com go playground validator tree master _examples            Doing things actually standard library does  file Open method here  https   golang org pkg os  Open  authors return type  error  avoid issue discussed following  err always    nil  http   stackoverflow com a 29138676 3158232 https   github com go playground validator issues 134 Validator InvalidValidationError bad validation input  nil ValidationErrors type error                       err     nil           InvalidValidationError                            ValidationErrors     validator ValidationErrors                       Example     Structure func customFunc fl validator FieldLevel  bool   fl Field   String       invalid    return false   return true   validate RegisterValidation  custom tag name   customFunc                                 field    field              eqfield nefield gtfield gtefield ltfield ltefield eqcsfield necsfield gtcsfield gtecsfield ltcsfield ltecsfield                                              eqcsfield   eqfield                          eqfield         1                    eqcsfield                type Inner struct   StartDate time Time   type Outer struct   InnerStructField  Inner CreatedAt time Time validate  ltecsfield InnerStructField StartDate       time Now   inner     Inner  StartDate  now    outer     Outer  InnerStructField  inner  CreatedAt  now    errs    validate Struct outer     NOTE  when calling validate Struct val  topStruct will top level struct passed    function    when calling validate VarWithValue val  field  tag  val will    whatever pass  struct  field       when calling validate Field field  tag  val will nil   validate       validate                type Test struct   Field validate  max 10 min 1       max will checked min                 type Test struct   Field validate  min 10 max 0       definition min max will succeed         field                   field  struct             validator                                   excludesall          UTF 8        0x2C                      excludesall   0x2C  type Test struct   Field validate  excludesall       BAD  not include comma  Field validate  excludesall 0x2C     GOOD  Use UTF 8 hex representation                                       excludesall           UTF 8        0x7C                      excludesall   0x7C type Test struct   Field validate  excludesall       BAD  not include pipe  Field validate  excludesall 0x7C     GOOD  Use UTF 8 hex representation    Alias Validators Tags            FieldError                dive          dive                                 ActualTag                                iscolor  alias  hexcolor rgb rgba hsl hsla   Usage  iscolor                                                                                                                                                     regex                regexes go                                                 Panics                panic                         type Test struct   TestField string validate  nonexistantfunction 1    t     Test  TestField   Test    validate Struct t     will panic Non standard validators                                                                      type Test struct   TestField string validate  yourtag    t     Test  TestField   Test    validate    validator New   validate RegisterValidation  yourtag   validations ValidatorName  NotBlank validates value not blank length zero  strings ensures not contain spaces  channels  maps  slices arrays ensures don t zero length  others  non empty value required  Usage  notblank type CustomTypeFunc type CustomTypeFunc func field reflect Value  interface   CustomTypeFunc                    field                     sql drive  validator    https   golang org src database sql driver types go  s   1210 1293 L29 type FieldError type FieldError interface      returns validation tag failed     validation alias  will return    alias name not underlying tag failed        eg  alias  iscolor    hexcolor rgb rgba hsl hsla     will return  iscolor  Tag   string    returns validation tag failed  even    alias actual tag within alias will returned      or  validation fails entire will returned        eg  alias  iscolor    hexcolor rgb rgba hsl hsla     will return  hexcolor rgb rgba hsl hsla  ActualTag   string    returns namespace field error  tag    name taking precedence fields actual name        eg  JSON name  User fname        StructNamespace   version returns actual names        NOTE  field blank when validating single primitive field    using validate Field      no extract it s name Namespace   string    returns namespace field error  fields    actual name        eq   User FirstName  Namespace comparison       NOTE  field blank when validating single primitive field    using validate Field      no extract it s name StructNamespace   string    returns fields name tag name taking precedence    fields actual name        eq  JSON name  fname     StructFi",
        "objectID": "post/package:validator.v9",
        "date": "2019-12-12T20:43:20.000Z",
        "tags": [
            "Go标准库",
            "validator"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "Pascal's Triangle",
        "uri": "post/Pascal-s-Triangle",
        "content": "LeetCode 118  Pascal s Triangle Given numRows  generate first numRows Pascal s triangle  example  given numRows   5  Return    1    1 1    1 2 1    1 3 3 1    1 4 6 4 1                        1   num i  pre i 1  pre i          class Solution   public  vector   generate int numRows    vector vi      vector  res            numRows    0    return res   else  numRows    1          vi push_back 1   res push_back vi    else   res   generate numRows   1               vector tempv   res numRows 2                int   0  getRow int rowIndex            2    vector result  vector tmp  result push_back 1             rowIndex",
        "objectID": "post/Pascal-s-Triangle",
        "date": "2017-06-24T20:27:41.000Z",
        "tags": [
            "DFS",
            "Tree"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "Patching Array",
        "uri": "post/Patching-Array",
        "content": "LeetCode 330  Patching Array Given sorted positive integer array nums integer n  add patch elements array number range  1  n  inclusive formed sum elements array  Return minimum number patches required  Example 1  nums    1  3   n   6 Return 1  Combinations nums  1    3    1 3   form possible sums of  1  3  4  add patch 2 nums  combinations are   1    2    3    1 3    2 3    1 2 3   Possible sums 1  2  3  4  5  6  covers range  1  6   So need 1 patch  Example 2  nums    1  5  10   n   20 Return 2  two patches  2  4   Example 3  nums    1  2  2   n   5 Return 0      miss           0  miss          nums i   miss    nums i          0  miss nums i            miss         0  2   miss      nums i     miss          nums i            0  miss nums i    class Solution   public  int minPatches vector  nums  int n     nums   int ans   0  int pos   0  int length   nums size    long miss   1   miss",
        "objectID": "post/Patching-Array",
        "date": "2017-06-24T16:11:04.000Z",
        "tags": [
            "Array",
            "Greedy"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "ping命令和traceroute命令详解",
        "uri": "post/ping命令和traceroute命令详解",
        "content": "ping        Ping    ICMP       ICMP Internet                         Ping     ICMP           echo request         echo reply                      IP          IP                                                                             ping              ping          ping        ping                linux  ping windows  ping     linux ping          ctrl c        c                  A   ping        B  A        echo request              B         echo reply                                 1       A     ping B       A           B                ping    A                       64 bytes 211 151 111 30  icmp_req 1 ttl 49 time 14 7 ms                     64 bytes        ICMP            icmp_seq 0 ICMP           0     1               time                                   TTL                               TTL                    IP                 IP               TTL    1  TTL                    Linux     ICMP       TTL      255 64 Windows     ICMP       TTL      128 32       d   Socket SO_DEBUG     f                               n         q                         r      Routing Table                                   R          v               c                   i                                   I                       l                             p                     s                    56   8   ICMP     64ICMP       t            TTL            1 ping          ping 192 168 120 205      root localhost     ping 192 168 120 205 PING 192 168 120 205  192 168 120 205  56 84  bytes data  64 bytes 192 168 120 205  icmp_seq 1 ttl 64 time 0 720 ms 64 bytes 192 168 120 205  icmp_seq 2 ttl 64 time 0 181 ms 64 bytes 192 168 120 205  icmp_seq 3 ttl 64 time 0 191 ms 64 bytes 192 168 120 205  icmp_seq 4 ttl 64 time 0 188 ms 64 bytes 192 168 120 205  icmp_seq 5 ttl 64 time 0 189 ms     192 168 120 205 ping statistics     5 packets transmitted  5 received  0  packet loss  time 4000ms rtt min avg max mdev   0 181 0 293 0 720 0 214 ms  root localhost      2 ping          ping 192 168 120 202      root localhost     ping 192 168 120 202 PING 192 168 120 202  192 168 120 202  56 84  bytes data  192 168 120 204 icmp_seq 1 Destination Host Unreachable 192 168 120 204 icmp_seq 2 Destination Host Unreachable 192 168 120 204 icmp_seq 3 Destination Host Unreachable 192 168 120 204 icmp_seq 4 Destination Host Unreachable 192 168 120 204 icmp_seq 5 Destination Host Unreachable 192 168 120 204 icmp_seq 6 Destination Host Unreachable     192 168 120 202 ping statistics     8 packets transmitted  0 received   6 errors  100  packet loss  time 7005ms   pipe 4  root localhost      3 ping       ping  b 192 168 120 1      root localhost     route Kernel IP routing table Destination Gateway Genmask Flags Metric Ref Use Iface 192 168 120 0   255 255 255 0 U 0 0 0 eth0 192 168 0 0 192 168 120 1 255 255 0 0 UG 0 0 0 eth0 10 0 0 0 192 168 120 1 255 0 0 0 UG 0 0 0 eth0 default 192 168 120 240 0 0 0 0 UG 0 0 0 eth0  root localhost     ping  b 192 168 120 1 PING 192 168 120 1  192 168 120 1  56 84  bytes data  64 bytes 192 168 120 1  icmp_seq 1 ttl 255 time 2 02 ms 64 bytes 192 168 120 1  icmp_seq 2 ttl 255 time 1 83 ms 64 bytes 192 168 120 1  icmp_seq 3 ttl 255 time 1 68 ms 64 bytes 192 168 120 1  icmp_seq 4 ttl 255 time 1 98 ms 64 bytes 192 168 120 1  icmp_seq 5 ttl 255 time 1 88 ms     192 168 120 1 ping statistics     5 packets transmitted  5 received  0  packet loss  time 4000ms rtt min avg max mdev   1 682 1 880 2 020 0 129 ms   4 ping         ping  c 10 192 168 120 206  root localhost     ping  c 10 192 168 120 206 PING 192 168 120 206  192 168 120 206  56 84  bytes data  64 bytes 192 168 120 206  icmp_seq 1 ttl 64 time 1 25 ms 64 bytes 192 168 120 206  icmp_seq 2 ttl 64 time 0 260 ms 64 bytes 192 168 120 206  icmp_seq 3 ttl 64 time 0 242 ms 64 bytes 192 168 120 206  icmp_seq 4 ttl 64 time 0 271 ms 64 bytes 192 168 120 206  icmp_seq 5 ttl 64 time 0 274 ms 64 bytes 192 168 120 206  icmp_seq 6 ttl 64 time 0 295 ms 64 bytes 192 168 120 206  icmp_seq 7 ttl 64 time 0 269 ms 64 bytes 192 168 120 206  icmp_seq 8 ttl 64 time 0 270 ms 64 bytes 192 168 120 206  icmp_seq 9 ttl 64 time 0 253 ms 64 bytes 192 168 120 206  icmp_seq 10 ttl 64 time 0 289 ms     192 168 120 206 ping statistics     10 packets transmitted  10 received  0  packet loss  time 9000ms rtt min avg max mdev   0 242 0 367 1 251 0 295 ms  root localhost      5           ping     ping  c 10  i 0 5 192 168 120 206      root localhost     ping  c 10  i 0 5 192 168 120 206 PING 192 168 120 206  192 168 120 206  56 84  bytes data  64 bytes 192 168 120 206  icmp_seq 1 ttl 64 time 1 24 ms 64 bytes 192 168 120 206  icmp_seq 2 ttl 64 time 0 235 ms 64 bytes 192 168 120 206  icmp_seq 3 ttl 64 time 0 244 ms 64 bytes 192 168 120 206  icmp_seq 4 ttl 64 time 0 300 ms 64 bytes 192 168 120 206  icmp_seq 5 ttl 64 time 0 255 ms 64 bytes 192 168 120 206  icmp_seq 6 ttl 64 time 0 264 ms 64 bytes 192 168 120 206  icmp_seq 7 ttl 64 time 0 263 ms 64 bytes 192 168 120 206  icmp_seq 8 ttl 64 time 0 331 ms 64 bytes 192 168 120 206  icmp_seq 9 ttl 64 time 0 247 ms 64 bytes 192 168 120 206  icmp_seq 10 ttl 64 time 0 244 ms     192 168",
        "objectID": "post/ping命令和traceroute命令详解",
        "date": "2017-06-25T05:43:53.000Z",
        "tags": null,
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "Pprof实战:从零开始排查炸弹程序",
        "uri": "post/pprof实战:从零开始排查炸弹程序",
        "content": "golang            pprof                                                     pprof                                                                                               pprof                          pprof                                                                                            pprof                     pprof                                                                                                   golang         golang           GOPATH                              golang               pprof                              Golang          PProf                                                                 2   CPU  2G                                                                 IDE                                                                                                                                                         2G          CPU     100           100                                                                                                                                                         GitHub              go            d               go  d github com wolfogre go pprof practice cd  GOPATH src github com wolfogre go pprof practice           main go                                          package main import        _  net http pprof           handler   http server      http                     func main          runtime GOMAXPROCS 1        CPU          runtime SetMutexProfileFraction 1               runtime SetBlockProfileRate 1                go func             http server    pprof     handler          err    http ListenAndServe   6060   nil   err    nil   log Fatal err    os Exit 0                                                                                   pprof                                                                                     go build   go pprof practice                                                                                                      pprof                http   localhost 6060 debug pprof                                                                                                                                                       allocs                                     blocks                                     cmdline                                  go pprof practice     goroutine                                     heap                                       mutex                                    profile   CPU                            threadcreate                                       trace                                    cmdline          trace           threadcreate                                                                                                                   go tool pprof               go                                                                   CPU                         top                              CPU          CPU                     go tool pprof        go tool pprof http   localhost 6060 debug pprof profile                      top       CPU              CPU       github com wolfogre go pprof practice animal felidae tiger   Tiger  Eat                      flat flat  sum  cum cum                                          list Eat                          24                 CPU                                                       graphviz                brew install graphviz   macos apt install graphviz   ubuntu yum install graphviz   centos          graphviz                                           web               web                svg                     svg                   svg                                                svg                         tiger   Tiger  Eat               pprof             CPU                                                pprof    CPU                 exit    pprof                                                 func  t  Tiger  Eat     log Println t Name     eat     loop    10000000000   for    0    loop  i           nothing                                                             pprof                                                   CPU                                 pprof            URL      heap  go tool pprof http   localhost 6060 debug pprof heap       top list                        github com wolfogre go pprof practice animal muridae mouse   Mouse  Steal         func  m  Mouse  Steal     log Println m Name     steal   max    constant Gi len m buffer    constant Mi   max   m buffer   append m buffer   constant Mi byte                        m buffer        1 MiB             1 GiB                                   web                                                                              35 MB                                                                GC   golang                                            GC                     GC                                                 grep     GC       GODEBUG gctrace 1   go pprof practice   grep gc              GC      3            GC     16MB       0MB                       golang                  pprof                                                          ",
        "objectID": "post/pprof实战:从零开始排查炸弹程序",
        "date": "2020-02-09T17:45:44.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go调优"
        ]
    },
    {
        "title": "pprof实战:结合benchmark优化代码",
        "uri": "post/pprof实战:结合benchmark优化代码",
        "content": "sodoku go     Package godoku simple  brute force     in place sudoku solver package godoku import    bytes   fmt   io ioutil   strconv   strings    type Sudoku struct   board Board solved bool solutionCount int doPrint bool dim int solveAll bool solution Board   type Board int func  s  Sudoku  PrintBoard     _  row    range s board   fmt Println row         IsValidBoard iterates initial    values board verifies indeed    abide 3 laws Sudoku func  s  Sudoku  IsValidBoard   bool   s board    nil   return false   i  row    range s board   j  val    range row   val    0   continue   s boardi   0  s ValidValueAtPosition i  j  val    s boardi   val return false   s boardi   val     return true      String returns either unsolved board    sudoku not solved  solution    solution found    running one Solve  methods  func  s  Sudoku  String   string   var buffer bytes Buffer s solved   _  row    range s solution   buffer WriteString fmt Sprintf   v n   row     return buffer String     _  row    range s board   buffer WriteString fmt Sprintf   v n   row     return buffer String        GetSolution returns solution    BUG paddie   doesn t check board solved func  s  Sudoku  GetSolution   Board   return s solution      Load sudoku path dimension argument func NewSudokuFromFile path string  dim int    Sudoku  error    s    new Sudoku  var err error s board  err   readBoardFromFile path  dim  err    nil   return nil  err   s dim   dim return s  nil      Loads sudoku board string representation     values 9x9 matrix  using space     delimiters   n  linebreaks func NewSudokuFromString path string  dim int    Sudoku  error    s    new Sudoku  var err error s board  err   readBoardFromString path  dim  err    nil   return nil  err   s dim   dim return s  nil      Returns number solutions found     func  s  Sudoku  GetSolutionsCount   int   return s solutionCount      registers first solutions s solution    board  prints doPrint set  func  s  Sudoku  registerSolution     s solutionCount   s doPrint   s PrintBoard     s solved   return   s solved   true s solution   make Board  9  9  i  row    range s board   s solution i    make   int  9  9  copy s solution i   row         Check solver found solution func  s  Sudoku  IsSolved   bool   return s solved      dimensions sudoku board func  s  Sudoku  Dimension   int   return s dim      Solve save solution  Returns error no Sudoku loaded func  s  Sudoku  Solve   error   s solved   false s board    nil   return fmt Errorf  No Board loaded       s solveAll   false s bruteforcePosition 0  0  return nil      Solve    one prints    solution stdin func  s  Sudoku  SolveAndPrint   error   s doPrint   true err    s Solve   s doPrint   false return err      Solve  keeps running until    solutions keeps count  saves first solution func  s  Sudoku  SolveAll   error   s solved   false s board    nil   return fmt Errorf  No Board loaded       s solveAll   true s bruteforcePosition 0  0  return nil      SolveAll prints solutions    stdin func  s  Sudoku  SolveAllAndPrint   error   s doPrint   true err    s SolveAll   s doPrint   false return err   func  s  Sudoku  bruteforcePosition row  col int       use  0  indicate non filled block s boardrow    0      1    10  i     s ValidValueAtPosition row  col  i       place value attempt solve s boardrow      attempt solve sudoku placed value s nextPosition row  col  s solved     s solveAll      Solve   used  break    first solution s boardrow   0 return      clean attempt s boardrow   0       else   s nextPosition row  col         Does two things        1  board finished state  calls    registerSolution   returns     enables bruteforcePostion exhaust every remaining permutation       2  checks wether move next column next row func  s  Sudoku  nextPosition row  col int       run Board row row    meaning change rows when we re    final column col   8   s bruteforcePosition row  col 1    else      we re final collumn final    row  solution      else iterate next row reset collumn row   8   s bruteforcePosition row 1  0    else   s registerSolution            Verify val legally placed  row col     given restrictions column  row 3x3 square func  s  Sudoku  ValidValueAtPosition row  col  val int  bool   s ValidInSquare row  col  val     s ValidInColumnAndRow row  col  val       validInRow row  val  Board    return true   return false      Checks val does not already occur    active 3x3 square func  s  Sudoku  ValidInSquare row  col  val int  bool   row  col   int row 3 3  int col 3 3    row    row 3  i     j    col  j   col 3  j       fmt Printf  row  col    v   v n   i  j  s boardi    val   return false       return true      Checks val already occurs either row column  func  s  Sudoku  ValidInColumnAndRow row  col  val int  bool      0    9  i     s boardrow    val    s boardi    val   return false     return true   func readBoardFromFile path string  dim int   Board  error    content  err    ioutil ReadFile path  err    nil   return nil  err   return readBoardFromString string content   dim    func readBoardFromString m string  dim int   Board  error    lines    strings Spli",
        "objectID": "post/pprof实战:结合benchmark优化代码",
        "date": "2020-01-31T23:09:56.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go调优"
        ]
    },
    {
        "title": "Pprof实战:解决内存泄露",
        "uri": "post/pprof实战:解决内存泄露",
        "content": "Go                     10       9  goroutine              goroutine                    Go   goroutine             goroutine                                                                                        Go   GC                                   Go             Go        Go                                                Go        2                   go pprof                                                               go pprof               Go   pprof               2                                   Go                      OS                             1         1 Go     OS                        OS                                                                                 1       prog_mem sh                          bin bash progname  yourprograme_name  progmem   pidstat  r  u  h  C  progname  awk  NR  4 print  12    time   date    Y  m  d  H  M  S   echo  time  tmemory Byte  t  progmem     record progmem log 2     crontab            1    crontab  e  crontab        1    1         record prog_mem sh           progmem log                                               progmem log   Excel               go pprof            Google     Go                  pprof heap                                                                                                heap                         Dave  High Performance Go Workshop      heap      pprof         Dave          profiling                                        go pprof   heap   memory                                  profile     profiling           1000         1 profile        profiling                                                                             profiling               Dave         profiling                heap      2     heap                               Dave     heap                heap                                                                   heap                                heap                                                                        heap             heap                  heap         pprof heap                                   heap     profile     base      profile        diff                       demo   heap base               pprof       package main import    fmt   net http  _  net http pprof   os   time              fatal error  runtime  memory func main          pprof go func     ip     0 0 0 0 6060  err    http ListenAndServe ip  nil   err    nil   fmt Printf  start pprof failed  s n   ip  os Exit 1        tick    time Tick time Second   100  var buf   byte range tick   buf   append buf  make   byte  1024 1024                            profile   Ctrl D   1      1   go tool pprof http   localhost 6060 debug pprof heap          profile      ls pprof demo2 allocobjects allocspace inuseobjects inusespace 001 pb gz pprof demo2 allocobjects allocspace inuseobjects inusespace 002 pb gz   base 001          002 001      top top        list main  main                go tool pprof  base pprof demo2 allocobjects allocspace inuseobjects inusespace 001 pb gz pprof demo2 allocobjects allocspace inuseobjects inusespace 002 pb gz File  demo2 Type  inuse_space Time  May 14  2019 2 33pm  CST  Entering interactive mode  type  help  commands   o  options   pprof   pprof   pprof  top Showing nodes accounting 970 34MB  32 30  3003 99MB total flat flat  sum  cum cum  970 34MB 32 30  32 30  970 34MB 32 30  main main       0 0  32 30  970 34MB 32 30  runtime main  pprof   pprof   pprof  list main main Total  2 93GB ROUTINE                          main main  home ubuntu heap demo2 go 970 34MB 970 34MB  flat  cum  32 30  Total     20          21      22  tick    time Tick time Second   100      23  var buf   byte     24  range tick   970 34MB 970 34MB 25  buf   append buf  make   byte  1024 1024                26        27       28  top   main main runtime main main main       main   runtime main runtime   main        main       top  main main  2        1       970 34MB  list main main                 buf   append buf  make   byte  1024 1024      001 002 profile                             970 34MB  heap           heap                                                                                                                                                                Go         goroutine                                                  1 goroutine                   heap profile  g111                           g101 g111           g111       2      goroutine                       goroutine                              goroutine                                                         goroutine                              g111                       g111   2      goroutine       heap        heap                        goroutine         1 goroutine                     goroutine          goroutine    goroutine             goroutine  2KB     1  goroutine    2KB   1000000   2GB            goroutine                             GC                                           goroutine   2           goroutine                  goroutine                           heap profile       Dave                    goroutine   goroutine           7 1 1",
        "objectID": "post/pprof实战:解决内存泄露",
        "date": "2020-02-09T18:49:21.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go调优"
        ]
    },
    {
        "title": "Pprof实战:利用火焰图优化代码",
        "uri": "post/pprof实战:利用火焰图优化代码",
        "content": "logger 100  CPU             wrk    logger wrk  t1  c100  d30   script post lua  http   127 0 0 1 4500 marco log     CPU         30s   CPU profile              startSink     runtime selectgo       CPU    runtime selectgo      runtime sellock   runtime selunlock          CPU     select                        startSink      exit    true   return   moveforward   fakeRead   readChan   else   fakeRead   nil   select   case read",
        "objectID": "post/pprof实战:利用火焰图优化代码",
        "date": "2020-02-02T11:28:43.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go调优"
        ]
    },
    {
        "title": "pprof实战:利用runtime-pprof优化代码",
        "uri": "post/pprof实战:利用runtime-pprof优化代码",
        "content": "package main import    fmt   io   log   os   unicode    func readbyte r io Reader   rune  error    var buf  1 byte _  err    r Read buf     return rune buf 0    err   func main     f  err    os Open os Args 1   err    nil   log Fatalf  could not open file  q   v   os Args 1   err    words    0 inword    false   r  err    readbyte f  err    io EOF   break   err    nil   log Fatalf  could not read file  q   v   os Args 1   err    unicode IsSpace r     inword   words   inword   false   inword   unicode IsLetter r    fmt Printf   q   d words n   os Args 1   words                                             time go run main go moby txt  moby txt   181275 words real 0m2 110s user 0m1 264s sys 0m0 944s    unix     wc  w         time wc  w moby txt 215829 moby txt real 0m0 012s user 0m0 009s sys 0m0 002s       wc         19                                                                           pprof                       CPU          main go     profile      github com pkg profile    func main     defer profile Start   Stop                           cpu pprof      go run main go moby txt 2018 08 25 14 09 01 profile  cpu profiling enabled   var folders by 3gf34z95zg05cyj744vhx40000gn T profile239941020 cpu pprof  moby txt   181275 words 2018 08 25 14 09 03 profile  cpu profiling disabled   var folders by 3gf34z95zg05cyj744vhx40000gn T profile239941020 cpu pprof        go tool pprof       go tool pprof  var folders by 3gf34z95zg05cyj744vhx40000gn T profile239941020 cpu pprof Type  cpu Time  Aug 25  2018 2 09pm  AEST  Duration  2 05s  Total samples   1 36s  66 29   Entering interactive mode  type  help  commands   o  options   pprof  top Showing nodes accounting 1 42s  100  1 42s total flat flat  sum  cum cum  1 41s 99 30  99 30  1 41s 99 30  syscall Syscall 0 01s 0 7  100  1 42s 100  main readbyte 0 0  100  1 41s 99 30  internal poll   FD  Read 0 0  100  1 42s 100  main main 0 0  100  1 41s 99 30  os   File  Read 0 0  100  1 41s 99 30  os   File  read 0 0  100  1 42s 100  runtime main 0 0  100  1 41s 99 30  syscall Read 0 0  100  1 41s 99 30  syscall read top                          syscall Syscall     99         main readbyte                  web              profile                 Graphviz  dot           CPU                     sys call Syscall             99 3    syscall Syscall                                                                 main readbyte                0                     Go   syscall Syscall                  readbyte            1 syscall Read                          pprof                       func main     f  err    os Open os Args 1   err    nil   log Fatalf  could not open file  q   v   os Args 1   err    b    bufio NewReader f  words    0 inword    false   r  err    readbyte b  err    io EOF   break   err    nil   log Fatalf  could not read file  q   v   os Args 1   err    unicode IsSpace r     inword   words   inword   false   inword   unicode IsLetter r    fmt Printf   q   d words n   os Args 1   words                  readbyte     bufio Reader            profile        readbyte                    pprof       defer profile Start profile MemProfile  Stop              go run main2 go moby txt 2018 08 25 14 41 15 profile  memory profiling enabled  rate 4096    var folders by 3gf34z95zg05cyj744vhx40000gn T profile312088211 mem pprof  moby txt   181275 words 2018 08 25 14 41 15 profile  memory profiling disabled   var folders by 3gf34z95zg05cyj744vhx40000gn T profile312088211 mem pprof                 readbyte                  func readbyte r io Reader   rune  error    var buf  1 byte    allocation _  err    r Read buf     return rune buf 0    err                                      readbyte           1                         vs                     go tool pprof           alloc_objects                inuse_objects              profile                                                  ensure y live beyond end main  var y   byte func main     defer profile Start profile MemProfile  profile MemProfileRate 1   Stop   y   allocate 100000  runtime GC        allocate allocates count byte slices returns first slice allocated  func allocate count int    byte   var x byte    0    count  i     x   append x  makeByteSlice      return x 0       makeByteSlice returns byte slice random length range  0  16384   func makeByteSlice     byte   return make   byte  rand Intn 1",
        "objectID": "post/pprof实战:利用runtime-pprof优化代码",
        "date": "2020-02-01T17:23:12.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go调优"
        ]
    },
    {
        "title": "Pprof实战:Profiling Go Programs",
        "uri": "post/pprof实战:Profiling-Go-Programs",
        "content": "Scala Days 2011 Robert Hundt         Loop Recognition C   Java Go Scala                              C   Go Java Scala                                           Go                          Go                       go                    go loop finding                 6             gcc libstdc            3 7   Hundt           C   Go Java Scala                   6g Go            Ubuntu Natty      g            Java Scala                                    C                 C                               amd64 Go            2013 3       g     4 8 0    go version go version devel  08d20469cc20 Tue Mar 26 08 27 18 2013  0100 linux amd64   g     version g    GCC  4 8 0 Copyright  C  2013 Free Software Foundation  Inc               3 4GHz Core i7 2600 CPU 16 GB RAM Gentoo Linux s 3 8 4 gentoo                     CPU        sudo bash  sys devices system cpu cpu 0 7  echo performance    i cpufreq scaling_governor done      Hundt s benchmark programs  C   Go                                          Linux time                user time  system time  real time  maximum memory usage  Mac OS    brew install gnu time    gtime        cat xtime    bin sh  usr bin time  f   Uu  Ss  er  MkB  C           havlak1cc g    O3  o havlak1cc havlak1 cc     xtime   havlak1cc loops  76002  total 3800100  loop 0  nest  0  depth  0 17 70u 0 05s 17 80r 715472kB   havlak1cc     havlak1 go build havlak1 go     xtime   havlak1 loops  76000  including 1 artificial root node  25 05u 0 11s 25 20r 1334032kB   havlak1   C        17 80  700 MB    Go      25 20  1302 MB                                go tool pprof              CPU Profile    Go         profiling        Go testing package benchmarking       gotest     cpuprofile    memprofile flags              runtime pprof          var cpuprofile   flag String  cpuprofile        write cpu profile file   func main     flag Parse    cpuprofile         f  err    os Create  cpuprofile  err    nil   log Fatal err    pprof StartCPUProfile f  defer pprof StopCPUProfile                    cpuprofile  flag    Go flag library       flags            cpuprofile flag   starts CPU profiling                  profiler        StopCPUProfile  flush               defer      main                            cpuprofile flag           go tool pprof     profile    havlak1 prof   havlak1  cpuprofile havlak1 prof loops  76000  including 1 artificial root node    go tool pprof havlak1 havlak1 prof Welcome pprof  help  type  help    pprof  go tool pprof     Google s pprof C   profiler               topN    profile  top N       pprof  top10 Total  2525 samples 298 11 8  11 8  345 13 7  runtime mapaccess1_fast64 268 10 6  22 4  2124 84 1  main FindLoops 251 9 9  32 4  451 17 9  scanblock 178 7 0  39 4  351 13 9  hash_insert 131 5 2  44 6  158 6 3  sweepspan 119 4 7  49 3  350 13 9  main DFS 96 3 8  53 1  98 3 9  flushptrbuf 95 3 8  56 9  95 3 8  runtime aeshash64 95 3 8  60 6  101 4 0  runtime settype_flush 88 3 5  64 1  988 39 1  runtime mallocgc CPU profiling     Go        100           goroutine                    profile  2525            25     go tool pprof                                                                  runtime mapaccess1_fast64    298        11 8    top10                                   32 4                                    main FindLoops   10 6            84 1                                          cum for cumulative flag   pprof  top5  cum Total  2525 samples 0 0 0  0 0  2144 84 9  gosched0 0 0 0  0 0  2144 84 9  main main 0 0 0  0 0  2144 84 9  runtime main 0 0 0  0 0  2124 84 1  main FindHavlakLoops 268 10 6  10 6  2124 84 1  main FindLoops  pprof  top5  cum      main FindLoops   main main       100               100                     main DFS     main main  100        trace     stack trace                              web    SVG    profile        Web               gv       PostScript  Ghostview               graphviz     pprof  web                                                   X   Y    X  Y                                                                   main DFS            21342                                 Go  map           web                 runtime mapaccess1_fast64                pprof  web mapaccess1             main FindLoops   main DFS   runtime mapaccess1_fast64                                            main DFS                pprof  list DFS Total  2525 samples ROUTINE                        main DFS  home rsc g benchgraffiti havlak havlak1 go 119 697 Total samples  flat   cumulative  3 3 240  func DFS currentNode BasicBlock  nodes   UnionFindNode  number map  BasicBlock int  last   int  current int  int   1 1 241  nodes current  Init currentNode  current  1 37 242  number currentNode    current     243  1 1 244  lastid    current 89 89 245  _  target    range currentNode OutEdges   9 152 246  number target     unvisited   7 354 247  lastid   DFS target  nodes  number  last  lastid 1      248        249    7 59 250  last number currentNode     lastid 1 1 251  return lastid  pprof         DFS                      DFS                                                         disasm            ",
        "objectID": "post/pprof实战:Profiling-Go-Programs",
        "date": "2020-02-02T21:36:55.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go调优"
        ]
    },
    {
        "title": "Pprof替代库:pkg Profile",
        "uri": "post/pprof替代库:pkg-profile",
        "content": "Go             runtime pprof     runtime pprof                        profile                                io Writer                                               github com pkg profile                       stopper    profile Start profile CPUProfile  profile ProfilePath                           defer stopper Stop                                       time Sleep time Second            1     profile Start    github com pkg profile                Start                         profile CPUProfile     CPU                       profile MemProfile  profile ProfilePath                             profile Start           Stop                                           1      time Sleep            1                1                 API Constants const DefaultMemProfileRate   4096 DefaultMemProfileRate            pprof    runtime MemProfileRate    512K               func BlockProfile func BlockProfile p  Profile  BlockProfile                            func CPUProfile func CPUProfile p  Profile  CPUProfile  cpu                   Example Code     CPU profiling default profiling mode  specify    explicitly completeness  defer profile Start profile CPUProfile  Stop   func GoroutineProfile func GoroutineProfile p  Profile  GoroutineProfile  goroutine                   func MemProfile func MemProfile p  Profile  MemProfile                       Example Code     use memory profiling  rather default cpu profiling  defer profile Start profile MemProfile  Stop   func MemProfileRate func MemProfileRate rate int  func  Profile  MemProfileRate                            Example Code     use memory profiling custom rate  defer profile Start profile MemProfileRate 2048   Stop   func MutexProfile func MutexProfile p  Profile  MutexProfile                       func NoShutdownHook func NoShutdownHook p  Profile  NoShutdownHook            SIGINT                               true            Start     Stop      Example Code     disable automatic shutdown hook  defer profile Start profile NoShutdownHook  Stop   func ProfilePath func ProfilePath path string  func  Profile  ProfilePath                               ioutil TempDir    Example Code     set location profile will written defer profile Start profile ProfilePath os Getenv  HOME     Stop   func Quiet func Quiet p  Profile  Quiet                func Start func Start options    func  Profile   interface   Stop     Start                          Stop           Example Code     start simple CPU profile register    defer Stop  flush  profiling data  defer profile Start   Stop   Example  WithFlags  Code     use flags package selectively enable profiling  mode    flag String  profile mode        enable profiling mode  one  cpu  mem  mutex  block    flag Parse   switch  mode   case  cpu   defer profile Start profile CPUProfile  Stop   case  mem   defer profile Start profile MemProfile  Stop   case  mutex   defer profile Start profile MutexProfile  Stop   case  block   defer profile Start profile BlockProfile  Stop   default     nothing   func ThreadcreationProfile func ThreadcreationProfile p  Profile  ThreadcreationProfile                           func TraceProfile func TraceProfile p  Profile                               Example Code     use execution tracing  rather default cpu profiling  defer profile Start profile TraceProfile  Stop   type Profile type Profile struct      contains filtered unexported fields                   func   Profile  Stop func  p  Profile  Stop   Stop",
        "objectID": "post/pprof替代库:pkg-profile",
        "date": "2020-02-01T22:32:29.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go调优"
        ]
    },
    {
        "title": "#pragma 预处理指令浅析",
        "uri": "post/pragma-预处理指令浅析",
        "content": "pragma                                              pragma                    C C                                                                         pragma para   para                     1 message    message                                                              pragma message                                                                                                                                         _X86                ifdef _X86  pragma message  _X86 macro activated     endif      X86                           86 macro activated                                  2 code_seg         pragma code_seg    section name      section class                                               3 once                                         VC6                            4 hdrstop                             BCB                                                                            A    B     B     A         pragma startup              pragma package smart_init  BCB                 5 resource    pragma resource    dfm      dfm            dfm             6 warning    pragma warning  disable  4507 34  once  4385  error  164         pragma warning  disable  4507 34         4507 34       pragma warning  once  4385      4385            pragma warning  error  164       164                 pragma warning           pragma warning  push    n      pragma warning  pop     n         1   4    pragma warning  push                     pragma warning  push  n                               n   pragma warning  pop                                       pragma warning  push    pragma warning  disable  4705    pragma warning  disable  4706    pragma warning  disable  4707              pragma warning  pop                          4705 4706 4707    7 comment                                    lib                     pragma comment lib   comctl32 lib    pragma comment lib   vfw32 lib    pragma comment lib   wsock32 lib                    pragma                                    pragma loop_opt on         pragma loop_opt off                                        Parameter xxx used function xxx         pragma warn  100    Turn off warning message warning  100 int insert_record REC  r       function body       pragma warn  100    Turn warning message warning  100 back              100                         pragma                                           pragma pack                                                  k      4 8                   k               alignment modulus   Win32      C    cl exe 80x86                          T       T     sizeof T      double   8                  8     char     1                 Linux  GCC             2                     short       2        2           long double   4       ANSI C                                                                           ANSI C                                             c c         vc6         Zp 1 2 4 8 16    Zp1   1            Zpn   n        n                                       n                       min   sizeof   member    n      1                        Zpn                                     vc6         c c      Code Generation    Struct member alignment                             pragma pack       1   pragma pack    n                                              Zp            pack                                                        pragma pack   n        n  1 2 4 8  16                               n                  pragma pack            Zp          Zp      Zp8    2                  pragma pack        push   pop         identifier        n            pack                                          push   pack                                                    push                      n                                                             pop   pack                                            pop                                             pop     n                   p o p                                                                                                                                        8   pack                                           3         vc6                                  4",
        "objectID": "post/pragma-预处理指令浅析",
        "date": "2017-07-25T12:31:48.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "printf()输出格式控制",
        "uri": "post/printf-输出格式控制",
        "content": "E exponent    10      printf               flags  perc   F N h l type                     type       type     d                      i           d     u                      o                      x                          abcdef    X                          ABCDEF        I64d   INT64    long long  I64u   UINT64    unsigned long long  I64x   64 16          f double                                 e double                                             e      E   e                   E       g double            f   e                                   G   g                       E             c           unsigned char       s                    NULL      p        void                    prec                          g                 s                                  width width                                        flags flags                     printf                                                                        o       o                 o      x      x               0x      e E f g G                   g  G                      0                  0                                      0 m n l h                                                                    0  0       0              m n m                        N                       n        n 6   l h l    long      double  h             short                               d                       d                md m                     m            m            ld          o                          lo                    mo          main     int    1  printf   d   o   a  a           1 177777       1                 1111111111111111 2          177777 8  x                           lx                    mx       u                          lu                    mu       c           s                  s    printf   s    CHINA     CHINA               ms        m            m     m                  m          ms       m   m                   m ns    m           n     n      m             m ns   m n     n      m              n m     n     n         f                                     f                  6      m nf     m     n           m         m nf     n     n           m       e                      e             6         5  4    m ne   m ne m n               n              m               g      f   e                                                                      printf   f     1 0 3     0 333333   printf                                                                                                                                       n       n                                                               printf                printf                                  lf  f           f         7         6             lf        16         6   m n          char ch 20   printf    s n  m n ch                                      m n                     m n              p  x           p   p pointer                                                              printf       p                      0x      int   1  printf   p   i       int   1  printf  0x x   i     32             0xf0001234        p                                                  16  32  64          32           32                            near far huge   pointer        x  lx  hx  llx   int long short long long                        http   blog csdn net TrueLie article details 1692942",
        "objectID": "post/printf-输出格式控制",
        "date": "2017-06-23T20:46:36.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "println与fmt.Println",
        "uri": "post/println与fmt-Println",
        "content": "println                   Bootstrapping                                                             Function Behavior print prints arguments  formatting arguments implementation specific println print prints spaces arguments newline end                                                      print println   stderr    stdout  println                      struct                       fmt     println               fmt Println             Go      fmt Println println           package main import    fmt    func main     println  first   println  second   fmt Println  third     println         standard error fmt Println         standard output",
        "objectID": "post/println与fmt-Println",
        "date": "2019-06-04T16:42:08.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Queue Reconstruction by Height",
        "uri": "post/Queue-Reconstruction-by-Height",
        "content": "LeetCode 406  Queue Reconstruction Height Suppose random list people standing queue  person described pair integers  h  k   h height person k number people front person height greater equal h  Write algorithm reconstruct queue  Note  number people less 1 100  Example Input    7 0    4 4    7 1    5 0    6 1    5 2   Output    5 0    7 0    5 2    6 1    4 4    7 1         k     h    people           h            k        k                               k                           people    7 0    4 4    7 1    5 0    6 1    5 2          7 0    7 1    6 1    5 0    5 2    4 4   people   7 0             0        result    7 0   people   7 1             1             7 0      result    7 0    7 1   people   6 1             1            7 0      result    7 0    6 1    7 1   people   5 0             0            7 0      result    5 0    7 0    6 1    7 1   people   5 2             2            7 0      result    5 0    7 0    5 2    6 1    7 1   people   4 4             4            6 1      result    5 0    7 0    5 2    6 1    4 4    7 1   class Solution   public  vector  reconstructQueue vector   people    if people size    0  return     auto cmp     lambda   return a first  b first a secondb first     sort people begin    people end    cmp   vector  ans  for auto val  people  ans insert ans begin     val second  val   return ans",
        "objectID": "post/Queue-Reconstruction-by-Height",
        "date": "2017-06-24T16:11:38.000Z",
        "tags": [
            "Greedy"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "rand()和srand()函数总结",
        "uri": "post/rand-和srand-函数总结",
        "content": "http   www cnblogs com guihailiuli p 4154416 html                                                                                                                                                                                                     srand   rand    rand             int rand void                      rand                                                  rand             0 RAND_MAX                   srand                    rand                1        0 RANDMAX       RANDMAX      32767   int       16    unsigned int    65535  0 RAND_MAX                 rand                                           srand    srand               void srand unsigned int seed        srand      rand                 seed           time 0       seed     seed        rand                srand unsigned time NULL                                                                         srand unsigned tima NULL                                       srand                                                                                                                                                                                           rand                        0 100         include  include  include main     int i k  srand   unsigned time  NULL      for    0   include  include int main void    int i j  for i 0 i  include  include main     int i k  for    0   include  include main     int i j  for i 0 i",
        "objectID": "post/rand-和srand-函数总结",
        "date": "2017-07-27T21:18:00.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "Reconstruct Itinerary",
        "uri": "post/Reconstruct-Itinerary",
        "content": "LeetCode 332  Reconstruct Itinerary Given list airline tickets represented pairs departure arrival airports  from  to   reconstruct itinerary order  tickets belong man departs JFK  Thus  itinerary begin JFK  Note  multiple valid itineraries  return itinerary smallest lexical order when read single string  example  itinerary   JFK    LGA   smaller lexical order   JFK    LGB    airports represented three capital letters  IATA code   may assume tickets form least one valid itinerary  Example 1  tickets      MUC    LHR      JFK    MUC      SFO    SJC      LHR    SFO    Return   JFK    MUC    LHR    SFO    SJC    Example 2  tickets      JFK   SFO     JFK   ATL     SFO   ATL     ATL   JFK     ATL   SFO    Return   JFK   ATL   JFK   SFO   ATL   SFO    possible reconstruction   JFK   SFO   ATL   JFK   ATL   SFO    larger lexical order                                                                 JFK                         dfs                   dfs                                                             dfs         dfs                                                                 https   blog 1257321977 cos ap beijing myqcloud com QQ E6 88 AA E5 9B BE20170503154755 png  JFK       C    D    A push A      D    B    C    JFK    D push D      D    B    C    JFK push JFK          JFK       C    D      B    C    JFK     D    A       C  A  B C  A  D                                                           STL  unorderedmap   unorderedmap   map      multiset                    class Solution   public  vector findItinerary vector  tickets     auto ticket   tickets          targets ticket first  insert ticket second   visit  JFK    return vector route rbegin    route rend       void visit string airport     targets airport  size      string next    targets airport  begin    targets airport  erase targets airport  begin                             visit next     route push_back airport     private  unordered_map  targets  vector route                                                 tickets      JFK    KUL      JFK    NRT      MRT    JFK              JFK    KUL  NRT  NRT    JFK    multiset         KUL  NRT          JFK       KUL   KUL                            KUL                               class Solution   public  vector findItinerary vector  tickets    vector res  stack d  unordered_map   m   auto   tickets    m a first  insert a second     string cur    JFK    int   0    tickets size      i     m find cur     m end      m cur  empty      d push cur   cur   res back    res pop_back      res push_back cur   string t   cur  cur    m cur  begin    m t  erase m t  begin       res push_back cur     d empty      res push_back d top     d pop      return res",
        "objectID": "post/Reconstruct-Itinerary",
        "date": "2017-06-24T16:10:53.000Z",
        "tags": [
            " Graph",
            "DFS",
            "欧拉回路"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "reflect包解析",
        "uri": "post/reflect包解析",
        "content": "func Copy func Copy dst  src Value  int Copy src      dst   dst    src                Dst src       Slice Array   dst src                    dst      Uint8  src      String  func DeepEqual func DeepEqual x  y interface    bool DeepEqual  x y                                                                                                                Func   value  nil  Func                                value           Map values deeply equal when following true  nil non nil  length  either map object corresponding keys  matched using Go equality  map deeply equal values             map          nil      nil                   map        key   Go                   Go                                                       nil      nil                                 x  0      y  0                            nil         byte       byte nil                 bool            Go               general DeepEqual recursive relaxation Go s    operator  However  idea impossible implement without inconsistency  Specifically  possible value unequal itself  either func type  uncomparable general  floating point NaN value  not equal itself floating point comparison   array  struct  interface containing value  hand  pointer values always equal themselves  even point contain problematic values  compare equal using Go s    operator  sufficient condition deeply equal  regardless content  DeepEqual defined so short cut applies slices maps  x y slice map  deeply equal regardless content       DeepEqual Go                                                             func                       NaN                                                                               Go                           content      DeepEqual                   map   x y    slice map          DeepEqual traverses data values may find cycle  second subsequent times DeepEqual compares two pointer values compared before  treats values equal rather examining values point  ensures DeepEqual terminates   DeepEqual                                                                   DeepEqual    func Swapper 1 8 func Swapper slice interface    func i  j int  Swapper                                   Swapper      type ChanDir ChanDir           type ChanDir int const   RecvDir ChanDir   1    methods panic  functions methods return invalid value  one does  its documentation states conditions explicitly  Value used concurrently multiple goroutines provided underlying Go value used concurrently equivalent direct operations  compare two Values  compare results Interface method  Using    two Values does not compare underlying values represent  type Value struct      contains filtered unexported fields   func Append func Append s Value  x    Value  Value Append appends values x slice s returns resulting slice  Go  x s value assignable slice s element type  func AppendSlice func AppendSlice s  t Value  Value AppendSlice appends slice t slice s returns resulting slice  slices s t element type  func Indirect func Indirect v Value  Value Indirect returns value v points to  v nil pointer  Indirect returns zero Value  v not pointer  Indirect returns v  func MakeChan func MakeChan typ Type  buffer int  Value MakeChan creates new channel specified type buffer size  func MakeFunc 1 1 func MakeFunc typ Type  fn func args   Value   results   Value   Value MakeFunc returns new function given Type wraps function fn  When called  new function does following  converts its arguments slice Values  runs results    fn args   returns results slice Values  one per formal result  implementation fn assume argument Value slice number type arguments given typ  typ describes variadic function  final Value itself slice representing variadic arguments  body variadic function  result Value slice returned fn number type results given typ  Value Call method allows caller invoke typed function terms Values  contrast  MakeFunc allows caller implement typed function terms Values  Examples section documentation includes illustration use MakeFunc build swap function different types    Example func MakeMap func MakeMap typ Type  Value MakeMap creates new map specified type  func MakeMapWithSize 1 9 func MakeMapWithSize typ Type  n int  Value MakeMapWithSize creates new map specified type initial space approximately n elements  func MakeSlice func MakeSlice typ Type  len  cap int  Value MakeSlice creates new zero initialized slice value specified slice type  length  capacity  func New func New typ Type  Value New returns Value representing pointer new zero value specified type  is  returned Value s Type PtrTo typ   func NewAt func NewAt typ Type  p unsafe Pointer  Value NewAt returns Value representing pointer value specified type  using p pointer  func Select 1 1 func Select cases   SelectCase   chosen int  recv Value  recvOK bool  Select executes select operation described list cases  Go select statement  blocks until least one cases proceed  makes uniform pseudo random choice  executes case  returns index chosen case and  case receive operation  value received boolean indicating whether value corresponds send channel  as ",
        "objectID": "post/reflect包解析",
        "date": "2019-07-21T21:41:17.000Z",
        "tags": [
            "Go标准库"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "regexp包解析",
        "uri": "post/regexp包解析",
        "content": "Web                                                                                  strings       Contains Index     Replace     Split Join                                                                     strings                                                               O n    n                          RE2   Syntax                       perl                                             s   true                                                                       Perl      Perl          Perl            Perl      Perl          Perl           ASCII        ASCII          ASCII            ASCII        ASCII          ASCII          pUnicode        Unicode                Unicode          PUnicode        Unicode                Unicode          p Unicode       Unicode          Unicode          P Unicode       Unicode          Unicode             xy   x     y x y   x y     x      x      0   x            x  x      1   x            x  x  0 1   x   1  x n m  n m   x            x  x n       n   x            x  x n    n   x x       0   x              x       1   x              x   0 1   x   0  x n m   n m   x              x n        n   x              x n     n   x           x n      x      n   1000                        ErrInvalidRepeatSize                                 P                                                                                                                               xyz     xyz      xyz     xyz     xy z     xy        z                           false  m                                       false  s         n      false  U          x    x             false               m true                   m     false         m true                   m     false   A              m     b         B          z              m           a             x07                 b           b                  x08         f             x0C   t              x09   n             x0A   r             x0D   v              x0B   123    8                3       x7F    16                3       x 10FFFF     16                10FFFF    Q    E     Q    E                                                                                                                                                                                Perl    ASCII    Unicode     x      A Z                    Perl    ASCII     ASCII   p Unicode      Unicode         pUnicode     Unicode                                d             d              D    D              D             d     name        ASCII                    name          ASCII                      name      p Name       Unicode                   p Name       Unicode                    P Name                     Perl    ASCII    Unicode     x      A Z                    Perl    ASCII     ASCII   p Unicode      Unicode         pUnicode     Unicode         Perl          d          0 9    D             s           t n f r     S            w            0 9A Za z_    W               ASCII           alnum              0 9A Za z     alpha            A Za z     ascii   ASCII            x00  x7F     blank                t      cntrl               x00  x1F x7F     digit            0 9     graph                      lower              a z     print                            graph       punct                                 space              t n v f r      upper             A Z     word             0 9A Za z_     xdigit   16            0 9A Fa f    Unicode               C       other  Cc       control  Cf     format  Co        private use  Cs      surrogate  L       letter  Ll       lowercase letter  Lm       modifier letter  Lo       other letter  Lt          titlecase letter  Lu       uppercase letter  M       mark  Mc       spacing mark        enclosing mark  Mn        non spacing mark  N       number  Nd        decimal number  Nl       letter number  No       other number  P       punctuation  Pc        connector punctuation  Pd          dash punctuation  Pe          close punctuation  Pf          final punctuation  Pi          initial punctuation  Po         other punctuation  Ps          open punctuation  S       symbol  Sc       currency symbol  Sk       modifier symbol  Sm       math symbol  So       other symbol  Z        separator  Zl       line separator  Zp        paragraph separator  Zs        space separator   Unicode               Arabic      Armenian       Balinese      Bengali      Bopomofo        Braille    Buginese     Buhid      Canadian_Aboriginal        Carian      Cham     Cherokee      Common                 Coptic      Cuneiform      Cypriot       Cyrillic      Deseret      Devanagari    Ethiopic       Georgian       Glagolitic       Gothic     Greek    Gujarati       Gurmukhi       Han    Hangul    Hanunoo      Hebrew      Hiragana         Inherited            Kannada      Katakana         Kayah_Li      Kharoshthi       Khmer     Lao     Latin     Lepcha      Limbu     Linear_B B           Lycian      Lydian      Malayalam        Mongolian     Myanmar     NewTaiLue      Nko Nko  Ogham     Ol_Chiki      Old_Italic       Old_Persian      Oriya      Osmanya       Phags_Pa      Phoenici",
        "objectID": "post/regexp包解析",
        "date": "2018-11-15T18:41:39.000Z",
        "tags": [
            "Go标准库"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "RESTAPI测试框架:httpexpect",
        "uri": "post/RESTAPI测试框架:httpexpect",
        "content": "httpexpect         HTTP     HTTP       HTTP         net HTTP                      HTTP      HTTP                       URL       go interpol              URL         go querystring             Cookies      JSON urlencoded            form                                                       Cookies      JSON JSONP                                     array                              JSON       JSONPath      jsonpath        gojsonschema      JSON                   JSON       gojsondiff             testify   assert    require           testing           httputil  http2curl      compact                               HTTP                 net http    fasthttp           HTTP                          HTTP       Google App Engine                Hello  world  package example import    net http   net http httptest   testing   github com gavv httpexpect    func TestFruits t  testing T       create http Handler handler    FruitsHandler      run server using httptest server    httptest NewServer handler  defer server Close      create httpexpect instance e    httpexpect New t  server URL     working  e GET   fruits    Expect    Status http StatusOK  JSON   Array   Empty     JSON orange    map string interface     weight   100       PUT        e PUT   fruits orange   WithJSON orange   Expect    Status http StatusNoContent  NoContent                       weight  100 e GET   fruits orange    Expect    Status http StatusOK   JSON   Object   ContainsKey  weight   ValueEqual  weight   100  apple    map string interface     colors     interface    green    red     weight   200              e PUT   fruits apple   WithJSON apple   Expect    Status http StatusNoContent  NoContent             obj    e GET   fruits apple    Expect    Status http StatusOK  JSON   Object   obj Keys   ContainsOnly  colors    weight                 obj Value  colors   Array   Elements  green    red   obj Value  colors   Array   Element 0  String   Equal  green   obj Value  colors   Array   Element 1  String   Equal  red   obj Value  colors   Array   First   String   Equal  green   obj Value  colors   Array   Last   String   Equal  red   JSON Schema JSON Path schema        type    array    items      type    object    properties          private      type    boolean           repos    e GET   repos octocat    Expect    Status http StatusOK  JSON      validate JSON schema repos Schema schema     run JSONPath query iterate results _  private    range repos Path     private   Array   Iter     private Boolean   False     Forms    post form encoded struct map e POST   form   WithForm structOrMap   Expect    Status http StatusOK     set individual fields e POST   form   WithFormField  foo    hello   WithFormField  bar   123   Expect    Status http StatusOK     multipart form e POST   form   WithMultipart    WithFile  avatar      john png   WithFormField  username    john    Expect    Status http StatusOK  URL construction    construct path using ordered parameters e GET   repos  user   repo     octocat    hello world    Expect    Status http StatusOK     construct path using named parameters e GET   repos  user   repo     WithPath  user    octocat   WithPath  repo    hello world    Expect    Status http StatusOK     set query parameters e GET   repos  user     octocat   WithQuery  sort    asc    Expect    Status http StatusOK       repos octocat sort asc  Headers    set If Match e POST   users john   WithHeader  If Match   etag  WithJSON john   Expect    Status http StatusOK     check ETag e GET   users john    Expect    Status http StatusOK  Header  ETag   NotEmpty      check Date t    time Now   e GET   users john    Expect    Status http StatusOK  Header  Date   DateTime   InRange t  time Now    Cookies    set cookie t    time Now   e POST   users john   WithCookie  session   sessionID  WithJSON john   Expect    Status http StatusOK     check cookies c    e GET   users john    Expect    Status http StatusOK  Cookie  session   c Value   Equal sessionID  c Domain   Equal  example com   c Path   Equal      c Expires   InRange t  t Add time Hour   24   Regular expressions    simple match e GET   users john    Expect    Header  Location    Match  http        users        Values  example com    john      check capture groups index name m    e GET   users john    Expect    Header  Location   Match  http     P    users   P      m Index 0  Equal  http   example com users john   m Index 1  Equal  example com   m Index 2  Equal  john   m Name  host   Equal  example com   m Name  user   Equal  john   Subdomains per request URL e GET   path   WithURL  http   example com    Expect    Status http StatusOK  e GET   path   WithURL  http   subdomain example com    Expect    Status http StatusOK  WebSocket support ws    e GET   mysocket   WithWebsocketUpgrade    Expect    Status http StatusSwitchingProtocols   Websocket   defer ws Disconnect   ws WriteText  some request    Expect    TextMessage   Body   Equal  some response   ws CloseWithText  bye    Expect    CloseMessage   NoContent   Reusable builders e    httpexpect New t   http   example com   r    e POST   login   WithForm Login  ford",
        "objectID": "post/RESTAPI测试框架:httpexpect",
        "date": "2020-01-28T18:03:14.000Z",
        "tags": [
            "Go",
            "httpexpect"
        ],
        "categories": [
            "Go测试"
        ]
    },
    {
        "title": "return语句的用法",
        "uri": "post/return语句的用法",
        "content": "return                                                                            return                                 void          return           void    return                            break       void swap int  v1 int  v2    if v1  v2  return  int temp v2  v2 v1  v1 tmp         void               return                     void        void do_swap int  v1 int  v2    int temp v2  v2 v1  v1 tmp    void swap int  v1 int  v2    if v1  v2  return false  return do_swap v1 v2                     void                                                      C                      return                                    return exit    exit      exit      256                           exit                                                            exit                                       waitpid                                                   exit                         OS         exit                        OS                     main            exit   exit           atexit                                                  I O  tmpfile           exit                                                     exit 0         exit 1  exit  1          exit 2                         exit     return                   return              0       0                  main                    main         return n       exit n          main                                                                      C    main              int main int argc  char  argv       main     int       0       C                              return  exit  exit  Exit  pthreade_exit          abort  SIGNAL                     4    exit       include void exit int status   void _Exit int status    include void _exit int status   exit    return 0                  I O      fclose   exit Exit                      main   exit 0    return 0  atexit       ISO C             32              exit                                         include int atexit void   func  void                                     atexit           0",
        "objectID": "post/return语句的用法",
        "date": "2017-06-23T16:21:57.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "reverse_iterator的用法",
        "uri": "post/reverse_iterator的用法",
        "content": "reverseiterator base                  iterator                                           1 5    vector       reverseiterator    3      base         iterator  vector v  v reserve 5   for int i 1 i  reverse_iterator ri find v rbegin   v rend   3   vector  iterator i ri base                 vector                      reverse_iterator     base     iterator                  rbegin   begin                      iterator              ri                            insert     reverse_iterator           ri                              ri    3    base     i    4    insert             i  insert        ri                        reverse_iterator ri                ri base                     ri ri base       ri base      ri   iterator             reverse_iterator ri                 ri base                        ri ri base        ri base     ri   iterator            v erase   ri base          ri base                   C C                          base                  reverse_iterator      base        v erase    ri  base",
        "objectID": "post/reverse_iterator的用法",
        "date": "2017-07-14T14:50:51.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "Rocketmq中的offset",
        "uri": "post/rocketmq中的offset",
        "content": "Offset           Offset    RocketMQ              Topic             Topic    Message Queue            Offset     Topic         Message Queue       Offset                Consumer               Offset                Broker          DefaultMQPushConsumer      CLUSTERING         Consumer group                                   Broker      Offset     RemoteBrokerOffsetStore     DefaultMQPushConsumer  BROADCASTING      Consumer     Topic        Consumer        RocketMQ   LocalFileOffsetStore  Offset      OffsetStore  Json                     DefaultMQPushConsumer          OffsetStore       PullConsumer         OffsetStore           Offset                                Offset                 OffsetStore                Consumer          DefaultMQPushConsumer                       consumer WithConsumeFromWhere consumer ConsumeFromFirstOffset            Offset                             ConsumeFromFirstOffset                          Consumer setConsumeFromWhere ConsumeFrom Where CONSUME_ FROM_ TIMESTAMP  Consumer setConsumeTimestamp  20131223171201                                        OffsetStore      DefaultMQPushConsumer BROADCASTING        Broker     Topic  ConsumerGroup Offset      Offset    ConsumeFrom Where                  ConsumerGroup          Consumer                     Offset     ConsumeFromWhere",
        "objectID": "post/rocketmq中的offset",
        "date": "2020-04-21T14:22:06.000Z",
        "tags": [
            "rocketmq"
        ],
        "categories": [
            "rocketmq"
        ]
    },
    {
        "title": "scanf()和sscanf()详解",
        "uri": "post/scanf()和sscanf()详解",
        "content": "int sscanf  string str  string fmt  mixed var1  mixed var2        int scanf  const char  format   argument                scanf                                           void           return                     scanf                                               0    scanf   d  d    num1   num2                     2 3          2                    1                   0                                        Tab                3d    3          format     format                 width    h   l   I64   L  type           t      n              a b c   a b c     d       d     d                   d     s                                       const char sourceStr      hello  world   char buf 10     0   sscanf sourceStr    s s   buf      s          s      hello     cout                                                                               char str 10  int x  scanf   s  d  str  amp x   printf  s  d str x        kryptosx 001         kryptosx 001          kryptosx 001 4252772      s        kryptosx 001                    4252772 x         x          type    c          d          i       e   f   g        o         s        x          p       n                u                              scanf    c                                Tab   F2                                                A Z                                                                              scanf                                    a z      a z                     aB     a B               a                                     a z     const char  s    iios 12DDWDFF 122   char buf 20   sscanf  s          buf    printf    s n   buf        iios                   buf  cool             tom  char   url     char uri 10   0   sscanf url        uri       include int main     char buf 512     0     1        sscanf  123456 asdf     s   buf   printf   s n   buf   printf  123456 Expect    s n n          123456   2                        4        sscanf  123456      4s   buf   printf   s n   buf   printf  1234 Expect    4s n n          1234   3                                 sscanf  123456 abcdedf        buf   printf   s n   buf   printf  123456 Expect     n n          123456   4                          1 9           sscanf  123456abcdedfBCDEFxyz      1 9a z    buf   printf   s n   buf   printf  123456abcdedf Expect     1 9a z  n n          123456abcdedf   5                                     sscanf  123456 abcdedfBCDEFxyz        buf   printf   s n   buf   printf  123456 abcdedf Expect     n n          123456 abcdedf   6        iios 12DDWDFF 122                     iios                   buf  sscanf  iios 12DDWDFF 122           buf   printf   s n   buf   printf  12DDWDFF Expect         n n          12DDWDFF   7          hello  world     world                sscanf  hello  world      s s   buf   printf   s n   buf   printf  world Expect     s  s n n          world   8   size    unsigned char m 6     0   int n   0     sscanf           n   sscanf  010203040506     hhx hhx hhx hhx hhx hhx    m 0    m 1    m 2    m 3    m 4    m 5    printf  hhx   d   02x 02x 02x 02x 02x 02x n  n  m 0   m 1  m 2  m 3   m 4   m 5          n   1     hhx                       n   sscanf  010203040506     2hhx 2hhx 2hhx 2hhx 2hhx 2hhx    m 0    m 1    m 2    m 3    m 4    m 5    printf  2hhx   d   02x 02x 02x 02x 02x 02x n  n  m 0   m 1  m 2  m 3   m 4   m 5          n   6    2       hhx   2             n   sscanf  010203040506     02x 02x 02x 02x 02x 02x    m 0    m 1    m 2    m 3    m 4    m 5    printf   02x   d   02x 02x 02x 02x 02x 02x n  n  m 0   m 1  m 2  m 3   m 4   m 5       0       2    2    x                   warning                                x  4                         3                         0   http   blog csdn net rainharder archive 2008 09 27 2989675 aspx          return 0",
        "objectID": "post/scanf()和sscanf()详解",
        "date": "2017-07-23T17:08:51.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "scp命令详解",
        "uri": "post/scp命令详解",
        "content": "Linux scp   Linux scp    Linux           scp  secure copy     scp linux     ssh                    scp   1246BCpqrv    c cipher    F sshconfig    i identityfile    l limit    o ssh_option    P port    S program    user  host1  file1         user  host2  file2       scp        filesource filetarget        1    scp      ssh1  2    scp      ssh2  4    scp     IPv4    6    scp     IPv6    B                            C          C     ssh            p                        q             r             v          scp ssh 1                                    c cipher   cipher                    ssh   F ssh_config         ssh             ssh   i identity_file                             ssh   l limit               Kbit s      o sshoption         sshconfig 5            P port       P  port               S program                         ssh 1         1                scp localfile remoteusername remoteip remotefolder    scp localfile remoteusername remoteip remotefile    scp localfile remoteip remote_folder    scp localfile remoteip remote_file  1 2                      1                   2          3 4                          3                   4               scp  home space music 1 mp3 root www runoob com  home root others music scp  home space music 1 mp3 root www runoob com  home root others music 001 mp3 scp  home space music 1 mp3 www runoob com  home root others music scp  home space music 1 mp3 www runoob com  home root others music 001 mp3           scp  r localfolder remoteusername remoteip remotefolder    scp  r localfolder remoteip remote_folder  1                       2                                scp  r  home space music  root www runoob com  home root others  scp  r  home space music  www runoob com  home root others          music         others      2                                   2                     scp root www runoob com  home root others music  home space music 1 mp3 scp  r www runoob com  home root others   home space music     1             scp                   P                      scp         4588 scp  P 4588 remote www runoob com  usr local sin sh  home administrator 2   scp                              scp",
        "objectID": "post/scp命令详解",
        "date": "2018-11-15T18:42:36.000Z",
        "tags": [
            "Shell"
        ],
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "sed编辑器进阶",
        "uri": "post/sed编辑器进阶",
        "content": "sed                        N                     multiline group      D            P            next      next      n     sed                                          sed                                         next             sed   header  n   d   data1 txt          header          n    sed                 sed                    d        sed                                         sed             header                           next                  sed                      next      N                                                                    sed                      sed   first   N   s  n       data2 txt sed           first               N           5          s                       sed                                                           sed  N   s System Administrator Desktop User   data3 txt                     System Administrator                                                                  N              sed  N   s System Administrator Desktop User   data3 txt         System Administrator                                                                                     sed                                                      sed  N   s System nAdministrator Desktop nUser    s System Administrator Desktop User      data3 txt                       sed                                             N    sed                                                                N              N       sed     s System Administrator Desktop User   N   s System nAdministrator Desktop nUser      data4 txt        sed           d                N                         sed  N    System nAdministrator d  data4 txt                System Administrator                             sed            D                                                                      sed       N    header D   data5 txt sed               N                                header  D                              P                                         n                    p                     pattern space            sed                        sed              sed              hold space                                       5                    h H                    g G x                                                                                      h g       sed               cat data2 txt header line  first data line  second data line  last line      sed  n   first   h   p   n   p   g   p    data2 txt first data line  second data line  first data line                       1  sed                    first     2       first      h              3  p                       4  n             This second data line              5  p                        6  g           This first data line                  7  p                                                                              p                                     negate                                      sed  n   header  p  data2 txt   p     data2       header                         header                            sed                                      N                sed    N    s System nAdministrator Desktop nUser    s System Administrator Desktop User      data4 txt                      sed                N                            sed                        D            sed                     sed                                        sed                                                            branch   b        address b  label  address                   label                   label                  sed   2 3b   s This is Is this    s line  test     data2 txt            2   3                                                            7        label2           b                                          sed    first b jump1   s This the No jump on     jump1   s This the Jump on    data2 txt                first          jump1                   sed                                                                    sed                                               sed                                          echo  This  is  a  test  to  remove  commas     sed  n       start   s    1p   b start                                                                            Ctrl C                                                                  echo  This  is  a  test  to  remove  commas     sed  n       start   s    1p      b start                                                                            test    t        sed                                                                                                                                address t  label                             sed                               if then                                                     sed      s first matched   t   s This the No match on       data2 txt               first                                                                                                  echo  This  is  a  test  to  remove  commas      sed  n       start   s    1p   t start                                                sed                                                               ",
        "objectID": "post/sed编辑器进阶",
        "date": "2017-08-11T20:44:40.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "sed编辑器入门",
        "uri": "post/sed编辑器入门",
        "content": "sed           stream editor                                 vim                                                                 sed                                                  sed                                                                STDOUT                                                                                sed                             sed                                sed         sed options script file        sed       script                                 e                f                                1                    sed             STDIN                      sed                   echo  This test    sed  s test big test   big test        sed       s   s                                      big test   test                             sed                                                          sed                              STDOUT                          2                sed  e  s brown green   s dog cat   data1 txt                                                               bash shell                         sed        sed         bash                              sed  e     s brown green    s fox elephant    s dog cat   data1 txt                       bash shell                        sed                            3                       sed                               sed     f           cat script1 sed s brown green  s fox elephant  s dog cat      sed  f script1 sed data1 txt                       sed                              sed                                           sed        bash shell                      sed  sed                s   substitute                                   1                                                                               substitution flag                      s pattern replacement flags  4                                 g                   p                w file                          sed                            2      sed                     g                           p                            sed  n         n     sed       p                                         w                            sed          STDOUT                               2                                      Linux                                         C shell   etc passwd    bash shell          sed  s   bin  bash   bin  csh    etc passwd                                                     sed                            sed  s  bin bash  bin csh    etc passwd             sed                                                 line addressing    sed                                                         address command                  address   command1 command2 command3   sed                          1                                         sed                 1                                                                       sed                sed  2s dog cat   data1 txt sed                                         sed  2 3s dog cat   data1 txt                                       sed  2  s dog cat   data1 txt 2            sed                               pattern command            pattern    sed                                 Samantha   shell     sed      sed   Samantha s bash csh    etc passwd                                                                sed                      regular expression                     3                                       sed                      sed  2    s fox elephant    s dog cat       data1 txt                                                 sed                                      d                                                                sed  d  data1 txt                                                      sed  3d  data6 txt              sed  2 3d  data6 txt                sed  3  d  data6 txt sed                   sed                  sed   number 1 d  data6 txt    sed                    sed                                                                                                 sed                                                                 sed   1   3 d  data6 txt         sed                                      insert    i                  append    a               new line         sed              sed   address command new line                              echo  Test Line 2    sed  i Test Line 1                             echo  Test Line 2    sed  a Test Line 1              sed                                 sed                   bash shell           echo  Test Line 2    sed  i    Test Line 1  Test Line 1 Test Line 2                                                                   sed                                                                                                                                   sed  3i    inserted line   data6 txt                           sed  3a    appended line   data6 txt        change                                        sed             sed  3c    changed line text   data6 txt        sed                             sed   number 3 c    changed line text   data6 txt                                            sed               ",
        "objectID": "post/sed编辑器入门",
        "date": "2017-08-11T20:44:36.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "select、poll、epoll之间的区别总结",
        "uri": "post/select、poll、epoll之间的区别总结",
        "content": "IO     IO                       IO               IO             1                                 I O     2                                   3     TCP                              I O     4            TCP     UDP      I O     5                          I O                 I O                                                         select poll epoll  IO        I O                                                              select poll epoll       I O                                           I O              I O                     select   copyfromuser       fd_set            __pollwait pollwait        current                                 tcppoll         sk  sksleep                                                                           current           fd       poll     socket   poll   sockpoll sockpoll        tcppoll udppoll  datagrampoll  poll                     mask       mask   fdset            fd            mask       scheduletimeout   select       current                                                 scheduletimeout              select           CPU       fd         fd   fd_set              select       1     select     fd                  fd        2       select               fd      fd        3 select                 1024 poll poll    select         fd        poll  pollfd     select fd_set            epoll      epoll  2 6           select poll         select poll   epoll             epoll                                                         copy      epoll   epoll                  include int epoll_create int size   int epollctl int epfd  int op  int fd  struct epollevent  event   int epollwait int epfd  struct epollevent   events  int maxevents  int timeout    1  int epoll_create int size       epoll    size                          select                 fd 1              epoll            fd   linux      proc   id fd         fd        epoll      close           fd      2 int epollctl int epfd  int op  int fd  struct epollevent  event   epoll            select                                               epoll_create                           EPOLLCTLADD     fd epfd   EPOLLCTLMOD        fd       EPOLLCTLDEL  epfd     fd             fd                   struct epoll_event      struct epoll_event   _uint32t events     Epoll events    epolldatat data     User data variable       events             EPOLLIN                    SOCKET       EPOLLOUT                EPOLLPRI                                    EPOLLERR                 EPOLLHUP                EPOLLET   EPOLL       Edge Triggered              Level Triggered      EPOLLONESHOT                               socket          socket   EPOLL     3  int epollwait int epfd  struct epollevent   events  int maxevents  int timeout              select       events             maxevents      events      maxevents        epoll_create    size   timeout         0       1                                   0            LT           epollwait           epollwait           recv      epollwait                  ET              epollwait                      Level Triggered  LT        socket                        socket                                epoll_wait       socket    LT       accept        epoll   EPOLLIN EPOLLOUT    EPOLLIN      read fd                    write fd    EPOLLOUT           write fd              epoll   EPOLLOUT                     epoll   EPOLLOUT    Edge Triggered  ET        socket                                       socket                                               ET       accept          epoll   EPOLLIN EPOLLOUT    EPOLLIN      read fd        read          EAGAIN               write fd             write  EAGAIN  EPOLLOUT           write fd             write  EAGAIN    ET           epoll                 LT    epoll   ET                                                       ET                read      buff               ET      buff                                   while    read   buff                EAGIN             ET                                  buff                        epoll select poll    epoll    select poll                   epoll                    epoll select poll          select poll           select  poll    epoll        epollcreate epollctl epollwait epollcreate     epoll   epollctl            epollwait                   epoll      epollctl             epoll      epollctl   EPOLLCTLADD       fd          epoll_wait        epoll     fd                      epoll       select poll      current    fd              epollctl  current                fd                                                   fd          epollwait                        fd   schedule_timeout                         epoll            FD                        2048       1GB         10          cat  proc sys fs file max                       epoll                                                                          socket buffer  read  write               proc sys net ipv4 tcp_rmem  for read   proc sys net ipv4 tcp_wmem  for write        87K 16K     4K 4K     2M 2M               8K 8K       IO            recv                    socket           ",
        "objectID": "post/select、poll、epoll之间的区别总结",
        "date": "2017-06-25T14:22:54.000Z",
        "tags": null,
        "categories": [
            "Linux编程"
        ]
    },
    {
        "title": "Self Crossing",
        "uri": "post/Self-Crossing",
        "content": "LeetCode 335  Self Crossing given array x n positive numbers  start point  0 0  moves x 0  metres north  x 1  metres west  x 2  metres south  x 3  metres east so on  words  move direction changes counter clockwise  Write one pass algorithm O 1  extra space determine  path crosses itself  not  Example 1  Given x    2  1  1  2                         Return true  self crossing  Example 2  Given x    1  2  3  4                                    Return false  not self crossing  Example 3  Given x    1  1  1  1                     Return true  self crossing      public class Solution   public boolean isSelfCrossing int   x    for int i 3 i 3  x i   x i 2   x i 1  4  x i 1   x i 3   x i 2  5  x i 2  x i 4   x i 1  x i 3   x i  x i 4   x i 2   return true    return false",
        "objectID": "post/Self-Crossing",
        "date": "2017-06-24T16:10:42.000Z",
        "tags": [
            "Math"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "set和multiset操作总结",
        "uri": "post/set和multiset操作总结",
        "content": "set      empty  1  explicit set  const keycompare  comp   keycompare    const allocatortype  alloc   allocatortype     explicit set  const allocator_type  alloc   range  2  template set  InputIterator first  InputIterator last  const keycompare  comp   keycompare    const allocatortype    allocatortype     copy  3  set  const set  x   set  const set  x  const allocator_type  alloc   move  4  set  set   x   set  set   x  const allocator_type  alloc   initializer list  5  set  initializer_list il  const keycompare  comp   keycompare    const allocatortype  alloc   allocatortype          include  include bool fncomp  int lhs  int rhs   return lhs first     empty set ints int myints     10 20 30 40 50   std  set second  myints myints 5      range std  set third  second      copy second std  set fourth  second begin    second end        iterator ctor  std  set fifth     class Compare bool  fn_pt  int int    fncomp  std  set sixth  fn_pt      function pointer Compare return 0          copy  1  set  operator   const set  x   move  2  set  operator   set   x   initializer list  3  set  operator   initializer_list il          assignment operator sets  include  include int main      int myints     12 82 37 64 15    std  set first  myints myints 5      set 5 ints std  set second     empty set second   first     second contains 5 ints first   std  set       first empty std  cout insert  const value_type  val   pair insert  value_type   val   hint  2  iterator insert  constiterator position  const valuetype  val   iterator insert  constiterator position  valuetype   val   range  3  template void insert  InputIterator first  InputIterator last   initializer list  4  void insert  initializer_list il                                                                                                                                           multiset                                                        set  insert  C  98   include  include int main      std  set myset  std  set  iterator it  std  pair  iterator bool  ret     set initial values   int i 1   include int main      std  set myset  std  set  iterator it     insert values   int i 1   include main      int myints    12 75 10 32 20 25   std  set first  myints myints 3      10 12 75 std  set second  myints 3 myints 6      20 25 32 first swap second   std  cout   iterator it first begin    it  first end      it  std  cout   iterator it second begin    it  second end      it  std  cout pair emplace  Args      args                                       args                                                             include  include  include int main      std  set myset  myset emplace  foo    myset emplace  bar    auto ret   myset emplace  foo      ret second  std  cout iterator emplacehint  constiterator position  Args      args                                                   args                                                                        1  position                                                                                           args  allocator_traits    construct          find   constiterator find  const valuetype  val  const  iterator find  const value_type  val                     val                          set    end  count   sizetype count const valuetype val const          val           lower_bound   iterator lowerbound const valuetype val   constiterator lowerbound const value_type val const         val                include  include int main      std  set myset  std  set  iterator itlow itup   int i 1  i  iterator it myset begin    it  myset end      it  std  cout  include int main      std  set myset  std  set  iterator itlow itup   int i 1  i  iterator it myset begin    it  myset end      it  std  cout equalrange  const valuetype  val  const  pair equalrange  const valuetype  val        include  include int main      std  set myset   int i 1  i  constiterator std  set  constiterator  ret  ret   myset equal_range 30   std  cout    the lower bound points to       ret first     n   std  cout    the upper bound points to       ret second     n   return 0    multiset",
        "objectID": "post/set和multiset操作总结",
        "date": "2017-07-16T21:22:10.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "Shell的父子关系",
        "uri": "post/Shell的父子关系",
        "content": "shell  CLI       bin bash        bash           shell      shell      shell child shell   shell   CLI                  bash    shell                                       4     ps             shell        f         shell                   shell                         exit        shell                               shell   exit        CLI          0       shell      1                shell        bash shell      shell          shell                                                                       pwd   ls   cd  etc   pwd   cd   pwd   ls              commandgrouping                                          command                              shell            shell                        echo  BASH_SUBSHELL                             shell                      shell                      shell         shell                                   shell      shell                  coproc        shell          coproc sleep 10  1  2544         shell                       coproc                                    1     ID 2544   jobs                  jobs  1   Running coproc COPROC sleep 10                  shell         coproc COPROC sleep 10 COPROC  coproc                                  coproc My_Job   sleep 10     1  2570     jobs  1   Running   coproc My_Job   sleep 10                        My_Job",
        "objectID": "post/Shell的父子关系",
        "date": "2017-08-07T17:23:08.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "Shell的內建命令",
        "uri": "post/Shell的內建命令",
        "content": "bash shell           shell                   bin  usr bin  sbin  usr sbin   ps              which type                                    forking                                                                                             shell         shell                          cd exit      bash shell     type                                                                                   echo pwd                                    type    a      type  a                 which                                                                pwd      bin pwd",
        "objectID": "post/Shell的內建命令",
        "date": "2017-08-07T17:23:40.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "shell对信号的处理",
        "uri": "post/shell对信号的处理",
        "content": "Linux             30          Linux           Linux            bash shell        SIGQUIT  3  SIGTERM  5              shell            bash shell      SIGHUP  1  SIGINT  2       bash shell   SIGHUP               shell                 SIGHUP        shell              shell       SIGINT       shell Linux      shell  CPU             shell  SIGINT                          shell        shell         shell                                                                        bash shell                 Linux                           1       Ctrl C      SIGINT            shell                                  Ctrl C           sleep 100  C   Ctrl C      SIGINT     shell         sleep     shell                               Ctrl C            sleep    2                                                                                                   Ctrl Z        SIGTSTP     shell            stopping       terminating                                          Ctrl Z     shell                  shell                shell  bash        sleep 100  Z  1   Stopped sleep 100   exit exit stopped jobs       ps             S         ps               T                                          shell        exit       shell                             PID     kill        SIGKILL                                        shell                                        shell              shell                            shell          shell                                                      trap        shell        shell    Linux          trap                shell             trap        trap commands signals                 trap     SIGINT             trap  echo   Sorry  trapped Ctrl C   SIGINT     Ctrl C          trap      echo              shell                 shell             shell             shell                      shell         trap     EXIT                             shell    trap                          EXIT  trap  echo Goodbye     EXIT                                          trap    trap  echo   Sorry    Ctrl C trapped    SIGINT count 1    count  le 5   echo  Loop   count  sleep 1 count     count   1   done trap  echo   modified trap    SIGINT                                                            trap                         trap                               trap  echo   Sorry    Ctrl C trapped    SIGINT trap    SIGINT     trap",
        "objectID": "post/shell对信号的处理",
        "date": "2017-08-10T19:58:23.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "shell脚本中的函数使用",
        "uri": "post/shell脚本中的函数使用",
        "content": "bash shell                  function                 function name   commands   name                                      commands           bash shell           bash shell                                bash shell                                 name     commands                                      shell                                shell                  function func1   echo  This example function    count 1    count  le 5   func1 count     count   1   done                                                                  bash shell                                                                                                                            return   bash shell  return                   return                                                 function dbl   read  p  Enter value    value echo  doubling value  return     value   2   dbl echo  The new value       dbl     value               return                                                                                    0 255                                                                                                                        shell                                                         function dbl   read  p  Enter value    value echo     value   2   result  dbl        dbl        result        echo                 dbl                   read                      bash shell             STDOUT                   echo                             shell                      bash shell                                                                            0                       1  2                                                          func1  value1 10                                                            function addem         eq 0            gt 2   echo  1 elif       eq 1   echo     1    1   else echo     1    2   fi   value   addem 10 15            shell                                                                                                       1             shell                                                                                                                                        cat test8    bin bash using global variable pass value function dbl   value     value   2     read  p  Enter value    value dbl echo  The new value is   value        test8 Enter value  450 new value is  900    value              dbl                                                             2                                                               local         local temp local                                        shell                                                                                                cat badtest3    bin bash trying pass array variable function testit   echo  The parameters are      thisarray  1 echo  The received array    thisarray        myarray  1 2 3 4 5  echo  The original array is    myarray      testit  myarray                                                                                                         testit   myarray       myarray                                                                                     shell                   echo                                          bin bash returning array value function arraydblr   local origarray local newarray local elements local origarray    echo        newarray    echo        elements         1        0  echo     1    2        multem 2 5 10               shell                                                                          bashrc                 shell          shell                                                                 shell        shell             bashrc   bash shell                          shell     shell     shell  1                    bashrc                                   bash shell                          2             shell        source                            bashrc       cat  bashrc  bashrc Source global definitions    r  etc bashrc       etc bashrc fi    home rich libraries myfuncs                  bash shell            shell                             shell            shell                    shell      shell               source              shell",
        "objectID": "post/shell脚本中的函数使用",
        "date": "2017-08-11T10:26:30.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "Singleton的相关实现",
        "uri": "post/Singleton的相关实现",
        "content": "template class Singleton   public  static T  getInstance       value_    value_   new T      return  value_    private  Singleton     Singleton    static T  value_     template T  Singleton  value_   NULL                    template          singleton     Singleton       Instance             Singleton                     Instance                                 CRTP The Curiously Recurring Template Pattern                             MySingleton  class MySingleton   public Singleton   public     blah blah private  MySingleton      MySingleton                                                      shared_ptr      include  include using namespace std  class Singleton   public  static Singleton   Instance     if  0   _instance get      _instance reset  new Singleton     return _instance get      protected  Singleton void      virtual  Singleton void      static sharedptr instance              Singleton                  Singleton              Singleton               Singleton                       Singleton Instance                          Lazy                                  Singleton                                           Singleton                          Singleton    Instance                        Singleton        Singleton                        Singleton                                 Singleton                         Singleton                                                   Singleton                                                race condition                                    shared variable   template class Singleton   public  static T  getInstance       MutexGuard guard mutex_     RAII   value_    value_   new T        return  value_    private  Singleton     Singleton    static T  value_  static Mutex mutex_     template T  Singleton  value_   NULL  template Mutex Singleton  mutex_                                      getInstance                getInstance                         DCL               DCL DCL double checked locking               getInstance           heavy contention                                DCL          check     check            check  template class Singleton   public  static T  getInstance     if  value_    MutexGuard guard mutex_     value_    value_   new T        return  value_    private  Singleton     Singleton    static T  value_  static Mutex mutex_     template T  Singleton  value_   NULL  template Mutex Singleton  mutex_                                                                DCL                                           12 value_   new T               T                     T                    value_                 1 2 3                           1        2 3                   A   getInstance    12      1 3 2                3                       B      check            B   getInstance          check                value              value        T           A     3           B     getInstance                             debug       volatile                              2          A B           check                                 C  11                C  11                 3                                   DCL            C  11          Singleton                 memory barrier C  11                     C  11         DCL                     2 3      memory barrier   CPU       1 2 3        static T  getInstance     if  value_    MutexGuard guard mutex_     value_    T  p   static_cast operator new sizeof T     new  p  T       insert memory barier value_   p     RCU method     return  value_                   value_   new T                             some memory barrier  T  p   static_cast operator new sizeof T     new  p  T               Out of order execution                  CPU                             Intel CPU   6                                                                        CPU                             CPU            CPU                                                                                                              CPU                                CPU                                memory barrier        CPU                    getInstance       10  memory barrier   CPU   9 10 11            CPU                    9         11              retirement unit                       9 10 11            A      11  CPU   A       9    B                         A     memory barreir                                                         store buffer      memory barreir             memory barreir       memory barreir          memory barreir                                                                                                                memory barrier            memory barrier  unix          barrier             ASM    mfence    barrier               Meyers Singleton C  11   template class Singleton   public  static T  getInstance     static T value  return value    private  Singleton     Singleton                      C  11        C  14           C  11                    C  11           local static                  local static             check        C           getInstance              bool initialized   false  char value sizeof ",
        "objectID": "post/Singleton的相关实现",
        "date": "2017-07-19T11:46:01.000Z",
        "categories": [
            "OOP"
        ]
    },
    {
        "title": "slice操作总结",
        "uri": "post/slice操作总结",
        "content": "append   append          slice        slice        append                    cap             len                                                                  var   int   append a  1       1          a         append a  1  2  3                      append a    int 1 2 3                          map key             key   append        mapstringstring   a  a     append a  a     a     append                              s3    append s2  7    append                  s4    append s2  s1       append                      byte            bytes    append   byte  hello    world             ss append ss  index  ss index 1          index                     insert element index                           rear  append   string   ss index       ss append ss 0 index   inserted   ss append ss rear       slice          package main import  fmt  func main     aSlice      int 1  2  3  bSlice      int 4  5  6  7  8  9  copy bSlice  aSlice  fmt Println aSlice  bSlice    1 2 3   1 2 3 7 8 9        copy  aSlice  bSlice        4 5 6         copy                   from        copy                          copy             copy  aSlice  bSlice        4 5 6                               package main import  fmt  func main     aSlice      int 1  2  3  bSlice      int 4  5  6  7  8  9  copy bSlice 2 5   aSlice  fmt Println aSlice  bSlice    1 2 3   4 5 1 2 3 9       slice   copy                  func slicecopy to  fm slice  width uintptr  int                       0             return fm len    0    to len    0   return 0      n                       n    fm len to len   n   n   to len           width   0                    width    0   return n                raceenabled   callerpc    getcallerpc unsafe Pointer  to   pc    funcPC slicecopy  racewriterangepc to array  uintptr n int width    callerpc  pc  racereadrangepc fm array  uintptr n int width    callerpc  pc             memory sanitizer  msan  msanenabled   msanwrite to array  uintptr n int width    msanread fm array  uintptr n int width      size    uintptr n    width size    1      TODO  worth new memmove impl                          byte  to array     byte  fm array     known byte pointer   else                    size   bytes   fm array          to array      memmove to array  fm array  size    return n                       func slicestringcopy to   byte  fm string  int                       0             return len fm     0    len to     0   return 0      n                       n    len fm  len to    n   n   len to                 raceenabled   callerpc    getcallerpc unsafe Pointer  to   pc    funcPC slicestringcopy  racewriterangepc unsafe Pointer  to 0    uintptr n   callerpc  pc             memory sanitizer  msan  msanenabled   msanwrite unsafe Pointer  to 0    uintptr n                   memmove unsafe Pointer  to 0    stringStructOf  fm  str  uintptr n   return n                       byte   string        Go        string       byte                       package main import  fmt  func main     s     hello  c      byte s          s       byte    c 0     c  s2    string c          string    fmt Printf   s n   s2  fmt Printf  s  x  c  x  s2  x    s   c   s2    slice            s1      int 1  2  3  4  5  6  s2      int 7  8  9  10  1  1  1  1  1  1  copy s2  s1 1 3   fmt Println s2      2 3 9 10 1 1 1 1 1 1            s1      int 1  2  3  4  5  6  s2      int 7  8  9  10  1  1  1  1  1  1  copy s2 2 4   s1 1 3   fmt Println s2      7 8 2 3 1 1 1 1 1 1",
        "objectID": "post/slice操作总结",
        "date": "2018-11-28T14:27:26.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "Socket处在网络层的什么位置？",
        "uri": "post/Socket处在网络层的什么位置？",
        "content": "ISO              open systems interconnection   OSI     OSI                                   TCP UDP                      IPV4 IPV6                 socket                                                    IP                         OSI                                     FTP HTTP                                                                                                                                4   5         API",
        "objectID": "post/Socket处在网络层的什么位置？",
        "date": "2017-06-25T05:43:09.000Z",
        "tags": null,
        "categories": [
            "Linux编程"
        ]
    },
    {
        "title": "socket通信过程",
        "uri": "post/socket通信过程",
        "content": "TCP                        socket   bind   listen           accept                      socket         connect    SYN                   SYN ACK         connect           ACK         accept                     TCP                                                                   accept         read    socket                             write                  read                          read                  write                  read                   read                                      close                       read    0                     close                close                                shutdown                             socket API         TCP                   socket   TCP              connect     SYN          TCP                 socket       TCP            read    0      FIN       socket",
        "objectID": "post/socket通信过程",
        "date": "2017-06-25T14:20:32.000Z",
        "tags": null,
        "categories": [
            "网络"
        ]
    },
    {
        "title": "SOCKETOPT-SO_LINGER选项",
        "uri": "post/SOCKETOPT-SO-LINGER选项",
        "content": "closesocket       SOLINGER                                                       SOLINGER      SO_LINGER                            SO_LINGER                    struct linger   int l_onoff     0   off  nozero      int l_linger     linger time                   lonoff 0        llinger               close                                 lonoff  0 llinger 0  closesocket                                                                               recv      WSAECONNRESET       lonoff   0 llinger  0  closesocket                                                   SO_LINGER        closesocket      WSAEWOULDBLOCK                  close                            close   EWOULDBLOCK                     close                 FIN     TCP                                          close       l_linger          4 4BSD                   Posix 1g                  SO_LINGER        30         define TRUE 1  define FALSE 0 int z     Status code   int s    Socket s    struct linger so_linger      solinger lonoff   TRUE  solinger llinger   30  z   setsockopt s  SOL_SOCKET  SO_LINGER   so_linger  sizeof so_linger     z   perror  setsockopt 2                 SO_LINGER        s         define TRUE 1  define FALSE 0 int z     Status code    int s     Socket s    struct linger so_linger      solinger lonoff   TRUE  solinger llinger   0  z   setsockopt s  SOL_SOCKET  SO_LINGER   so_linger  sizeof so_linger     z   perror  setsockopt 2     close s      Abort connection                 close       s                     0",
        "objectID": "post/SOCKETOPT-SO-LINGER选项",
        "date": "2017-06-25T14:21:41.000Z",
        "tags": null,
        "categories": [
            "Linux编程"
        ]
    },
    {
        "title": "SO_REUESADDR和SO_REUSEPORT",
        "uri": "post/SOCKETOPT-SO-REUESADDR选项",
        "content": "SO_REUSEADDR                                      TCP     TIMEWAIT                TCP                                                                      SOREUSEADDR                                                                                                SOREUSEADDR                                                                SOREUSEADDR     SOREUSEADDR SOREUSEPORT SO_REUSEADDR          SO_REUSEADDR                                                                         bind      SO_REUSEADDR                                    IP       TCP              IP                SO_REUSEADDR                                 IP           TCP     SO_REUSEADDR             IP                    IP                                          UDP      TCP        SO_REUSEPORT                             IP                             IP           SOREUSEADDR SOREUSEPORT    SOREUSEPORT    SOREUSEADDR              socket    SOREUSEPORT      socket   SOREUSEPORT         socket                             socket    TIMEWAIT         SOREUSEPORT    socket                             socket         TIMEWAIT   socket                          socket SOREUSEADDR               socket   SO_REUSEPORT          socket  SOREUSEADDR SOREUSEPORT",
        "objectID": "post/SOCKETOPT-SO-REUESADDR选项",
        "date": "2017-06-25T14:21:30.000Z",
        "tags": null,
        "categories": [
            "Linux编程"
        ]
    },
    {
        "title": "sort包解析(1.11)",
        "uri": "post/sort包解析-1-11",
        "content": "func Float64s func Float64s a    float64  Float64s            float64                   package main import    fmt   math   sort    func main     s      float64 5 2   1 3  0 7   3 8  2 6     unsorted sort Float64s s  fmt Println s  s     float64 math Inf 1   math NaN    math Inf  1   0 0     unsorted sort Float64s s  fmt Println s    func Float64sAreSorted func Float64sAreSorted a    float64 bool Float64sAreSorted        float64s                        package main import    fmt   sort    func main     s      float64 0 7  1 3  2 6  3 8  5 2     sorted ascending fmt Println sort Float64sAreSorted s   s     float64 5 2  3 8  2 6  1 3  0 7     sorted descending fmt Println sort Float64sAreSorted s   s     float64 5 2  1 3  0 7  3 8  2 6     unsorted fmt Println sort Float64sAreSorted s     func Ints func Ints a    int  Ints                    package main import    fmt   sort    func main     s      int 5  2  6  3  1  4     unsorted sort Ints s  fmt Println s    func IntsAreSorted func IntsAreSorted a    int bool IntsAreSorted        int         package main import    fmt   sort    func main     s      int 1  2  3  4  5  6     sorted ascending fmt Println sort IntsAreSorted s   s     int 6  5  4  3  2  1     sorted descending fmt Println sort IntsAreSorted s   s     int 3  2  4  1  5     unsorted fmt Println sort IntsAreSorted s     func IsSorted func IsSorted data Interface  bool IsSorted           func Search func Search n int f func int bool int Search            0  n         f i   true  i      Search    f        0  n                                           Search       f i   true    i             n               1     strings Index      Search        0  n      f      Search   x                                  f                                          Search len data   func i int  bool   return data i     23      data      i  data i     23          23              data i     23                                            x  x    23    sort Search len data   func i int  bool   return data i     x      x      len a     a i     x   fmt Printf  found  d index  d  v n   x  i  a    else   fmt Printf   d not found  v n   x  a                                             package main import    fmt   sort    func main          int 55  45  36  28  21  15  10  6  3  1  x    6    sort Search len a   func i int  bool   return a i",
        "objectID": "post/sort包解析-1-11",
        "date": "2019-01-29T15:49:44.000Z",
        "tags": [
            "Go标准库"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "sort和uniq命令详解",
        "uri": "post/sort和uniq命令详解",
        "content": "sort           sort              stdin                            uniq      sort                 stdin         sort sort                stdin            stdont uniq       sort                   sort        sort                   sort                                      sort                                              n       sort                                  M      Linux                                       Sep 13 07 10 09 testbox smartd 2718   Device   dev sda  opened     M   sort                       k  t                         etc passwd       t                k                             etc passwd    ID                sort  t      k 3  n  etc passwd root x 0 0 root  root  bin bash bin x 1 1 bin  bin  sbin nologin daemon x 2 2 daemon  sbin  sbin nologin adm x 3 4 adm  var adm  sbin nologin lp x 4 7 lp  var spool lpd  sbin nologin sync x 5 0 sync  sbin  bin sync shutdown x 6 0 shutdown  sbin  sbin shutdown halt x 7 0 halt  sbin  sbin halt mail x 8 12 mail  var spool mail  sbin nologin news x 9 13 news  etc news  uucp x 10 14 uucp  var spool uucp  sbin nologin operator x 11 0 operator  root  sbin nologin games x 12 100 games  usr games  sbin nologin gopher x 13 30 gopher  var gopher  sbin nologin ftp x 14 50 FTP User  var ftp  sbin nologin                 ID                                uniq",
        "objectID": "post/sort和uniq命令详解",
        "date": "2017-09-09T09:17:18.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "SQL 和 NoSQL 的区别",
        "uri": "post/SQL-和-NoSQL-的区别",
        "content": "http   www cnblogs com jeakeven p 5402095 html      SQL  Structured Query Language                   SQL Server Oracle MySQL     PostgreSQL      NoSQL Not SQL                MongoDB Redis CouchDB            SQL             NoSQL                  JSON             SQL                            NoSQL              JSON                     MySQL                          I O  redis                              Redis                          MySQL              Redis                              SQL                              primary key     index      trigger       stored procedure                                          NoSQL                                                      NoSQL              MongoDB                   _id                             NoSQL                                SQL                                                                                                                                    NoSQL                                                                                  SQL  JOIN   SQL     JOIN                                NoSQL      JOIN                        NoSQL                         SQL                                                                         NoSQL                            SQL                                                                           NoSQL                                                        NoSQL    JOIN                SQL                       MySQL              NoSQL                                                   join                                                NoSQL                                                                           NoSQL                    key            join                                                                               CAP",
        "objectID": "post/SQL-和-NoSQL-的区别",
        "date": "2017-06-25T16:50:09.000Z",
        "tags": null,
        "categories": [
            "Linux编程 "
        ]
    },
    {
        "title": "Sql模拟库:go-sqlmock",
        "uri": "post/sql模拟库:go-sqlmock",
        "content": "sqlmock     sql driver                       sql                            TDD                                                   go1 8             sql                              sql                                          v1 2 0   sqlmock Rows       struct                            struct      sqlmock Rows    driver Rows                                       API Variables var CSVColumnParser   func s string    byte   switch   case strings ToLower s      null   return nil   return   byte s    CSVColumnParser      csv          byte           NULL   nil var ErrCancelled   errors New  canceling query due user request   ErrCancelled                          func MonitorPingsOption func MonitorPingsOption monitorPings bool  func  sqlmock  error MonitorPingsOption                Ping         true                       ExpectPing                false                    Ping      ExpectPing        func NewErrorResult func NewErrorResult err error  driver Result NewErrorResult      sql    Result                     Code  db  mock  _    New   result    NewErrorResult fmt Errorf  some error    mock ExpectExec   INSERT        WillReturnResult result  res  _    db Exec  INSERT something   _  err    res LastInsertId   fmt Println err  Output  error func NewResult func NewResult lastInsertID int64  rowsAffected int64  driver Result NewResult   Exec         SQL    Result     Code  var lastInsertID  affected int64 result    NewResult lastInsertID  affected  mock ExpectExec   INSERT        WillReturnResult result  fmt Println mock ExpectationsWereMet    Output  remaining expectation not matched  ExpectedExec    expecting Exec ExecContext which  matches sql    INSERT       without arguments return Result having  LastInsertId  0 RowsAffected  0 func QueryMatcherOption func QueryMatcherOption queryMatcher QueryMatcher  func  sqlmock  error QueryMatcherOption     SQL                SQL         QueryMatcher QueryMatcherRegexp  func ValueConverterOption func ValueConverterOption converter driver ValueConverter  func  sqlmock  error ValueConverterOption       ValueConverter  sqlmock                     type Argument type Argument interface   Match driver Value  bool     ExpectedQuery ExpectedExec        Argument                 func AnyArg func AnyArg   Argument AnyArg                Argument                    type ExpectedBegin type ExpectedBegin struct      contains filtered unexported fields   ExpectedBegin      Sqlmock ExpectBegin     sql DB Begin    func   ExpectedBegin  String func  e  ExpectedBegin  String   string              func   ExpectedBegin WillDelayFor func  e ExpectedBegin  WillDelayFor duration time Duration  ExpectedBegin WillDelayFor                 context     func   ExpectedBegin WillReturnError func  e ExpectedBegin  WillReturnError err error  ExpectedBegin WillReturnError     sql DB Begin       type ExpectedClose type ExpectedClose struct      contains filtered unexported fields   ExpectedClose      Sqlmock ExpectClose     sql DB Close    func   ExpectedClose  String func  e  ExpectedClose  String   string              func   ExpectedClose WillReturnError func  e ExpectedClose  WillReturnError err error  ExpectedClose WillReturnError     sql DB Close       type ExpectedCommit type ExpectedCommit struct      contains filtered unexported fields   ExpectedCommit      Sqlmock ExpectCommit     sql Tx Commit    func   ExpectedCommit  String func  e  ExpectedCommit  String   string              func   ExpectedCommit  WillReturnError func  e ExpectedCommit  WillReturnError err error  ExpectedCommit WillReturnError     sql Tx Close       type ExpectedExec type ExpectedExec struct      contains filtered unexported fields   ExpectedExec      sql DB Exec   sql Tx Exec   sql Stmt Exec      Sqlmock ExpectExec      Code  db  mock  _    New   result    NewErrorResult fmt Errorf  some error    mock ExpectExec   INSERT        WillReturnResult result  res  _    db Exec  INSERT something   _  err    res LastInsertId   fmt Println err  Output  error func   ExpectedExec  String func  e  ExpectedExec  String   string              func   ExpectedExec WillDelayFor func  e ExpectedExec  WillDelayFor duration time Duration  ExpectedExec WillDelayFor                 context     func   ExpectedExec  WillReturnError func  e ExpectedExec  WillReturnError err error  ExpectedExec WillReturnError                  func   ExpectedExec WillReturnResult func  e ExpectedExec  WillReturnResult result driver Result  ExpectedExec WillReturnResult     Exec           sqlmock NewResult lastInsertID int64      int64                       sqlmock NewErrorResult err error               func   ExpectedExec WithArgs func  e ExpectedExec  WithArgs args    driver Value  ExpectedExec WithArgs        args       exec                                    sqlmock Argument         type ExpectedPing type ExpectedPing struct      contains filtered unexported fields   ExpectedPing      sql DB Ping      Sqlmock ExpectPing    func   ExpectedPing  String func  e  ExpectedPing  String   string              func   ExpectedPing  WillDelayFor func  e ExpectedPing  WillDelayFor duration tim",
        "objectID": "post/sql模拟库:go-sqlmock",
        "date": "2020-01-27T16:26:17.000Z",
        "tags": [
            "Go",
            "go-sqlmock"
        ],
        "categories": [
            "Go测试"
        ]
    },
    {
        "title": "SQL语句:DCL语句",
        "uri": "post/SQL语句-DCL语句",
        "content": "SQL   GRANT REVOKE                   GRANT          REVOKE               GRANT GRANT         GRANT                  WITH GRANT OPTION                                    GRANT                              owner                                         PUBLIC              GRANT OPTION                                     WITH GRANT OPTION                                    Student        U1  GRANT SELECT TABLE Student U1      Student  Course            U2 U3  GRANT PRIVILEGES TABLE Student  Course U2 U3       SC             GRANT SELECT TABLE SC PUBLIC       SC INSERT    U5                   GRANT INSERT TABLE SC U5 GRANT OPTION     SQL    U5       SC INSERT             REVOKE                        REVOKE     REVOKE         REVOKE                 CASCADE RESTRICT       U4             REVOKE UPDATE Sno  TABLE Student U4            SC       REVOKE SELECT TABLE SC PUBLIC       U5 SC  INSERT      REVOKE INSERT TABLE SC U5 CASCADE     U5 INSERT           CASCADE     U6 U7 INSERT                          CASCADE              RESTRICT             U6 U7          SC  INSERT                        U5                                                                                               SQL    CREATE ROLE          GRANT          REVOKE            1            SQL      CREATE ROLE                      GRANT      2       GRANT                              GRANT                 3                  GRANT            WITH GRANT OPTION                                    3                      1   2                                   ADMIN OPTION        ADMIN OPTION                                                                             4          REVOKE                                    REVOKE                              ADMIN OPTION",
        "objectID": "post/SQL语句-DCL语句",
        "date": "2017-08-13T20:09:30.000Z",
        "tags": null
    },
    {
        "title": "SQL语句:DDL语句",
        "uri": "post/SQL语句-DDL语句",
        "content": "DDL                                                DML          DML                                         DDL              DBA                   1       CREATE DATABASE dbname                                    show databases                                   USE dbname 2       drop database dbname  3                        CREATE TABLE tablename  columnname1 columntype1 constraints columnname2 columntype2 constraints         columnnamen columntypen constraints             emp         3     ename     hiredate        sal             varchar 10  date int 2   create table emp  ename varchar 10   hiredate date  sal decimal 10 2   deptno int 2                                   DESC tablename    desc                                                       SQL                   show create table emp  G    G                                        4               DROP TABLE tablename 5                 alter table                 1              ALTER TABLE tablename MODIFY  COLUMN  columndefinition  FIRST   colname         emp   ename        varchar 10    varchar 20   alter table emp modify ename varchar 20    2              ALTER TABLE tablename ADD  COLUMN  columndefinition  FIRST   colname       emp        age     int 3   alter table emp add column age int 3    3              ALTER TABLE tablename DROP  COLUMN  col_name        age      alter table emp drop column age   4             ALTER TABLE tablename CHANGE  COLUMN  oldcolname columndefinition  FIRST AFTER colname       age     age1           int 4   alter table emp change age age1 int 4     5                           ADD CNAHGE MODIFY           first after column_name                       ADD                    CHANGE MODIFY                         birth date    ename     alter table emp add birth date ename       age          alter table emp modify age int 3  first   6            ALTER TABLE tablename RENAME  TO  new_tablename       emp     emp1       alter table emp rename emp1",
        "objectID": "post/SQL语句-DDL语句",
        "date": "2017-08-13T20:09:20.000Z",
        "categories": [
            "MySQL"
        ]
    },
    {
        "title": "SQL语句:DML语句-数据查询",
        "uri": "post/SQL语句-DML语句-数据查询",
        "content": "SQL    SELECT                                    SELECT  ALL DISTINCT                         AS   WHERE    GROUP  HAVING     ORDER  ASC  DESC      SELECT         WHERE         FROM                            SELECT                             GROUP BY                                              GROUP BY   HAVING                        ORDER BY                     SELECT                                                        1                                   1                                       SELECT                                 SELECT Sno Sname Student                  Student                  Sno Sname                  Student                                                                                              2                                  SELECT                                                              SELECT   Student   3           SELECT                                           SELECT Sname 2014 Sage         2           Student        2                          2014                                                                                       SELECT Sname  Year Birth    2014 Sage LOWER Sdept  Student                                                                     SELECT Sname NAME  Year Birth   BIRTH 2014 Sage BIRTHDAY  LOWER Sdept  DEPARTMENT Student       2             1                                                  DISTINCT                                                      DISTINCT  SELECT DISTINCT Sno SC        DISTINCT        ALL                SELECT Sno SC      SELECT Sno SC   2                           WHERE      1                        SELECT Sname Student Sdept  CS                           Student                      Sdept        CS          Sname                                         Student                         SELECT DISTINCT Sno SC Grade  ESCAPE                                                _                    0         a b   a    b             acb addgb ab          _                  a_b   a    b      3        acb afb                201215121          SELECT   Student Sno  201215121       SELECT   Student Snc  201215121     LIKE                           LIKE                  NOTLIKE                        SELECT Sname Sno Ssex Student Sname LIKE                              SELECT Sname Student Sname    _                              ESCAPE                 DB_DeSign           SELECT Cno Ccredit Course Cname  DB  _Design  ESCAPE      ESCAPE                                           5                               SELECT Sno Cno SC Grade NULL        Grade             is             6              AND OR            AND      OR                           20          SELECT Sname Student Sdept  CS  Sage3      GROUP BY   Sno           COUNT       HAVING                         3            3            WHERE   HAVING              WHERE                        HAVING                             90                        SELECT Sno AVG Grade  SC AVG Grade   90 GROUP Sno    WHERE                                SELECT Sno  AVG Grade  SC GROUP Sno HAVING AVG Grade   90                                                                                                                    1           WHERE                                                                                                                                                                        Student            SC              Student SC                    Sno     SELECT Student  SC Student SC Student Sno SC Sno   Student SC                  SELECT   WHERE                                                                                    2                                                                             Course                                                                        Course              Course          FIRST     SECOND        SQL    SELECT FIRST Cno SECOND Cpno Course FIRST Course SECOND FIRST Cpno SECOND Cno  3          R S                                      R         S                    R                 S                                                        NULL                                               S                  SELECT Student Sno Sname Ssex Sage Sdept Cno Grade Student LEFT OUTER JOIN SC  Student Sno SC Sno   4                                                                                                    SQL      SELECT Student  Sno Sname Cname Grade Student SC Course Student Sno SC Sno SC Cno Course Cno        SQL      SELECT FROM WHERE                          WHERE   HAVING                     SELECT Sname            Student Sno  SELECT Sno            SC Cno  2                                                   SELECT       ORDER BY   ORDER BY               1   IN                                IN                                                                     SELECT Sdept Student Sname          cs       cs        SELECT Sno Sname Sdept Student Sdept  CS                                SELECT Sno Sname Sdept Student Sdept  SELECT Sdept Student Sname                                                         SELECT S1 Sno S1 Sname S1 Sdept ",
        "objectID": "post/SQL语句-DML语句-数据查询",
        "date": "2017-08-13T23:42:36.000Z",
        "categories": [
            "MySQL"
        ]
    },
    {
        "title": "SQL语句:DML语句-数据更新",
        "uri": "post/SQL语句-DML语句-数据更新",
        "content": "1                                         INSERT tablename  field1 field2       fieldn  VALUES value1 value2       valuesn         emp         ename   zzx1 hiredate   2000 01 01 sal   2000 deptno   1         insert emp  ename hiredate sal deptno  values  zzx1   2000 01 01   2000  1     INTO                                   mysql  insert emp values  lisa   2003 02 01   3000  2   INTO                                          NOT NULL                         CREATE TABLE        VALUES                                     MySQL   insert                               INSERT tablename  field1  field2       fieldn  VALUES  record1value1  record1value2       record1valuesn    record2value1  record2value2       record2valuesn           recordnvalue1  recordnvalue2       recordn_valuesn              dept           insert dept values 5  dept5    6  dept6                      SELECT                    INSERT                         INSERT      INSERT                                                      CREATE TABLE Dept age  Sdept CHAR 15  Avg age SMALLINT      Student                           INSERT Dept_age Sdept Avg age  SELECT Sdept AVG Sage  Student GROUP Sdept                            update              UPDATE tablename SET field1 value1 field2  value2       fieldn valuen  WHERE CONDITION        emp   ename   lisa     sal   3000     4000  update emp set sal 4000 ename  lisa     MySQL   update                      UPDATE t1 t2   tn set t1 field1 expr1 tn fieldn exprn  WHERE CONDITION             emp      sal    dept      deptname  update emp a dept b set a sal a sal b deptno b deptname a ename a deptno b deptno               WHERE                              1   UPDATE Student SET Sage Sage l                     UPDATE                                   UPDATE SC SET Grade 0 Sno  SELETE Sno Student Sdept   CS                             delete              DELETE tablename  WHERE CONDITION       emp    ename   dony               delete emp ename  dony     MySQL                     DELETE t1 t2   tn t1 t2   tn  WHERE CONDITION             WHERE                              DELETE                                      DELETE SC                       DELETE                                        DELETE SC Sno  SELETE Sno Student Sdept  CS",
        "objectID": "post/SQL语句-DML语句-数据更新",
        "date": "2017-08-13T20:09:33.000Z",
        "categories": [
            "MySQL"
        ]
    },
    {
        "title": "SSH原理与运用",
        "uri": "post/SSH原理与运用",
        "content": "SSH  Secure Shell    SSH   IETF        Network Working Group     SSH                            Shell                             rsh FTP POP Telnet                                              man in the middle                                                                SSH                                 SSH                         SSH                    DNS   IP    SSH                                  SSH            Telnet     FTP POP    PPP                      SSH                 user       host                  ssh user host                                ssh host SSH      22                    22     p                ssh  p 2222 user host          ssh         2222            SSH                                   1                            2                          3                                                                                                           https   SSH             CA                                               wifi                                    SSH                             Man in the middle attack   SSH                                               ssh user host authenticity host  host  12 18 429 21   can t established  RSA key fingerprint 98 2e d7 e0 de 9f ac 67 28 c2 42 2d 37 16 58 4d  sure want continue connecting  yes no               host                                                  RSA     1024              MD5         128         98 2e d7 e0 de 9f ac 67 28 c2 42 2d 37 16 58 4d                                                                                                                 sure want continue connecting  yes no   yes             host          Warning  Permanently added  host 12 18 429 21   RSA  list known hosts              Password   enter password                                          HOME  ssh known_hosts                                                     SSH       knownhosts                     etc ssh sshknown_hosts                                                       SSH                                                                                                                                       shell                                        ssh keygen         ssh keygen                                                 passphrase                                HOME  ssh              idrsa pub idrsa                                       host       ssh copy id user host                                      etc ssh sshd_config                        RSAAuthentication yes PubkeyAuthentication yes AuthorizedKeysFile  ssh authorized_keys           ssh       ubuntu   service ssh restart    debian    etc init d ssh restart   authorized_keys                             HOME  ssh authorizedkeys                     authorizedkeys                  ssh copy id                         ssh user host  mkdir  p  ssh    cat     ssh authorizedkeys     ssh authorizedkeys         shell         3     mkdir  p  ssh                ssh              4  cat     ssh authorizedkeys     ssh authorizedkeys       ssh id_rsa pub                                       SSH             SSH                                     SSH                1     HOME src                     HOME src       cd    tar czv src   ssh user host  tar xz    2         HOME src                         ssh user host  tar cz src    tar xzv   3              httpd    ssh user host  ps ax   grep  h ttpd             SSH                             SSH                  8080         SSH                 ssh  D 8080 user host SSH     socket       8080                       SSH                   8080                                    SSH      SSH            SSH                    SSH        TCP           SSH                                       tunneling       SSH     TCP                          Telnet  SMTP  LDAP    TCP                                                                   SSH           TCP         SSH       SSH                  SSH Client    SSH Server                              TCP    1          A    172 16 250 90 16   B    172 16 33 166 16   C    172 16 250 240 16  mysql           A B C       A    C mysql                                                                   B         ssh        iptables                                                 iptables           A         ssh  L 13306 172 16 250 240 3306 root 172 16 33 166                A  13306         B             C 3306               A       2        A    172 16 250 90 16   B    172 16 33 166 16   C    172 16 250 240 16  mysql                     B          B      A     A       B                            B    A     A                    A    C     B         ssh  R 13306 172 16 250 16 3306 172 16 250 90     R    3                               A   13306             B     C 3306       B    A                         3                  facebook                              B       A                 A        ssh  L 8080 root 172 16 250 240              A ip             facebook    SSH      SSH                N                  shell T             TTY                   SSH                    ssh  NT  D 8080 host f     SSH         ",
        "objectID": "post/SSH原理与运用",
        "date": "2018-11-15T18:43:05.000Z",
        "tags": [
            "Shell"
        ],
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "stack,queue,priority_queue操作总结",
        "uri": "post/stack-queue-priority-queue操作总结",
        "content": "stack queue priority_queue priority_queue                               priority_queue   Type        Container          Functional          Container                vector  deque      list  STL        vector          operator  include using namespace std  int main    priority_queue q  for  int i  0  i                      include  include using namespace std  int main    priority_queue  greater   q  for  int i  0   include using namespace std  struct Node  int x  y  Node  int a  0  int b  0    x a   y b        bool operator b y  return a x  b x    int main    priority_queue q  for  int i  0  i  greater        greater                           include  include using namespace std  struct Node  int x  y  Node  int a  0  int b  0    x a   y b        struct cmp  bool operator     Node a  Node b    if  a x   b x   return a y  b y  return a x  b x       int main    priority_queue  cmp  q  for  int i  0  i  10    i   q push  Node  rand    rand        while   q empty      cout   q top   x         q top   y   endl  q pop      getchar    return 0",
        "objectID": "post/stack-queue-priority-queue操作总结",
        "date": "2017-07-16T16:25:55.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "STL迭代器及辅助函数",
        "uri": "post/STL迭代器及辅助函数",
        "content": "STL                              begin end advance  next  since C  11   prev  since C  11   distance  iter_swap              std                                           advance  next  prev  distance                                advance iter  n                n            iter n                                                                                                                              newPos   pos   10                        newPos   next pos  10                                                                                    iterator traits                                                                                                                            begin         end                        iter   iter n        end                                                begin since C  11                       include    std  cout  include    std  vector  std  begin using namespace std  int main      vector bar  1 2 3 4 5   cout    std  cout  include    std  vector  std  begin using namespace std  int main      vector bar  1 2 3 4 5   cout    1  2  3  4  5   auto iter   a begin    advance iter  3     4 advance iter   2     2 next  since C  11  ForwardIterator next ForwardIterator pos  Distance n   1   next     advance pos  n     pos           next                 advance pos  n                advance            advance                           pos          vector    1  2  3  4  5   auto iter   begin a   auto niter next iter  3     4 prev  since C  11  BidirectionalIterator prev BidirectionalIterator pos  Distance n   1   prev   pos                 pos   advance pos   n     pos    n                     1  prev   pos          BidirectionalIterator             vector    1  2  3  4  5   auto iter   end a             auto s prev iter     5 auto v prev iter 2     4 distance Distance distance InputIterator pos1  InputIterator pos2   Distance      iteratortraits  differencetype pos1  pos2             vector    1  2  3  4  5   auto l begin a   auto r   end a   int s distance l r     5 int v distance r l      5     http   blog csdn net elloop article details 50410765 http   www cplusplus com",
        "objectID": "post/STL迭代器及辅助函数",
        "date": "2017-06-23T20:41:10.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "STL迭代器特性及失效问题",
        "uri": "post/STL迭代器特性及失效问题",
        "content": "vector vector                                                                                             push_back   end                                               capacity      insert                                       erase                  reserve                                    erase                                            erase iter         erase                          for  iter   c begin    iter    c end      iter   c erase iter   deque deque                     map              map                      map 1                 map        node                                  deque                                                   it        cur          deque  map        node                             deque                deque      pushfront pushback                      map               map               deque   23      push_back 23     node         map             node   map                                                           push_front    popfront popback                                            start finish                                                         deque                                                                                                                           map set map set                                                                                                                    C  11      erase                      void      erase iter                       for  iter   c begin    iter    c end      c erase iter     unorderedset unorderedmap                         hash                     hash          C  11       1  iterator erase  const_iterator position    2  sizetype erase  const valuetype  val    3  iterator erase  constiterator first  constiterator last   C  11   map set vector deque erase                      for  auto iter   c begin    iter    c end      iter   c erase iter   list                                                                                                                       list                                                        erase  iter                 erase iter     slist                                      list              slist insert erase previous                   slist                                             slist     insertafter eraseafter                        list  Stack                              deque                    LIFO         stack  queue                              deque                    FIFO         queue  priority_queue                                 vector                          priority_queue                         http   blog csdn net hackbuteer1 article details 7734382",
        "objectID": "post/STL迭代器特性及失效问题",
        "date": "2017-06-24T11:21:22.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "STL中的快速排序改进版——内省排序",
        "uri": "post/STL中的快速排序改进版——内省排序",
        "content": "WieO nlgn           O n 2                           STL                1                            10                                                                    SGI STL    sort                                                n    k    k   2 k",
        "objectID": "post/STL中的快速排序改进版——内省排序",
        "date": "2017-06-24T11:19:44.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "STL中的Traits编程技法",
        "uri": "post/STL中的Traits编程技法",
        "content": "STL    traits                            C   template          C              traits                                                                                 template void func Iterator iter                                                       template void func Iterator iter     Iterator var                                 C    sizeof         typeof        RTTI    typeid                                                          template void func_impl Iterator iter  T t    T temp                   func        template void func Iterator iter    funcimpl iter   iter    func        funcimpl      int main int argc  const char  argv      int i  func  i       func                funcimpl       funcimpl           Iterator       T                                                                                             template   Iterator  func Iterator iter                                                                     STL                                                                         template class Iterator   public  typedef T value_type          Iterator T  p   0    m_ptr p     T  operator   const   return m_ptr         private  T  m_ptr     template typename Iterator  value_type                     func Iterator iter    return  iter    int main int argc  const char  argv      Iterator iter new int 10    cout class C                                        template class C                      T          T         T                                                   iterator_traits                    STL    iteratortraits                          valuetype            template struct iterator_traits   typedef typename Iterator  valuetype valuetype       Iterator   valuetype     iteratortraits        valuetype  Iterator  valuetype           iterator_traits        template typename Iterator  value_type           func Iterator iter    return  iter        iterator_traits       template typename iteratortraits  valuetype           func Iterator iter    return  iter                                                                                     iterator_traits                              iterator_traits                      template struct iterator_traits   typedef T value_type                                        void func int  ptr                    void func const int  ptr                                                                  const  const                       ptr                            ptr   const               const                     iterator_traits           iteratortraits  valuetype      value_type const int    int      iteratortraits   valuetype                    const                               const  const                           iterator_traits           template struct iterator_traits   typedef T value_type                        int   const int      iteratortraits      valuetype  iterator_traits       STL                     valuetype differencetype pointer reference iteratorcategory                  STL                                         iteratortraits             STL iterator_traits       tempalte struct iterator_traits   typedef typename I  iteratorcategory iteratorcategory  typedef typename I  valuetype valuetype  typedef typeanme I differencetype differencetype  typedef typename I  pointer pointer  typedef typename I  reference reference                             value_type valuetype                                   int  int                  valuetype          difference_type difference_type                   int array 5     1  2  3  4  5   int  ptr1   array   1     2 int  ptr2   array   3     4 ptrdifft distance   ptr2   ptr1       differencetype         ptr2 ptr1          differencetype        STL C     ptrdifft       difference_type          reference_type referencetype                referencetype                  valuetype T      referencetype  T    valuetype const T      referencetype  const T           pointer pointer                                    operator  operator                                  T  operator   const   return ptr       T  reference type T  operator     const   return ptr       T  pointer type         iterator_category iteratorcategory                            iteratorcategory         Input Iterator Output Iterator Forward Iterator Bidirectional Iterator Random Access Iterator                                   STL       iterator_traits         iterator_traits       STL     iterator                                          STL       iterator         template struct iterator   typedef Category iterator_category  typedef T value_type  typedef Distance difference_type  typedef Pointer pointer  typedef Reference reference      iterator                                                                      template class ListIter   public std  iterator",
        "objectID": "post/STL中的Traits编程技法",
        "date": "2017-06-24T13:42:17.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "strconv包解析",
        "uri": "post/strconv包解析",
        "content": "Constants const IntSize   intSize IntSize int uint        Variables var ErrRange   errors New  value range   ErrRange              var ErrSyntax   errors New  invalid syntax   ErrSyntax             type NumError type NumError struct   Func string          ParseBool ParseInt ParseUint ParseFloat  Num string           Err error          ErrRange ErrSyntax    NumError           func   NumError  Error func  e  NumError  Error   string func IsPrint func IsPrint r rune  bool                unicode IsPrint   r                    ASCII    func CanBackquote func CanBackquote s string  bool      s                       tab               func Quote func Quote s string  string      s go                                 t  n  xFF  u0100  func QuoteToASCII func QuoteToASCII s string  string      s go                          ASCII         func QuoteRune func QuoteRune r rune  string     r go                                 t  n  xFF  u0100  func QuoteRuneToASCII func QuoteRuneToASCII r rune  string     r go                          ASCII         func Unquote func Unquote s string   t string  err error      s                 go                                   s go                   Example test    func s string    t  err    strconv Unquote s  err    nil   fmt Printf  Unquote   v    v n   s  err    else   fmt Printf  Unquote   v     v n   s  t      s    cafe u0301    string doesn t quotes  can t unquoted  test s     invalid syntax test      s       test     s      test   u00e9   Output  Unquote  cafe  u0301    invalid syntax Unquote  cafe  u0301     cafe u0301 Unquote    cafe  u0301       caf  Unquote     u00e9        func UnquoteChar func UnquoteChar s string  quote byte   value rune  multibyte bool  tail string  err error      s        go                 1  value     rune     byte  2  multibyte   value         utf 8   3  tail            4  err             quote                                                                                     func ParseBool func ParseBool str string   value bool  err error          bool     1 0 t f T F true false True False TRUE FALSE         func ParseInt func ParseInt s string  base int  bitSize int   i int64  err error                     base     2 36    base 0             0x  16    0  8      10    bitSize                  0 8 16 32 64      int int8 int16 int32 int64    err  NumErr           err Error   ErrSyntax           err Error   ErrRange  func ParseUint func ParseUint s string  base int  bitSize int   n uint64  err error  ParseUint  ParseInt                 func ParseFloat func ParseFloat s string  bitSize int   f float64  err error                        s                s            IEEE754      bitSize           32 float32                float32  64 float64    err  NumErr          err Error ErrSyntax              f  Inf err Error  ErrRange  func FormatBool func FormatBool b bool  string   b     true   false   func FormatInt func FormatInt i int64  base int  string   i base         base    2 36              a   z     10     func FormatUint func FormatUint i uint64  base int  string  FormatInt          func FormatFloat func FormatFloat f float64  fmt byte  prec  bitSize int  string                  bitSize  f      32 float32 64 float64           fmt      f   ddd dddd   b   ddddp ddd          e   d dddde dd         E   d ddddE dd         g         e       f      G         E       f      prec               f   e   E                 g   G              prec   1                      f  func Atoi func Atoi s string   i int  err error  Atoi ParseInt s  10  0      func Itoa func Itoa i int  string Itoa FormatInt i  10       func AppendBool func AppendBool dst   byte  b bool    byte    append dst  FormatBool b      func AppendInt func AppendInt dst   byte  int64  base int    byte    append dst  FormatInt I  base       func AppendUint func AppendUint dst   byte  uint64  base int    byte    append dst  FormatUint I  base       func AppendFloat func AppendFloat dst   byte  f float64  fmt byte  prec int  bitSize int    byte    append dst  FormatFloat f  fmt  prec  bitSize      func AppendQuote func AppendQuote dst   byte  s string    byte    append dst  Quote s      func AppendQuoteToASCII func AppendQuoteToASCII dst   byte  s string    byte    append dst  QuoteToASCII s      func AppendQuoteRune func AppendQuoteRune dst   byte  r rune    byte    append dst  QuoteRune r      func AppendQuoteRuneToASCII func AppendQuoteRuneToASCII dst   byte  r rune    byte    append dst  QuoteRuneToASCII r",
        "objectID": "post/strconv包解析",
        "date": "2018-11-15T18:44:53.000Z",
        "tags": [
            "Go标准库"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "strcpy、strncpy、memcpy和memmove浅析",
        "uri": "post/strcpy、strncpy、memcpy和memmove浅析",
        "content": "strcpy memcpy memmove                                strcpy strcpy           strcpy                                        src dest            dest           src           strcpy    char   strcpy char dst const char src     1    assert dst    NULL    src    NULL               2  char  ret   dst     3    dst   src       0       4  return ret     1 const          const              2        A                         B            assert  dst     src   char     bool                                         C            assert dst    0    src    0               0               NULL  0                      3         A        strdst    4   0   A     while  dst   src             B     while  src    0   dst    src           dst               0   dst   src         int i    5            i                                                           char      dst                             int l strlen strcpy strA strB        char   strA strcpy new char 10  strB     strSrc                                              const char   char                  strcpy                        strcpy         char str 10   abc   strcpy str 1 str   strncpy      ANSI C   strcpy        strncpy   strncpy  strcpy          strncpy strcpy          n                     0      char strncpy char dst  char  src  size_t n          src   n          dest      strcpy    NULL           n              dest           n   dest    dest                 src     src      src      dst   dst          0       n   dest     0 src        desk    src     dest       NULL  src    dest      n     char   src   count         dst src                    count      char  dst    char  src  dst    char   dst   1  src    char   src   1      else      dst src                               dst    char   dst   count   1  src    char   src   count   1   count      char  dst    char  src  dst    char   dst   1  src    char   src   1      return ret",
        "objectID": "post/strcpy、strncpy、memcpy和memmove浅析",
        "date": "2017-06-24T13:23:32.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "string操作总结",
        "uri": "post/string操作总结",
        "content": "default  1  string    copy  2  string  const string  str   substring  3  string  const string  str  sizet pos  sizet len   npos   c string  4  string  const char  s   buffer  5  string  const char  s  size_t n   fill  6  string  size_t n  char c   range  7  template string  InputIterator first  InputIterator last   initializer list  8  string  initializer_list il   move  9  string  string   str  noexcept         string constructor  include  include int main      std  string s0   Initial string       constructors used order described above  std  string s1  std  string s2  s0   std  string s3  s0  8  3   std  string s4   A character sequence    std  string s5   Another character sequence   12   std  string s6a  10   x    std  string s6b  10  42      42 ASCII code     std  string s7  s0 begin    s0 begin   7   std  cout  include int main      std  string str   Test string    std  cout  include int main      std  string str  100  x    std  cout  Contestants  swap Contestants     vector Contestants             contestants       vector               vector                                                      contestant     swap        contestant                                     contestants                    contestants                          contestant              string     string s  swap s                          STL    STL                vector string                                          at            pos                pos              pos                   outofrange            const qualified         const char          char        include  include int main      std  string str   Test string     unsigned i 0   include int main      std  string str   hello world     str back          std  cout il   il                                          include  include int main      std  string name   John    std  string family   Smith    name      K        c string name    family     string name      n      character std  cout string  append  InputIterator first  InputIterator last           range first last            initializer list 7  string  append  initializer_list il          il                include  include int main      std  string str  std  string str2  Writing    std  string str3  print 10 5 more      used order described above  str append str2       Writing   str append str3 6 3       10   str append  dots cool  5       dots   str append  here          here    str append 10u                       str append str3 begin   8 str3 end          5 more  str append 5 0x2E              std  cout string  assign  InputIterator first  InputIterator last   initializer list 7  string  assign  initializer_list il   move  8  string  assign  string   str  noexcept    str     str                   include  include int main      std  string str  std  string base  The quick brown fox jumps lazy dog       used order described above  str assign base   std  cout  10 0x2D   std  cout iterator insert  iterator p  InputIterator first  InputIterator last   initializer list  8  string  insert  constiterator p  initializerlist il        include  include int main      std  string str  to question   std  string str2  the    std  string str3  or not be   std  string  iterator it     used order described above  str insert 6 str2       the  question str insert 6 str3 3 4       not  the question str insert 10  that cool  8      not  that  the question str insert 10  to        not  to  that question str insert 15 1          not be    question   str insert str begin   5          be    not be  question str insert  str end   3          be  not be  question      str insert  it 2 str3 begin   str3 begin   3       or   std  cout  include int main      std  string str   This example sentence     std  cout string  replace  constiterator i1  constiterator i2  InputIterator first  InputIterator last   initializer list  7  string  replace  constiterator i1  constiterator i2  initializer_list il        include  include int main      std  string base  this test string    std  string str2  n example   std  string str3  sample phrase   std  string str4  useful       replace signatures used order described above     Using positions  012345678912345678912345 std  string str base      this test string   str replace 9 5 str2       this example string    1  str replace 19 6 str3 7 6       this example phrase    2  str replace 8 10  just a        this just phrase    3  str replace 8 6  a shorty  7       this short phrase    4  str replace 22 1 3           this short phrase      5     Using iterators  0123456789123456789 str replace str begin   str end   3 str3       sample phrase      1  str replace str begin   str begin   6  replace        replace phrase      3  str replace str begin   8 str begin   14  is coolness  7       replace cool      4  str replace str begin   12 str end   4 4  o        replace cooool      5  str replace str begin   11 str end   str4 begin   str4 end        replace useful    6  std  cout  include main      std  string buyer   money    std  string seller   goods    std  cout  include int main      std  string str   hello world     str pop_b",
        "objectID": "post/string操作总结",
        "date": "2017-06-23T16:11:06.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "string类的一种正确写法",
        "uri": "post/string类的一种正确写法",
        "content": "https   coolshell cn articles 10478 html C                   String                std  string                           int                                                      vector list deque   valuetype     std  map   keytype                        String                                         String      char                                size                             String      char  data        invariant       valid   string     data      NULL data_     0           C     str                                                 big three     copy control          C  11                             operator                         include  include class String   public  String     data_ new char 1      data_     0     String const char  str       char     data_ new char strlen str    1     strcpy data_  str     String const String  rhs       String     data_ new char rhs size     1     strcpy data  rhs cstr        String            delete   data_    String  operator  String rhs        swap     swap rhs   return  this    size_t size   const   return strlen data_     const char  c_str   const   return data_    void swap String  rhs    std  swap data  rhs data     private  char  data_                          new char             delete             C                                              data_     NULL       String const char  str       str                                  str          assert                   String",
        "objectID": "post/string类的一种正确写法",
        "date": "2017-09-05T09:36:56.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "string与其他类型间的转换",
        "uri": "post/string与其他类型间的转换",
        "content": "string char      string char     c_str   string a  hello world   const char  ch a c_str        c_str       const char         char        c_str strcpy   string s  test string    char str 100   strcpy str  s c_str       char   string        string      char sz    awdasdas  string str   sz   string         string    stoi int stoi  const string  str  size_t  idx   0  int base   10   int stoi  const wstring  str  size_t  idx   0  int base   10                                                                                   str                 endptr        idx       size_t                   str                                      base                          0                   strtol                10    0    base                                                                  0   0x   0X                                                          2 36                        36    0   z    Z                                                  16       0x   0X       str                                        str                            stoi example  include    std  cout  include    std  string  std  stoi int main      std  string str_dec    2001  Space Odyssey   std  string str_hex    40c3   std  string str_bin     10010110001   std  string str_auto    0x7f   std  string  sizetype sz     alias sizet int idec   std  stoi  strdec  sz   int ihex   std  stoi  strhex nullptr 16   int ibin   std  stoi  strbin nullptr 2   int iauto   std  stoi  strauto nullptr 0   std  cout    std  cout  include    std  string  std  stol int main      std  string str_dec    1987520   std  string str_hex    2f04e009   std  string str_bin     11101001100100111010   std  string str_auto    0x7fffff   std  string  sizetype sz     alias sizet long lidec   std  stol  strdec  sz   long lihex   std  stol  strhex nullptr 16   long libin   std  stol  strbin nullptr 2   long liauto   std  stol  strauto nullptr 0   std  cout    std  cin  std  cout  include    std  string  std  stoul  std  getline int main      std  string str  std  cout    std  cout  include    std  string  std  stoll int main      std  string str    8246821 0xffff 020   std  string  sizetype sz   0     alias sizet   str empty      long long ll   std  stoll  str  sz 0   std  cout    std  cout  include    std  string  std  stoull int main      std  string str    8246821 0xffff 020  1   std  string  sizetype sz   0     alias sizet   str empty      unsigned long long ull   std  stoull  str  sz 0   std  cout    std  cout  include    std  string  std  stof int main      std  string orbits   686 97 365 24    std  string  sizetype sz     alias sizet float mars   std  stof  orbits  sz   float earth   std  stof  orbits substr sz    std  cout    std  cout  include    std  string  std  stod int main      std  string orbits   365 24 29 53    std  string  sizetype sz     alias sizet double earth   std  stod  orbits  sz   double moon   std  stod  orbits substr sz    std  cout    std  cout  include    std  string  std  stod int main      std  string orbits   90613 305 365 24    std  string  sizetype sz     alias sizet long double pluto   std  stod  orbits  sz   long double earth   std  stod  orbits substr sz    std  cout    std  cout  include    std  string  std  to_string int main      std  string pi    pi     std  to_string 3 1415926   std  string perfect   std  to_string 1 2 4 7 14      perfect number   std  cout   pi     n   std  cout   perfect     n   return 0",
        "objectID": "post/string与其他类型间的转换",
        "date": "2017-07-17T20:38:39.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "string与byte与rune",
        "uri": "post/string与byte与rune",
        "content": "string   byte   string         8               UTF 8                  nil                                go    src runtime string go string       type stringStruct struct   str unsafe Pointer len int       str                        len                  byte        string     struct      byte   go   byte uint8     slice   go    src runtime slice go    type slice struct   array unsafe Pointer len int cap int   array       len     cap       cap       string               s    byte  123   fmt Println s        1 2 3  49 50 51    123       ASCII                                                                 string            string             stringStruct str  strpoint  len  strlen  string    str                                                                  string   byte           s     A1          A1       s     str         s    A2         A2         s     str             byte string           array          s      byte 1         1        s    array          s     byte 2      array     2   string                                                gc       string           string   byte       string     byte     byte string       func stringtoslicebyte buf  tmpBuf  s string    byte   var b   byte buf    nil    len s  0   racereadrangepc unsafe Pointer  b 0    uintptr l   getcallerpc unsafe Pointer  buf    funcPC slicebytetostring     msanenabled    l   0   msanread unsafe Pointer  b 0    uintptr l     s  c    rawstringtmp buf  l  copy c  b  return s   func rawstringtmp buf  tmpBuf  l int   s string  b   byte    buf    nil    l",
        "objectID": "post/string与byte与rune",
        "date": "2018-11-27T15:24:50.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "strings包解析",
        "uri": "post/strings包解析",
        "content": "func EqualFold func EqualFold s  t string  bool     utf 8       unicode                         Example fmt Println strings EqualFold  Go    go    Output  true func HasPrefix func HasPrefix s  prefix string  bool   s        prefix  func HasSuffix func HasSuffix s  suffix string  bool   s        suffix  func Contains func Contains s  substr string  bool      s      substr  Example fmt Println strings Contains  seafood    foo    fmt Println strings Contains  seafood    bar    fmt Println strings Contains  seafood        fmt Println strings Contains          Output  true false true true func ContainsRune func ContainsRune s string  r rune  bool      s    utf 8  r  func ContainsAny func ContainsAny s  chars string  bool      s       chars        Example fmt Println strings ContainsAny  team    i    fmt Println strings ContainsAny  failure    u   i    fmt Println strings ContainsAny  foo        fmt Println strings ContainsAny          Output  false true false false func Count func Count s  sep string  int      s        sep    Example fmt Println strings Count  cheese    e    fmt Println strings Count  five             rune Output  3 5 func Index func Index s  sep string  int   sep    s                 1  Example fmt Println strings Index  chicken    ken    fmt Println strings Index  chicken    dmr    Output  4  1 func IndexByte func IndexByte s string  c byte  int   c s                 1  func IndexRune func IndexRune s string  r rune  int unicode  r s                 1  Example fmt Println strings IndexRune  chicken    k    fmt Println strings IndexRune  chicken    d    Output  4  1 func IndexAny func IndexAny s  chars string  int    chars    utf 8   s                 chars         1  Example fmt Println strings IndexAny  chicken    aeiouy    fmt Println strings IndexAny  crwth    aeiouy    Output  2  1 func IndexFunc func IndexFunc s string  f func rune  bool  int s        f   i    utf 8  r  f r   true         1  Example f    func c rune  bool   return unicode Is unicode Han  c    fmt Println strings IndexFunc  Hello       f   fmt Println strings IndexFunc  Hello  world   f   Output  7  1 func LastIndex func LastIndex s  sep string  int   sep    s                  1  Example fmt Println strings Index  go gopher    go    fmt Println strings LastIndex  go gopher    go    fmt Println strings LastIndex  go gopher    rodent    Output  0 3  1 func LastIndexAny func LastIndexAny s  chars string  int    chars    utf 8   s                 chars         1  func LastIndexFunc func LastIndexFunc s string  f func rune  bool  int s         f unicode     i        1  func Title func Title s string  string   s                        BUG  Title                Unicode      Example fmt Println strings Title  her royal highness    Output  Royal Highness func ToLower func ToLower s string  string                       Example fmt Println strings ToLower  Gopher    Output  gopher func ToLowerSpecial func ToLowerSpecial _case unicode SpecialCase  s string  string   _case                              func ToUpper func ToUpper s string  string                       Example fmt Println strings ToUpper  Gopher    Output  GOPHER func ToUpperSpecial func ToUpperSpecial _case unicode SpecialCase  s string  string   _case                              func ToTitle func ToTitle s string  string                       Example fmt Println strings ToTitle  loud noises    fmt Println strings ToTitle          Output  LOUD NOISES      func ToTitleSpecial func ToTitleSpecial _case unicode SpecialCase  s string  string   _case                              func Repeat func Repeat s string  count int  string   count s        Example fmt Println  ba    strings Repeat  na   2   Output  banana func Replace func Replace s  old  new string  n int  string    s  n    old      new        n   A     r    a     r 0          n                          n    0    nil n 0          n                          n    0    nil n      gt    fmt Println r Replace  This HTML     Output   lt b gt HTML lt  b gt   func   Replacer  Replace func  r  Replacer  Replace s string  string Replace  s              func   Replacer  WriteString func  r  Replacer  WriteString w io Writer  s string   n int  err error  WriteString w   s",
        "objectID": "post/strings包解析",
        "date": "2018-11-15T18:45:27.000Z",
        "tags": [
            "Go标准库"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "struct和union的区别",
        "uri": "post/struct和union的区别",
        "content": "struct       union       C                                         1                                                                                                                                                                                                                                                 2                                                                  typedef union  double i  int k 5   chare   DATE  struct data  int cat  DATE cow  double dog   too  DATE max      printf   d  sizeof struct date  sizeof max                32    int  4    double 8    char  1     DATE                   union              20         20    union double   8     union  8            8        8          24  data                        sizeof int  sizeof DATE  sizeof double  4 24 8 36   8          40      40 24 64",
        "objectID": "post/struct和union的区别",
        "date": "2017-09-05T12:08:16.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "supervisor安装与相关配置",
        "uri": "post/supervisor安装与相关配置",
        "content": "Supervisor               C S       supervisord        supervisorctl                   web                            supervisord supervisorctl   centos7  systemd systemctl        systemd      Nginx Tomcat memcache Redis                                  Supervisor                      Supervisor                             CentOS7 3 yum install python setuptools easy_install supervisor      pip install supervisor supervisor               supervisortd supervisorctl echosupervisordconf    supervisor                                                                supervisor       echosupervisordconf                             supervisord          supervisor                             CWD    supervisord        CWD supervisord conf  CWD etc supervisord conf  etc supervisord conf  etc supervisor supervisord conf  since Supervisor 3 3 0     etc supervisord conf  Relative executable     supervisord conf  Relative executable           etc      mkdir  etc supervisor echosupervisordconf    etc supervisor supervisord conf 1          supervisor                                                            unixhttpserver  file  tmp supervisor sock  UNIX socket    supervisorctl      chmod 0700  socket   mode    0700  chown nobody nogroup  socket   owner    uid gid   inethttpserver   HTTP      web      port 127 0 0 1 9001  Web       IP                     username user              password 123             supervisord  logfile  tmp supervisord log            CWD supervisord log logfile_maxbytes 50MB            rotate    50MB     0         logfile_backups 10              10   0      loglevel info         info     debug warn trace pidfile  tmp supervisord pid  pid    nodaemon false             false    daemon       minfds 1024                    1024 minprocs 200                  200  supervisorctl  serverurl unix    tmp supervisor sock    UNIX socket  supervisord    unixhttpserver   file    serverurl http   127 0 0 1 9001     HTTP     supervisord    program xx             xx        program xx  command  opt apache tomcat 8 0 35 bin catalina sh run          autostart true    supervisord           startsecs 10     10                       1  autorestart true                  unexpected true false     unexpected              startretries 3                 3 user tomcat                root priority 999             999         redirect_stderr true    stderr    stdout   false stdoutlogfilemaxbytes 20MB   stdout          50MB stdoutlogfilebackups   20   stdout            10   stdout                                     supervisord            stdout_logfile  opt apache tomcat 8 0 35 logs catalina out stopasgroup false     false                  stop         killasgroup false     false       kill                                                        include       include  files   relative directory   ini             ini        2                        supervisord conf                   include         supervisord conf        etc supervisor config d                    etc supervisor supervisord conf  include     etc supervisor conf d     include   include  files    etc supervisor config d   ini 3                program_name                      program program_name                            ping 127 0 0 1         supervisor       command php  home wwwroot site webshowu com artisan queue work redis   sleep 3   tries 3   daemon autostart true autorestart true user root numprocs 3 redirect_stderr true stdout_logfile  home wwwlogs worker1 log                                 Tomcat          program tomcat  command  opt apache tomcat 8 0 35 bin catalina sh run stdout_logfile  opt apache tomcat 8 0 35 logs catalina out autostart true autorestart true startsecs 5 priority 1 stopasgroup true killasgroup true 4 web              etc supervisor supervisord conf             inethttpserver    inet  TCP  server disabled default port 0 0 0 0 9001    ip_address port specifier    port iface  username user        default no username  open server   password 123       default no password  open server          9001                           supervisor        1   supervisor    c            supervisord  c  etc supervisor supervisord conf 2   supervisor supervisorctl shutdown 3     supervisor         supervisor                 supervisorctl reload 4                          supervisorctl update 5   supervisor             supervisorctl start supervisorctl start service_name         supervisorctl stop supervisorctl stop service_name         supervisorctl status  service_name                     supervisorctl restart supervisorctl restart service_name",
        "objectID": "post/supervisor安装与相关配置",
        "date": "2018-11-20T22:53:20.000Z",
        "tags": [
            "supervisor"
        ],
        "categories": [
            "工具"
        ]
    },
    {
        "title": "Surrounded Regions",
        "uri": "post/Surrounded-Regions",
        "content": "LeetCode 130  Surrounded Regions Given 2D board containing  X   O   the letter O   capture regions surrounded  X   region captured flipping  O s  X s surrounded region  example  X X X X X O O X X X O X X O X X running function  board be  X X X X X X X X X X X X X O X X       O  4     X    O   X        O    O                      O        X        DFS       O        DFS           O       O           O   1       class Solution   public  void solve vector   board    int i j  int row board size    if  row  return  int col board 0  size    for i 0 i1  check board i col 1 row col     for j 1 j 11  check board row 1 j row col     for i 0 i   vec int i int j int row int col   if veci   O    veci  1   if i 1  check vec i 1 j row col   if j 1  check vec i j 1 row col   if i 1   grid    int row   grid size        if row    0  return 0  int col   grid 0  size        if col    0  return 0  int count   0         for int   0 i    grid int row int col int x int y   if x   row    y    col    gridx     0   return          gridx    0          DFS grid row col x y 1         DFS grid row col x y 1   DFS grid row col x 1 y   DFS grid row col x 1 y        419  Battleships Board Given 2D board  count battleships it  battleships represented  X s  empty slots represented    s  may assume following rules  receive valid board  made battleships empty slots  Battleships placed horizontally vertically  words  made shape 1xN  1 row  N columns  Nx1  N rows  1 column   N size  least one horizontal vertical cell separates two battleships   no adjacent battleships  Example  X  X    X    X above board 2 battleships  Invalid Example     X XXXX    X invalid board will not receive   battleships will always cell separating them  Follow up  one pass  using O 1  extra memory without modifying value board       DFS                                                                                                                  X                                                                                                                  class Solution   public  int countBattleships vector   board    int m   board size     m  0  return 0  int n   board 0  size    int count 0   int i 0  0    boardi 1     X   continue   j   0    boardi     X   continue  count      return count          DFS   class Solution   public  int m  n  int go4     1  0     1  0    0  1    0   1    void dfs vector   board  int i  int j     i   m    j   n    boardi         return  boardi                                        visit    int d   0  d    board     board empty    return 0  m   board size    n   board 0  size    int result   0   int   0    m    i   int j   0  j   n    j   boardi     X       result  dfs board  i  j     return result",
        "objectID": "post/Surrounded-Regions",
        "date": "2017-06-24T20:26:12.000Z",
        "tags": [
            "DFS",
            "Flood Fill",
            "Graph"
        ],
        "categories": [
            "解题报告"
        ]
    },
    {
        "title": "sync/atomic包解析",
        "uri": "post/sync-atomic包解析",
        "content": "",
        "objectID": "post/sync-atomic包解析",
        "date": "2019-01-21T15:31:45.000Z",
        "tags": null
    },
    {
        "title": "sync.Cond源码剖析",
        "uri": "post/sync-Cond源码剖析",
        "content": "",
        "objectID": "post/sync-Cond源码剖析",
        "date": "2019-02-13T20:11:24.000Z",
        "tags": [
            "Cond"
        ],
        "categories": [
            "Go源码"
        ]
    },
    {
        "title": "sync.Map源码剖析",
        "uri": "post/sync-Map源码剖析",
        "content": "Go 1 6       map     goroutine                        go 1 6         map                         go 1 9                       struct                   sync Map                                    sync Map             map    faq       map     goroutine                              goroutine      goroutine                      map                    package main func main     m    make map int int  go func       _   m 1        go func       m 2    2       select             fatal error  concurrent map read map write       Go      hashmap_fast go L118           hashWriting                                  hashmap go L542 h flags    hashWriting hashmap go L628                                                                                 map                      race       Go 1 9                        map                map    goroutine       Go  blog Go maps action                  var counter   struct  sync RWMutex m map string int   m  make map string int        struct map                                sync RWMutex            Map  package RegularIntMap type RegularIntMap struct   sync RWMutex internal map int int   func NewRegularIntMap    RegularIntMap   return  RegularIntMap  internal  make map int int       func  rm  RegularIntMap  Load key int   value int  ok bool    rm RLock           result  ok    rm internal key  rm RUnlock   return result  ok   func  rm  RegularIntMap  Delete key int    rm Lock   delete rm internal  key  rm Unlock     func  rm  RegularIntMap  Store key  value int    rm Lock   rm internal key    value rm Unlock                              Go         sync RWMutex               CPU                                       8   16                           CPU                     sync RWMutex                        Sync Map  Go                            CPU                sync RWMutex                                            CPU          8 16                         reflect New   map                    sync RWMutex   atomic AddUint32      cpu            sync Map   hashmap                      golang                          hashmap                golang sync map                                                                                    orcaman              concurrent map java ConcurrentHashMap                                                                    C                               CAS                                                    An overview sync Map       cpu           cache contention reflect New sync RWMutex atomic AddUint32     golang      cpu                       golang sync map                                              golang sync map  map                                          map         map   read map               dirty map         read map                   read map                                    dirty map    dirty map   read map                       map                              sync Map                          sync Map       type Map struct          dirty                 mu Mutex                                                                entries   entry      unexpunged            entry                dirty    read atomic Value    readOnly    dirty       map   entries       entries   read                 dirty   read                              read                    read          dirty                             dirty                             read                 dirty map interface    entry      Map   entry      read      entry     dirty          misses 1      misses    dirty           dirty   read    dirty miss        dirty      misses int                     read mu dirty misses  read        type readOnly struct   m map interface    entry amended bool      Map dirty      Read         true        map    read    dirty   map          value         map   value      value   map      dirty                    read    key          CAS                   key    dirty   cache   value        read     value      read    key           sync map    miss cache     miss      dirty         dirty  read    dirty        dirty    read      read      dirty       dirty             key     read       dirty       key                          read     read     read    entry    p  nil         read    nil     dirty   read          read dirty readOnly m Map dirty        entry        p         value  read dirty      key                                                map  key                                           read  key readOnly  key                 value                      dirty   read                         dirty         read                             atomic Value Load                                  dirty               key entry  read dirty    entry                     read dirty    entry              key  map     map          key   read       dirty           entry     key    entry        update         read          dirty          read      dirty  dirty                Mutex                             dirty                 expunged key    read  atomic CompareAndSwapPointer          expunged   key   dirty    Store Delete          m read Load    readOnly    ",
        "objectID": "post/sync-Map源码剖析",
        "date": "2019-01-19T21:11:24.000Z",
        "tags": [
            "sync"
        ],
        "categories": [
            "Go源码"
        ]
    },
    {
        "title": "tar命令详解",
        "uri": "post/tar命令详解",
        "content": "Linux                                          4 7   Linux          gzip    GNU                  Unix compress                      gzip         gzcat                  gunzip         gzip                                                  zip                         Unix Linux          Unix Linux            tar    tar                                         Linux                 tar       tar function  options  object1 object2     function     tar                    tar                       tar                                                  tar  cvf test tar test  test2            test tar        test test2               tar  tf test tar   tar  test tar                     tar  xvf test tar        tar  test tar        tar                                         tar                        Linux                                           tgz      gzip    tar        tar  zxvf filename tgz",
        "objectID": "post/tar命令详解",
        "date": "2018-11-15T18:44:27.000Z",
        "tags": [
            "Shell"
        ],
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "TCP差错控制浅析",
        "uri": "post/TCP差错控制浅析",
        "content": "TCP                                                                     ACK                          TCP                                                                 TCP                                               1                                 TCP                                                ACK           ACK                     TCP                     TCP                 ACK                                                    ACK  TCP   32 ACK               ACK   1           SACK       selective acknowledgment  SACK SACK     ACK                SACK                   SACK   TCP                                                 ACK                      ACK                                                                                                                   ACK                  TCP                                                                    TCP                                                        ACK                                                                                     ACK           RTO            TCP        TCP                                 TCP RTO                   RTT    TCP          RTO         ACK             ACK                         fast retransmission                        ACK                           RTO                     TCP                 TCP         TCP                  TCP            TCP                         TCP                                                        TCP                                                                                        TCP                                                ACK                                                                                                                   DoS       DoS                                                      TCP                             TCP             Karn                                               RTO",
        "objectID": "post/TCP差错控制浅析",
        "date": "2017-06-25T20:07:49.000Z",
        "categories": [
            "网络"
        ]
    },
    {
        "title": "TCP连接管理浅析",
        "uri": "post/TCP连接管理浅析",
        "content": "SOCKET    TCP           TCP IP                               TCP              TCP                         Seq    32       TCP                                 Ack    32    ACK    1            Ack Seq 1       6   URG ACK PSH RST SYN FIN          URG      urgent pointer     ACK         PSH                    RST       SYN          FIN                        Ack      ACK        Ack    Req 1       TCP                 Three way Handshake        TCP                 3                        TCP                      TCP         socket         connect                    Client    SYN  1        seq J          Server Client  SYN_SENT     Server           Server          SYN 1  Client       Server    SYN ACK   1 ack J 1        seq K          Client        Server  SYN_RCVD           Client        ack   J 1 ACK   1          ACK  1 ack K 1          Server Server  ack   K 1 ACK   1              Client Server  ESTABLISHED            Client Server                                                   SYN          SYNSENT              SYN           SYNRCVD           SYN         SYN     ACK           SYN ACK           ESTABLISHED                                                                     client                                                       server                 server                    client                  client                               server                  client             client  CLOSED                server                                               connect                SYNSEND                                    SYNSEND             ESTABLISHED                SYN               SEQ        SYN                        SYN                                                           ACK    client   server        server           client           TCP           TCP                       four way handshake                     socket          close                TCP                                                FIN               FIN                                 TCP                      FIN                                                Client    FIN     Client Server      Client  FINWAIT1       FIN                       send                       Server  FIN      ACK Client         1  SYN     FIN        Server  CLOSEWAIT   Client   ACK     FINWAIT_2           Server    FIN     Server Client      Server  LAST_ACK           Client  FIN  Client  TIME_WAIT   2MSL     ACK Server           1 Server  CLOSED                                                            CLOSING                                               FIN                        ACK         FIN     CLOSING       FIN            ACK             FIN                                            close  SOCKET               FIN           CLOSING            SOCKET    TIME_WAIT    TCP                             FIN      ACK        TIME WAIT   TIMEWAIT     2MSL         TIME_WAIT       TCP                           4                     CLOSED       SYNSEND   ESTABLISH                                    ACK                 LASTACK    SOCKET          ACK      FIN       TIME_WAIT                ACK          segment          A   B       TCP                      IP                                IP          TCP                                                             TCP     TIMEWAIT               TIMEWAIT        MSL 2                   msl                   msl                             TCP                                 2MSL  MSL  maximum segment lifetime              IP                       IP            MSL RFC 1122    2      berkeley TCP       30           A  TIME _WAIT    2MSL         B    ACK   FIN     A      ACK    2MSL      A     B  FIN      B     ACK          2MSL  TIME_WAIT                   sysctl TIME_WAIT         HTTP 1 1                                           IME_WAIT          SO_REUSEADDR           TIMEWAIT                                                   TIMEWAIT                     TCP                    bind                                     2MSL        bind                   socket SO_REUSEADDR                     SO_LINGER SOLINGER      close TCP    SOLINGER   linger            lonoff  0 llinger 0     close TCP        TCP                         RST          TCP       TIMEWAIT                                  SOLINGER        SO_DONTLINGER    CLOSE_WAIT            close_wait                                             closesocket                                 COLSE_WAIT   socket                    FIN               FIN                   FIN                                   FIN                   COLSE_WAIT                                   close sockfd  shutdown sockfd how                               socket                 socket sockfd     socket                socket         socket        2              socket         close sockfd        fd   socket               1           1              1           FIN   TCP      shutdown sockfd SHUT_RDWR          fd   socket            FIN   TCP                                  socket                                         FIN               read  0                  close                 socket   ",
        "objectID": "post/TCP连接管理浅析",
        "date": "2017-06-25T20:08:22.000Z",
        "categories": [
            "网络"
        ]
    },
    {
        "title": "TCP连接中的RST",
        "uri": "post/TCP连接中的RST",
        "content": "RST   RST                  RST                                  RST        RST        ACK      TCP   RST                                                    connect   UDP                             ICMP               89 27       89   27     SYN       8888     27     89  SYN           89      RST                   89        socket    setsockopt SO_RCVTIMEO     recv      100ms     89  SYN   SYN     110ms     89                RST              listen                   rst                                               socket              TIME_WAIT        RST                                       RST                                                TCP                                           RST                                       TCP                        rst                                                              RST            shutdown close          FIN   RST           sleep       Ctrl C    FIN   RST           return exit 0  exit 1     FIN   RST              RST     RST                 RST   A    B     TCP     C     TCP   B  B       A   TCP     RST          RST                                 TCP                     C   A            RST         B     A                          SYN     B   A       OS                   B   A  RST                                                    A  B                         TCP          IP       IP                   C   A  B          IP  TCP    IP       IP           B      IP        A          IP      A                A                 OS windows linux    source port                                TCP                  A   B   B       B                     AB                       sequence   32      0 4294967296        windows  65535                  65537 4294967296 65535 65537                   RST      IP  TCP   40                                                                                   source port RST",
        "objectID": "post/TCP连接中的RST",
        "date": "2017-06-25T20:08:15.000Z",
        "categories": [
            "网络"
        ]
    },
    {
        "title": "TCP流量控制浅析",
        "uri": "post/TCP流量控制浅析",
        "content": "MTU MSS SMSS MTU maximum transmission unit                   MTU 1500    MSS maximum segment size         TCP                          TCP                TCP    MSS  MTU   IPv4 Header 20 Byte  TCP header 20 Byte     SMSS           MSS   MTU                    TCP              ACK   TCP   ACK                  TCP        ACK    ACK                                        TCP         ACK                       TCP        200ms      ACK      ACK                              2 1       2 ACK                             Nagle   TCP IP                                           ACK                  TCP                         SMSS      TCP IP        SMSS             Nagle                                Nagle                                         MSS                                      ACK                 MSS              FIN           TCP_NODELAY       nagle            TCP_CORK                     SMSS                                   ACK    200ms                      1   5   Nagle         ACK                                                             Nagle     TCP   ACK                    ACK       Nagle                                      Nagle   silly window syndrome SWS             SWS  nagle       SWS            Nagle                                                                         MSS                  Nagle TCP_NODELAY                Nagle                                                  TCP_NODELAY      Negale                                            Negale              TCP             ACK Nagle         ACK Nagle                               Nagle            ACK                                                       ACK                           ACK                  ACK                                        ACK                                CORK   TCP_CORK       CORK                CORK                                                          MTU                   200ms                    MTU                             TCPCORK                 CORK                                                 MTU                                     MTU                                      TCPCORK                                        Nagle   CORK     Nagle                                    TCP                                   CORK                                                   Nagle                      Nagle                        Side effect   Nagle                     Nagle                                                                                                                                           TCP_CORK             CORK   Nagle                           Nagle   CORK         Nagle                                CORK                                                                Nagle        socket            TCPNODELAY     CORK              TCPCORK          Nagle                  ACK         CORK                       CORK                        Nagle                                                                                                             1          40   20   IP  20   TCP                        nagle                          telnet                                      TCP          TCP                               41   IP                           TCP                  TCP                        TCP                                                           Nagle            RTT    ACK           delay ack      TCP                                                     1000                   1             TCP      4000            4000                                                              TCP                          1          TCP        1                    TCP                                                                                      Clark     Clark                                                                       ACK                                                                   TCP           TCP                                                                                                                                  500         TCP                 TCP         TCP                  TCP            TCP                         TCP                                                        TCP                                                    ACK    ack                  ACK ACK                          n  n            n 1               n 1        n                n 2 ACK              1 1024             1025 ACK          2049 3072           3072 ACK      1025 ACK         m          ACK                                           x              y m  x n                                                       TCP                                                ACK                                                                                                               TCP                                            0                                                                                       ACK                                             4            ACK             ACK                                     ACK                                                     ",
        "objectID": "post/TCP流量控制浅析",
        "date": "2017-06-25T20:07:40.000Z",
        "categories": [
            "网络"
        ]
    },
    {
        "title": "TCP协议头详解",
        "uri": "post/TCP协议头详解",
        "content": "TCP           TCP               TCP                TCP                            TCP            TCP           TCP          TCP       20           4n                    TCP        20                     1            2                         UDP      TCP                 2      4         0 2 32   1   2 32   4294967296          2 32   1           0          mod 2 32   TCP           TCP                                                                                                301         100                          301           400                          401                   401                     3      4                                B      A                  501       200      501 700     B      A      700         B    A         701   B    A             701              501    700   701                  32     4GB   4                                                    4        4     TCP           TCP                     TCP                                                       32     4               4                  15             60      TCP                 40      5      6                0     6                        6   11    6    URG  URGent   URG   1                                                                                                                               Control   C                          TCP                                                     URG 1               TCP               TCP                                                   Urgent Pointer          7    ACK  ACKnowlegment    ACK   1           ACK   0         TCP                     ACK 1  8    PSH  PuSH                                                            TCP         push          TCP PSH 1                    TCP  PSH 1                                                                            9    RST  ReSeT   RST   1    TCP                                           RST 1                        RST              10   SYN  SYNchronization                SYN   1 ACK   0                                      SYN   1  ACK   1    SYN  1                                   5 9            11   FIN FINis                      FIN   1                                  12     2        0 216  1                                                                                                                                               701      1 000       701                  1000           701   1700                    13      2                          UDP                   TCP        12               UDP                   4     17  6 TCP     6    5    UDP    TCP                                 IPv6               14       2         URG   1                                                                                TCP                                        15             40              TCP       20    TCP                   MSS  Maximum Segment Size   RFC 879     MSS        MSS    TCP                      TCP        TCP      MSS     TCP            TCP       TCP                      MSS                      TCP            MSS                TCP              40      TCP  20   IP  20                             IP          MSS                        TCP      1        IP              40     TCP       IP                        1 41                       TCP          IP                                          TCP                                MSS          IP               IP                                  MSS                          MSS                             MSS                                  MSS             MSS     536                             536  20          556                                       RFC 1323               SACK    RFC 2018                      TCP          16             64 K                                                                           3               S        TCP          16    16   S              14              2  16   14    1  2 30   1                 TCP                                         S   0           16        10                  4               4                             RTT                                                                                    RTT          TCP    2 32              PAWS  Protect Against Wrapped Sequence numbers           32      232                              TCP                          1 Gb s            35                                                                         Selective ACK       TCP                                             5 21            1   1000       1001   1500                         3001 3500       4501                                                                                                                                                                             L1   1501      R1  3001   3000                              1                           L2   3501      R2   4501       TCP                                   SACK      TCP       TCP            SACK                                                      TCP           SACK                                   40              4        32      4           ",
        "objectID": "post/TCP协议头详解",
        "date": "2017-06-25T20:01:54.000Z",
        "tags": null,
        "categories": [
            "网络"
        ]
    },
    {
        "title": "TCP拥塞控制浅析",
        "uri": "post/TCP拥塞控制浅析",
        "content": "cwnd congestion window                                                                                                                                                                                   slow start         congestion avoidance         fast recovery                                                                                                                  cwnd 1 SMSS                      ACK         ACK          min N SMSS    cwnd     N                     ACK         SMSS           ACK       ACK        ACK               ACK    cwnd     2       2                       ACK cwnd  2 4  4 8                   cwnd                 ssthresh        TCP                                                                                    cwnd                RTT          cwnd 1              cwnd                                                                                                      TCP           ssthresh   cwnd       cwnd   SMSS                  ACK      3   ACK                  TCP                      3                                                                                                                                                    ssthresh         cwnd   ssthresh                 TCP                                     TCP                        ACK     ACK                        ACK            TCP       ACK                 ACK    ACK          CWND                            ACK                            ACK   ACK       ACK                                            ACK cwnd                          ACK      http   www cnblogs com alec1312 p 5848890 html",
        "objectID": "post/TCP拥塞控制浅析",
        "date": "2017-06-25T20:07:31.000Z",
        "categories": [
            "网络"
        ]
    },
    {
        "title": "TCP粘包问题",
        "uri": "post/TCP粘包问题",
        "content": "TCP transport control protocol                                                   socket                                     Nagle                                                                                     UDP user datagram protocol                                              UDP                 skbuff                        UDP     UDP                                                                   TCP                                      UDP           TCP                        tcp                                                            http                                         ok                                                    hello give sth yourself   Don t give sth yourself                               hello give sth yourselfDon t give sth yourself                                                                                                        Nagle     TCP    Negle              Nagle    const char chOpt   1  int nErr   setsockopt msocket  IPPROTOTCP  TCP_NODELAY   chOpt  sizeof char    if nErr     1    TRACE   setsockopt   error n   WSAGetLastError     return                   TCP                                                Nagle         TCP                        PUSH   PUSH TCP                                                                   PUSH                           Server                                                PUSH         TCP                        TCP                                 PUSH                                                                                                                                                                        TCP                      PACKAGEHEAD pPackageHead    PACKAGEHEAD       char PackageHead 1024   int headLen   sizeof PACKAGE_HEAD   int packgeContextLen   strlen packageContext     packageContext       pPackageHead  nDataLen   packgeContextLen         char packge    char malloc headLen   packgeContextLen            memset packge  0  headLen   packgeContextLen   char packgeCpy    char memcpy packge   char   pPackageHead  headLen         packgeCpy    headLen  packge    char memcpy packgeCpy   char  packageContext  packgeContextLen          int ret   0  ret   send m_hSocket  packge  headLen   packgeContextLen  0          ret    SOCKET_ERROR    ret    0    return ret          char PackageHead 1024   char PackageContext 1024 20   int len  PACKAGEHEAD  pPackageHead    PACKAGEHEAD       while  m_bClose    false     memset PackageHead  0  sizeof PACKAGE_HEAD    len   ReceiveSize mTcpSock   char  PackageHead  sizeof PACKAGEHEAD           if  len    SOCKET_ERROR     break    if len    0    break    pPackageHead    PACKAGE_HEAD   PackageHead  memset PackageContext 0 sizeof PackageContext    if pPackageHead  nDataLen 0                      len   ReceiveSize m_TcpSock   char  PackageContext pPackageHead  nDataLen                               int ReceiveSize SOCKET m_hSocket  char  strData  int gLen    if strData    NULL  return ERR_BADPARAM  char  p   strData  int len   gLen  int ret   0  int returnlen   0  while  len   0    ret   recv  m_hSocket  p  iLen len   iLen returnlen  0    ret    SOCKET_ERROR    ret    0    return ret    len    ret  returnlen    ret    return returnlen             TCP                                      redis FTP              http   www cnblogs com liyux p 5594423 html",
        "objectID": "post/TCP粘包问题",
        "date": "2017-06-25T20:02:04.000Z",
        "tags": null,
        "categories": [
            "网络"
        ]
    },
    {
        "title": "TCP长连接详解",
        "uri": "post/TCP长连接详解",
        "content": "TCP                                                                Keepalive                          TCP socket                                           close   shutdown         send recv       select  SOCK_ERR                                                                                               ACK   ACK                                                 TCP keepalive   UNIX         SO_KEEPALIVE       TCP KeepAlive       UNIX     1            SO_KEEPALIVE                            TCP               2                     TCP                  keepalive probe             TCP                            ACK   2    TCP                         RST               ECONNRESET                                    TCP                          75              10           75                                                     ICMP    host unreachable                                                                                                  TCP         FIN        FIN                                               SO_KEEPALIVE       2         TCP                keepAlive   1  Setsockopt listenfd  SOLSOCKET  SOKEEPALIVE   void   keepAlive  sizeof keepAlive                       TCP Keepalive HOWTO                                           SOLTCP   TCPKEEPIDLE  TCPKEEPINTVL  TCPKEEPCNT      tcpkeepidle parameter specifies interval inactivity causes TCP generate KEEPALIVE transmission application requests them  tcpkeepidle defaults 14400  two hours        KeepAlive    TCP       tcpkeepintvl parameter specifies interval nine retries attempted KEEPALIVE transmission not acknowledged  tcpkeepintvl defaults 150  75 seconds        KeepAlive            TCPKEEPCNT option specifies maximum number keepalive probes sent  value TCPKEEPCNT integer value 1 n  n value systemwide tcp_keepcnt parameter           KeepAlive                 int keepIdle   6  int keepInterval   5  int keepCount   3  setsockopt listenfd  SOLTCP  TCPKEEPIDLE   void    keepIdle  sizeof keepIdle    setsockopt listenfd  SOLTCP TCPKEEPINTVL   void    keepInterval  sizeof keepInterval    setsockopt listenfd SOLTCP  TCPKEEPCNT   void    keepCount  sizeof keepCount         sockt             sockets                            setsockopt             etc sysctl conf     net ipv4 tcpkeepaliveintvl   20 net ipv4 tcpkeepaliveprobes   3 net ipv4 tcpkeepalivetime   60 keepalive             keep alive       socket             recv                       recv   socket                        buffer                 send            buffer    buffer              buffer       send                   keep alive                                                 keep alive                             tcp         keep alive                  keep alive  keepalive      SO_KEEPALIVE               SO_KEEPALIVE    2                                                                 keepalive                         colse     tcp                     tcp                                                 tcp                 keepalive          keepalive                                                                                                   Timer                                                                                                                           http   blog csdn net liujiakunit article details 9786303",
        "objectID": "post/TCP长连接详解",
        "date": "2017-06-25T14:21:22.000Z",
        "tags": null,
        "categories": [
            "网络"
        ]
    },
    {
        "title": "TCP中的四大定时器",
        "uri": "post/TCP中的四大定时器",
        "content": "http   blog csdn net ns_code article details 32343979        TCP   TCP     4                          2MSL                        TCP                                                                                                                                                                                                                                                                                                                                                                                    TCP                           TCP                                                                                                                                                                                              60                           60                                                                                                                                    TCP                               TCP                                                                                                   2     2                              75            10                                             2MSL    2MSL           TIME WAIT         2MSL           2MSL                    ACK",
        "objectID": "post/TCP中的四大定时器",
        "date": "2017-06-25T20:02:48.000Z",
        "categories": [
            "网络"
        ]
    },
    {
        "title": "TDD与BDD",
        "uri": "post/TDD与BDD",
        "content": "TDD   Test Driven Development          BDD   Behavior Driven Development                                          TDD  Test Driven Development TDD                                                                  TDD                                               TDD                    5                                                                                                                pass                                                             fail                                                                         TDD                  TDD      routine               routine                                         Table Driven                     import  github com stretchr testify assert  func TestMod t  testing T    tests      struct   int b int r int hasErr bool     a  42  b  9  r  6  hasErr  false    a   1  b  9  r  8  hasErr  false    a   1  b   9  r   1  hasErr  false    a  42  b  0  r  0  hasErr  true     row  test    range tests   r  err    Mod test a  test b  test hasError   assert Error t  err   row  d   row  continue   assert NoError t  err   row  d   row  assert Equal t  test r  r   row  d   row                                                          func Mod a  b int   r int  err error    b    0   return 0  fmt Errorf  mod zero     return a b  nil                   case         TDD       TDT                                  Go                                                 Sqrt               Sqrt calculate square root non negative float64    number max error 10  9  simplicity  don t    discard part smaller 10  9  func Sqrt x float64  float64   x   0 000000001    erro  0 000000001  ts desc                         struct                                 struct      desc string                                           require     assert      require                              BDD  Behavior Driven Development                                 QA                    TDD          TDD                               bugeature File                   QA BA                                            BA                           BDD                                                                                                                             Feature            Gherkin    Gherkin       Given when then               User Story                                                            Feature Scenario Given When And Then            Gherkin                                                                                         feature            background            scenario                  scenario_outline                      examples            given                        when                                                      BDD                         StringSliceEqual                         false           nil      nil    false                               false      true                   func StringSliceEqual a  b   string  bool   len a     len b    return false    a    nil      b    nil    return false   i  v    range   v    b i    return false     return true         import    testing     github com smartystreets goconvey convey    func TestStringSliceEqual t  testing T    Convey  TestStringSliceEqual   t  func     Convey  should return true when    nil    b    nil   func          string  hello    goconvey   b      string  hello    goconvey   So StringSliceEqual a  b   ShouldBeTrue     Convey  should return true when    nil    b    nil   func     So StringSliceEqual nil  nil   ShouldBeTrue     Convey  should return false when    nil    b    nil   func          string nil  b      string   So StringSliceEqual a  b   ShouldBeFalse     Convey  should return false when    nil    b    nil   func          string  hello    world   b      string  hello    goconvey   So StringSliceEqual a  b   ShouldBeFalse            TDD BDD             BDD                    BDD                        BDD    TDD                BDD                                                                                                         BDD                                   BDD            BDD         design    TDD         test     TDD vs BDD                                                                                                                                       BDD                                 BDD                                              BDD                          Selenium Selenium      Web          Selen",
        "objectID": "post/TDD与BDD",
        "date": "2019-12-17T20:23:27.000Z",
        "tags": [
            "TDD",
            "BDD"
        ],
        "categories": [
            "软件工程"
        ]
    },
    {
        "title": "time-rate源码剖析",
        "uri": "post/time-rate源码剖析",
        "content": "Allow Allow        lim Allow   bool   lim AllowN time Now    1    lim reserveN now  n  0  ok    reserveN             Allow shorthand AllowN time Now    1   func  lim  Limiter  Allow   bool   return lim AllowN time Now    1       AllowN reports whether n events may happen time now     Use method intend drop   skip events exceed rate limit     Otherwise use Reserve Wait  func  lim  Limiter  AllowN now time Time  n int  bool   return lim reserveN now  n  0  ok   Reserve    reserveN helper method AllowN  ReserveN  WaitN     maxFutureReserve specifies maximum reservation wait duration allowed     reserveN returns Reservation  not  Reservation  avoid allocation AllowN WaitN  func  lim  Limiter  reserveN now time Time  n int  maxFutureReserve time Duration  Reservation     reserveN                       lim mu Lock             Inf           true  lim limit    Inf   lim mu Unlock   return Reservation  ok  true  lim  lim  tokens  n  timeToAct  now      now  last  tokens    lim advance now                            Calculate remaining number tokens resulting request  tokens    float64 n     Calculate wait duration var waitDuration time Duration                          tokens maxElapsed   elapsed   maxElapsed      Calculate new number tokens  due time passed  delta    lim limit tokensFromDuration elapsed  tokens    lim tokens   delta burst    float64 lim burst   tokens   burst   tokens   burst   return now  last  tokens      durationFromTokens unit conversion function number tokens duration    time takes accumulate rate limit tokens per second  func  limit Limit  durationFromTokens tokens float64  time Duration   seconds    tokens   float64 limit  return time Nanosecond   time Duration 1e9 seconds       tokensFromDuration unit conversion function time duration number tokens    accumulated during duration rate limit tokens per second  func  limit Limit  tokensFromDuration d time Duration  float64      Split integer fractional parts ourself minimize rounding errors     golang org issues 34861  sec    float64 d time Second    float64 limit  nsec    float64 d time Second    float64 limit  return sec   nsec 1e9   Wait    WaitN blocks until lim permits n events happen     returns error n exceeds Limiter s burst size  Context    canceled  expected wait time exceeds Context s Deadline     burst limit ignored rate limit Inf  func  lim  Limiter  WaitN ctx context Context  n int   err error    lim mu Lock   burst    lim burst limit    lim limit lim mu Unlock   n   burst    limit    Inf   return fmt Errorf  rate  Wait n  d  exceeds limiter s burst  d   n  lim burst       Check ctx already cancelled select   case burst   tokens   burst      update state r lim last   r lim tokens   tokens r timeToAct    r lim lastEvent   prevEvent    r timeToAct Add r limit durationFromTokens float64  r tokens     prevEvent Before now    r lim lastEvent   prevEvent     return                 go rate waitN     context            5    token             g1   token g2 g3   token    rate       token  g2 g3     wait      token       g2  g3                       token       g2  5s  g3     10s         context     g2       g3      10s      g2           rate waiter         go rate           go rate         allow        wait reserve        reserve   reserveN      goroutine                  wait       Reserve     func reserveBug     l    rate NewLimiter 1  1  index    0  index   10  index     wg Add 1  go func     r    l ReserveN time Now    1  time Sleep 200   time Millisecond  r Cancel   wg Done         wg Wait   r    l ReserveN time Now    1  fmt Println  reserve need wait     r Delay              go rate      wait  timer  heap   waiter            waiter     timer   reset                          token                                       rate allow                  new         token    chan          https   www cnblogs com wangao1236 p 10899442 html http   xiaorui cc 2019 06 28 golang rate E6 97 A0 E6 B3 95 E5 BB B6 E8 BF 9F E9 87 8D E6 8E 92 E7 9A 84bug",
        "objectID": "post/time-rate源码剖析",
        "date": "2019-11-04T14:01:16.000Z",
        "tags": [
            "Go"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "time包解析(1.11)",
        "uri": "post/time包解析-1-13",
        "content": "Time Format Time Parse                Mon Jan 2 15 04 05 MST 2006    Unix   1136239445   MST    GMT 0700               01 02 03 04 05PM  06  0700                                  ANSIC StampMicro Kitchen                             Format Parse                                     0                 0                                                    Unix             0    0                    0              0    9                    9               0                                                                                       0700  hhmm  07 00  hh mm  07  hh              Z   ISO 8601       UTC    Z              Z0700 Z  hhmm Z07 00 Z  hh mm Z07 Z  hh           Mon   Monday            Jan   January                                        Parse          Time Format                                  RFC822 RFC850 RFC1123                  UTC      UTC                RFC           GMT                    RFC1123Z   RFC1123   RFC3339          RFC3339 RFC822 RFC822Z RFC1123 RFC1123Z            time Parse           RFC          RFC3339Nano                             const   ANSIC    Mon Jan _2 15 04 05 2006  UnixDate    Mon Jan _2 15 04 05 MST 2006  RubyDate    Mon Jan 02 15 04 05  0700 2006  RFC822    02 Jan 06 15 04 MST  RFC822Z    02 Jan 06 15 04  0700              RFC822 RFC850    Monday  02 Jan 06 15 04 05 MST  RFC1123    Mon  02 Jan 2006 15 04 05 MST  RFC1123Z    Mon  02 Jan 2006 15 04 05  0700              RFC1123 RFC3339    2006 01 02T15 04 05Z07 00  RFC3339Nano    2006 01 02T15 04 05 999999999Z07 00  Kitchen    3 04PM            Stamp    Jan _2 15 04 05  StampMilli    Jan _2 15 04 05 000  StampMicro    Jan _2 15 04 05 000000  StampNano    Jan _2 15 04 05 000000000                                                            second    time Second fmt Print int64 second time Millisecond      prints 1000                     seconds    10 fmt Print time Duration seconds  time Second     prints 10s const   Nanosecond Duration   1 Microsecond   1000   Nanosecond Millisecond   1000   Microsecond Second   1000   Millisecond Minute   60   Second Hour   60   Minute   func func After d Duration            underscore represents space pad  date one digit  do  Spaces               0  indicates zero padding single digit values  do  Zeros              value already right width  padding not used     instance  second  05 reference time  value 39     so doesn t need padding  minutes  04  06  does  do  Suppressed pad    04 05    06 39      predefined constant Unix uses underscore pad day     Compare simple starter example  do  Unix   time UnixDate   Sat Mar 7 11 06 39 PST 2015      hour reference time 15  3PM  layout express    either way  value morning    time  show one format string  Lower case too  do  AM PM    3PM  3pm  15h    11AM  11am  11h      When parsing  seconds value followed decimal point    digits  taken fraction second even    layout string does not represent fractional second     add fractional second time value used above  t  err   time Parse time UnixDate   Sat Mar 7 11 06 39 1234 PST 2015   err    nil   panic err       does not appear output layout string does not contain    representation fractional second  do  No fraction   time UnixDate   Sat Mar 7 11 06 39 PST 2015      Fractional seconds printed adding run 0s 9s    decimal point seconds value layout string     layout digits 0s  fractional second specified    width  Note output trailing zero  do  0s fraction    15 04 05 00000    11 06 39 12340      fraction layout 9s  trailing zeros dropped  do  9s fraction    15 04 05 99999999    11 06 39 1234     func   Time  GobDecode func  t  Time  GobDecode data   byte  error GobDecode   gob GobDecoder    func  Time  GobEncode func  t Time  GobEncode      byte  error  GobEncode   gob GobEncoder    func  Time  Hour func  t Time  Hour   int     t              0 23   func  Time  ISOWeek func  t Time  ISOWeek    year  week int       t   ISO 9601                   1 53  1 1  1 3              12 29  12 31              func  Time  func  t Time  In loc  Location  Time In    loc                  Time   loc nil panic  ffunc  Time  IsZero func  t Time  IsZero   bool IsZero  t    Time       January 1  year 1  00 00 00 UTC  func  Time  Local func  t Time  Local   Time Local                     Time  func  Time  Location func  t Time  Location    Location Location  t          func  Time  MarshalBinary func  t Time  MarshalBinary      byte  error  MarshalBinary   encoding BinaryMarshaler    func  Time  MarshalJSON func  t Time  MarshalJSON      byte  error  MarshalJSON   json Marshaler                 RFC 3339                            func  Time  MarshalText func  t Time  MarshalText      byte  error  MarshalText   encoding TextMarshaler         RFC 3339                            func  Time  Minute func  t Time  Minute   int   t                0  59   func  Time  Month func  t Time  Month   Month      t           func  Time  Nanosecond func  t Time  Nanosecond   int   t                 0  999999999   func  Time  Round func  t Time  Round d Duration  Time     t                Time              d                 t           d                 ",
        "objectID": "post/time包解析-1-13",
        "date": "2018-12-21T13:23:32.000Z",
        "tags": [
            "Go标准库"
        ],
        "categories": [
            "Go标准库"
        ]
    },
    {
        "title": "top和ps和pgrep命令详解",
        "uri": "post/top和ps和pgrep命令详解",
        "content": "ps                    process              ps             ps                    ps                                       ID Process ID PID            TTY         CPU    Linux      GNU ps    3             Unix               BSD               GNU                Unix                            ps                                    Linux                                                                 ef        f                                        l                BSD         BSD    ps            BSD        l         ps l F UID PID PPID PRI NI VSZ RSS WCHAN STAT TTY TIME COMMAND 0 500 3081 3080 20 0 4692 1432 wait Ss pts 0 0 00  bash 0 50051043081 20 04468 844  R  pts 0 0 00psl                  Unix                       VSZ                KB     RSS                 STAT                            BSD   l                 STAT           Unix                                   Unix  S                                        GNU       GNU    Unix BSD             GNU                    forest                 ASCII                                 o          ID       ID  ps                                      top ps                                                                        ps           top           top   ps                                                                                   3     1      5      15                                       1                15                        Linux                                                                                               2                           top              task                                                      CPU      top                                  CPU                                                                                                                                     ps               top          CPU          top                               top          top      f                  d            q    top    top                                          pgrep                 ID",
        "objectID": "post/top和ps和pgrep命令详解",
        "date": "2017-09-09T20:50:48.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "TP50、TP90、TP99、TP999解释",
        "uri": "post/TP50、TP90、TP99、TP999解释",
        "content": "TP Top Percentile Top                             TP50 TP90 TP99                  50  90  99          TP99                          TP999                                            10ms 1000ms 100ms 2ms           TP99 4     99      4 0 99        4       4          1000ms    TP99    1000ms        TP90      90",
        "objectID": "post/TP50、TP90、TP99、TP999解释",
        "date": "2019-06-30T16:00:41.000Z",
        "categories": [
            "杂谈"
        ]
    },
    {
        "title": "typedef和define的区别",
        "uri": "post/typedef和define的区别",
        "content": "typedef define                                                   1          define C                                                                                          defme PI 3 1415926       area PI r r    PI      3 1415926          area 3 1415926 r i      defme      9   g                         typedef               typedef                                                   typedef     typedefint INTEGER       INTEGER   int                INTEGER a  b   typedef                                                       typedef int a 10     a             10      a      a s1 S2       int sl 10  s2 10     typedef void    p  void    p       void         2        typedef                       int char             struct                     typedef int  PF   const char  const char                     PF         int    const char    typedef                                    REAL                       typedef long double REAL     long double      typedef          typedef double REAL  double          typedef        typedef float REAL    define                              3           defme                                   typedef                  c void fun      define int   void gun               A                    typedef           A            typedef     4                             c  defme INTPTR1 int  typedefint  INTPTR2  INTPTR1 p1 p2  INTPTR2 p3 p4    INTPTR1 pl p2 INTPTR2 p3 p4             INTPTR1 p1 p2          int  p1 p2                p1       P2  INTPTR2 p3 p4   INTPTR2                          p3 P4            int  p1  P2                                    typedef                              c  define INTPTR1 int  typedef int  INTPTR2  int a 1  int b 2  int c 3  const INTPTR1 p1  a  const INTPTR2 p2  b  INTPTR2 const p3  c    const INTPTR1 p1  p1              p1   p1        p1          const INTPTR2 p2   INTPTR2             const                  p2           p2              p2           INTPTR2 const p3",
        "objectID": "post/typedef和define的区别",
        "date": "2017-09-05T11:32:25.000Z",
        "categories": [
            "C++"
        ]
    },
    {
        "title": "types from different packages 问题浅析",
        "uri": "post/types-from-different-packages-问题浅析",
        "content": "package main var X interface   type T struct   func F     type T struct   X   T     func G     type T struct   _   X  T    func main     F   G",
        "objectID": "post/types-from-different-packages-问题浅析",
        "date": "2019-07-16T14:44:54.000Z",
        "tags": [
            "Go",
            "interface"
        ],
        "categories": [
            "Go"
        ]
    },
    {
        "title": "UDP协议详解",
        "uri": "post/UDP协议详解",
        "content": "UDP  IP                                         UDP        UDP                                                             UDP                                                 UDP           UDP                        IP  UDP                                            UDP      UDP                     UDP  IP     UDP                                  UDP                                      UDP    IP   IP                  IP              UDP    IP     IP                     IP      UDP                                                      IP                                                             UDP          UDP                        UDP         8     TCP 20                             UDP                                                                 UDP                         UDP         UDP                                                                                                  UDP                          8      5 5                                  1                             0   2                               3     UDP              8          4        UDP                                     Pseudo Header      TCP      UDP                     IP       IP    IP         TCP   UDP          12                                                                UDP           IP                    IP           IP        UDP                                               UDP           16         UDP                                              16                             UDP                UDP                             16                1                     UDP",
        "objectID": "post/UDP协议详解",
        "date": "2017-07-29T17:41:42.000Z",
        "categories": [
            "网络"
        ]
    },
    {
        "title": "umask命令解析",
        "uri": "post/umask命令解析",
        "content": "umask                                                       umask               mode                    umask                          umask             p                     S                                   umask                                                                       umask u   g w  o rwx                                                                      umask   chmod            chmod                             umask                              umask                      chmod                  umask u   g w  o rwx                                    640   rw r          750 rwxr x                                                                          mode    umask                                  777       umask 022            755               666            644                         umask  s    s                     umask                                   0022",
        "objectID": "post/umask命令解析",
        "date": "2018-11-22T11:19:29.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "unordered_map操作总结",
        "uri": "post/unordered-map操作总结",
        "content": "empty  1  explicit unorderedmap   sizetype n      below     const hasher  hf   hasher    const keyequal  eql   keyequal    const allocatortype  alloc   allocatortype      explicit unorderedmap   const allocatortype  alloc    range  2  template unordered_map   InputIterator first  InputIterator last  size_type n      below     const hasher  hf   hasher    const keyequal  eql   keyequal    const allocatortype  alloc   allocatortype      copy  3  unorderedmap   const unorderedmap  ump    unorderedmap   const unorderedmap  ump  const allocator_type  alloc    move  4  unorderedmap   unorderedmap   ump    unorderedmap   unorderedmap   ump  const allocator_type  alloc    initializer list  5  unorderedmap   initializerlist il  size_type n      below     const hasher  hf   hasher    const keyequal  eql   keyequal    const allocatortype  alloc   allocatortype             constructing unordered_maps  include  include  include typedef std  unordered_map stringmap  stringmap merge  stringmap a stringmap b    stringmap temp a   temp insert b begin   b end     return temp    int main      stringmap first     empty stringmap second      apple   red     lemon   yellow          init list stringmap third      orange   orange     strawberry   red          init list stringmap fourth  second      copy stringmap fifth  merge third fourth       move stringmap sixth  fifth begin   fifth end        range std  cout il           unordered_set  operator   include  include  include template T cmerge  T a  T b    T t a   t insert b begin   b end     return t    int main      std  unordered_set first  second  third  first     red   green   blue       init list second     orange   pink   yellow       init list third   cmerge  first  second      move first   third     copy std  cout pair emplace   Args      args                        unordered_map                 args                                      unordered_map                      include  include  include int main      std  unordered_map mymap  mymap emplace   NCC 1701    J T  Kirk    mymap emplace   NCC 1701 D    J L  Picard    mymap emplace   NCC 74656    K  Janeway    std  cout iterator emplacehint   constiterator position  Args      args                           unordered_map                 args                                                                                           unordered_map                 insert    1  pair insert   const value_type  val     2  template pair insert   P   val     3  iterator insert   constiterator hint  const valuetype  val     4  template iterator insert   const_iterator hint  P   val     5  template void insert   InputIterator first  InputIterator last     6  void insert   initializer_list il          unordered_map                                  unordered_map                       unordered_map  insert  include  include  include int main      std  unordered_map myrecipe  mypantry      milk  2 0    flour  1 5    std  pair myshopping   baking powder  0 3   myrecipe insert  myshopping      copy insertion myrecipe insert  std  make_pair  eggs  6 0       move insertion myrecipe insert  mypantry begin    mypantry end        range insertion myrecipe insert      sugar  0 8    salt  0 1         initializer list insertion std  cout  include  include int main      std  unordered_map mymap       house   maison      car   voiture      grapefruit   pamplemousse      std  cout  include  include int main      std  unordered_map first      Star Wars   G  Lucas     Alien   R  Scott     Terminator   J  Cameron     second      Inception   C  Nolan     Donnie Darko   R  Kelly     first swap second   std  cout    first      auto  x  first  std  cout   x first          x second          std  cout   std  endl  std  cout    second      auto  x  second  std  cout   x first          x second          std  cout   std  endl  return 0      hash",
        "objectID": "post/unordered-map操作总结",
        "date": "2017-07-17T15:07:03.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "unordered_set操作总结",
        "uri": "post/unordered-set操作总结",
        "content": "empty  1  explicit unorderedset   sizetype n      below     const hasher  hf   hasher    const keyequal  eql   keyequal    const allocatortype  alloc   allocatortype      explicit unorderedset   const allocatortype  alloc    range  2  template unordered_set   InputIterator first  InputIterator last  size_type n      below     const hasher  hf   hasher    const keyequal  eql   keyequal    const allocatortype  alloc   allocatortype      copy  3  unorderedset   const unorderedset  ust    unorderedset   const unorderedset  ust  const allocator_type  alloc    move  4  unorderedset   unorderedset   ust    unorderedset   unorderedset   ust  const allocator_type  alloc    initializer list  5  unorderedset   initializerlist il  size_type n      below     const hasher  hf   hasher    const keyequal  eql   keyequal    const allocatortype  alloc   allocatortype             constructing unordered_sets  include  include  include template T cmerge  T a  T b    T t a   t insert b begin   b end     return t    int main      std  unordered_set first     empty std  unordered_set second     red   green   blue         init list std  unordered_set third     orange   pink   yellow         init list std  unordered_set fourth   second       copy std  unordered_set fifth   cmerge third fourth        move std  unordered_set sixth   fifth begin    fifth end         range std  cout il           unordered_set  operator   include  include  include template T cmerge  T a  T b    T t a   t insert b begin   b end     return t    int main      std  unordered_set first  second  third  first     red   green   blue       init list second     orange   pink   yellow       init list third   cmerge  first  second      move first   third     copy std  cout  include  include int main      std  unordered_set myset     Mercury   Venus   Earth   Mars   Jupiter   Saturn   Uranus   Neptune    std  cout  include  include int main      std  unordered_set myset     Mercury   Venus   Earth   Mars   Jupiter   Saturn   Uranus   Neptune    std  cout  include  include int main      std  unordered_set myset      red   green   blue     std  string input  std  cout   const_iterator   myset find  input        myset end     std  cout  include  include int main      std  unordered_set myset      hat    umbrella    suit      auto  x    hat   sunglasses   suit   t shirt       myset count x  0  std  cout equalrange   const keytype  k    pair equalrange   const keytype  k   const                                k     unordered_set                         k                                  unordered_set               const           const_                                  multiset  equal_range        bucket _count sizetype bucketcount  const noexcept         unordered_set                                                                                          maxloadfactor      rehash                    include  include  include int main      std  unordered_set myset     Mercury   Venus   Earth   Mars   Jupiter   Saturn   Uranus   Neptune    unsigned n   myset bucket_count    std  cout  include int main      std  unordered_set myset  std  cout  include  include int main      std  unordered_set myset      red    green    blue    yellow    purple    pink     unsigned nbuckets   myset bucket_count    std  cout  include  include int main      std  unordered_set myset     water   sand   ice   foam     const std  string  x  myset    std  cout  include int main      std  unordered_set myset  std  cout  include  include int main      std  unordered_set myset     New York    Paris    London    Hong Kong    Bangalore    Tel Aviv    std  cout  include  include int main      std  unordered_set myset  myset rehash 12   myset insert  office    myset insert  house    myset insert  gym    myset insert  parking    myset insert  highway    std  cout  include  include int main      std  unordered_set myset  myset reserve 5   myset insert  office    myset insert  house    myset insert  gym    myset insert  parking    myset insert  highway    std  cout    myset contains     const std  string  x  myset  std  cout         x  std  cout   std  endl  return 0",
        "objectID": "post/unordered-set操作总结",
        "date": "2017-07-17T15:06:46.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "UUID算法浅析",
        "uri": "post/UUID算法浅析",
        "content": "UUID UUID    universally unique identifier            128                      GUID                                                                   UUID                                                    UUID                                       UUID     Unix Linux           uuidgen         UUID       uuidgen 7d976a86 8414 11e7 8ac3 6c92bf136d47 UUID 128         16              32                      8 4 4 4 12      123e4567 e89b 12d3 a456 426655440000 xxxxxxxx xxxx Mxxx Nxxx xxxxxxxxxxxx UUID         UUID                                                                                                                                                                              MAC                                                       UUID     RFC 4122   5            1      MAC       1  48   MAC   60                   1582 10 15   UTC              RFC4122                 3400             libuuid                             5236     2      MAC        POSIX UID GID DCE        2   1                                   32                     POSIX      UID GID     POSIX                 3             MD5          3                                 UUID      UUID   URL            4                    UUID                 128                      4UUID     2 122     5 3x10 36        5             SHA1          3       SHA1        160bit  MD5         128            1  2           MAC          MAC       UUID        MAC                                                 4              UUID                                           2 71x10 18 UUID  50               UUID                                 go uuid                                 RFC4122                                4           package main import    fmt   github com satori go uuid    func main        Creating UUID Version 4 u1    uuid NewV4   fmt Printf  UUIDv4   s n   u1     Parsing UUID string input u2  err    uuid FromString  6ba7b810 9dad 11d1 80b4 00c04fd430c8   err    nil   fmt Printf  Something gone wrong   s   err    fmt Printf  Successfully parsed   s   u2       http   zablog me 2017 08 18 github_go uuid",
        "objectID": "post/UUID算法浅析",
        "date": "2019-06-30T16:48:48.000Z",
        "categories": [
            "算法"
        ]
    },
    {
        "title": "vector操作总结",
        "uri": "post/vector操作总结",
        "content": "vector        string           default  1  explicit vector  const allocatortype  alloc   allocatortype     fill  2  explicit vector  size_type n   vector  sizetype n  const valuetype  val  const allocatortype  alloc   allocatortype     range  3  template vector  InputIterator first  InputIterator last  const allocatortype  alloc   allocatortype     copy  4  vector  const vector  x   vector  const vector  x  const allocator_type  alloc   move  5  vector  vector   x   vector  vector   x  const allocator_type  alloc   initializer list  6  vector  initializer_list il  const allocatortype  alloc   allocatortype            constructing vectors  include  include int main         constructors used order described above  std  vector first     empty vector ints std  vector second  4 100      four ints value 100 std  vector third  second begin   second end        iterating second std  vector fourth  third      copy third    iterator constructor used construct arrays  int myints      16 2 77 29   std  vector fifth  myints  myints   sizeof myints    sizeof int     std  cout   iterator   fifth begin       fifth end      it  std  cout il        include  include int main      std  vector foo  3 0   std  vector bar  5 0   bar   foo  foo   std  vector    std  cout  include int main      std  vector myvector  5   int  p   myvector data     p   10    p   p   20  p 2    100  std  cout    swap x      clear x reallocating      include  include int main      std  vector myvector  myvector push_back  100   myvector push_back  200   myvector push_back  300   std  cout iterator emplace  const_iterator position  Args      args                                     args                                               vector                 vector                    vector                                             list forward_list                               args  allocator_traits    construct                insert                    emplaceback                          args  allocatortraits    construct               insert                                  emplace        insert             include  include int main      std  vector myvector    10 20 30   auto   myvector emplace   myvector begin   1  100    myvector emplace   it  200    myvector emplace   myvector end    300    std  cout void emplace_back  Args      args                                      args                       args  allocatortraits    construct                pushback                       include  include int main      std  vector myvector    10 20 30   myvector emplace_back  100   myvector emplace_back  200   std  cout bool operator    const vector  lhs  const vector  rhs    2  template bool operator    const vector  lhs  const vector  rhs    3  template bool operator  lhs  const vector  rhs    4  template bool operator  lhs  const vector  rhs    5  template bool operator   const vector  lhs  const vector  rhs    6  template bool operator    const vector  lhs  const vector  rhs        include  include int main      std  vector foo  3 100      three ints value 100 std  vector bar  2 200      two ints value 200  foo  bar  std  cout bar  std  cout  bar  std  cout void swap  vector  x  vector  y     x    y                                                                                                                                                     swap  vector overload   include  include main      unsigned int i  std  vector foo  3 100      three ints value 100 std  vector bar  5 200      five ints value 200 foo swap bar   std  cout   iterator   foo begin    it  foo end      it  std  cout   iterator   bar begin    it  bar end      it  std  cout          it  std  cout     n   return 0",
        "objectID": "post/vector操作总结",
        "date": "2017-07-15T11:56:07.000Z",
        "categories": [
            "STL"
        ]
    },
    {
        "title": "Visual Studio中debug和release版本的区别",
        "uri": "post/Visual-Studio中debug和release版本的区别",
        "content": "Debug   Release              VC                                             Debug Release                                         MY_ABC               VC          Debug             Release           K  M        DLL                    ATL   Debug Release   DLL                   MFC       MFC42D DLL      Release    MFC42 DLL   Release             MFC         MFC Release                   Debug                         MFC        MFC Debug             Debug Release                   Debug Release     Debug Release                          Debug                                                                  Release                                                                                            Debug Release                     MSDN           Debug Release                                 Od  D  _DEBUG   Gm  RTC1  MDd  Fo Debug     ZI       OUT  D  MyProject logging Debug OptionTest dll   INCREMENTAL Release          O2  GL  D  NDEBUG   FD  MD  Fo Release     Zi        OUT  D  MyProject logging Release OptionTest dll   INCREMENTAL NO Debug      MDd  MLd    MTd   Debug runtime library                 Od         D  DEBUG       define DEBUG                 assert     ZI    Edit continue                           GZ             Gm                   Release      MD  ML    MT                O1    O2                D  NDEBUG                   assert     GF                                    MDd MD    Debug               MDd    Relase                 vcrt dll                                                                         Runtime Library        Release         Debug   Runtime Library                                   Debug     Release           Bug             ZI Zi     ZI    Zi        ZI                                         Release            Od O2  O2  Od   Od             Debug    O2               Release         RTCx    RTCx                                                0xCC          0xCD            new       0xDD          delete     0xFD          debug                                                                                   Debug     Release                                                       RTCx     Debug      Release          Release                                                   Od       Gm INCREMENTAL NO       Gm       INCREMENTAL                                                                             Gm            idb                                idb                                     h    INCREMENTAL                                                                      trunk              MSDN                       trunk            GZ                        0xCC          0xCD   Cleared Data                          new  0xDD   Dead Data                 delete  0xFD  deFencde Data            debug                                                                     32                                                                  Debug      Release                            0                                                                                                                         FPO       GZ       Debug     Release          Release                                         _DEBUG NDEBUG                                DEBUG  Debug    NDEBUG  Release                     assert        DEBUG        assert h          ifdef NDEBUG  define assert _Expression    void 0   else    NDEBUG     ifdef __cplusplus extern  C     endif    __cplusplus    CRTIMP void cdecl wassert inz const wchart   Message  inz const wchart  File  unsigned _Line    ifdef __cplusplus    endif    __cplusplus     define assert Expression   void       Expression       wassert CRTWIDE Expression   CRTWIDE FILE   LINE   0     endif    NDEBUG            _DEBUG  assert                                                   Debug                  DEBUG                   TRACE ASSERT        REALEASE                                           debug        thingsearch thingsomething  BOOL found  for int i 0  field    something  field       found    found TRUE  break       found      if found  return whatever i   else return NULL    release       debug          found FALSE   release                                  char buffer 10   int counter  lstrcpy buffer  abcdefghik     debug  buffer NULL   counter        counter 16M             release    counter            NULL    buffer                       ACCESS ERROR         DEBUG  RELEASE           DEBUG    ele  6 sizeof DWORD  24bytes          32bytes debug  32bytes         release         24bytes release  8bytes        debug      ele 6               release     ACCESS VIOLATE  ASSERT VERIFY ASSERT Release             ifdef _DEBUG  define ASSERT x  if  x     0  reportassertfailure    else  define ASSERT x   endif                       ASSERT pNewObj   new CMyClass   pNewObj  MyFunction        Release    pNewObj                                            VERIFY   ifdef _DEBUG  define VERIFY x  if  x   0  reportassertfailure    else  define VERIFY x   x   endif         release                                  afx_msg LRESULT OnMyMessage WPARAM  LPARAM         HRESULT    Debug    ",
        "objectID": "post/Visual-Studio中debug和release版本的区别",
        "date": "2017-06-23T16:57:04.000Z",
        "tags": [
            "编译"
        ],
        "categories": [
            "C++"
        ]
    },
    {
        "title": "wc命令详解",
        "uri": "post/wc命令详解",
        "content": "wc                           3                                  wc",
        "objectID": "post/wc命令详解",
        "date": "2017-09-09T18:52:15.000Z",
        "categories": [
            "Shell"
        ]
    },
    {
        "title": "Word Ladder",
        "uri": "post/Word-Ladder",
        "content": "LeetCode 127  Word Ladder Given two words  beginWord endWord   dictionary s word list  find length shortest transformation sequence beginWord endWord  that  one letter changed time  transformed word exist word list  Note beginWord not transformed word  example  Given  beginWord    hit   endWord    cog   wordList     hot   dot   dog   lot   log   cog    one shortest transformation  hit      hot      dot      dog      cog   return its length 5  Note  Return 0 no transformation sequence  words length  words contain lowercase alphabetic characters  may assume no duplicates word list  may assume beginWord endWord non empty not same  UPDATE  2017 1 20   wordList parameter changed list strings  instead set strings   Please reload code definition latest changes                                     BFS Dijkstra      BFS                                                  1                                         1                                                           beginWord endWord  wordList                                                                    BFS    BFS                                           1                                      O n                                                         O k log n     k          n       BFS                                               class Solution   public  int ladderLength string beginWord  string endWord  vector  wordList    unordered_set List wordList begin   wordList end      vector   set queue  que  que push make_pair beginWord  1    while  que empty      auto val   que front    que pop    if val first    endWord  return val second  for int  0  C    D  B  C  D       C               BFS   A      C     C         B        1       C                                                 dfs                                                           dfs           class Solution   public  vector   ans        vector path          vector  findLadders string start  string end  vector  wordList    ans clear    unordered_set dict wordList begin   wordList end     if dict count end     0  return ans  int len   start size                unordered_map  next                                 unordered_map step     start                visit           queue que                 que push start   step start    0    que empty      string curstr   que front    que pop     curstr    end  break  int curstep   step curstr           vector snext                int   0     next  unordered_map  step  string now  string end    now    end  ans push_back path                     else   vector nextStrs   next now   int stepNow   step now    int   0    nextStrs size    i                next step      step nextStrs i      stepNow   1       BFS      continue  path push_back nextStrs i    dfspath next  step  nextStrs i   end   path pop_back",
        "objectID": "post/Word-Ladder",
        "date": "2017-06-24T20:26:35.000Z",
        "tags": [
            "Backtracking",
            "Graph",
            "String",
            "BFS"
        ],
        "categories": [
            "解题报告"
        ]
    }
]